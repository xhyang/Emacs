;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables (list 
   (semanticdb-table "lisp.h"
    :major-mode 'c-mode
    :tags 
        '( ("EMACS_LISP_H" variable (:constant-flag t) nil [932 944])
            ("P_" variable (:constant-flag t) nil [1016 1018])
            ("CHECK_CONS_LIST" variable (:constant-flag t) nil [1237 1252])
            ("EMACS_INT" variable (:constant-flag t) nil [1537 1546])
            ("BITS_PER_EMACS_INT" variable (:constant-flag t) nil [1559 1577])
            ("EMACS_UINT" variable (:constant-flag t) nil [1625 1635])
            ("suppress_checking" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [1701 1730])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [1785 1795])
            ("CHECK" variable (:constant-flag t) nil [2737 2742])
            ("eassert" variable (:constant-flag t) nil [2888 2895])
            ("DECL_ALIGN" variable (:constant-flag t) nil [4631 4641])
            ("USE_LSB_TAG" variable (:constant-flag t) nil [5022 5033])
            ("USE_2_TAGS_FOR_INTS" variable (:constant-flag t) nil [5508 5527])
            ("LISP_INT_TAG" variable (:constant-flag t) nil [5740 5752])
            ("case_Lisp_Int" variable (:constant-flag t) nil [5771 5784])
            ("LISP_STRING_TAG" variable (:constant-flag t) nil [5808 5823])
            ("LISP_INT_TAG_P" variable (:constant-flag t) nil [5835 5849])
            ("Lisp_Type" type
               (:members 
                  ( ("Lisp_Int0" variable
                       (:constant-flag t
                        :default-value (6320 6321)
                        :type "int")
                        (reparse-symbol enumsubparts) [6308 6321])
                    ("Lisp_Int1" variable
                       (:constant-flag t
                        :default-value (6339 6353)
                        :type "int")
                        (reparse-symbol enumsubparts) [6327 6353])
                    ("Lisp_Symbol" variable
                       (:constant-flag t
                        :default-value (6473 6474)
                        :type "int")
                        (reparse-symbol enumsubparts) [6459 6474])
                    ("Lisp_Misc" variable
                       (:constant-flag t
                        :default-value (6613 6614)
                        :type "int")
                        (reparse-symbol enumsubparts) [6601 6614])
                    ("Lisp_String" variable
                       (:constant-flag t
                        :default-value (6775 6790)
                        :type "int")
                        (reparse-symbol enumsubparts) [6761 6790])
                    ("Lisp_Vectorlike" variable
                       (:constant-flag t
                        :default-value (7072 7073)
                        :type "int")
                        (reparse-symbol enumsubparts) [7054 7073])
                    ("Lisp_Cons" variable
                       (:constant-flag t
                        :default-value (7155 7156)
                        :type "int")
                        (reparse-symbol enumsubparts) [7143 7156])
                    ("Lisp_Float" variable
                       (:constant-flag t
                        :default-value (7176 7177)
                        :type "int")
                        (reparse-symbol enumsubparts) [7163 7177]))                  
                :type "enum")
                nil [6204 7183])
            ("Lisp_Misc_Type" type
               (:members 
                  ( ("Lisp_Misc_Free" variable
                       (:constant-flag t
                        :default-value (7551 7557)
                        :type "int")
                        (reparse-symbol enumsubparts) [7534 7557])
                    ("Lisp_Misc_Marker" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7563 7580])
                    ("Lisp_Misc_Intfwd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7585 7602])
                    ("Lisp_Misc_Boolfwd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7607 7625])
                    ("Lisp_Misc_Objfwd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7630 7647])
                    ("Lisp_Misc_Buffer_Objfwd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7652 7676])
                    ("Lisp_Misc_Buffer_Local_Value" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7681 7710])
                    ("Lisp_Misc_Overlay" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7715 7733])
                    ("Lisp_Misc_Kboard_Objfwd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7738 7762])
                    ("Lisp_Misc_Save_Value" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7767 7788])
                    ("Lisp_Misc_Float" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7903 7919])
                    ("Lisp_Misc_Limit" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7987 8006]))                  
                :type "enum")
                nil [7506 8007])
            ("GCTYPEBITS" variable (:constant-flag t) nil [8036 8046])
            ("VALBITS" variable (:constant-flag t) nil [8149 8156])
            ("Lisp_Object" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [9576 9606])
            ("LISP_MAKE_RVALUE" variable (:constant-flag t) nil [9615 9631])
            ("ARRAY_MARK_FLAG" variable (:constant-flag t) nil [9766 9781])
            ("PSEUDOVECTOR_FLAG" variable (:constant-flag t) nil [9946 9963])
            ("pvec_type" type
               (:members 
                  ( ("PVEC_NORMAL_VECTOR" variable
                       (:constant-flag t
                        :default-value (10497 10498)
                        :type "int")
                        (reparse-symbol enumsubparts) [10476 10498])
                    ("PVEC_PROCESS" variable
                       (:constant-flag t
                        :default-value (10517 10522)
                        :type "int")
                        (reparse-symbol enumsubparts) [10502 10522])
                    ("PVEC_FRAME" variable
                       (:constant-flag t
                        :default-value (10539 10544)
                        :type "int")
                        (reparse-symbol enumsubparts) [10526 10544])
                    ("PVEC_COMPILED" variable
                       (:constant-flag t
                        :default-value (10564 10569)
                        :type "int")
                        (reparse-symbol enumsubparts) [10548 10569])
                    ("PVEC_WINDOW" variable
                       (:constant-flag t
                        :default-value (10587 10593)
                        :type "int")
                        (reparse-symbol enumsubparts) [10573 10593])
                    ("PVEC_WINDOW_CONFIGURATION" variable
                       (:constant-flag t
                        :default-value (10625 10631)
                        :type "int")
                        (reparse-symbol enumsubparts) [10597 10631])
                    ("PVEC_SUBR" variable
                       (:constant-flag t
                        :default-value (10647 10653)
                        :type "int")
                        (reparse-symbol enumsubparts) [10635 10653])
                    ("PVEC_CHAR_TABLE" variable
                       (:constant-flag t
                        :default-value (10675 10681)
                        :type "int")
                        (reparse-symbol enumsubparts) [10657 10681])
                    ("PVEC_BOOL_VECTOR" variable
                       (:constant-flag t
                        :default-value (10704 10711)
                        :type "int")
                        (reparse-symbol enumsubparts) [10685 10711])
                    ("PVEC_BUFFER" variable
                       (:constant-flag t
                        :default-value (10729 10736)
                        :type "int")
                        (reparse-symbol enumsubparts) [10715 10736])
                    ("PVEC_HASH_TABLE" variable
                       (:constant-flag t
                        :default-value (10758 10765)
                        :type "int")
                        (reparse-symbol enumsubparts) [10740 10765])
                    ("PVEC_TERMINAL" variable
                       (:constant-flag t
                        :default-value (10785 10792)
                        :type "int")
                        (reparse-symbol enumsubparts) [10769 10792])
                    ("PVEC_SUB_CHAR_TABLE" variable
                       (:constant-flag t
                        :default-value (10818 10826)
                        :type "int")
                        (reparse-symbol enumsubparts) [10796 10826])
                    ("PVEC_FONT" variable
                       (:constant-flag t
                        :default-value (10842 10850)
                        :type "int")
                        (reparse-symbol enumsubparts) [10830 10850])
                    ("PVEC_OTHER" variable
                       (:constant-flag t
                        :default-value (10867 10875)
                        :type "int")
                        (reparse-symbol enumsubparts) [10854 10875])
                    ("PVEC_TYPE_MASK" variable
                       (:constant-flag t
                        :default-value (10896 10904)
                        :type "int")
                        (reparse-symbol enumsubparts) [10879 10904])
                    ("GDB" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [10982 10986])
                    ("It" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [10988 10996])
                    ("doesn" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [10991 13010]))                  
                :type "enum")
                nil [10457 11097])
            ("PSEUDOVECTOR_SIZE_MASK" variable (:constant-flag t) nil [11455 11477])
            ("BOOL_VECTOR_BITS_PER_CHAR" variable (:constant-flag t) nil [11637 11662])
            ("XHASH" variable (:constant-flag t) nil [11981 11986])
            ("TYPEMASK" variable (:constant-flag t) nil [12023 12031])
            ("XTYPE" variable (:constant-flag t) nil [12078 12083])
            ("XINT" variable (:constant-flag t) nil [12174 12178])
            ("XUINT" variable (:constant-flag t) nil [12231 12236])
            ("make_number" variable (:constant-flag t) nil [12290 12301])
            ("XSET" variable (:constant-flag t) nil [12528 12532])
            ("XPNTR" variable (:constant-flag t) nil [12680 12685])
            ("XFASTINT" variable (:constant-flag t) nil [16167 16175])
            ("XSETFASTINT" variable (:constant-flag t) nil [16199 16210])
            ("EQ" variable (:constant-flag t) nil [16250 16252])
            ("MOST_NEGATIVE_FIXNUM" variable (:constant-flag t) nil [17287 17307])
            ("MOST_POSITIVE_FIXNUM" variable (:constant-flag t) nil [17346 17366])
            ("INTMASK" variable (:constant-flag t) nil [17518 17525])
            ("FIXNUM_OVERFLOW_P" variable (:constant-flag t) nil [18025 18042])
            ("XCONS" variable (:constant-flag t) nil [18191 18196])
            ("XVECTOR" variable (:constant-flag t) nil [18259 18266])
            ("XSTRING" variable (:constant-flag t) nil [18337 18344])
            ("XSYMBOL" variable (:constant-flag t) nil [18411 18418])
            ("XFLOAT" variable (:constant-flag t) nil [18485 18491])
            ("XMISC" variable (:constant-flag t) nil [18577 18582])
            ("XMISCANY" variable (:constant-flag t) nil [18627 18635])
            ("XMISCTYPE" variable (:constant-flag t) nil [18689 18698])
            ("XMARKER" variable (:constant-flag t) nil [18733 18740])
            ("XINTFWD" variable (:constant-flag t) nil [18799 18806])
            ("XBOOLFWD" variable (:constant-flag t) nil [18865 18873])
            ("XOBJFWD" variable (:constant-flag t) nil [18934 18941])
            ("XOVERLAY" variable (:constant-flag t) nil [19000 19008])
            ("XSAVE_VALUE" variable (:constant-flag t) nil [19069 19080])
            ("XBUFFER_OBJFWD" variable (:constant-flag t) nil [19147 19161])
            ("XBUFFER_LOCAL_VALUE" variable (:constant-flag t) nil [19238 19257])
            ("XKBOARD_OBJFWD" variable (:constant-flag t) nil [19344 19358])
            ("XPROCESS" variable (:constant-flag t) nil [19464 19472])
            ("XWINDOW" variable (:constant-flag t) nil [19541 19548])
            ("XTERMINAL" variable (:constant-flag t) nil [19610 19619])
            ("XSUBR" variable (:constant-flag t) nil [19685 19690])
            ("XBUFFER" variable (:constant-flag t) nil [19753 19760])
            ("XCHAR_TABLE" variable (:constant-flag t) nil [19822 19833])
            ("XSUB_CHAR_TABLE" variable (:constant-flag t) nil [19911 19926])
            ("XBOOL_VECTOR" variable (:constant-flag t) nil [20012 20024])
            ("XSETINT" variable (:constant-flag t) nil [20162 20169])
            ("XSETCONS" variable (:constant-flag t) nil [20206 20214])
            ("XSETVECTOR" variable (:constant-flag t) nil [20252 20262])
            ("XSETSTRING" variable (:constant-flag t) nil [20306 20316])
            ("XSETSYMBOL" variable (:constant-flag t) nil [20356 20366])
            ("XSETFLOAT" variable (:constant-flag t) nil [20406 20415])
            ("XSETMISC" variable (:constant-flag t) nil [20475 20483])
            ("XSETMARKER" variable (:constant-flag t) nil [20521 20531])
            ("XSETPVECTYPE" variable (:constant-flag t) nil [20627 20639])
            ("XSETPSEUDOVECTOR" variable (:constant-flag t) nil [20698 20714])
            ("XSETWINDOW_CONFIGURATION" variable (:constant-flag t) nil [20879 20903])
            ("XSETPROCESS" variable (:constant-flag t) nil [20975 20986])
            ("XSETWINDOW" variable (:constant-flag t) nil [21041 21051])
            ("XSETTERMINAL" variable (:constant-flag t) nil [21105 21117])
            ("XSETSUBR" variable (:constant-flag t) nil [21173 21181])
            ("XSETCOMPILED" variable (:constant-flag t) nil [21233 21245])
            ("XSETBUFFER" variable (:constant-flag t) nil [21301 21311])
            ("XSETCHAR_TABLE" variable (:constant-flag t) nil [21365 21379])
            ("XSETBOOL_VECTOR" variable (:constant-flag t) nil [21437 21452])
            ("XSETSUB_CHAR_TABLE" variable (:constant-flag t) nil [21511 21529])
            ("AREF" variable (:constant-flag t) nil [21649 21653])
            ("ASIZE" variable (:constant-flag t) nil [21707 21712])
            ("ASET" variable (:constant-flag t) nil [21832 21836])
            ("SDATA" variable (:constant-flag t) nil [22043 22048])
            ("SREF" variable (:constant-flag t) nil [22095 22099])
            ("SSET" variable (:constant-flag t) nil [22151 22155])
            ("SCHARS" variable (:constant-flag t) nil [22216 22222])
            ("SBYTES" variable (:constant-flag t) nil [22269 22275])
            ("STRING_SET_CHARS" variable (:constant-flag t) nil [22332 22348])
            ("STRING_COPYIN" variable (:constant-flag t) nil [22418 22431])
            ("CHECK_TYPE" variable (:constant-flag t) nil [22540 22550])
            ("INTERVAL" type
               (:typedef ("interval" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :superclasses "interval"
                :type "typedef")
                nil [22674 22708])
            ("CHECK_STRING_OR_BUFFER" variable (:constant-flag t) nil [22772 22794])
            ("Lisp_Cons" type
               (:members 
                  ( ("car" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23233 23249])
                    ("u" variable (:type ("" type
                         (:members 
                            ( ("cdr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23272 23288])
                              ("chain" variable
                                 (:pointer 1
                                  :type ("Lisp_Cons" type
                                       (:prototype t
                                        :type "struct")
                                        nil nil))
                                  (reparse-symbol classsubparts) [23295 23319]))                            
                          :type "union")
                          nil nil)) (reparse-symbol classsubparts) [23254 23328]))                  
                :type "struct")
                nil [22929 23340])
            ("XCAR_AS_LVALUE" variable (:constant-flag t) nil [23952 23966])
            ("XCDR_AS_LVALUE" variable (:constant-flag t) nil [23997 24011])
            ("XCAR" variable (:constant-flag t) nil [24087 24091])
            ("XCDR" variable (:constant-flag t) nil [24139 24143])
            ("XSETCAR" variable (:constant-flag t) nil [24485 24492])
            ("XSETCDR" variable (:constant-flag t) nil [24532 24539])
            ("XSETCARFASTINT" variable (:constant-flag t) nil [24693 24707])
            ("XSETCDRFASTINT" variable (:constant-flag t) nil [24757 24771])
            ("CAR" variable (:constant-flag t) nil [24887 24890])
            ("CDR" variable (:constant-flag t) nil [25006 25009])
            ("CAR_SAFE" variable (:constant-flag t) nil [25190 25198])
            ("CDR_SAFE" variable (:constant-flag t) nil [25252 25260])
            ("STRING_MULTIBYTE" variable (:constant-flag t) nil [25359 25375])
            ("STRING_BYTES" variable (:constant-flag t) nil [25656 25668])
            ("STRING_SET_UNIBYTE" variable (:constant-flag t) nil [25821 25839])
            ("STRING_SET_MULTIBYTE" variable (:constant-flag t) nil [26098 26118])
            ("STRING_INTERVALS" variable (:constant-flag t) nil [26320 26336])
            ("STRING_SET_INTERVALS" variable (:constant-flag t) nil [26411 26431])
            ("Lisp_String" type
               (:members 
                  ( ("size" variable (:type "int") (reparse-symbol classsubparts) [26581 26596])
                    ("size_byte" variable (:type "int") (reparse-symbol classsubparts) [26601 26621])
                    ("intervals" variable (:type ("INTERVAL" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26626 26645])
                    ("data" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [26688 26708]))                  
                :type "struct")
                nil [26554 26713])
            ("OFFSETOF" variable (:constant-flag t) nil [26795 26803])
            ("Lisp_Vector" type
               (:members 
                  ( ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [26901 26917])
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [26922 26947])
                    ("contents" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26952 26976]))                  
                :type "struct")
                nil [26874 26981])
            ("VECSIZE" variable (:constant-flag t) nil [27126 27133])
            ("PSEUDOVECSIZE" variable (:constant-flag t) nil [27523 27536])
            ("CHAR_TABLE_STANDARD_SLOTS" variable (:constant-flag t) nil [28394 28419])
            ("CHAR_TABLE_EXTRA_SLOTS" variable (:constant-flag t) nil [28533 28555])
            ("CHAR_TABLE_REF_ASCII" variable (:constant-flag t) nil [29145 29165])
            ("CHAR_TABLE_REF" variable (:constant-flag t) nil [29705 29719])
            ("CHAR_TABLE_TRANSLATE" variable (:constant-flag t) nil [30027 30047])
            ("CHAR_TABLE_SET" variable (:constant-flag t) nil [30235 30249])
            ("CHARTAB_SIZE_BITS_0" variable (:constant-flag t) nil [30483 30502])
            ("CHARTAB_SIZE_BITS_1" variable (:constant-flag t) nil [30513 30532])
            ("CHARTAB_SIZE_BITS_2" variable (:constant-flag t) nil [30543 30562])
            ("CHARTAB_SIZE_BITS_3" variable (:constant-flag t) nil [30573 30592])
            ("chartab_size" variable
               (:dereference 1
                :typemodifiers ("extern")
                :constant-flag t
                :type "int")
                nil [30596 30629])
            ("Lisp_Sub_Char_Table" type
               (:prototype t
                :type "struct")
                nil [30631 30658])
            ("Lisp_Char_Table" type
               (:members 
                  ( ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [30913 30929])
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [30934 30959])
                    ("defalt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31077 31096])
                    ("parent" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31279 31298])
                    ("purpose" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31397 31417])
                    ("ascii" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31563 31581])
                    ("contents" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [31587 31636])
                    ("extras" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [31698 31720]))                  
                :type "struct")
                nil [30660 31725])
            ("Lisp_Sub_Char_Table" type
               (:members 
                  ( ("size" variable (:type "int") (reparse-symbol classsubparts) [31890 31905])
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [31910 31935])
                    ("depth" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32325 32343])
                    ("min_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32409 32430])
                    ("contents" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32436 32460]))                  
                :type "struct")
                nil [31727 32465])
            ("Lisp_Bool_Vector" type
               (:members 
                  ( ("vector_size" variable (:type "unsigned int") (reparse-symbol classsubparts) [32690 32713])
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [32718 32743])
                    ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [32785 32801])
                    ("data" variable
                       (:dereference 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [32867 32889]))                  
                :type "struct")
                nil [32545 32894])
            ("Lisp_Subr" type
               (:members 
                  ( ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [33215 33231])
                    ("function" variable
                       (:functionpointer-flag t
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33236 33263])
                    ("max_args" variable (:type "short") (reparse-symbol classsubparts) [33268 33293])
                    ("min_args" variable (:type "short") (reparse-symbol classsubparts) [33268 33293])
                    ("symbol_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [33298 33322])
                    ("intspec" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [33327 33341])
                    ("doc" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [33346 33356]))                  
                :type "struct")
                nil [33190 33361])
            ("symbol_interned" type
               (:members 
                  ( ("SYMBOL_UNINTERNED" variable
                       (:constant-flag t
                        :default-value (33612 33613)
                        :type "int")
                        (reparse-symbol enumsubparts) [33592 33613])
                    ("SYMBOL_INTERNED" variable
                       (:constant-flag t
                        :default-value (33635 33636)
                        :type "int")
                        (reparse-symbol enumsubparts) [33617 33636])
                    ("SYMBOL_INTERNED_IN_INITIAL_OBARRAY" variable
                       (:constant-flag t
                        :default-value (33677 33678)
                        :type "int")
                        (reparse-symbol enumsubparts) [33640 33678]))                  
                :type "enum")
                nil [33567 33681])
            ("Lisp_Symbol" type
               (:members 
                  ( ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [33778 33801])
                    ("indirect_variable" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [33932 33963])
                    ("constant" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [34064 34086])
                    ("interned" variable
                       (:suffix ":2"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [34184 34206])
                    ("xname" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34393 34411])
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34688 34706])
                    ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34776 34797])
                    ("plist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34838 34856])
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Symbol" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [34927 34952]))                  
                :type "struct")
                nil [33755 34955])
            ("SYMBOL_NAME" variable (:constant-flag t) nil [34998 35009])
            ("SYMBOL_INTERNED_P" variable (:constant-flag t) nil [35128 35145])
            ("SYMBOL_INTERNED_IN_INITIAL_OBARRAY_P" variable (:constant-flag t) nil [35280 35316])
            ("SYMBOL_CONSTANT_P" variable (:constant-flag t) nil [35601 35618])
            ("SYMBOL_VALUE" variable (:constant-flag t) nil [35734 35746])
            ("SET_SYMBOL_VALUE" variable (:constant-flag t) nil [35947 35963])
            ("Lisp_Hash_Table" type
               (:members 
                  ( ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [36485 36501])
                    ("vec_next" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [36504 36533])
                    ("test" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36577 36594])
                    ("weak" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36696 36713])
                    ("rehash_size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36920 36944])
                    ("rehash_threshold" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37042 37071])
                    ("hash" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37171 37188])
                    ("next" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37401 37418])
                    ("next_free" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37471 37493])
                    ("index" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37682 37700])
                    ("user_hash_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37750 37781])
                    ("user_cmp_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37841 37871])
                    ("count" variable (:type "unsigned int") (reparse-symbol classsubparts) [38125 38144])
                    ("key_and_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38327 38353])
                    ("next_weak" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [38468 38502])
                    ("cmpfn" variable
                       (:functionpointer-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [38547 38646])
                    ("hashfn" variable
                       (:functionpointer-flag t
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [38692 38757]))                  
                :type "struct")
                nil [36389 38760])
            ("XHASH_TABLE" variable (:constant-flag t) nil [38771 38782])
            ("XSET_HASH_TABLE" variable (:constant-flag t) nil [38845 38860])
            ("HASH_TABLE_P" variable (:constant-flag t) nil [38934 38946])
            ("CHECK_HASH_TABLE" variable (:constant-flag t) nil [38999 39015])
            ("HASH_KEY" variable (:constant-flag t) nil [39140 39148])
            ("HASH_VALUE" variable (:constant-flag t) nil [39267 39277])
            ("HASH_NEXT" variable (:constant-flag t) nil [39426 39435])
            ("HASH_HASH" variable (:constant-flag t) nil [39549 39558])
            ("HASH_INDEX" variable (:constant-flag t) nil [39741 39751])
            ("HASH_TABLE_SIZE" variable (:constant-flag t) nil [39838 39853])
            ("DEFAULT_HASH_SIZE" variable (:constant-flag t) nil [39947 39964])
            ("DEFAULT_REHASH_THRESHOLD" variable (:constant-flag t) nil [40145 40169])
            ("DEFAULT_REHASH_SIZE" variable (:constant-flag t) nil [40253 40272])
            ("Lisp_Misc_Any" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type ("Lisp_Misc_Type" type (:type "enum") nil nil))
                        (reparse-symbol classsubparts) [40400 40430])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [40459 40482])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [40485 40501]))                  
                :type "struct")
                nil [40338 40504])
            ("Lisp_Marker" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type ("Lisp_Misc_Type" type (:type "enum") nil nil))
                        (reparse-symbol classsubparts) [40529 40559])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [40588 40611])
                    ("spacer" variable
                       (:suffix ":13"
                        :type "int")
                        (reparse-symbol classsubparts) [40614 40630])
                    ("need_adjustment" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [40801 40834])
                    ("insertion_type" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [40944 40976])
                    ("buffer" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [41537 41559])
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Marker" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [41885 41910])
                    ("charpos" variable (:type "int") (reparse-symbol classsubparts) [41973 41991])
                    ("bytepos" variable (:type "int") (reparse-symbol classsubparts) [42030 42048]))                  
                :type "struct")
                nil [40506 42051])
            ("Lisp_Intfwd" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type "int")
                        (reparse-symbol classsubparts) [42268 42282])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [42312 42335])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [42340 42356])
                    ("intvar" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol classsubparts) [42361 42379]))                  
                :type "struct")
                nil [42241 42384])
            ("Lisp_Boolfwd" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type "int")
                        (reparse-symbol classsubparts) [42607 42621])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [42652 42675])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [42680 42696])
                    ("boolvar" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol classsubparts) [42701 42714]))                  
                :type "struct")
                nil [42579 42719])
            ("Lisp_Objfwd" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type "int")
                        (reparse-symbol classsubparts) [42939 42953])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [42983 43006])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [43011 43027])
                    ("objvar" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43032 43052]))                  
                :type "struct")
                nil [42912 43057])
            ("Lisp_Buffer_Objfwd" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type "int")
                        (reparse-symbol classsubparts) [43221 43235])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [43272 43295])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [43300 43316])
                    ("slottype" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43321 43342])
                    ("offset" variable (:type "int") (reparse-symbol classsubparts) [43399 43410]))                  
                :type "struct")
                nil [43187 43415])
            ("Lisp_Buffer_Local_Value" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type "int")
                        (reparse-symbol classsubparts) [44780 44794])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [44842 44865])
                    ("spacer" variable
                       (:suffix ":11"
                        :type "int")
                        (reparse-symbol classsubparts) [44870 44886])
                    ("local_if_set" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [44997 45027])
                    ("check_frame" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [45168 45197])
                    ("found_for_buffer" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [45322 45356])
                    ("found_for_frame" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [45479 45512])
                    ("realvalue" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45517 45539])
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45879 45905])
                    ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45879 45905])
                    ("cdr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46532 46548]))                  
                :type "struct")
                nil [44741 46553])
            ("Lisp_Overlay" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type ("Lisp_Misc_Type" type (:type "enum") nil nil))
                        (reparse-symbol classsubparts) [46686 46716])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [46747 46770])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [46775 46791])
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Overlay" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [46796 46822])
                    ("plist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46827 46857])
                    ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46827 46857])
                    ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46827 46857]))                  
                :type "struct")
                nil [46658 46862])
            ("Lisp_Kboard_Objfwd" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type ("Lisp_Misc_Type" type (:type "enum") nil nil))
                        (reparse-symbol classsubparts) [46982 47012])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [47049 47072])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [47077 47093])
                    ("offset" variable (:type "int") (reparse-symbol classsubparts) [47098 47109]))                  
                :type "struct")
                nil [46948 47114])
            ("Lisp_Save_Value" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type ("Lisp_Misc_Type" type (:type "enum") nil nil))
                        (reparse-symbol classsubparts) [47254 47284])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [47318 47341])
                    ("spacer" variable
                       (:suffix ":14"
                        :type "int")
                        (reparse-symbol classsubparts) [47346 47362])
                    ("dogc" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [47484 47506])
                    ("pointer" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [47511 47525])
                    ("integer" variable (:type "int") (reparse-symbol classsubparts) [47530 47542]))                  
                :type "struct")
                nil [47223 47547])
            ("Lisp_Free" type
               (:members 
                  ( ("type" variable
                       (:suffix ":16"
                        :type ("Lisp_Misc_Type" type (:type "enum") nil nil))
                        (reparse-symbol classsubparts) [47634 47664])
                    ("gcmarkbit" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [47692 47715])
                    ("spacer" variable
                       (:suffix ":15"
                        :type "int")
                        (reparse-symbol classsubparts) [47720 47736])
                    ("chain" variable
                       (:pointer 1
                        :type ("Lisp_Misc" type (:type "union") nil nil))
                        (reparse-symbol classsubparts) [47741 47764]))                  
                :type "struct")
                nil [47609 48147])
            ("Lisp_Misc" type
               (:members 
                  ( ("u_any" variable (:type ("Lisp_Misc_Any" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48303 48330])
                    ("u_free" variable (:type ("Lisp_Free" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48374 48398])
                    ("u_marker" variable (:type ("Lisp_Marker" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48450 48478])
                    ("u_intfwd" variable (:type ("Lisp_Intfwd" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48483 48511])
                    ("u_boolfwd" variable (:type ("Lisp_Boolfwd" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48516 48546])
                    ("u_objfwd" variable (:type ("Lisp_Objfwd" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48551 48579])
                    ("u_buffer_objfwd" variable (:type ("Lisp_Buffer_Objfwd" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48584 48626])
                    ("u_buffer_local_value" variable (:type ("Lisp_Buffer_Local_Value" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48631 48683])
                    ("u_overlay" variable (:type ("Lisp_Overlay" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48688 48718])
                    ("u_kboard_objfwd" variable (:type ("Lisp_Kboard_Objfwd" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48723 48765])
                    ("u_save_value" variable (:type ("Lisp_Save_Value" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [48770 48806]))                  
                :type "union")
                nil [48279 48811])
            ("Lisp_Float" type
               (:members 
                  ( ("u" variable (:type ("" type
                         (:members 
                            ( ("data" variable (:type "double") (reparse-symbol classsubparts) [48947 48959])
                              ("chain" variable
                                 (:pointer 1
                                  :type ("Lisp_Float" type
                                       (:prototype t
                                        :type "struct")
                                        nil nil))
                                  (reparse-symbol classsubparts) [48973 48998]))                            
                          :type "union")
                          nil nil)) (reparse-symbol classsubparts) [48871 49007]))                  
                :type "struct")
                nil [48845 49012])
            ("XFLOAT_DATA" variable (:constant-flag t) nil [49109 49120])
            ("XFLOAT_INIT" variable (:constant-flag t) nil [49252 49263])
            ("_UCHAR_T" variable (:constant-flag t) nil [49511 49519])
            ("UCHAR" type
               (:typedef ("unsigned char")
                :superclasses "unsigned char"
                :type "typedef")
                nil [49520 49548])
            ("COMPILED_ARGLIST" variable (:constant-flag t) nil [49611 49627])
            ("COMPILED_BYTECODE" variable (:constant-flag t) nil [49638 49655])
            ("COMPILED_CONSTANTS" variable (:constant-flag t) nil [49666 49684])
            ("COMPILED_STACK_DEPTH" variable (:constant-flag t) nil [49695 49715])
            ("COMPILED_DOC_STRING" variable (:constant-flag t) nil [49726 49745])
            ("COMPILED_INTERACTIVE" variable (:constant-flag t) nil [49756 49776])
            ("CHAR_ALT" variable (:constant-flag t) nil [50055 50063])
            ("CHAR_SUPER" variable (:constant-flag t) nil [50086 50096])
            ("CHAR_HYPER" variable (:constant-flag t) nil [50117 50127])
            ("CHAR_SHIFT" variable (:constant-flag t) nil [50148 50158])
            ("CHAR_CTL" variable (:constant-flag t) nil [50179 50187])
            ("CHAR_META" variable (:constant-flag t) nil [50210 50219])
            ("CHAR_MODIFIER_MASK" variable (:constant-flag t) nil [50242 50260])
            ("CHARACTERBITS" variable (:constant-flag t) nil [50432 50445])
            ("KEY_DESCRIPTION_SIZE" variable (:constant-flag t) nil [50867 50887])
            ("GLYPH" type
               (:typedef ("" type
                     (:members 
                        ( ("ch" variable (:type "int") (reparse-symbol classsubparts) [51072 51079])
                          ("face_id" variable (:type "int") (reparse-symbol classsubparts) [51082 51094]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [51053 51103])
            ("GLYPH_CHAR" variable (:constant-flag t) nil [51153 51163])
            ("GLYPH_FACE" variable (:constant-flag t) nil [51226 51236])
            ("SET_GLYPH_CHAR" variable (:constant-flag t) nil [51271 51285])
            ("SET_GLYPH_FACE" variable (:constant-flag t) nil [51329 51343])
            ("SET_GLYPH" variable (:constant-flag t) nil [51392 51401])
            ("GLYPH_CHAR_VALID_P" variable (:constant-flag t) nil [51534 51552])
            ("GLYPH_CODE_CHAR" variable (:constant-flag t) nil [51821 51836])
            ("GLYPH_CODE_FACE" variable (:constant-flag t) nil [51947 51962])
            ("GLYPH_CODE_CHAR_VALID_P" variable (:constant-flag t) nil [52158 52181])
            ("GLYPH_CODE_P" variable (:constant-flag t) nil [52234 52246])
            ("SET_GLYPH_FROM_GLYPH_CODE" variable (:constant-flag t) nil [52391 52416])
            ("GLYPH_MODE_LINE_FACE" variable (:constant-flag t) nil [52761 52781])
            ("NILP" variable (:constant-flag t) nil [52820 52824])
            ("NUMBERP" variable (:constant-flag t) nil [52851 52858])
            ("NATNUMP" variable (:constant-flag t) nil [52899 52906])
            ("INTEGERP" variable (:constant-flag t) nil [52951 52959])
            ("SYMBOLP" variable (:constant-flag t) nil [53002 53009])
            ("MISCP" variable (:constant-flag t) nil [53050 53055])
            ("VECTORLIKEP" variable (:constant-flag t) nil [53094 53105])
            ("STRINGP" variable (:constant-flag t) nil [53150 53157])
            ("CONSP" variable (:constant-flag t) nil [53198 53203])
            ("FLOATP" variable (:constant-flag t) nil [53243 53249])
            ("VECTORP" variable (:constant-flag t) nil [53289 53296])
            ("OVERLAYP" variable (:constant-flag t) nil [53373 53381])
            ("MARKERP" variable (:constant-flag t) nil [53443 53450])
            ("INTFWDP" variable (:constant-flag t) nil [53511 53518])
            ("BOOLFWDP" variable (:constant-flag t) nil [53579 53587])
            ("OBJFWDP" variable (:constant-flag t) nil [53649 53656])
            ("BUFFER_OBJFWDP" variable (:constant-flag t) nil [53717 53731])
            ("BUFFER_LOCAL_VALUEP" variable (:constant-flag t) nil [53799 53818])
            ("SOME_BUFFER_LOCAL_VALUEP" variable (:constant-flag t) nil [53891 53915])
            ("KBOARD_OBJFWDP" variable (:constant-flag t) nil [53993 54007])
            ("SAVE_VALUEP" variable (:constant-flag t) nil [54075 54086])
            ("PSEUDOVECTORP" variable (:constant-flag t) nil [54215 54228])
            ("WINDOW_CONFIGURATIONP" variable (:constant-flag t) nil [54427 54448])
            ("PROCESSP" variable (:constant-flag t) nil [54505 54513])
            ("WINDOWP" variable (:constant-flag t) nil [54557 54564])
            ("TERMINALP" variable (:constant-flag t) nil [54607 54616])
            ("SUBRP" variable (:constant-flag t) nil [54661 54666])
            ("COMPILEDP" variable (:constant-flag t) nil [54707 54716])
            ("BUFFERP" variable (:constant-flag t) nil [54761 54768])
            ("CHAR_TABLE_P" variable (:constant-flag t) nil [54811 54823])
            ("SUB_CHAR_TABLE_P" variable (:constant-flag t) nil [54870 54886])
            ("BOOL_VECTOR_P" variable (:constant-flag t) nil [54937 54950])
            ("FRAMEP" variable (:constant-flag t) nil [54998 55004])
            ("IMAGEP" variable (:constant-flag t) nil [55084 55090])
            ("ARRAYP" variable (:constant-flag t) nil [55161 55167])
            ("CHECK_LIST" variable (:constant-flag t) nil [55255 55265])
            ("CHECK_LIST_CONS" variable (:constant-flag t) nil [55328 55343])
            ("CHECK_LIST_END" variable (:constant-flag t) nil [55397 55411])
            ("CHECK_STRING" variable (:constant-flag t) nil [55464 55476])
            ("CHECK_STRING_CAR" variable (:constant-flag t) nil [55531 55547])
            ("CHECK_CONS" variable (:constant-flag t) nil [55616 55626])
            ("CHECK_SYMBOL" variable (:constant-flag t) nil [55677 55689])
            ("CHECK_CHAR_TABLE" variable (:constant-flag t) nil [55744 55760])
            ("CHECK_VECTOR" variable (:constant-flag t) nil [55825 55837])
            ("CHECK_VECTOR_OR_STRING" variable (:constant-flag t) nil [55892 55914])
            ("CHECK_ARRAY" variable (:constant-flag t) nil [55983 55994])
            ("CHECK_VECTOR_OR_CHAR_TABLE" variable (:constant-flag t) nil [56058 56084])
            ("CHECK_BUFFER" variable (:constant-flag t) nil [56174 56186])
            ("CHECK_WINDOW" variable (:constant-flag t) nil [56241 56253])
            ("CHECK_WINDOW_CONFIGURATION" variable (:constant-flag t) nil [56308 56334])
            ("CHECK_LIVE_WINDOW" variable (:constant-flag t) nil [56732 56749])
            ("CHECK_PROCESS" variable (:constant-flag t) nil [56841 56854])
            ("CHECK_SUBR" variable (:constant-flag t) nil [56911 56921])
            ("CHECK_NUMBER" variable (:constant-flag t) nil [56972 56984])
            ("CHECK_NATNUM" variable (:constant-flag t) nil [57041 57053])
            ("CHECK_MARKER" variable (:constant-flag t) nil [57110 57122])
            ("CHECK_NUMBER_COERCE_MARKER" variable (:constant-flag t) nil [57177 57203])
            ("XFLOATINT" variable (:constant-flag t) nil [57357 57366])
            ("CHECK_FLOAT" variable (:constant-flag t) nil [57398 57409])
            ("CHECK_NUMBER_OR_FLOAT" variable (:constant-flag t) nil [57463 57484])
            ("CHECK_NUMBER_OR_FLOAT_COERCE_MARKER" variable (:constant-flag t) nil [57554 57589])
            ("CHECK_OVERLAY" variable (:constant-flag t) nil [57754 57767])
            ("CHECK_NUMBER_CAR" variable (:constant-flag t) nil [57965 57981])
            ("CHECK_NUMBER_CDR" variable (:constant-flag t) nil [58114 58130])
            ("CHECK_NATNUM_CAR" variable (:constant-flag t) nil [58263 58279])
            ("CHECK_NATNUM_CDR" variable (:constant-flag t) nil [58412 58428])
            ("PNTR_COMPARISON_TYPE" variable (:constant-flag t) nil [58637 58657])
            ("DEFUN" variable (:constant-flag t) nil [60147 60152])
            ("DEFUN_ARGS_MANY" variable (:constant-flag t) nil [60571 60586])
            ("DEFUN_ARGS_UNEVALLED" variable (:constant-flag t) nil [60617 60637])
            ("DEFUN_ARGS_0" variable (:constant-flag t) nil [60660 60672])
            ("DEFUN_ARGS_1" variable (:constant-flag t) nil [60688 60700])
            ("DEFUN_ARGS_2" variable (:constant-flag t) nil [60723 60735])
            ("DEFUN_ARGS_3" variable (:constant-flag t) nil [60771 60783])
            ("DEFUN_ARGS_4" variable (:constant-flag t) nil [60832 60844])
            ("DEFUN_ARGS_5" variable (:constant-flag t) nil [60906 60918])
            ("DEFUN_ARGS_6" variable (:constant-flag t) nil [60999 61011])
            ("DEFUN_ARGS_7" variable (:constant-flag t) nil [61105 61117])
            ("DEFUN_ARGS_8" variable (:constant-flag t) nil [61224 61236])
            ("FUNCTIONP" variable (:constant-flag t) nil [61400 61409])
            ("defsubr" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Subr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [61671 61717])
            ("MANY" variable (:constant-flag t) nil [61727 61731])
            ("UNEVALLED" variable (:constant-flag t) nil [61743 61752])
            ("defvar_lisp" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61782 61795])
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61796 61810]))                  
                :type "void")
                nil [61757 61811])
            ("defvar_lisp_nopro" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61843 61856])
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61857 61871]))                  
                :type "void")
                nil [61812 61872])
            ("defvar_bool" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61898 61911])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [61912 61918]))                  
                :type "void")
                nil [61873 61919])
            ("defvar_int" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61944 61957])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [61958 61970]))                  
                :type "void")
                nil [61920 61971])
            ("defvar_kboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61999 62012])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [62013 62017]))                  
                :type "void")
                nil [61972 62018])
            ("DEFVAR_LISP" variable (:constant-flag t) nil [62139 62150])
            ("DEFVAR_LISP_NOPRO" variable (:constant-flag t) nil [62205 62222])
            ("DEFVAR_BOOL" variable (:constant-flag t) nil [62283 62294])
            ("DEFVAR_INT" variable (:constant-flag t) nil [62349 62359])
            ("DEFVAR_KBOARD" variable (:constant-flag t) nil [62414 62427])
            ("specbinding_func" variable
               (:functionpointer-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [63509 63560])
            ("specbinding" type
               (:members 
                  ( ("old_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [63589 63619])
                    ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [63589 63619])
                    ("func" variable (:type ("specbinding_func" type (:type "class") nil nil)) (reparse-symbol classsubparts) [63624 63646])
                    ("unused" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [63651 63670]))                  
                :type "struct")
                nil [63562 63718])
            ("specpdl" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("specbinding" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [63720 63755])
            ("specpdl_ptr" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("specbinding" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [63756 63795])
            ("specpdl_size" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [63796 63820])
            ("max_specpdl_size" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [63822 63856])
            ("SPECPDL_INDEX" variable (:constant-flag t) nil [63866 63879])
            ("handler" type
               (:members 
                  ( ("handler" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [64395 64415])
                    ("var" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [64420 64436])
                    ("chosen_clause" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [64571 64597])
                    ("tag" variable
                       (:pointer 1
                        :type ("catchtag" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [64662 64683])
                    ("next" variable
                       (:pointer 1
                        :type ("handler" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [64728 64749]))                  
                :type "struct")
                nil [63970 64754])
            ("handlerlist" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("handler" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [64756 64791])
            ("catchtag" type
               (:members 
                  ( ("tag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [65613 65629])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [65632 65648])
                    ("next" variable
                       (:pointer 1
                        :type ("catchtag" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [65651 65673])
                    ("gcpro" variable
                       (:pointer 1
                        :type ("gcpro" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [65676 65696])
                    ("jmp" variable (:type ("jmp_buf" type (:type "class") nil nil)) (reparse-symbol classsubparts) [65699 65711])
                    ("backlist" variable
                       (:pointer 1
                        :type ("backtrace" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [65714 65741])
                    ("handlerlist" variable
                       (:pointer 1
                        :type ("handler" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [65744 65772])
                    ("lisp_eval_depth" variable (:type "int") (reparse-symbol classsubparts) [65775 65795])
                    ("pdlcount" variable (:type "int") (reparse-symbol classsubparts) [65798 65811])
                    ("poll_suppress_count" variable (:type "int") (reparse-symbol classsubparts) [65814 65838])
                    ("interrupt_input_blocked" variable (:type "int") (reparse-symbol classsubparts) [65841 65869])
                    ("byte_stack" variable
                       (:pointer 1
                        :type ("byte_stack" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [65872 65902]))                  
                :type "struct")
                nil [65593 65905])
            ("catchlist" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("catchtag" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [65907 65941])
            ("backtrace_list" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("backtrace" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [65942 65982])
            ("memory_signal_data" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65984 66022])
            ("stack_bottom" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [66117 66143])
            ("process_pending_signals" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [66833 66881])
            ("pending_signals" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [66882 66909])
            ("ELSE_PENDING_SIGNALS" variable (:constant-flag t) nil [66918 66938])
            ("QUIT" variable (:constant-flag t) nil [67103 67107])
            ("QUITP" variable (:constant-flag t) nil [67479 67484])
            ("case_temp1" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [67601 67623])
            ("case_temp2" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [67624 67654])
            ("DOWNCASE_TABLE" variable (:constant-flag t) nil [67735 67749])
            ("UPCASE_TABLE" variable (:constant-flag t) nil [67861 67873])
            ("DOWNCASE" variable (:constant-flag t) nil [67984 67992])
            ("UPPERCASEP" variable (:constant-flag t) nil [68211 68221])
            ("NOCASEP" variable (:constant-flag t) nil [68308 68315])
            ("LOWERCASEP" variable (:constant-flag t) nil [68383 68393])
            ("UPCASE" variable (:constant-flag t) nil [68512 68518])
            ("UPCASE1" variable (:constant-flag t) nil [68628 68635])
            ("Vascii_upcase_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [68813 68875])
            ("Vascii_downcase_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [68813 68875])
            ("Vascii_eqv_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [68876 68932])
            ("Vascii_canon_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [68876 68932])
            ("consing_since_gc" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [68994 69022])
            ("gc_cons_threshold" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [69065 69100])
            ("gc_relative_threshold" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [69102 69141])
            ("memory_full_cons_threshold" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [69143 69187])
            ("gcprolist" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("gcpro" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [69839 69870])
            ("gcpro" type
               (:members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("gcpro" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [69889 69908])
                    ("var" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [69958 69984])
                    ("nvars" variable (:type "int") (reparse-symbol classsubparts) [70040 70050]))                  
                :type "struct")
                nil [69872 70093])
            ("GC_USE_GCPROS_AS_BEFORE" variable (:constant-flag t) nil [70399 70422])
            ("GC_MAKE_GCPROS_NOOPS" variable (:constant-flag t) nil [70434 70454])
            ("GC_MARK_STACK_CHECK_GCPROS" variable (:constant-flag t) nil [70466 70492])
            ("GC_USE_GCPROS_CHECK_ZOMBIES" variable (:constant-flag t) nil [70503 70530])
            ("GC_MARK_STACK" variable (:constant-flag t) nil [70564 70577])
            ("GCPRO1" variable (:constant-flag t) nil [70767 70773])
            ("GCPRO2" variable (:constant-flag t) nil [70807 70813])
            ("GCPRO3" variable (:constant-flag t) nil [70874 70880])
            ("GCPRO4" variable (:constant-flag t) nil [70971 70977])
            ("GCPRO5" variable (:constant-flag t) nil [71093 71099])
            ("GCPRO6" variable (:constant-flag t) nil [71240 71246])
            ("UNGCPRO" variable (:constant-flag t) nil [71412 71419])
            ("RETURN_UNGCPRO" variable (:constant-flag t) nil [76068 76082])
            ("staticpro" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [76325 76361])
            ("EXFUN" variable (:constant-flag t) nil [76618 76623])
            ("window" type
               (:prototype t
                :type "struct")
                nil [76739 76753])
            ("frame" type
               (:prototype t
                :type "struct")
                nil [76754 76767])
            ("Qunbound" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76793 76855])
            ("Qsubr" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76793 76855])
            ("Qlambda" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76793 76855])
            ("Qquote" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76793 76855])
            ("Qt" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76793 76855])
            ("Qnil" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76793 76855])
            ("Qtop_level" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76856 76921])
            ("Qerror_message" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76856 76921])
            ("Qerror_conditions" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76856 76921])
            ("Qargs_out_of_range" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76922 76997])
            ("Qwrong_type_argument" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76922 76997])
            ("Qquit" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76922 76997])
            ("Qerror" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76922 76997])
            ("Qvoid_function" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76998 77048])
            ("Qvoid_variable" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76998 77048])
            ("Qinvalid_read_syntax" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77049 77108])
            ("Qsetting_constant" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77049 77108])
            ("Qno_catch" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77109 77185])
            ("Qwrong_number_of_arguments" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77109 77185])
            ("Qinvalid_function" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77109 77185])
            ("Qmark_inactive" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77186 77248])
            ("Qarith_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77186 77248])
            ("Qend_of_file" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77186 77248])
            ("Qbuffer_read_only" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77249 77324])
            ("Qend_of_buffer" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77249 77324])
            ("Qbeginning_of_buffer" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77249 77324])
            ("Qtext_read_only" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77325 77360])
            ("Qconsp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77362 77439])
            ("Qlistp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77362 77439])
            ("Qsymbolp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77362 77439])
            ("Qwholenump" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77362 77439])
            ("Qnatnump" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77362 77439])
            ("Qintegerp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77362 77439])
            ("Qbufferp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77440 77499])
            ("Qsequencep" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77440 77499])
            ("Qarrayp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77440 77499])
            ("Qstringp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77440 77499])
            ("Qvectorp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77500 77579])
            ("Qinteger_or_marker_p" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77500 77579])
            ("Qmarkerp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77500 77579])
            ("Qchar_or_string_p" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77500 77579])
            ("Qbuffer_or_string_p" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77580 77619])
            ("Qfboundp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77620 77657])
            ("Qboundp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77620 77657])
            ("Qvector_or_char_table_p" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77658 77716])
            ("Qchar_table_p" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77658 77716])
            ("Qcdr" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77718 77742])
            ("Qsingularity_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77744 77811])
            ("Qdomain_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77744 77811])
            ("Qrange_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77744 77811])
            ("Qunderflow_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77812 77865])
            ("Qoverflow_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77812 77865])
            ("Qfloatp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77867 77894])
            ("Qnumber_or_marker_p" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77895 77944])
            ("Qnumberp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77895 77944])
            ("Qinteger" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77946 77974])
            ("Qfont_object" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77976 78034])
            ("Qfont_entity" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77976 78034])
            ("Qfont_spec" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77976 78034])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [78087 78097])
            ("DEFUN_ARGS_" variable (:type ("Finteractive_form" type (:type "class") nil nil)) nil [78098 78127])
            ("DEFUN_ARGS_" variable (:type ("Fbyteorder" type (:type "class") nil nil)) nil [78128 78150])
            ("Qframep" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [78177 78204])
            ("DEFUN_ARGS_" variable (:type ("Feq" type (:type "class") nil nil)) nil [78206 78221])
            ("DEFUN_ARGS_" variable (:type ("Fnull" type (:type "class") nil nil)) nil [78222 78239])
            ("DEFUN_ARGS_" variable (:type ("Flistp" type (:type "class") nil nil)) nil [78240 78258])
            ("DEFUN_ARGS_" variable (:type ("Fconsp" type (:type "class") nil nil)) nil [78259 78277])
            ("DEFUN_ARGS_" variable (:type ("Fatom" type (:type "class") nil nil)) nil [78278 78295])
            ("DEFUN_ARGS_" variable (:type ("Fnlistp" type (:type "class") nil nil)) nil [78296 78315])
            ("DEFUN_ARGS_" variable (:type ("Fintegerp" type (:type "class") nil nil)) nil [78316 78337])
            ("DEFUN_ARGS_" variable (:type ("Fnatnump" type (:type "class") nil nil)) nil [78338 78358])
            ("DEFUN_ARGS_" variable (:type ("Fsymbolp" type (:type "class") nil nil)) nil [78359 78379])
            ("DEFUN_ARGS_" variable (:type ("Fvectorp" type (:type "class") nil nil)) nil [78380 78400])
            ("DEFUN_ARGS_" variable (:type ("Fstringp" type (:type "class") nil nil)) nil [78401 78421])
            ("DEFUN_ARGS_" variable (:type ("Fmultibyte_string_p" type (:type "class") nil nil)) nil [78422 78453])
            ("DEFUN_ARGS_" variable (:type ("Farrayp" type (:type "class") nil nil)) nil [78454 78473])
            ("DEFUN_ARGS_" variable (:type ("Fsequencep" type (:type "class") nil nil)) nil [78474 78496])
            ("DEFUN_ARGS_" variable (:type ("Fbufferp" type (:type "class") nil nil)) nil [78497 78517])
            ("DEFUN_ARGS_" variable (:type ("Fmarkerp" type (:type "class") nil nil)) nil [78518 78538])
            ("DEFUN_ARGS_" variable (:type ("Fsubrp" type (:type "class") nil nil)) nil [78539 78557])
            ("DEFUN_ARGS_" variable (:type ("Fchar_or_string_p" type (:type "class") nil nil)) nil [78558 78587])
            ("DEFUN_ARGS_" variable (:type ("Finteger_or_marker_p" type (:type "class") nil nil)) nil [78588 78620])
            ("DEFUN_ARGS_" variable (:type ("Ffloatp" type (:type "class") nil nil)) nil [78621 78640])
            ("DEFUN_ARGS_" variable (:type ("Finteger_or_floatp" type (:type "class") nil nil)) nil [78641 78671])
            ("DEFUN_ARGS_" variable (:type ("Finteger_or_float_or_marker_p" type (:type "class") nil nil)) nil [78672 78713])
            ("DEFUN_ARGS_" variable (:type ("Fcar" type (:type "class") nil nil)) nil [78715 78731])
            ("DEFUN_ARGS_" variable (:type ("Fcar_safe" type (:type "class") nil nil)) nil [78732 78753])
            ("DEFUN_ARGS_" variable (:type ("Fcdr" type (:type "class") nil nil)) nil [78754 78770])
            ("DEFUN_ARGS_" variable (:type ("Fcdr_safe" type (:type "class") nil nil)) nil [78771 78792])
            ("DEFUN_ARGS_" variable (:type ("Fsetcar" type (:type "class") nil nil)) nil [78793 78812])
            ("DEFUN_ARGS_" variable (:type ("Fsetcdr" type (:type "class") nil nil)) nil [78813 78832])
            ("DEFUN_ARGS_" variable (:type ("Fboundp" type (:type "class") nil nil)) nil [78833 78852])
            ("DEFUN_ARGS_" variable (:type ("Ffboundp" type (:type "class") nil nil)) nil [78853 78873])
            ("DEFUN_ARGS_" variable (:type ("Fmakunbound" type (:type "class") nil nil)) nil [78874 78897])
            ("DEFUN_ARGS_" variable (:type ("Ffmakunbound" type (:type "class") nil nil)) nil [78898 78922])
            ("DEFUN_ARGS_" variable (:type ("Fsymbol_function" type (:type "class") nil nil)) nil [78923 78951])
            ("DEFUN_ARGS_" variable (:type ("Fsymbol_plist" type (:type "class") nil nil)) nil [78952 78977])
            ("DEFUN_ARGS_" variable (:type ("Fsymbol_name" type (:type "class") nil nil)) nil [78978 79002])
            ("indirect_function" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79003 79059])
            ("DEFUN_ARGS_" variable (:type ("Findirect_function" type (:type "class") nil nil)) nil [79060 79090])
            ("DEFUN_ARGS_" variable (:type ("Ffset" type (:type "class") nil nil)) nil [79091 79108])
            ("DEFUN_ARGS_" variable (:type ("Fsetplist" type (:type "class") nil nil)) nil [79109 79130])
            ("DEFUN_ARGS_" variable (:type ("Fsymbol_value" type (:type "class") nil nil)) nil [79131 79156])
            ("find_symbol_value" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79157 79213])
            ("DEFUN_ARGS_" variable (:type ("Fset" type (:type "class") nil nil)) nil [79214 79230])
            ("DEFUN_ARGS_" variable (:type ("Fdefault_value" type (:type "class") nil nil)) nil [79231 79257])
            ("DEFUN_ARGS_" variable (:type ("Fset_default" type (:type "class") nil nil)) nil [79258 79282])
            ("DEFUN_ARGS_" variable (:type ("Fdefault_boundp" type (:type "class") nil nil)) nil [79283 79310])
            ("DEFUN_ARGS_" variable (:type ("Fmake_local_variable" type (:type "class") nil nil)) nil [79311 79343])
            ("DEFUN_ARGS_" variable (:type ("Flocal_variable_p" type (:type "class") nil nil)) nil [79344 79373])
            ("DEFUN_ARGS_" variable (:type ("Flocal_variable_if_set_p" type (:type "class") nil nil)) nil [79374 79410])
            ("DEFUN_ARGS_" variable (:type ("Faref" type (:type "class") nil nil)) nil [79412 79429])
            ("DEFUN_ARGS_" variable (:type ("Faset" type (:type "class") nil nil)) nil [79430 79447])
            ("DEFUN_ARGS_" variable (:type ("Fstring_to_number" type (:type "class") nil nil)) nil [79449 79478])
            ("DEFUN_ARGS_" variable (:type ("Fnumber_to_string" type (:type "class") nil nil)) nil [79479 79508])
            ("DEFUN_ARGS_" variable (:type ("Feqlsign" type (:type "class") nil nil)) nil [79509 79529])
            ("DEFUN_ARGS_" variable (:type ("Fgtr" type (:type "class") nil nil)) nil [79530 79546])
            ("DEFUN_ARGS_" variable (:type ("Flss" type (:type "class") nil nil)) nil [79547 79563])
            ("DEFUN_ARGS_" variable (:type ("Fgeq" type (:type "class") nil nil)) nil [79564 79580])
            ("DEFUN_ARGS_" variable (:type ("Fleq" type (:type "class") nil nil)) nil [79581 79597])
            ("DEFUN_ARGS_" variable (:type ("Fneq" type (:type "class") nil nil)) nil [79598 79614])
            ("DEFUN_ARGS_" variable (:type ("Fzerop" type (:type "class") nil nil)) nil [79615 79633])
            ("DEFUN_ARGS_" variable (:type ("Fplus" type (:type "class") nil nil)) nil [79634 79654])
            ("DEFUN_ARGS_" variable (:type ("Fminus" type (:type "class") nil nil)) nil [79655 79676])
            ("DEFUN_ARGS_" variable (:type ("Ftimes" type (:type "class") nil nil)) nil [79677 79698])
            ("DEFUN_ARGS_" variable (:type ("Fquo" type (:type "class") nil nil)) nil [79699 79718])
            ("DEFUN_ARGS_" variable (:type ("Frem" type (:type "class") nil nil)) nil [79719 79735])
            ("DEFUN_ARGS_" variable (:type ("Fmax" type (:type "class") nil nil)) nil [79736 79755])
            ("DEFUN_ARGS_" variable (:type ("Fmin" type (:type "class") nil nil)) nil [79756 79775])
            ("DEFUN_ARGS_" variable (:type ("Flogand" type (:type "class") nil nil)) nil [79776 79798])
            ("DEFUN_ARGS_" variable (:type ("Flogior" type (:type "class") nil nil)) nil [79799 79821])
            ("DEFUN_ARGS_" variable (:type ("Flogxor" type (:type "class") nil nil)) nil [79822 79844])
            ("DEFUN_ARGS_" variable (:type ("Flognot" type (:type "class") nil nil)) nil [79845 79864])
            ("DEFUN_ARGS_" variable (:type ("Flsh" type (:type "class") nil nil)) nil [79865 79881])
            ("DEFUN_ARGS_" variable (:type ("Fash" type (:type "class") nil nil)) nil [79882 79898])
            ("DEFUN_ARGS_" variable (:type ("Fadd1" type (:type "class") nil nil)) nil [79900 79917])
            ("DEFUN_ARGS_" variable (:type ("Fsub1" type (:type "class") nil nil)) nil [79918 79935])
            ("DEFUN_ARGS_" variable (:type ("Fmake_variable_buffer_local" type (:type "class") nil nil)) nil [79936 79975])
            ("indirect_variable" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Symbol" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [80023 80044]))                  
                :type ("Lisp_Symbol" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [79977 80045])
            ("long_to_cons" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80046 80099])
            ("cons_to_long" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "unsigned long")
                nil [80100 80153])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [80216 80226])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [80313 80323])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [80395 80405])
            ("store_symval_forwarding" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [80406 80510])
            ("do_symval_forwarding" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80511 80570])
            ("set_internal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80571 80657])
            ("syms_of_data" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [80658 80695])
            ("init_data" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [80696 80730])
            ("swap_in_global_binding" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [80731 80785])
            ("DEFUN_ARGS_" variable (:type ("Fend_of_line" type (:type "class") nil nil)) nil [80811 80835])
            ("DEFUN_ARGS_" variable (:type ("Fforward_char" type (:type "class") nil nil)) nil [80836 80861])
            ("DEFUN_ARGS_" variable (:type ("Fforward_line" type (:type "class") nil nil)) nil [80862 80887])
            ("internal_self_insert" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [80888 80936])
            ("syms_of_cmds" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [80937 80974])
            ("keys_of_cmds" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [80975 81012])
            ("DEFUN_ARGS_" variable (:type ("Fcoding_system_p" type (:type "class") nil nil)) nil [81040 81068])
            ("DEFUN_ARGS_" variable (:type ("Fcoding_system_base" type (:type "class") nil nil)) nil [81069 81100])
            ("DEFUN_ARGS_" variable (:type ("Fcoding_system_eol_type" type (:type "class") nil nil)) nil [81101 81136])
            ("DEFUN_ARGS_" variable (:type ("Fcheck_coding_system" type (:type "class") nil nil)) nil [81137 81169])
            ("DEFUN_ARGS_" variable (:type ("Fcheck_coding_system" type (:type "class") nil nil)) nil [81170 81202])
            ("DEFUN_ARGS_" variable (:type ("Fread_coding_system" type (:type "class") nil nil)) nil [81203 81234])
            ("DEFUN_ARGS_" variable (:type ("Fread_non_nil_coding_system" type (:type "class") nil nil)) nil [81235 81274])
            ("DEFUN_ARGS_" variable (:type ("Ffind_operation_coding_system" type (:type "class") nil nil)) nil [81275 81319])
            ("DEFUN_ARGS_" variable (:type ("Fupdate_coding_systems_internal" type (:type "class") nil nil)) nil [81320 81363])
            ("DEFUN_ARGS_" variable (:type ("Fencode_coding_string" type (:type "class") nil nil)) nil [81364 81397])
            ("DEFUN_ARGS_" variable (:type ("Fdecode_coding_string" type (:type "class") nil nil)) nil [81398 81431])
            ("detect_coding_system" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [81432 81556])
            ("init_coding" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [81557 81593])
            ("init_coding_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [81594 81635])
            ("syms_of_coding" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [81636 81675])
            ("init_character_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [81706 81750])
            ("syms_of_character" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [81751 81793])
            ("DEFUN_ARGS_" variable (:type ("Funibyte_char_to_multibyte" type (:type "class") nil nil)) nil [81794 81832])
            ("DEFUN_ARGS_" variable (:type ("Fchar_bytes" type (:type "class") nil nil)) nil [81861 81884])
            ("DEFUN_ARGS_" variable (:type ("Fchar_width" type (:type "class") nil nil)) nil [81885 81908])
            ("DEFUN_ARGS_" variable (:type ("Fstring" type (:type "class") nil nil)) nil [81909 81931])
            ("chars_in_text" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [81932 82003])
            ("multibyte_chars_in_text" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [82004 82085])
            ("multibyte_char_to_unibyte" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [82086 82147])
            ("multibyte_char_to_unibyte_safe" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [82148 82201])
            ("Qcharset" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [82202 82230])
            ("init_charset" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [82231 82268])
            ("init_charset_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [82269 82311])
            ("syms_of_charset" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [82312 82352])
            ("charset" type
               (:prototype t
                :type "struct")
                nil [82392 82407])
            ("syms_of_composite" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [82438 82480])
            ("DEFUN_ARGS_" variable (:type ("Fforward_word" type (:type "class") nil nil)) nil [82508 82533])
            ("DEFUN_ARGS_" variable (:type ("Fskip_chars_forward" type (:type "class") nil nil)) nil [82534 82565])
            ("DEFUN_ARGS_" variable (:type ("Fskip_chars_backward" type (:type "class") nil nil)) nil [82566 82598])
            ("DEFUN_ARGS_" variable (:type ("Fsyntax_table_p" type (:type "class") nil nil)) nil [82599 82626])
            ("DEFUN_ARGS_" variable (:type ("Fsyntax_table" type (:type "class") nil nil)) nil [82627 82652])
            ("DEFUN_ARGS_" variable (:type ("Fset_syntax_table" type (:type "class") nil nil)) nil [82653 82682])
            ("init_syntax_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [82683 82724])
            ("syms_of_syntax" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [82725 82764])
            ("use_dialog_box" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [82789 82815])
            ("next_almost_prime" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [82816 82856])
            ("larger_vector" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [82857 82927])
            ("sweep_weak_hash_tables" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [82928 82975])
            ("Qstring_lessp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [82976 83009])
            ("Vfeatures" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83010 83039])
            ("Qeq" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83040 83091])
            ("Qequal" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83040 83091])
            ("QCweakness" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83040 83091])
            ("QCtest" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83040 83091])
            ("sxhash" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "unsigned int")
                nil [83092 83132])
            ("make_hash_table" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83133 83268])
            ("copy_hash_table" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83269 83329])
            ("hash_lookup" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "unsigned int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [83330 83403])
            ("hash_put" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [83404 83489])
            ("hash_clear" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [83490 83538])
            ("init_weak_hash_tables" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [83539 83578])
            ("init_fns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [83579 83612])
            ("DEFUN_ARGS_" variable (:type ("Fsxhash" type (:type "class") nil nil)) nil [83613 83632])
            ("DEFUN_ARGS_" variable (:type ("Fmake_hash_table" type (:type "class") nil nil)) nil [83633 83664])
            ("DEFUN_ARGS_" variable (:type ("Fmakehash" type (:type "class") nil nil)) nil [83665 83686])
            ("DEFUN_ARGS_" variable (:type ("Fcopy_hash_table" type (:type "class") nil nil)) nil [83687 83715])
            ("DEFUN_ARGS_" variable (:type ("Fhash_table_count" type (:type "class") nil nil)) nil [83716 83745])
            ("DEFUN_ARGS_" variable (:type ("Fhash_table_rehash_size" type (:type "class") nil nil)) nil [83746 83781])
            ("DEFUN_ARGS_" variable (:type ("Fhash_table_rehash_threshold" type (:type "class") nil nil)) nil [83782 83822])
            ("DEFUN_ARGS_" variable (:type ("Fhash_table_size" type (:type "class") nil nil)) nil [83823 83851])
            ("DEFUN_ARGS_" variable (:type ("Fhash_table_test" type (:type "class") nil nil)) nil [83852 83880])
            ("DEFUN_ARGS_" variable (:type ("Fhash_table_weak" type (:type "class") nil nil)) nil [83881 83909])
            ("DEFUN_ARGS_" variable (:type ("Fhash_table_p" type (:type "class") nil nil)) nil [83910 83935])
            ("DEFUN_ARGS_" variable (:type ("Fclrhash" type (:type "class") nil nil)) nil [83936 83956])
            ("DEFUN_ARGS_" variable (:type ("Fgethash" type (:type "class") nil nil)) nil [83957 83977])
            ("DEFUN_ARGS_" variable (:type ("Fputhash" type (:type "class") nil nil)) nil [83978 83998])
            ("DEFUN_ARGS_" variable (:type ("Fremhash" type (:type "class") nil nil)) nil [83999 84019])
            ("DEFUN_ARGS_" variable (:type ("Fmaphash" type (:type "class") nil nil)) nil [84020 84040])
            ("DEFUN_ARGS_" variable (:type ("Fdefine_hash_table_test" type (:type "class") nil nil)) nil [84041 84076])
            ("DEFUN_ARGS_" variable (:type ("Fidentity" type (:type "class") nil nil)) nil [84078 84099])
            ("DEFUN_ARGS_" variable (:type ("Frandom" type (:type "class") nil nil)) nil [84100 84119])
            ("DEFUN_ARGS_" variable (:type ("Flength" type (:type "class") nil nil)) nil [84120 84139])
            ("DEFUN_ARGS_" variable (:type ("Fsafe_length" type (:type "class") nil nil)) nil [84140 84164])
            ("DEFUN_ARGS_" variable (:type ("Fappend" type (:type "class") nil nil)) nil [84165 84187])
            ("DEFUN_ARGS_" variable (:type ("Fconcat" type (:type "class") nil nil)) nil [84188 84210])
            ("DEFUN_ARGS_" variable (:type ("Fvconcat" type (:type "class") nil nil)) nil [84211 84234])
            ("DEFUN_ARGS_" variable (:type ("Fcopy_sequence" type (:type "class") nil nil)) nil [84235 84261])
            ("DEFUN_ARGS_" variable (:type ("Fstring_make_multibyte" type (:type "class") nil nil)) nil [84262 84296])
            ("DEFUN_ARGS_" variable (:type ("Fstring_make_unibyte" type (:type "class") nil nil)) nil [84297 84329])
            ("DEFUN_ARGS_" variable (:type ("Fstring_as_multibyte" type (:type "class") nil nil)) nil [84330 84362])
            ("DEFUN_ARGS_" variable (:type ("Fstring_as_unibyte" type (:type "class") nil nil)) nil [84363 84393])
            ("DEFUN_ARGS_" variable (:type ("Fstring_to_multibyte" type (:type "class") nil nil)) nil [84394 84426])
            ("DEFUN_ARGS_" variable (:type ("Fstring_to_unibyte" type (:type "class") nil nil)) nil [84427 84457])
            ("DEFUN_ARGS_" variable (:type ("Fsubstring" type (:type "class") nil nil)) nil [84458 84480])
            ("substring_both" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [84481 84554])
            ("DEFUN_ARGS_" variable (:type ("Fnth" type (:type "class") nil nil)) nil [84555 84571])
            ("DEFUN_ARGS_" variable (:type ("Fnthcdr" type (:type "class") nil nil)) nil [84572 84591])
            ("DEFUN_ARGS_" variable (:type ("Fmemq" type (:type "class") nil nil)) nil [84592 84609])
            ("DEFUN_ARGS_" variable (:type ("Fassq" type (:type "class") nil nil)) nil [84610 84627])
            ("DEFUN_ARGS_" variable (:type ("Fassoc" type (:type "class") nil nil)) nil [84628 84646])
            ("DEFUN_ARGS_" variable (:type ("Felt" type (:type "class") nil nil)) nil [84647 84663])
            ("DEFUN_ARGS_" variable (:type ("Fmember" type (:type "class") nil nil)) nil [84664 84683])
            ("DEFUN_ARGS_" variable (:type ("Frassq" type (:type "class") nil nil)) nil [84684 84702])
            ("DEFUN_ARGS_" variable (:type ("Fdelq" type (:type "class") nil nil)) nil [84703 84720])
            ("DEFUN_ARGS_" variable (:type ("Fdelete" type (:type "class") nil nil)) nil [84721 84740])
            ("DEFUN_ARGS_" variable (:type ("Fsort" type (:type "class") nil nil)) nil [84741 84758])
            ("DEFUN_ARGS_" variable (:type ("Freverse" type (:type "class") nil nil)) nil [84759 84779])
            ("DEFUN_ARGS_" variable (:type ("Fnreverse" type (:type "class") nil nil)) nil [84780 84801])
            ("DEFUN_ARGS_" variable (:type ("Fget" type (:type "class") nil nil)) nil [84802 84818])
            ("DEFUN_ARGS_" variable (:type ("Fput" type (:type "class") nil nil)) nil [84819 84835])
            ("DEFUN_ARGS_" variable (:type ("Fequal" type (:type "class") nil nil)) nil [84836 84854])
            ("DEFUN_ARGS_" variable (:type ("Ffillarray" type (:type "class") nil nil)) nil [84855 84877])
            ("DEFUN_ARGS_" variable (:type ("Fnconc" type (:type "class") nil nil)) nil [84878 84899])
            ("DEFUN_ARGS_" variable (:type ("Fmapcar" type (:type "class") nil nil)) nil [84900 84919])
            ("DEFUN_ARGS_" variable (:type ("Fmapconcat" type (:type "class") nil nil)) nil [84920 84942])
            ("DEFUN_ARGS_" variable (:type ("Fy_or_n_p" type (:type "class") nil nil)) nil [84943 84964])
            ("do_yes_or_no_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [84965 85018])
            ("DEFUN_ARGS_" variable (:type ("Frequire" type (:type "class") nil nil)) nil [85019 85039])
            ("DEFUN_ARGS_" variable (:type ("Fprovide" type (:type "class") nil nil)) nil [85040 85060])
            ("concat2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85061 85120])
            ("concat3" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85121 85193])
            ("nconc2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85194 85252])
            ("assq_no_quit" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85253 85317])
            ("assoc_no_quit" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85318 85383])
            ("clear_string_char_byte_cache" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [85384 85437])
            ("string_char_to_byte" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [85438 85505])
            ("string_byte_to_char" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [85506 85573])
            ("string_make_multibyte" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85574 85634])
            ("string_to_multibyte" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85635 85693])
            ("string_make_unibyte" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85694 85752])
            ("DEFUN_ARGS_" variable (:type ("Fcopy_alist" type (:type "class") nil nil)) nil [85753 85776])
            ("DEFUN_ARGS_" variable (:type ("Fplist_get" type (:type "class") nil nil)) nil [85777 85799])
            ("DEFUN_ARGS_" variable (:type ("Fplist_put" type (:type "class") nil nil)) nil [85800 85822])
            ("DEFUN_ARGS_" variable (:type ("Fplist_member" type (:type "class") nil nil)) nil [85823 85848])
            ("DEFUN_ARGS_" variable (:type ("Frassoc" type (:type "class") nil nil)) nil [85849 85868])
            ("DEFUN_ARGS_" variable (:type ("Fstring_equal" type (:type "class") nil nil)) nil [85869 85894])
            ("DEFUN_ARGS_" variable (:type ("Fcompare_strings" type (:type "class") nil nil)) nil [85895 85923])
            ("DEFUN_ARGS_" variable (:type ("Fstring_lessp" type (:type "class") nil nil)) nil [85924 85949])
            ("syms_of_fns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [85950 85986])
            ("extract_float" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "double")
                nil [86016 86063])
            ("DEFUN_ARGS_" variable (:type ("Ffloat" type (:type "class") nil nil)) nil [86064 86082])
            ("DEFUN_ARGS_" variable (:type ("Ftruncate" type (:type "class") nil nil)) nil [86083 86104])
            ("init_floatfns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [86105 86143])
            ("syms_of_floatfns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [86144 86185])
            ("syms_of_fringe" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [86213 86252])
            ("init_fringe" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [86253 86289])
            ("init_fringe_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [86290 86331])
            ("DEFUN_ARGS_" variable (:type ("Finit_image_library" type (:type "class") nil nil)) nil [86358 86389])
            ("syms_of_image" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [86390 86428])
            ("init_image" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [86429 86464])
            ("Qinhibit_modification_hooks" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [86492 86539])
            ("move_gap" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [86562 86572]))                  
                :type "void")
                nil [86540 86573])
            ("move_gap_both" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [86601 86611])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86612 86622]))                  
                :type "void")
                nil [86574 86623])
            ("make_gap" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [86646 86656]))                  
                :type "void")
                nil [86624 86657])
            ("copy_text" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [86686 86708])
                    ("" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [86709 86725])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86733 86743])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86744 86748])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86749 86753]))                  
                :type "int")
                nil [86658 86754])
            ("count_size_as_multibyte" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [86797 86819])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86820 86830]))                  
                :type "int")
                nil [86755 86831])
            ("count_combining_before" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [86867 86889])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86897 86907])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86908 86918])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86919 86929]))                  
                :type "int")
                nil [86832 86930])
            ("count_combining_after" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [86965 86987])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [86994 87004])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87005 87015])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87016 87026]))                  
                :type "int")
                nil [86931 87027])
            ("insert" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [87048 87070])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87071 87081]))                  
                :type "void")
                nil [87028 87082])
            ("insert_and_inherit" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [87115 87137])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87138 87148]))                  
                :type "void")
                nil [87083 87149])
            ("insert_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [87172 87194])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87195 87205])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87206 87210])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87211 87215])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87216 87220]))                  
                :type "void")
                nil [87150 87221])
            ("insert_1_both" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [87249 87271])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87272 87282])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87283 87293])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87300 87304])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87305 87309])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87310 87314]))                  
                :type "void")
                nil [87222 87315])
            ("insert_from_gap" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [87345 87355])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87356 87366]))                  
                :type "void")
                nil [87316 87367])
            ("insert_from_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87400 87412])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87413 87423])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87424 87434])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87439 87449])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87450 87460])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87461 87465]))                  
                :type "void")
                nil [87368 87466])
            ("insert_from_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [87499 87515])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87516 87526])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87527 87537])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87538 87542]))                  
                :type "void")
                nil [87467 87543])
            ("insert_char" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [87569 87573]))                  
                :type "void")
                nil [87544 87574])
            ("insert_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [87602 87615]))                  
                :type "void")
                nil [87575 87616])
            ("insert_before_markers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [87652 87674])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87675 87685]))                  
                :type "void")
                nil [87617 87686])
            ("insert_before_markers_and_inherit" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [87734 87756])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87769 87779]))                  
                :type "void")
                nil [87687 87780])
            ("insert_from_string_before_markers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87828 87840])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87841 87851])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87864 87874])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87875 87885])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87898 87908])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87909 87913]))                  
                :type "void")
                nil [87781 87914])
            ("del_range" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [87938 87948])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [87949 87959]))                  
                :type "void")
                nil [87915 87960])
            ("del_range_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [87993 88003])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88004 88014])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88015 88019])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88020 88024]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [87961 88025])
            ("del_range_byte" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88054 88064])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88065 88075])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88076 88080]))                  
                :type "void")
                nil [88026 88081])
            ("del_range_both" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88110 88120])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88121 88131])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88132 88142])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88143 88153])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88154 88158]))                  
                :type "void")
                nil [88082 88159])
            ("del_range_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88192 88202])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88203 88213])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88218 88228])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88229 88239])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88240 88244]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [88160 88245])
            ("modify_region" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [88273 88289])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88290 88300])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88301 88311])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88312 88316]))                  
                :type "void")
                nil [88246 88317])
            ("prepare_to_modify_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88356 88366])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88367 88377])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [88378 88390]))                  
                :type "void")
                nil [88318 88391])
            ("signal_before_change" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88426 88436])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88437 88447])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [88448 88460]))                  
                :type "void")
                nil [88392 88461])
            ("signal_after_change" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88495 88505])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88506 88516])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88517 88527]))                  
                :type "void")
                nil [88462 88528])
            ("adjust_after_replace" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88563 88573])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88574 88584])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88585 88597])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88604 88614])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88615 88625]))                  
                :type "void")
                nil [88529 88626])
            ("adjust_after_replace_noundo" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88668 88678])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88679 88689])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88690 88700])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88707 88717])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88718 88728])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88729 88739]))                  
                :type "void")
                nil [88627 88740])
            ("adjust_after_insert" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88774 88784])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88785 88795])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88796 88806])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88812 88822])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88823 88833]))                  
                :type "void")
                nil [88741 88834])
            ("adjust_markers_for_delete" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88874 88884])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88885 88895])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88907 88917])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88918 88928]))                  
                :type "void")
                nil [88835 88929])
            ("replace_range" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [88957 88967])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88968 88978])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88979 88991])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88992 88996])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [88997 89001])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [89002 89006]))                  
                :type "void")
                nil [88930 89007])
            ("replace_range_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [89037 89047])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [89048 89058])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [89059 89069])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [89070 89080])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [89089 89096])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [89097 89107])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [89108 89118])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [89119 89123]))                  
                :type "void")
                nil [89008 89124])
            ("syms_of_insdel" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [89153 89158]))                  
                :type "void")
                nil [89125 89159])
            ("selected_frame" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89188 89222])
            ("baud_rate" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [89223 89250])
            ("DEFUN_ARGS_" variable (:type ("Fding" type (:type "class") nil nil)) nil [89251 89268])
            ("DEFUN_ARGS_" variable (:type ("Fredraw_frame" type (:type "class") nil nil)) nil [89269 89294])
            ("DEFUN_ARGS_" variable (:type ("Fredraw_display" type (:type "class") nil nil)) nil [89295 89322])
            ("DEFUN_ARGS_" variable (:type ("Fsleep_for" type (:type "class") nil nil)) nil [89323 89345])
            ("DEFUN_ARGS_" variable (:type ("Fredisplay" type (:type "class") nil nil)) nil [89346 89368])
            ("sit_for" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89369 89425])
            ("init_display" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [89426 89463])
            ("syms_of_display" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [89464 89504])
            ("safe_bcopy" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [89505 89561])
            ("Qinhibit_point_motion_hooks" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89588 89635])
            ("Qdisplay" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89636 89684])
            ("Qinhibit_redisplay" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89636 89684])
            ("Qinhibit_eval_during_redisplay" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89685 89735])
            ("Qmessage_truncate_lines" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89736 89779])
            ("Qimage" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89780 89806])
            ("Vmessage_log_max" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89807 89843])
            ("message_enable_multibyte" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [89844 89880])
            ("echo_area_buffer" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89881 89920])
            ("check_message_stack" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [89921 89965])
            ("setup_echo_area_for_printing" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [89966 90018])
            ("push_message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [90019 90055])
            ("pop_message_unwind" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [90056 90113])
            ("restore_message_unwind" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [90114 90175])
            ("pop_message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90176 90212])
            ("restore_message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90213 90253])
            ("current_message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [90254 90301])
            ("set_message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90302 90370])
            ("clear_message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90371 90413])
            ("message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :type "void")
                nil [90414 90459])
            ("message_nolog" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :type "void")
                nil [90460 90511])
            ("message1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90512 90547])
            ("message1_nolog" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90548 90589])
            ("message2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90590 90641])
            ("message2_nolog" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90642 90699])
            ("message3" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90700 90750])
            ("message3_nolog" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90751 90807])
            ("message_dolog" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90808 90869])
            ("message_with_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90870 90934])
            ("message_log_maybe_newline" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90935 90985])
            ("update_echo_area" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [90986 91027])
            ("truncate_echo_area" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91028 91070])
            ("redisplay" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91071 91105])
            ("check_point_in_composition" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [91106 91195])
            ("redisplay_preserve_echo_area" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91196 91248])
            ("prepare_menu_bars" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91249 91291])
            ("set_frame_cursor_types" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91293 91356])
            ("syms_of_xdisp" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91357 91395])
            ("init_xdisp" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91396 91431])
            ("safe_eval" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [91432 91480])
            ("pos_visible_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [91481 91585])
            ("syms_of_xsettings" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91616 91658])
            ("memory_warnings" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91690 91760])
            ("check_pure_size" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91787 91827])
            ("allocate_string_data" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_String" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91828 91899])
            ("reset_malloc_hooks" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91900 91943])
            ("uninterrupt_malloc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91944 91987])
            ("malloc_warning" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [91988 92029])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [92066 92076])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [92120 92130])
            ("survives_gc_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [92131 92175])
            ("mark_object" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [92176 92219])
            ("Vpurify_flag" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92220 92252])
            ("Vmemory_full" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92253 92285])
            ("DEFUN_ARGS_" variable (:type ("Fcons" type (:type "class") nil nil)) nil [92286 92303])
            ("DEFUN_ARGS_" variable (:type ("list1" type (:type "class") nil nil)) nil [92304 92321])
            ("DEFUN_ARGS_" variable (:type ("list2" type (:type "class") nil nil)) nil [92322 92339])
            ("DEFUN_ARGS_" variable (:type ("list3" type (:type "class") nil nil)) nil [92340 92357])
            ("DEFUN_ARGS_" variable (:type ("list4" type (:type "class") nil nil)) nil [92358 92375])
            ("DEFUN_ARGS_" variable (:type ("list5" type (:type "class") nil nil)) nil [92376 92393])
            ("DEFUN_ARGS_" variable (:type ("Flist" type (:type "class") nil nil)) nil [92394 92414])
            ("DEFUN_ARGS_" variable (:type ("Fmake_list" type (:type "class") nil nil)) nil [92415 92437])
            ("allocate_misc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92438 92483])
            ("DEFUN_ARGS_" variable (:type ("Fmake_vector" type (:type "class") nil nil)) nil [92484 92508])
            ("DEFUN_ARGS_" variable (:type ("Fvector" type (:type "class") nil nil)) nil [92509 92531])
            ("DEFUN_ARGS_" variable (:type ("Fmake_symbol" type (:type "class") nil nil)) nil [92532 92556])
            ("DEFUN_ARGS_" variable (:type ("Fmake_marker" type (:type "class") nil nil)) nil [92557 92581])
            ("DEFUN_ARGS_" variable (:type ("Fmake_string" type (:type "class") nil nil)) nil [92582 92606])
            ("build_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92607 92659])
            ("make_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92660 92716])
            ("make_unibyte_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92717 92781])
            ("make_multibyte_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92782 92853])
            ("make_event_array" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92854 92916])
            ("make_uninit_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92917 92966])
            ("make_uninit_multibyte_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [92967 93031])
            ("make_string_from_bytes" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [93032 93104])
            ("make_specified_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [93105 93181])
            ("DEFUN_ARGS_" variable (:type ("Fpurecopy" type (:type "class") nil nil)) nil [93182 93203])
            ("make_pure_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [93204 93275])
            ("make_pure_c_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [93315 93332]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [93276 93333])
            ("pure_cons" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [93334 93395])
            ("make_pure_vector" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [93396 93449])
            ("DEFUN_ARGS_" variable (:type ("Fgarbage_collect" type (:type "class") nil nil)) nil [93450 93478])
            ("DEFUN_ARGS_" variable (:type ("Fmake_byte_code" type (:type "class") nil nil)) nil [93479 93509])
            ("DEFUN_ARGS_" variable (:type ("Fmake_bool_vector" type (:type "class") nil nil)) nil [93510 93539])
            ("Qchar_table_extra_slots" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [93540 93583])
            ("allocate_vector" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [93584 93644])
            ("allocate_pseudovector" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("memlen" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("lisplen" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("tag" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [93645 93740])
            ("ALLOCATE_PSEUDOVECTOR" variable (:constant-flag t) nil [93749 93770])
            ("allocate_hash_table" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Hash_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [93899 93962])
            ("allocate_window" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [93963 94013])
            ("allocate_frame" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [94014 94062])
            ("allocate_process" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Process" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [94063 94120])
            ("allocate_terminal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [94121 94175])
            ("gc_in_progress" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [94176 94202])
            ("abort_on_gc" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [94203 94226])
            ("make_float" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "double") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [94227 94271])
            ("display_malloc_warning" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [94272 94319])
            ("inhibit_garbage_collection" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [94320 94370])
            ("make_save_value" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [94371 94425])
            ("free_misc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [94426 94467])
            ("free_marker" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [94468 94511])
            ("free_cons" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Cons" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [94512 94560])
            ("init_alloc_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [94561 94601])
            ("init_alloc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [94602 94637])
            ("syms_of_alloc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [94638 94676])
            ("allocate_buffer" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [94677 94728])
            ("valid_lisp_object_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [94729 94779])
            ("DEFUN_ARGS_" variable (:type ("Fmake_char_table" type (:type "class") nil nil)) nil [94808 94836])
            ("DEFUN_ARGS_" variable (:type ("Fchar_table_parent" type (:type "class") nil nil)) nil [94837 94867])
            ("DEFUN_ARGS_" variable (:type ("Fset_char_table_parent" type (:type "class") nil nil)) nil [94868 94902])
            ("DEFUN_ARGS_" variable (:type ("Fchar_table_extra_slot" type (:type "class") nil nil)) nil [94903 94937])
            ("DEFUN_ARGS_" variable (:type ("Fset_char_table_extra_slot" type (:type "class") nil nil)) nil [94938 94976])
            ("DEFUN_ARGS_" variable (:type ("Fchar_table_range" type (:type "class") nil nil)) nil [94977 95006])
            ("DEFUN_ARGS_" variable (:type ("Fset_char_table_range" type (:type "class") nil nil)) nil [95007 95040])
            ("DEFUN_ARGS_" variable (:type ("Fset_char_table_default" type (:type "class") nil nil)) nil [95041 95076])
            ("DEFUN_ARGS_" variable (:type ("Foptimize_char_table" type (:type "class") nil nil)) nil [95077 95109])
            ("DEFUN_ARGS_" variable (:type ("Fmap_char_table" type (:type "class") nil nil)) nil [95110 95137])
            ("copy_char_table" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95138 95192])
            ("sub_char_table_ref" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95193 95255])
            ("char_table_ref" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95256 95314])
            ("char_table_ref_and_range" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95315 95404])
            ("char_table_set" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95405 95476])
            ("char_table_set_range" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95477 95569])
            ("char_table_translate" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [95570 95626])
            ("map_char_table" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [95627 95760])
            ("syms_of_chartab" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [95761 95801])
            ("Vprin1_to_string_buffer" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95828 95871])
            ("debug_print" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [95872 95915])
            ("DEFUN_ARGS_" variable (:type ("Fprin1" type (:type "class") nil nil)) nil [95916 95934])
            ("DEFUN_ARGS_" variable (:type ("Fprin1_to_string" type (:type "class") nil nil)) nil [95935 95963])
            ("DEFUN_ARGS_" variable (:type ("Fprinc" type (:type "class") nil nil)) nil [95964 95982])
            ("DEFUN_ARGS_" variable (:type ("Fterpri" type (:type "class") nil nil)) nil [95983 96002])
            ("DEFUN_ARGS_" variable (:type ("Fprint" type (:type "class") nil nil)) nil [96003 96021])
            ("DEFUN_ARGS_" variable (:type ("Ferror_message_string" type (:type "class") nil nil)) nil [96022 96055])
            ("Qstandard_output" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96056 96110])
            ("Vstandard_output" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96056 96110])
            ("Qexternal_debugging_output" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96111 96157])
            ("temp_output_buffer_setup" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [96158 96215])
            ("print_escape_newlines" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [96216 96262])
            ("print_level" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [96216 96262])
            ("Qprint_escape_newlines" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96263 96305])
            ("write_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [96306 96350])
            ("write_string_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [96351 96410])
            ("print_error_message" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [96411 96496])
            ("internal_with_output_to_temp_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96497 96617])
            ("float_to_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [96618 96677])
            ("syms_of_print" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [96678 96716])
            ("doprnt" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [96744 96811])
            ("Qstandard_input" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96838 96898])
            ("Qvariable_documentation" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96838 96898])
            ("Vstandard_input" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96899 96961])
            ("initial_obarray" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96899 96961])
            ("Vobarray" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96899 96961])
            ("DEFUN_ARGS_" variable (:type ("Fread" type (:type "class") nil nil)) nil [96962 96979])
            ("DEFUN_ARGS_" variable (:type ("Fread_from_string" type (:type "class") nil nil)) nil [96980 97009])
            ("DEFUN_ARGS_" variable (:type ("Fintern" type (:type "class") nil nil)) nil [97010 97029])
            ("DEFUN_ARGS_" variable (:type ("Fintern_soft" type (:type "class") nil nil)) nil [97030 97054])
            ("DEFUN_ARGS_" variable (:type ("Fload" type (:type "class") nil nil)) nil [97055 97072])
            ("DEFUN_ARGS_" variable (:type ("Fget_load_suffixes" type (:type "class") nil nil)) nil [97073 97103])
            ("DEFUN_ARGS_" variable (:type ("Fget_file_char" type (:type "class") nil nil)) nil [97104 97130])
            ("DEFUN_ARGS_" variable (:type ("Fread_char" type (:type "class") nil nil)) nil [97131 97153])
            ("DEFUN_ARGS_" variable (:type ("Fread_event" type (:type "class") nil nil)) nil [97154 97177])
            ("read_filtered_event" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97178 97256])
            ("DEFUN_ARGS_" variable (:type ("Feval_region" type (:type "class") nil nil)) nil [97257 97281])
            ("check_obarray" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97282 97334])
            ("intern" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97335 97381])
            ("intern_c_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [97418 97431]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97382 97432])
            ("make_symbol" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97433 97478])
            ("oblookup" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97479 97550])
            ("LOADHIST_ATTACH" variable (:constant-flag t) nil [97559 97574])
            ("Vcurrent_load_list" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97649 97687])
            ("Vload_file_rep_suffixes" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97688 97762])
            ("Vload_suffixes" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97688 97762])
            ("Vload_history" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97688 97762])
            ("openp" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [97763 97861])
            ("isfloat_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [97862 97907])
            ("map_obarray" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [97908 98009])
            ("dir_warning" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [98010 98061])
            ("close_load_descs" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [98062 98103])
            ("init_obarray" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [98104 98141])
            ("init_lread" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [98142 98177])
            ("syms_of_lread" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [98178 98216])
            ("Qmacro" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98242 98319])
            ("Qdefun" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98242 98319])
            ("Qcommandp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98242 98319])
            ("Qinteractive" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98242 98319])
            ("Qexit" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98242 98319])
            ("Qautoload" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98242 98319])
            ("Vquit_flag" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98320 98380])
            ("Qinhibit_quit" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98320 98380])
            ("Vinhibit_quit" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98320 98380])
            ("Vautoload_queue" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98381 98416])
            ("Vdebug_on_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98417 98452])
            ("Vsignaling_function" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98453 98492])
            ("handling_signal" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [98493 98520])
            ("interactive_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [98521 98557])
            ("Vrun_hooks" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98764 98794])
            ("DEFUN_ARGS_" variable (:type ("Frun_hooks" type (:type "class") nil nil)) nil [98795 98820])
            ("DEFUN_ARGS_" variable (:type ("Frun_hook_with_args" type (:type "class") nil nil)) nil [98821 98855])
            ("DEFUN_ARGS_" variable (:type ("Frun_hook_with_args_until_success" type (:type "class") nil nil)) nil [98856 98904])
            ("DEFUN_ARGS_" variable (:type ("Frun_hook_with_args_until_failure" type (:type "class") nil nil)) nil [98905 98953])
            ("run_hook_list_with_args" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98954 99036])
            ("run_hook_with_args_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [99037 99115])
            ("DEFUN_ARGS_" variable (:type ("Fand" type (:type "class") nil nil)) nil [99116 99140])
            ("DEFUN_ARGS_" variable (:type ("For" type (:type "class") nil nil)) nil [99141 99164])
            ("DEFUN_ARGS_" variable (:type ("Fif" type (:type "class") nil nil)) nil [99165 99188])
            ("DEFUN_ARGS_" variable (:type ("Fprogn" type (:type "class") nil nil)) nil [99189 99215])
            ("DEFUN_ARGS_" variable (:type ("Fprog1" type (:type "class") nil nil)) nil [99216 99242])
            ("DEFUN_ARGS_" variable (:type ("Fprog2" type (:type "class") nil nil)) nil [99243 99269])
            ("DEFUN_ARGS_" variable (:type ("Fsetq" type (:type "class") nil nil)) nil [99270 99295])
            ("DEFUN_ARGS_" variable (:type ("Fquote" type (:type "class") nil nil)) nil [99296 99322])
            ("DEFUN_ARGS_" variable (:type ("Fuser_variable_p" type (:type "class") nil nil)) nil [99323 99351])
            ("DEFUN_ARGS_" variable (:type ("Finteractive_p" type (:type "class") nil nil)) nil [99352 99378])
            ("DEFUN_ARGS_" variable (:type ("Fdefun" type (:type "class") nil nil)) nil [99379 99405])
            ("DEFUN_ARGS_" variable (:type ("Flet" type (:type "class") nil nil)) nil [99406 99430])
            ("DEFUN_ARGS_" variable (:type ("FletX" type (:type "class") nil nil)) nil [99431 99456])
            ("DEFUN_ARGS_" variable (:type ("Fwhile" type (:type "class") nil nil)) nil [99457 99483])
            ("DEFUN_ARGS_" variable (:type ("Fcatch" type (:type "class") nil nil)) nil [99484 99510])
            ("__attribute__" function
               (:prototype-flag t
                :type ("DEFUN_ARGS_" type (:type "class") nil nil))
                nil [99511 99539])
            ("DEFUN_ARGS_" variable (:type ("Funwind_protect" type (:type "class") nil nil)) nil [99540 99575])
            ("DEFUN_ARGS_" variable (:type ("Fcondition_case" type (:type "class") nil nil)) nil [99576 99611])
            ("DEFUN_ARGS_" variable (:type ("Fsignal" type (:type "class") nil nil)) nil [99612 99631])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [99684 99694])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [99735 99745])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [99799 99809])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [99876 99886])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [99966 99976])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [100029 100039])
            ("DEFUN_ARGS_" variable (:type ("Fautoload" type (:type "class") nil nil)) nil [100040 100061])
            ("DEFUN_ARGS_" variable (:type ("Fcommandp" type (:type "class") nil nil)) nil [100062 100083])
            ("DEFUN_ARGS_" variable (:type ("Feval" type (:type "class") nil nil)) nil [100084 100101])
            ("DEFUN_ARGS_" variable (:type ("Fapply" type (:type "class") nil nil)) nil [100102 100123])
            ("DEFUN_ARGS_" variable (:type ("Ffuncall" type (:type "class") nil nil)) nil [100124 100147])
            ("DEFUN_ARGS_" variable (:type ("Fbacktrace" type (:type "class") nil nil)) nil [100148 100170])
            ("apply1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100171 100229])
            ("call0" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100230 100274])
            ("call1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100275 100332])
            ("call2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100333 100403])
            ("call3" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100404 100487])
            ("call4" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100488 100584])
            ("call5" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100585 100694])
            ("call6" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100695 100817])
            ("DEFUN_ARGS_" variable (:type ("Fdo_auto_save" type (:type "class") nil nil)) nil [100818 100843])
            ("apply_lambda" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100844 100913])
            ("internal_catch" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100914 101011])
            ("internal_lisp_condition_case" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101012 101105])
            ("internal_condition_case" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101106 101223])
            ("internal_condition_case_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101224 101363])
            ("internal_condition_case_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101364 101517])
            ("specbind" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [101518 101571])
            ("record_unwind_protect" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [101572 101656])
            ("unbind_to" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101657 101710])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [101754 101764])
            ("do_autoload" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [101765 101821])
            ("un_autoload" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101822 101872])
            ("DEFUN_ARGS_" variable (:type ("Ffetch_bytecode" type (:type "class") nil nil)) nil [101873 101900])
            ("init_eval_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [101901 101940])
            ("safe_call" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101941 101996])
            ("safe_call1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101997 102059])
            ("safe_call2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102091 102103])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102104 102116])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102117 102129]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [102060 102130])
            ("init_eval" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [102131 102165])
            ("syms_of_eval" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [102166 102203])
            ("DEFUN_ARGS_" variable (:type ("Fpropertize" type (:type "class") nil nil)) nil [102232 102258])
            ("DEFUN_ARGS_" variable (:type ("Fcurrent_message" type (:type "class") nil nil)) nil [102259 102287])
            ("DEFUN_ARGS_" variable (:type ("Fgoto_char" type (:type "class") nil nil)) nil [102288 102310])
            ("DEFUN_ARGS_" variable (:type ("Fpoint_min_marker" type (:type "class") nil nil)) nil [102311 102340])
            ("DEFUN_ARGS_" variable (:type ("Fpoint_max_marker" type (:type "class") nil nil)) nil [102341 102370])
            ("DEFUN_ARGS_" variable (:type ("Fpoint_min" type (:type "class") nil nil)) nil [102371 102393])
            ("DEFUN_ARGS_" variable (:type ("Fpoint_max" type (:type "class") nil nil)) nil [102394 102416])
            ("DEFUN_ARGS_" variable (:type ("Fpoint" type (:type "class") nil nil)) nil [102417 102435])
            ("DEFUN_ARGS_" variable (:type ("Fpoint_marker" type (:type "class") nil nil)) nil [102436 102461])
            ("DEFUN_ARGS_" variable (:type ("Fmark_marker" type (:type "class") nil nil)) nil [102462 102486])
            ("DEFUN_ARGS_" variable (:type ("Fline_beginning_position" type (:type "class") nil nil)) nil [102487 102523])
            ("DEFUN_ARGS_" variable (:type ("Fline_end_position" type (:type "class") nil nil)) nil [102524 102554])
            ("DEFUN_ARGS_" variable (:type ("Ffollowing_char" type (:type "class") nil nil)) nil [102555 102582])
            ("DEFUN_ARGS_" variable (:type ("Fprevious_char" type (:type "class") nil nil)) nil [102583 102609])
            ("DEFUN_ARGS_" variable (:type ("Fchar_after" type (:type "class") nil nil)) nil [102610 102633])
            ("DEFUN_ARGS_" variable (:type ("Finsert" type (:type "class") nil nil)) nil [102634 102656])
            ("DEFUN_ARGS_" variable (:type ("Finsert_and_inherit" type (:type "class") nil nil)) nil [102657 102691])
            ("DEFUN_ARGS_" variable (:type ("Finsert_before_markers" type (:type "class") nil nil)) nil [102692 102729])
            ("DEFUN_ARGS_" variable (:type ("Finsert_buffer_substring" type (:type "class") nil nil)) nil [102730 102766])
            ("DEFUN_ARGS_" variable (:type ("Finsert_char" type (:type "class") nil nil)) nil [102767 102791])
            ("insert1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [102792 102831])
            ("DEFUN_ARGS_" variable (:type ("Feolp" type (:type "class") nil nil)) nil [102832 102849])
            ("DEFUN_ARGS_" variable (:type ("Feobp" type (:type "class") nil nil)) nil [102850 102867])
            ("DEFUN_ARGS_" variable (:type ("Fbolp" type (:type "class") nil nil)) nil [102868 102885])
            ("DEFUN_ARGS_" variable (:type ("Fbobp" type (:type "class") nil nil)) nil [102886 102903])
            ("DEFUN_ARGS_" variable (:type ("Fformat" type (:type "class") nil nil)) nil [102904 102926])
            ("DEFUN_ARGS_" variable (:type ("Fmessage" type (:type "class") nil nil)) nil [102927 102950])
            ("format2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [102951 103018])
            ("DEFUN_ARGS_" variable (:type ("Fbuffer_substring" type (:type "class") nil nil)) nil [103019 103048])
            ("DEFUN_ARGS_" variable (:type ("Fbuffer_string" type (:type "class") nil nil)) nil [103049 103075])
            ("save_excursion_save" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103076 103127])
            ("save_restriction_save" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103128 103181])
            ("save_excursion_restore" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103182 103243])
            ("save_restriction_restore" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103244 103307])
            ("DEFUN_ARGS_" variable (:type ("Fchar_to_string" type (:type "class") nil nil)) nil [103308 103335])
            ("DEFUN_ARGS_" variable (:type ("Fdelete_region" type (:type "class") nil nil)) nil [103336 103362])
            ("DEFUN_ARGS_" variable (:type ("Fnarrow_to_region" type (:type "class") nil nil)) nil [103363 103392])
            ("DEFUN_ARGS_" variable (:type ("Fwiden" type (:type "class") nil nil)) nil [103393 103411])
            ("DEFUN_ARGS_" variable (:type ("Fuser_login_name" type (:type "class") nil nil)) nil [103412 103440])
            ("DEFUN_ARGS_" variable (:type ("Fsystem_name" type (:type "class") nil nil)) nil [103441 103465])
            ("DEFUN_ARGS_" variable (:type ("Fcurrent_time" type (:type "class") nil nil)) nil [103466 103491])
            ("clip_to_bounds" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [103492 103539])
            ("make_buffer_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103540 103599])
            ("make_buffer_string_both" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103600 103674])
            ("init_editfns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [103675 103712])
            ("syms_of_editfns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [103713 103753])
            ("Vinhibit_field_text_motion" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103754 103800])
            ("DEFUN_ARGS_" variable (:type ("Fconstrain_to_field" type (:type "class") nil nil)) nil [103801 103832])
            ("DEFUN_ARGS_" variable (:type ("Ffield_string" type (:type "class") nil nil)) nil [103833 103858])
            ("DEFUN_ARGS_" variable (:type ("Fdelete_field" type (:type "class") nil nil)) nil [103859 103884])
            ("DEFUN_ARGS_" variable (:type ("Ffield_beginning" type (:type "class") nil nil)) nil [103885 103913])
            ("DEFUN_ARGS_" variable (:type ("Ffield_end" type (:type "class") nil nil)) nil [103914 103936])
            ("DEFUN_ARGS_" variable (:type ("Ffield_string_no_properties" type (:type "class") nil nil)) nil [103937 103976])
            ("set_time_zone_rule" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [103977 104022])
            ("mouse_face_overlay_overlaps" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [104050 104108])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [104149 104159])
            ("DEFUN_ARGS_" variable (:type ("Fset_buffer_multibyte" type (:type "class") nil nil)) nil [104160 104193])
            ("DEFUN_ARGS_" variable (:type ("Foverlay_start" type (:type "class") nil nil)) nil [104194 104220])
            ("DEFUN_ARGS_" variable (:type ("Foverlay_end" type (:type "class") nil nil)) nil [104221 104245])
            ("DEFUN_ARGS_" variable (:type ("Foverlay_buffer" type (:type "class") nil nil)) nil [104246 104273])
            ("adjust_overlays_for_insert" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [104274 104341])
            ("adjust_overlays_for_delete" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [104342 104409])
            ("fix_start_end_in_overlays" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [104410 104464])
            ("report_overlay_modification" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [104465 104591])
            ("overlay_touches_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [104592 104632])
            ("Vinhibit_read_only" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [104633 104686])
            ("Vbuffer_alist" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [104633 104686])
            ("DEFUN_ARGS_" variable (:type ("Fbuffer_list" type (:type "class") nil nil)) nil [104687 104711])
            ("DEFUN_ARGS_" variable (:type ("Fget_buffer" type (:type "class") nil nil)) nil [104712 104735])
            ("DEFUN_ARGS_" variable (:type ("Fget_buffer_create" type (:type "class") nil nil)) nil [104736 104766])
            ("DEFUN_ARGS_" variable (:type ("Fgenerate_new_buffer_name" type (:type "class") nil nil)) nil [104767 104804])
            ("DEFUN_ARGS_" variable (:type ("Fset_buffer" type (:type "class") nil nil)) nil [104805 104828])
            ("DEFUN_ARGS_" variable (:type ("set_buffer_if_live" type (:type "class") nil nil)) nil [104829 104859])
            ("DEFUN_ARGS_" variable (:type ("Fbarf_if_buffer_read_only" type (:type "class") nil nil)) nil [104860 104897])
            ("DEFUN_ARGS_" variable (:type ("Fcurrent_buffer" type (:type "class") nil nil)) nil [104898 104925])
            ("DEFUN_ARGS_" variable (:type ("Fswitch_to_buffer" type (:type "class") nil nil)) nil [104926 104955])
            ("DEFUN_ARGS_" variable (:type ("Fother_buffer" type (:type "class") nil nil)) nil [104956 104981])
            ("DEFUN_ARGS_" variable (:type ("Foverlay_get" type (:type "class") nil nil)) nil [104982 105006])
            ("DEFUN_ARGS_" variable (:type ("Fbuffer_modified_p" type (:type "class") nil nil)) nil [105007 105037])
            ("DEFUN_ARGS_" variable (:type ("Fset_buffer_modified_p" type (:type "class") nil nil)) nil [105038 105072])
            ("DEFUN_ARGS_" variable (:type ("Fkill_buffer" type (:type "class") nil nil)) nil [105073 105097])
            ("DEFUN_ARGS_" variable (:type ("Fkill_all_local_variables" type (:type "class") nil nil)) nil [105098 105135])
            ("DEFUN_ARGS_" variable (:type ("Fbuffer_disable_undo" type (:type "class") nil nil)) nil [105136 105168])
            ("DEFUN_ARGS_" variable (:type ("Fbuffer_enable_undo" type (:type "class") nil nil)) nil [105169 105200])
            ("DEFUN_ARGS_" variable (:type ("Ferase_buffer" type (:type "class") nil nil)) nil [105201 105226])
            ("Qoverlayp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105227 105256])
            ("Qevaporate" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105257 105287])
            ("get_truename_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105288 105346])
            ("all_buffers" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [105347 105381])
            ("DEFUN_ARGS_" variable (:type ("Fprevious_overlay_change" type (:type "class") nil nil)) nil [105382 105418])
            ("DEFUN_ARGS_" variable (:type ("Fbuffer_file_name" type (:type "class") nil nil)) nil [105419 105448])
            ("init_buffer_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [105449 105490])
            ("init_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [105491 105527])
            ("syms_of_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [105528 105567])
            ("keys_of_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [105568 105607])
            ("DEFUN_ARGS_" variable (:type ("Fmarker_position" type (:type "class") nil nil)) nil [105636 105664])
            ("DEFUN_ARGS_" variable (:type ("Fmarker_buffer" type (:type "class") nil nil)) nil [105665 105691])
            ("DEFUN_ARGS_" variable (:type ("Fcopy_marker" type (:type "class") nil nil)) nil [105692 105716])
            ("DEFUN_ARGS_" variable (:type ("Fset_marker" type (:type "class") nil nil)) nil [105717 105740])
            ("marker_position" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [105741 105787])
            ("marker_byte_position" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [105788 105839])
            ("clear_charpos_cache" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [105840 105895])
            ("charpos_to_bytepos" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [105896 105937])
            ("buf_charpos_to_bytepos" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [105938 106000])
            ("buf_bytepos_to_charpos" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [106001 106063])
            ("unchain_marker" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("marker" variable
                       (:pointer 1
                        :type ("Lisp_Marker" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [106064 106125])
            ("set_marker_restricted" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106126 106212])
            ("set_marker_both" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106213 106290])
            ("set_marker_restricted_both" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106291 106388])
            ("syms_of_marker" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [106389 106428])
            ("Qfile_error" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106457 106488])
            ("DEFUN_ARGS_" variable (:type ("Ffind_file_name_handler" type (:type "class") nil nil)) nil [106489 106524])
            ("DEFUN_ARGS_" variable (:type ("Ffile_name_as_directory" type (:type "class") nil nil)) nil [106525 106560])
            ("DEFUN_ARGS_" variable (:type ("Fmake_temp_name" type (:type "class") nil nil)) nil [106561 106588])
            ("DEFUN_ARGS_" variable (:type ("Fexpand_file_name" type (:type "class") nil nil)) nil [106589 106618])
            ("DEFUN_ARGS_" variable (:type ("Ffile_name_nondirectory" type (:type "class") nil nil)) nil [106619 106654])
            ("DEFUN_ARGS_" variable (:type ("Fsubstitute_in_file_name" type (:type "class") nil nil)) nil [106655 106691])
            ("DEFUN_ARGS_" variable (:type ("Ffile_symlink_p" type (:type "class") nil nil)) nil [106692 106719])
            ("DEFUN_ARGS_" variable (:type ("Fverify_visited_file_modtime" type (:type "class") nil nil)) nil [106720 106760])
            ("DEFUN_ARGS_" variable (:type ("Ffile_exists_p" type (:type "class") nil nil)) nil [106761 106787])
            ("DEFUN_ARGS_" variable (:type ("Ffile_name_absolute_p" type (:type "class") nil nil)) nil [106788 106821])
            ("DEFUN_ARGS_" variable (:type ("Fdirectory_file_name" type (:type "class") nil nil)) nil [106822 106854])
            ("DEFUN_ARGS_" variable (:type ("Ffile_name_directory" type (:type "class") nil nil)) nil [106855 106887])
            ("expand_and_dir_to_file" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106888 106962])
            ("DEFUN_ARGS_" variable (:type ("Ffile_accessible_directory_p" type (:type "class") nil nil)) nil [106963 107003])
            ("DEFUN_ARGS_" variable (:type ("Funhandled_file_name_directory" type (:type "class") nil nil)) nil [107004 107046])
            ("DEFUN_ARGS_" variable (:type ("Ffile_directory_p" type (:type "class") nil nil)) nil [107047 107076])
            ("DEFUN_ARGS_" variable (:type ("Fwrite_region" type (:type "class") nil nil)) nil [107077 107102])
            ("DEFUN_ARGS_" variable (:type ("Ffile_readable_p" type (:type "class") nil nil)) nil [107103 107131])
            ("DEFUN_ARGS_" variable (:type ("Ffile_executable_p" type (:type "class") nil nil)) nil [107132 107162])
            ("DEFUN_ARGS_" variable (:type ("Fread_file_name" type (:type "class") nil nil)) nil [107163 107190])
            ("close_file_unwind" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107191 107247])
            ("restore_point_unwind" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107248 107307])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [107371 107381])
            ("internal_delete_file" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [107382 107433])
            ("syms_of_fileio" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [107434 107473])
            ("make_temp_name" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107474 107532])
            ("DEFUN_ARGS_" variable (:type ("Fmake_symbolic_link" type (:type "class") nil nil)) nil [107533 107564])
            ("Qdelete_file" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107565 107597])
            ("syms_of_abbrev" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [107626 107665])
            ("shrink_regexp_cache" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [107693 107737])
            ("DEFUN_ARGS_" variable (:type ("Fstring_match" type (:type "class") nil nil)) nil [107738 107763])
            ("restore_search_regs" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [107764 107808])
            ("DEFUN_ARGS_" variable (:type ("Fmatch_data" type (:type "class") nil nil)) nil [107809 107832])
            ("DEFUN_ARGS_" variable (:type ("Fset_match_data" type (:type "class") nil nil)) nil [107833 107860])
            ("DEFUN_ARGS_" variable (:type ("Fmatch_beginning" type (:type "class") nil nil)) nil [107861 107889])
            ("DEFUN_ARGS_" variable (:type ("Fmatch_end" type (:type "class") nil nil)) nil [107890 107912])
            ("record_unwind_save_match_data" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [107913 107967])
            ("DEFUN_ARGS_" variable (:type ("Flooking_at" type (:type "class") nil nil)) nil [107968 107991])
            ("fast_string_match" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [107992 108053])
            ("fast_c_string_match_ignore_case" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108054 108130])
            ("fast_string_match_ignore_case" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108131 108204])
            ("fast_looking_at" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108205 108324])
            ("scan_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108325 108398])
            ("scan_newline" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108399 108491])
            ("find_next_newline" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108492 108543])
            ("find_next_newline_no_quit" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108544 108603])
            ("find_before_next_newline" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [108604 108673])
            ("syms_of_search" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [108674 108713])
            ("clear_regexp_cache" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [108714 108757])
            ("last_minibuf_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [108787 108826])
            ("choose_minibuf_frame" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [108827 108872])
            ("DEFUN_ARGS_" variable (:type ("Fcompleting_read" type (:type "class") nil nil)) nil [108873 108901])
            ("DEFUN_ARGS_" variable (:type ("Fread_from_minibuffer" type (:type "class") nil nil)) nil [108902 108935])
            ("DEFUN_ARGS_" variable (:type ("Fread_variable" type (:type "class") nil nil)) nil [108936 108962])
            ("DEFUN_ARGS_" variable (:type ("Fread_buffer" type (:type "class") nil nil)) nil [108963 108987])
            ("DEFUN_ARGS_" variable (:type ("Fread_minibuffer" type (:type "class") nil nil)) nil [108988 109016])
            ("DEFUN_ARGS_" variable (:type ("Feval_minibuffer" type (:type "class") nil nil)) nil [109017 109045])
            ("DEFUN_ARGS_" variable (:type ("Fread_string" type (:type "class") nil nil)) nil [109046 109070])
            ("DEFUN_ARGS_" variable (:type ("Fread_no_blanks_input" type (:type "class") nil nil)) nil [109071 109104])
            ("DEFUN_ARGS_" variable (:type ("Fassoc_string" type (:type "class") nil nil)) nil [109105 109130])
            ("get_minibuffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109131 109176])
            ("temp_echo_area_glyphs" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [109177 109230])
            ("init_minibuf_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [109231 109273])
            ("syms_of_minibuf" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [109274 109314])
            ("Vcurrent_prefix_arg" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109344 109398])
            ("Qplus" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109344 109398])
            ("Qminus" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109344 109398])
            ("Vcommand_history" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109399 109435])
            ("Qmouse_leave_buffer_hook" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109436 109501])
            ("Qcall_interactively" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109436 109501])
            ("DEFUN_ARGS_" variable (:type ("Fcall_interactively" type (:type "class") nil nil)) nil [109502 109533])
            ("DEFUN_ARGS_" variable (:type ("Fprefix_numeric_value" type (:type "class") nil nil)) nil [109534 109567])
            ("syms_of_callint" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [109568 109608])
            ("DEFUN_ARGS_" variable (:type ("Fdowncase" type (:type "class") nil nil)) nil [109641 109662])
            ("DEFUN_ARGS_" variable (:type ("Fupcase" type (:type "class") nil nil)) nil [109663 109682])
            ("DEFUN_ARGS_" variable (:type ("Fcapitalize" type (:type "class") nil nil)) nil [109683 109706])
            ("DEFUN_ARGS_" variable (:type ("Fupcase_region" type (:type "class") nil nil)) nil [109707 109733])
            ("DEFUN_ARGS_" variable (:type ("Fupcase_initials" type (:type "class") nil nil)) nil [109734 109762])
            ("DEFUN_ARGS_" variable (:type ("Fupcase_initials_region" type (:type "class") nil nil)) nil [109763 109798])
            ("syms_of_casefiddle" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [109799 109842])
            ("keys_of_casefiddle" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [109843 109886])
            ("DEFUN_ARGS_" variable (:type ("Fset_case_table" type (:type "class") nil nil)) nil [109916 109943])
            ("DEFUN_ARGS_" variable (:type ("Fset_standard_case_table" type (:type "class") nil nil)) nil [109944 109980])
            ("init_casetab_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [109981 110023])
            ("syms_of_casetab" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [110024 110064])
            ("echoing" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [110095 110114])
            ("echo_message_buffer" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110115 110154])
            ("echo_kboard" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("kboard" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [110155 110189])
            ("cancel_echoing" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [110190 110229])
            ("QCfilter" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110230 110269])
            ("Qdisabled" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110230 110269])
            ("Vtop_level" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110270 110329])
            ("Vhelp_form" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110270 110329])
            ("Vtty_erase_char" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110270 110329])
            ("Vthrow_on_input" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110330 110365])
            ("input_pending" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [110366 110391])
            ("DEFUN_ARGS_" variable (:type ("Fdiscard_input" type (:type "class") nil nil)) nil [110392 110418])
            ("DEFUN_ARGS_" variable (:type ("Frecursive_edit" type (:type "class") nil nil)) nil [110419 110446])
            ("DEFUN_ARGS_" variable (:type ("Ftop_level" type (:type "class") nil nil)) nil [110447 110469])
            ("DEFUN_ARGS_" variable (:type ("Fcommand_execute" type (:type "class") nil nil)) nil [110470 110498])
            ("DEFUN_ARGS_" variable (:type ("Finput_pending_p" type (:type "class") nil nil)) nil [110499 110527])
            ("menu_bar_items" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110528 110581])
            ("tool_bar_items" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110582 110642])
            ("Qvertical_scroll_bar" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110643 110683])
            ("discard_mouse_events" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [110684 110729])
            ("DEFUN_ARGS_" variable (:type ("Fevent_convert_list" type (:type "class") nil nil)) nil [110730 110761])
            ("DEFUN_ARGS_" variable (:type ("Fread_key_sequence" type (:type "class") nil nil)) nil [110762 110792])
            ("DEFUN_ARGS_" variable (:type ("Fset_input_interrupt_mode" type (:type "class") nil nil)) nil [110793 110830])
            ("DEFUN_ARGS_" variable (:type ("Fset_output_flow_control" type (:type "class") nil nil)) nil [110831 110867])
            ("DEFUN_ARGS_" variable (:type ("Fset_input_meta_mode" type (:type "class") nil nil)) nil [110868 110900])
            ("DEFUN_ARGS_" variable (:type ("Fset_quit_char" type (:type "class") nil nil)) nil [110901 110927])
            ("DEFUN_ARGS_" variable (:type ("Fset_input_mode" type (:type "class") nil nil)) nil [110928 110955])
            ("pending_funcalls" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110956 110992])
            ("detect_input_pending" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [110993 111037])
            ("detect_input_pending_ignore_squeezables" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [111038 111101])
            ("detect_input_pending_run_timers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [111102 111156])
            ("safe_run_hooks" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111157 111203])
            ("cmd_error_internal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111204 111262])
            ("command_loop_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [111263 111309])
            ("recursive_edit_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [111310 111358])
            ("record_auto_save" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111359 111400])
            ("init_keyboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111401 111439])
            ("syms_of_keyboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111440 111481])
            ("keys_of_keyboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111482 111523])
            ("push_key_description" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [111524 111591])
            ("DEFUN_ARGS_" variable (:type ("Fvertical_motion" type (:type "class") nil nil)) nil [111620 111648])
            ("DEFUN_ARGS_" variable (:type ("Findent_to" type (:type "class") nil nil)) nil [111649 111671])
            ("DEFUN_ARGS_" variable (:type ("Fcurrent_column" type (:type "class") nil nil)) nil [111672 111699])
            ("DEFUN_ARGS_" variable (:type ("Fmove_to_column" type (:type "class") nil nil)) nil [111700 111727])
            ("current_column" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "double")
                nil [111728 111769])
            ("invalidate_current_column" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111770 111820])
            ("indented_beyond_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [111821 111874])
            ("syms_of_indent" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [111875 111914])
            ("Vx_resource_name" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [111967 112003])
            ("Vx_resource_class" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112004 112041])
            ("Qvisible" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112074 112102])
            ("store_frame_param" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [112103 112181])
            ("store_in_alist" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [112182 112256])
            ("do_switch_frame" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112257 112334])
            ("get_frame_param" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112335 112405])
            ("frame_buffer_predicate" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112406 112467])
            ("DEFUN_ARGS_" variable (:type ("Fframep" type (:type "class") nil nil)) nil [112468 112487])
            ("DEFUN_ARGS_" variable (:type ("Fselect_frame" type (:type "class") nil nil)) nil [112488 112513])
            ("DEFUN_ARGS_" variable (:type ("Fselected_frame" type (:type "class") nil nil)) nil [112514 112541])
            ("DEFUN_ARGS_" variable (:type ("Fwindow_frame" type (:type "class") nil nil)) nil [112542 112567])
            ("DEFUN_ARGS_" variable (:type ("Fframe_root_window" type (:type "class") nil nil)) nil [112568 112598])
            ("DEFUN_ARGS_" variable (:type ("Fframe_first_window" type (:type "class") nil nil)) nil [112599 112630])
            ("DEFUN_ARGS_" variable (:type ("Fframe_selected_window" type (:type "class") nil nil)) nil [112631 112665])
            ("DEFUN_ARGS_" variable (:type ("Fframe_list" type (:type "class") nil nil)) nil [112666 112689])
            ("DEFUN_ARGS_" variable (:type ("Fnext_frame" type (:type "class") nil nil)) nil [112690 112713])
            ("DEFUN_ARGS_" variable (:type ("Fdelete_frame" type (:type "class") nil nil)) nil [112714 112739])
            ("DEFUN_ARGS_" variable (:type ("Fset_mouse_position" type (:type "class") nil nil)) nil [112740 112771])
            ("DEFUN_ARGS_" variable (:type ("Fmake_frame_visible" type (:type "class") nil nil)) nil [112772 112803])
            ("DEFUN_ARGS_" variable (:type ("Fmake_frame_invisible" type (:type "class") nil nil)) nil [112804 112837])
            ("DEFUN_ARGS_" variable (:type ("Ficonify_frame" type (:type "class") nil nil)) nil [112838 112864])
            ("DEFUN_ARGS_" variable (:type ("Fframe_visible_p" type (:type "class") nil nil)) nil [112865 112893])
            ("DEFUN_ARGS_" variable (:type ("Fvisible_frame_list" type (:type "class") nil nil)) nil [112894 112925])
            ("DEFUN_ARGS_" variable (:type ("Fframe_parameter" type (:type "class") nil nil)) nil [112926 112954])
            ("DEFUN_ARGS_" variable (:type ("Fframe_parameters" type (:type "class") nil nil)) nil [112955 112984])
            ("DEFUN_ARGS_" variable (:type ("Fmodify_frame_parameters" type (:type "class") nil nil)) nil [112985 113021])
            ("DEFUN_ARGS_" variable (:type ("Fset_frame_height" type (:type "class") nil nil)) nil [113022 113051])
            ("DEFUN_ARGS_" variable (:type ("Fset_frame_width" type (:type "class") nil nil)) nil [113052 113080])
            ("DEFUN_ARGS_" variable (:type ("Fset_frame_size" type (:type "class") nil nil)) nil [113081 113108])
            ("DEFUN_ARGS_" variable (:type ("Fset_frame_position" type (:type "class") nil nil)) nil [113109 113140])
            ("DEFUN_ARGS_" variable (:type ("Fraise_frame" type (:type "class") nil nil)) nil [113141 113165])
            ("DEFUN_ARGS_" variable (:type ("Fredirect_frame_focus" type (:type "class") nil nil)) nil [113166 113199])
            ("DEFUN_ARGS_" variable (:type ("Fset_frame_selected_window" type (:type "class") nil nil)) nil [113200 113238])
            ("frame_buffer_list" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113239 113295])
            ("frames_discard_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [113296 113349])
            ("set_frame_buffer_list" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [113350 113416])
            ("frames_bury_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [113417 113467])
            ("syms_of_frame" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [113468 113506])
            ("decode_env_path" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113533 113590])
            ("Vinvocation_directory" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113591 113650])
            ("Vinvocation_name" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113591 113650])
            ("Vafter_init_time" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113651 113706])
            ("Vbefore_init_time" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113651 113706])
            ("Vinstallation_directory" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113707 113750])
            ("empty_multibyte_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113751 113815])
            ("empty_unibyte_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113751 113815])
            ("DEFUN_ARGS_" variable (:type ("Fkill_emacs" type (:type "class") nil nil)) nil [113816 113839])
            ("fixup_locale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [113859 113889])
            ("synchronize_system_messages_locale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [113890 113942])
            ("synchronize_system_time_locale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [113943 113991])
            ("shut_down_emacs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [114150 114200])
            ("noninteractive" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [114279 114305])
            ("inhibit_x_resources" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [114381 114412])
            ("daemon_pipe" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type "int")
                nil [114493 114519])
            ("IS_DAEMON" variable (:constant-flag t) nil [114528 114537])
            ("inhibit_window_system" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [114630 114663])
            ("running_asynch_code" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [114725 114756])
            ("DEFUN_ARGS_" variable (:type ("Fget_process" type (:type "class") nil nil)) nil [114785 114809])
            ("DEFUN_ARGS_" variable (:type ("Fget_buffer_process" type (:type "class") nil nil)) nil [114810 114841])
            ("DEFUN_ARGS_" variable (:type ("Fprocessp" type (:type "class") nil nil)) nil [114842 114863])
            ("DEFUN_ARGS_" variable (:type ("Fprocess_status" type (:type "class") nil nil)) nil [114864 114891])
            ("DEFUN_ARGS_" variable (:type ("Fkill_process" type (:type "class") nil nil)) nil [114892 114917])
            ("DEFUN_ARGS_" variable (:type ("Fprocess_send_eof" type (:type "class") nil nil)) nil [114918 114947])
            ("DEFUN_ARGS_" variable (:type ("Fwaiting_for_user_input_p" type (:type "class") nil nil)) nil [114948 114985])
            ("Qprocessp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [114986 115015])
            ("kill_buffer_processes" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115016 115069])
            ("wait_reading_process_output" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Process" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [115070 115203])
            ("add_keyboard_wait_descriptor" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115204 115256])
            ("delete_keyboard_wait_descriptor" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115257 115312])
            ("add_gpm_wait_descriptor" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115313 115360])
            ("delete_gpm_wait_descriptor" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115361 115411])
            ("close_process_descs" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115412 115456])
            ("init_process" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115457 115494])
            ("syms_of_process" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115495 115535])
            ("setup_process_coding_systems" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115536 115596])
            ("Vdata_directory" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115626 115725])
            ("Vexec_directory" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115626 115725])
            ("Vexec_suffixes" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115626 115725])
            ("Vexec_path" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115626 115725])
            ("Vdoc_directory" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115726 115760])
            ("DEFUN_ARGS_" variable (:type ("Fcall_process" type (:type "class") nil nil)) nil [115761 115789])
            ("child_setup" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [115790 115861])
            ("init_callproc_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115862 115902])
            ("init_callproc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115903 115941])
            ("set_initial_environment" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115942 115990])
            ("syms_of_callproc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [115991 116032])
            ("Vdoc_file_name" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116057 116091])
            ("DEFUN_ARGS_" variable (:type ("Fsubstitute_command_keys" type (:type "class") nil nil)) nil [116092 116128])
            ("DEFUN_ARGS_" variable (:type ("Fdocumentation" type (:type "class") nil nil)) nil [116129 116155])
            ("DEFUN_ARGS_" variable (:type ("Fdocumentation_property" type (:type "class") nil nil)) nil [116156 116191])
            ("read_doc_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116192 116246])
            ("get_doc_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116247 116310])
            ("syms_of_doc" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116311 116347])
            ("read_bytecode_char" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [116348 116389])
            ("Qbytecode" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116419 116448])
            ("DEFUN_ARGS_" variable (:type ("Fbyte_code" type (:type "class") nil nil)) nil [116449 116471])
            ("syms_of_bytecode" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116472 116513])
            ("byte_stack_list" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("byte_stack" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [116514 116556])
            ("mark_byte_stack" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116557 116597])
            ("unmark_byte_stack" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116598 116640])
            ("Qexecute_kbd_macro" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116668 116706])
            ("DEFUN_ARGS_" variable (:type ("Fexecute_kbd_macro" type (:type "class") nil nil)) nil [116707 116737])
            ("DEFUN_ARGS_" variable (:type ("Fcancel_kbd_macro_events" type (:type "class") nil nil)) nil [116738 116774])
            ("init_macros" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116775 116811])
            ("syms_of_macros" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116812 116851])
            ("Qinhibit_read_only" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116877 116915])
            ("DEFUN_ARGS_" variable (:type ("Fundo_boundary" type (:type "class") nil nil)) nil [116916 116942])
            ("truncate_undo_list" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116943 116997])
            ("record_marker_adjustment" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [116998 117059])
            ("record_insert" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117060 117102])
            ("record_delete" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117103 117153])
            ("record_first_change" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117154 117198])
            ("record_change" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117199 117241])
            ("record_property_change" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117242 117337])
            ("syms_of_undo" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117338 117375])
            ("Vundo_outer_limit" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117376 117413])
            ("Qmouse_face" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117443 117481])
            ("Qfont" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117443 117481])
            ("Qinsert_behind_hooks" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117482 117546])
            ("Qinsert_in_front_hooks" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117482 117546])
            ("DEFUN_ARGS_" variable (:type ("Fnext_single_property_change" type (:type "class") nil nil)) nil [117547 117587])
            ("DEFUN_ARGS_" variable (:type ("Fnext_single_char_property_change" type (:type "class") nil nil)) nil [117588 117633])
            ("DEFUN_ARGS_" variable (:type ("Fprevious_single_property_change" type (:type "class") nil nil)) nil [117634 117678])
            ("DEFUN_ARGS_" variable (:type ("Fget_text_property" type (:type "class") nil nil)) nil [117679 117709])
            ("DEFUN_ARGS_" variable (:type ("Fput_text_property" type (:type "class") nil nil)) nil [117710 117740])
            ("DEFUN_ARGS_" variable (:type ("Fget_text_property" type (:type "class") nil nil)) nil [117741 117771])
            ("DEFUN_ARGS_" variable (:type ("Fprevious_char_property_change" type (:type "class") nil nil)) nil [117772 117814])
            ("DEFUN_ARGS_" variable (:type ("Fnext_char_property_change" type (:type "class") nil nil)) nil [117815 117853])
            ("report_interval_modification" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117854 117927])
            ("next_single_char_property_change" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117928 118062])
            ("syms_of_menu" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118088 118125])
            ("DEFUN_ARGS_" variable (:type ("Fx_popup_menu" type (:type "class") nil nil)) nil [118152 118177])
            ("DEFUN_ARGS_" variable (:type ("Fx_popup_dialog" type (:type "class") nil nil)) nil [118178 118205])
            ("syms_of_xmenu" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118206 118244])
            ("tty_display_info" type
               (:prototype t
                :type "struct")
                nil [118274 118298])
            ("terminal" type
               (:prototype t
                :type "struct")
                nil [118329 118345])
            ("stuff_char" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118461 118498])
            ("init_sigio" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118499 118533])
            ("sys_subshell" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118534 118571])
            ("sys_suspend" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118572 118608])
            ("discard_tty_input" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118609 118651])
            ("init_sys_modes" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118652 118712])
            ("reset_sys_modes" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118713 118774])
            ("init_all_sys_modes" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118775 118818])
            ("reset_all_sys_modes" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118819 118863])
            ("wait_for_termination" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118864 118908])
            ("flush_pending_output" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118909 118953])
            ("child_setup_tty" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118954 118993])
            ("setup_pty" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [118994 119027])
            ("set_window_size" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [119028 119076])
            ("create_process" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119077 119145])
            ("emacs_open" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [119146 119198])
            ("emacs_close" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [119199 119233])
            ("emacs_read" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [119234 119289])
            ("emacs_write" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [119290 119352])
            ("DEFUN_ARGS_" variable (:type ("Funlock_buffer" type (:type "class") nil nil)) nil [119382 119408])
            ("DEFUN_ARGS_" variable (:type ("Ffile_locked_p" type (:type "class") nil nil)) nil [119409 119435])
            ("unlock_all_files" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119436 119477])
            ("lock_file" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119478 119519])
            ("unlock_file" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119520 119563])
            ("unlock_buffer" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119564 119613])
            ("syms_of_filelock" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119614 119655])
            ("init_filelock" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119656 119694])
            ("syms_of_sound" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119721 119759])
            ("init_sound" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119760 119795])
            ("init_category_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119825 119868])
            ("char_category_set" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [119869 119917])
            ("syms_of_category" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119918 119959])
            ("syms_of_ccl" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [119984 120020])
            ("DEFUN_ARGS_" variable (:type ("Ffile_attributes" type (:type "class") nil nil)) nil [120047 120075])
            ("syms_of_dired" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [120076 120114])
            ("directory_files_internal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [120115 120249])
            ("syms_of_term" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [120275 120312])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [120361 120371])
            ("DEFUN_ARGS_" variable (:type ("Fdelete_terminal" type (:type "class") nil nil)) nil [120401 120429])
            ("syms_of_terminal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [120430 120471])
            ("syms_of_font" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [120497 120534])
            ("init_font" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [120535 120569])
            ("syms_of_fontset" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [120624 120664])
            ("DEFUN_ARGS_" variable (:type ("Fset_fontset_font" type (:type "class") nil nil)) nil [120665 120694])
            ("DEFUN_ARGS_" variable (:type ("Fnew_fontset" type (:type "class") nil nil)) nil [120695 120719])
            ("DEFUN_ARGS_" variable (:type ("Fxw_display_color_p" type (:type "class") nil nil)) nil [120768 120799])
            ("DEFUN_ARGS_" variable (:type ("Fx_file_dialog" type (:type "class") nil nil)) nil [120800 120826])
            ("DEFUN_ARGS_" variable (:type ("Fx_focus_frame" type (:type "class") nil nil)) nil [120827 120853])
            ("DEFUN_ARGS_" variable (:type ("Fclear_face_cache" type (:type "class") nil nil)) nil [120888 120917])
            ("DEFUN_ARGS_" variable (:type ("Fx_load_color_file" type (:type "class") nil nil)) nil [120918 120948])
            ("syms_of_xfaces" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [120949 120988])
            ("syms_of_xfns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [121142 121179])
            ("syms_of_xsmfns" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [121207 121246])
            ("DEFUN_ARGS_" variable (:type ("Fx_send_client_event" type (:type "class") nil nil)) nil [121275 121307])
            ("syms_of_xselect" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [121308 121348])
            ("syms_of_xterm" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [121375 121413])
            ("have_menus_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [121587 121623])
            ("xd_pending_messages" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [121677 121713])
            ("xd_read_queued_messages" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [121714 121755])
            ("syms_of_dbusbind" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [121756 121790])
            ("initialized" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [121915 121938])
            ("immediate_quit" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [121940 121966])
            ("xmalloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [122014 122057])
            ("xrealloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [122058 122118])
            ("xfree" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [122119 122159])
            ("xstrdup" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [122161 122202])
            ("egetenv" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [122204 122239])
            ("init_system_name" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [122297 122338])
            ("DIRECTORY_SEP" variable (:constant-flag t) nil [122639 122652])
            ("IS_DIRECTORY_SEP" variable (:constant-flag t) nil [122697 122713])
            ("IS_DEVICE_SEP" variable (:constant-flag t) nil [122800 122813])
            ("IS_ANY_SEP" variable (:constant-flag t) nil [122917 122927])
            ("SWITCH_ENUM_CAST" variable (:constant-flag t) nil [122974 122990])
            ("LIST_END_P" variable (:constant-flag t) nil [123452 123462])
            ("FOREACH" variable (:constant-flag t) nil [123617 123624])
            ("min" variable (:constant-flag t) nil [124007 124010])
            ("max" variable (:constant-flag t) nil [124049 124052])
            ("eabs" variable (:constant-flag t) nil [124264 124268])
            ("make_fixnum_or_float" variable (:constant-flag t) nil [124404 124424])
            ("CYCLE_CHECK" variable (:constant-flag t) nil [125118 125129])
            ("MAX_ALLOCA" variable (:constant-flag t) nil [125583 125593])
            ("safe_alloca_unwind" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125642 125654]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [125603 125655])
            ("USE_SAFE_ALLOCA" variable (:constant-flag t) nil [125665 125680])
            ("SAFE_ALLOCA" variable (:constant-flag t) nil [125793 125804])
            ("SAFE_FREE" variable (:constant-flag t) nil [126213 126222])
            ("SAFE_ALLOCA_LISP" variable (:constant-flag t) nil [126431 126447]))          
    :file "lisp.h"
    :pointmax 127028
    :fsize 127027
    :lastmodtime '(19418 64986)
    :unmatched-syntax '((symbol "Lisp_Object" 121275 . 121306) (EXTERN "extern" 121275 . 121306) (symbol "Lisp_Object" 120918 . 120947) (EXTERN "extern" 120918 . 120947) (symbol "Lisp_Object" 120888 . 120916) (EXTERN "extern" 120888 . 120916) (symbol "Lisp_Object" 120827 . 120852) (EXTERN "extern" 120827 . 120852) (symbol "Lisp_Object" 120800 . 120825) (EXTERN "extern" 120800 . 120825) (symbol "Lisp_Object" 120768 . 120798) (EXTERN "extern" 120768 . 120798) (symbol "Lisp_Object" 120695 . 120718) (EXTERN "extern" 120695 . 120718) (symbol "Lisp_Object" 120665 . 120693) (EXTERN "extern" 120665 . 120693) (symbol "Lisp_Object" 120401 . 120428) (EXTERN "extern" 120401 . 120428) (semantic-list "(const char *msgid, ...)" 120331 . 120360) (symbol 120325 . 120330) (VOID 120320 . 120324) (EXTERN 120313 . 120319) (symbol "Lisp_Object" 120047 . 120074) (EXTERN "extern" 120047 . 120074) (symbol "Lisp_Object" 119409 . 119434) (EXTERN "extern" 119409 . 119434) (symbol "Lisp_Object" 119382 . 119407) (EXTERN "extern" 119382 . 119407) (symbol "Lisp_Object" 118178 . 118204) (EXTERN "extern" 118178 . 118204) (symbol "Lisp_Object" 118152 . 118176) (EXTERN "extern" 118152 . 118176) (symbol "Lisp_Object" 117815 . 117852) (EXTERN "extern" 117815 . 117852) (symbol "Lisp_Object" 117772 . 117813) (EXTERN "extern" 117772 . 117813) (symbol "Lisp_Object" 117741 . 117770) (EXTERN "extern" 117741 . 117770) (symbol "Lisp_Object" 117710 . 117739) (EXTERN "extern" 117710 . 117739) (symbol "Lisp_Object" 117679 . 117708) (EXTERN "extern" 117679 . 117708) (symbol "Lisp_Object" 117634 . 117677) (EXTERN "extern" 117634 . 117677) (symbol "Lisp_Object" 117588 . 117632) (EXTERN "extern" 117588 . 117632) (symbol "Lisp_Object" 117547 . 117586) (EXTERN "extern" 117547 . 117586) (symbol "Lisp_Object" 116916 . 116941) (EXTERN "extern" 116916 . 116941) (symbol "Lisp_Object" 116738 . 116773) (EXTERN "extern" 116738 . 116773) (symbol "Lisp_Object" 116707 . 116736) (EXTERN "extern" 116707 . 116736) (symbol "Lisp_Object" 116449 . 116470) (EXTERN "extern" 116449 . 116470) (symbol "Lisp_Object" 116156 . 116190) (EXTERN "extern" 116156 . 116190) (symbol "Lisp_Object" 116129 . 116154) (EXTERN "extern" 116129 . 116154) (symbol "Lisp_Object" 116092 . 116127) (EXTERN "extern" 116092 . 116127) (symbol "Lisp_Object" 115761 . 115788) (EXTERN "extern" 115761 . 115788) (symbol "Lisp_Object" 114948 . 114984) (EXTERN "extern" 114948 . 114984) (symbol "Lisp_Object" 114918 . 114946) (EXTERN "extern" 114918 . 114946) (symbol "Lisp_Object" 114892 . 114916) (EXTERN "extern" 114892 . 114916) (symbol "Lisp_Object" 114864 . 114890) (EXTERN "extern" 114864 . 114890) (symbol "Lisp_Object" 114842 . 114862) (EXTERN "extern" 114842 . 114862) (symbol "Lisp_Object" 114810 . 114840) (EXTERN "extern" 114810 . 114840) (symbol "Lisp_Object" 114785 . 114808) (EXTERN "extern" 114785 . 114808) (symbol "Lisp_Object" 113816 . 113838) (EXTERN "extern" 113816 . 113838) (symbol "Lisp_Object" 113200 . 113237) (EXTERN "extern" 113200 . 113237) (symbol "Lisp_Object" 113166 . 113198) (EXTERN "extern" 113166 . 113198) (symbol "Lisp_Object" 113141 . 113164) (EXTERN "extern" 113141 . 113164) (symbol "Lisp_Object" 113109 . 113139) (EXTERN "extern" 113109 . 113139) (symbol "Lisp_Object" 113081 . 113107) (EXTERN "extern" 113081 . 113107) (symbol "Lisp_Object" 113052 . 113079) (EXTERN "extern" 113052 . 113079) (symbol "Lisp_Object" 113022 . 113050) (EXTERN "extern" 113022 . 113050) (symbol "Lisp_Object" 112985 . 113020) (EXTERN "extern" 112985 . 113020) (symbol "Lisp_Object" 112955 . 112983) (EXTERN "extern" 112955 . 112983) (symbol "Lisp_Object" 112926 . 112953) (EXTERN "extern" 112926 . 112953) (symbol "Lisp_Object" 112894 . 112924) (EXTERN "extern" 112894 . 112924) (symbol "Lisp_Object" 112865 . 112892) (EXTERN "extern" 112865 . 112892) (symbol "Lisp_Object" 112838 . 112863) (EXTERN "extern" 112838 . 112863) (symbol "Lisp_Object" 112804 . 112836) (EXTERN "extern" 112804 . 112836) (symbol "Lisp_Object" 112772 . 112802) (EXTERN "extern" 112772 . 112802) (symbol "Lisp_Object" 112740 . 112770) (EXTERN "extern" 112740 . 112770) (symbol "Lisp_Object" 112714 . 112738) (EXTERN "extern" 112714 . 112738) (symbol "Lisp_Object" 112690 . 112712) (EXTERN "extern" 112690 . 112712) (symbol "Lisp_Object" 112666 . 112688) (EXTERN "extern" 112666 . 112688) (symbol "Lisp_Object" 112631 . 112664) (EXTERN "extern" 112631 . 112664) (symbol "Lisp_Object" 112599 . 112629) (EXTERN "extern" 112599 . 112629) (symbol "Lisp_Object" 112568 . 112597) (EXTERN "extern" 112568 . 112597) (symbol "Lisp_Object" 112542 . 112566) (EXTERN "extern" 112542 . 112566) (symbol "Lisp_Object" 112514 . 112540) (EXTERN "extern" 112514 . 112540) (symbol "Lisp_Object" 112488 . 112512) (EXTERN "extern" 112488 . 112512) (symbol "Lisp_Object" 112468 . 112486) (EXTERN "extern" 112468 . 112486) (symbol "Lisp_Object" 111700 . 111726) (EXTERN "extern" 111700 . 111726) (symbol "Lisp_Object" 111672 . 111698) (EXTERN "extern" 111672 . 111698) (symbol "Lisp_Object" 111649 . 111670) (EXTERN "extern" 111649 . 111670) (symbol "Lisp_Object" 111620 . 111647) (EXTERN "extern" 111620 . 111647) (symbol "Lisp_Object" 110928 . 110954) (EXTERN "extern" 110928 . 110954) (symbol "Lisp_Object" 110901 . 110926) (EXTERN "extern" 110901 . 110926) (symbol "Lisp_Object" 110868 . 110899) (EXTERN "extern" 110868 . 110899) (symbol "Lisp_Object" 110831 . 110866) (EXTERN "extern" 110831 . 110866) (symbol "Lisp_Object" 110793 . 110829) (EXTERN "extern" 110793 . 110829) (symbol "Lisp_Object" 110762 . 110791) (EXTERN "extern" 110762 . 110791) (symbol "Lisp_Object" 110730 . 110760) (EXTERN "extern" 110730 . 110760) (symbol "Lisp_Object" 110499 . 110526) (EXTERN "extern" 110499 . 110526) (symbol "Lisp_Object" 110470 . 110497) (EXTERN "extern" 110470 . 110497) (symbol "Lisp_Object" 110447 . 110468) (EXTERN "extern" 110447 . 110468) (symbol "Lisp_Object" 110419 . 110445) (EXTERN "extern" 110419 . 110445) (symbol "Lisp_Object" 110392 . 110417) (EXTERN "extern" 110392 . 110417) (symbol "Lisp_Object" 109944 . 109979) (EXTERN "extern" 109944 . 109979) (symbol "Lisp_Object" 109916 . 109942) (EXTERN "extern" 109916 . 109942) (symbol "Lisp_Object" 109763 . 109797) (EXTERN "extern" 109763 . 109797) (symbol "Lisp_Object" 109734 . 109761) (EXTERN "extern" 109734 . 109761) (symbol "Lisp_Object" 109707 . 109732) (EXTERN "extern" 109707 . 109732) (symbol "Lisp_Object" 109683 . 109705) (EXTERN "extern" 109683 . 109705) (symbol "Lisp_Object" 109663 . 109681) (EXTERN "extern" 109663 . 109681) (symbol "Lisp_Object" 109641 . 109661) (EXTERN "extern" 109641 . 109661) (symbol "Lisp_Object" 109534 . 109566) (EXTERN "extern" 109534 . 109566) (symbol "Lisp_Object" 109502 . 109532) (EXTERN "extern" 109502 . 109532) (symbol "Lisp_Object" 109105 . 109129) (EXTERN "extern" 109105 . 109129) (symbol "Lisp_Object" 109071 . 109103) (EXTERN "extern" 109071 . 109103) (symbol "Lisp_Object" 109046 . 109069) (EXTERN "extern" 109046 . 109069) (symbol "Lisp_Object" 109017 . 109044) (EXTERN "extern" 109017 . 109044) (symbol "Lisp_Object" 108988 . 109015) (EXTERN "extern" 108988 . 109015) (symbol "Lisp_Object" 108963 . 108986) (EXTERN "extern" 108963 . 108986) (symbol "Lisp_Object" 108936 . 108961) (EXTERN "extern" 108936 . 108961) (symbol "Lisp_Object" 108902 . 108934) (EXTERN "extern" 108902 . 108934) (symbol "Lisp_Object" 108873 . 108900) (EXTERN "extern" 108873 . 108900) (symbol "Lisp_Object" 107968 . 107990) (EXTERN "extern" 107968 . 107990) (symbol "Lisp_Object" 107890 . 107911) (EXTERN "extern" 107890 . 107911) (symbol "Lisp_Object" 107861 . 107888) (EXTERN "extern" 107861 . 107888) (symbol "Lisp_Object" 107833 . 107859) (EXTERN "extern" 107833 . 107859) (symbol "Lisp_Object" 107809 . 107831) (EXTERN "extern" 107809 . 107831) (symbol "Lisp_Object" 107738 . 107762) (EXTERN "extern" 107738 . 107762) (symbol "Lisp_Object" 107533 . 107563) (EXTERN "extern" 107533 . 107563) (semantic-list "(const char *, Lisp_Object)" 107338 . 107370) (symbol 107320 . 107337) (VOID 107315 . 107319) (EXTERN 107308 . 107314) (symbol "Lisp_Object" 107163 . 107189) (EXTERN "extern" 107163 . 107189) (symbol "Lisp_Object" 107132 . 107161) (EXTERN "extern" 107132 . 107161) (symbol "Lisp_Object" 107103 . 107130) (EXTERN "extern" 107103 . 107130) (symbol "Lisp_Object" 107077 . 107101) (EXTERN "extern" 107077 . 107101) (symbol "Lisp_Object" 107047 . 107075) (EXTERN "extern" 107047 . 107075) (symbol "Lisp_Object" 107004 . 107045) (EXTERN "extern" 107004 . 107045) (symbol "Lisp_Object" 106963 . 107002) (EXTERN "extern" 106963 . 107002) (symbol "Lisp_Object" 106855 . 106886) (EXTERN "extern" 106855 . 106886) (symbol "Lisp_Object" 106822 . 106853) (EXTERN "extern" 106822 . 106853) (symbol "Lisp_Object" 106788 . 106820) (EXTERN "extern" 106788 . 106820) (symbol "Lisp_Object" 106761 . 106786) (EXTERN "extern" 106761 . 106786) (symbol "Lisp_Object" 106720 . 106759) (EXTERN "extern" 106720 . 106759) (symbol "Lisp_Object" 106692 . 106718) (EXTERN "extern" 106692 . 106718) (symbol "Lisp_Object" 106655 . 106690) (EXTERN "extern" 106655 . 106690) (symbol "Lisp_Object" 106619 . 106653) (EXTERN "extern" 106619 . 106653) (symbol "Lisp_Object" 106589 . 106617) (EXTERN "extern" 106589 . 106617) (symbol "Lisp_Object" 106561 . 106587) (EXTERN "extern" 106561 . 106587) (symbol "Lisp_Object" 106525 . 106559) (EXTERN "extern" 106525 . 106559) (symbol "Lisp_Object" 106489 . 106523) (EXTERN "extern" 106489 . 106523) (symbol "Lisp_Object" 105717 . 105739) (EXTERN "extern" 105717 . 105739) (symbol "Lisp_Object" 105692 . 105715) (EXTERN "extern" 105692 . 105715) (symbol "Lisp_Object" 105665 . 105690) (EXTERN "extern" 105665 . 105690) (symbol "Lisp_Object" 105636 . 105663) (EXTERN "extern" 105636 . 105663) (symbol "Lisp_Object" 105419 . 105447) (EXTERN "extern" 105419 . 105447) (symbol "Lisp_Object" 105382 . 105417) (EXTERN "extern" 105382 . 105417) (symbol "Lisp_Object" 105201 . 105225) (EXTERN "extern" 105201 . 105225) (symbol "Lisp_Object" 105169 . 105199) (EXTERN "extern" 105169 . 105199) (symbol "Lisp_Object" 105136 . 105167) (EXTERN "extern" 105136 . 105167) (symbol "Lisp_Object" 105098 . 105134) (EXTERN "extern" 105098 . 105134) (symbol "Lisp_Object" 105073 . 105096) (EXTERN "extern" 105073 . 105096) (symbol "Lisp_Object" 105038 . 105071) (EXTERN "extern" 105038 . 105071) (symbol "Lisp_Object" 105007 . 105036) (EXTERN "extern" 105007 . 105036) (symbol "Lisp_Object" 104982 . 105005) (EXTERN "extern" 104982 . 105005) (symbol "Lisp_Object" 104956 . 104980) (EXTERN "extern" 104956 . 104980) (symbol "Lisp_Object" 104926 . 104954) (EXTERN "extern" 104926 . 104954) (symbol "Lisp_Object" 104898 . 104924) (EXTERN "extern" 104898 . 104924) (symbol "Lisp_Object" 104860 . 104896) (EXTERN "extern" 104860 . 104896) (symbol "Lisp_Object" 104829 . 104858) (EXTERN "extern" 104829 . 104858) (symbol "Lisp_Object" 104805 . 104827) (EXTERN "extern" 104805 . 104827) (symbol "Lisp_Object" 104767 . 104803) (EXTERN "extern" 104767 . 104803) (symbol "Lisp_Object" 104736 . 104765) (EXTERN "extern" 104736 . 104765) (symbol "Lisp_Object" 104712 . 104734) (EXTERN "extern" 104712 . 104734) (symbol "Lisp_Object" 104687 . 104710) (EXTERN "extern" 104687 . 104710) (symbol "Lisp_Object" 104246 . 104272) (EXTERN "extern" 104246 . 104272) (symbol "Lisp_Object" 104221 . 104244) (EXTERN "extern" 104221 . 104244) (symbol "Lisp_Object" 104194 . 104219) (EXTERN "extern" 104194 . 104219) (symbol "Lisp_Object" 104160 . 104192) (EXTERN "extern" 104160 . 104192) (semantic-list "(Lisp_Object)" 104130 . 104148) (symbol 104121 . 104129) (VOID 104116 . 104120) (EXTERN 104109 . 104115) (symbol "Lisp_Object" 103937 . 103975) (EXTERN "extern" 103937 . 103975) (symbol "Lisp_Object" 103914 . 103935) (EXTERN "extern" 103914 . 103935) (symbol "Lisp_Object" 103885 . 103912) (EXTERN "extern" 103885 . 103912) (symbol "Lisp_Object" 103859 . 103883) (EXTERN "extern" 103859 . 103883) (symbol "Lisp_Object" 103833 . 103857) (EXTERN "extern" 103833 . 103857) (symbol "Lisp_Object" 103801 . 103831) (EXTERN "extern" 103801 . 103831) (symbol "Lisp_Object" 103466 . 103490) (EXTERN "extern" 103466 . 103490) (symbol "Lisp_Object" 103441 . 103464) (EXTERN "extern" 103441 . 103464) (symbol "Lisp_Object" 103412 . 103439) (EXTERN "extern" 103412 . 103439) (symbol "Lisp_Object" 103393 . 103410) (EXTERN "extern" 103393 . 103410) (symbol "Lisp_Object" 103363 . 103391) (EXTERN "extern" 103363 . 103391) (symbol "Lisp_Object" 103336 . 103361) (EXTERN "extern" 103336 . 103361) (symbol "Lisp_Object" 103308 . 103334) (EXTERN "extern" 103308 . 103334) (symbol "Lisp_Object" 103049 . 103074) (EXTERN "extern" 103049 . 103074) (symbol "Lisp_Object" 103019 . 103047) (EXTERN "extern" 103019 . 103047) (symbol "Lisp_Object" 102927 . 102949) (EXTERN "extern" 102927 . 102949) (symbol "Lisp_Object" 102904 . 102925) (EXTERN "extern" 102904 . 102925) (symbol "Lisp_Object" 102886 . 102902) (EXTERN "extern" 102886 . 102902) (symbol "Lisp_Object" 102868 . 102884) (EXTERN "extern" 102868 . 102884) (symbol "Lisp_Object" 102850 . 102866) (EXTERN "extern" 102850 . 102866) (symbol "Lisp_Object" 102832 . 102848) (EXTERN "extern" 102832 . 102848) (symbol "Lisp_Object" 102767 . 102790) (EXTERN "extern" 102767 . 102790) (symbol "Lisp_Object" 102730 . 102765) (EXTERN "extern" 102730 . 102765) (symbol "Lisp_Object" 102692 . 102728) (EXTERN "extern" 102692 . 102728) (symbol "Lisp_Object" 102657 . 102690) (EXTERN "extern" 102657 . 102690) (symbol "Lisp_Object" 102634 . 102655) (EXTERN "extern" 102634 . 102655) (symbol "Lisp_Object" 102610 . 102632) (EXTERN "extern" 102610 . 102632) (symbol "Lisp_Object" 102583 . 102608) (EXTERN "extern" 102583 . 102608) (symbol "Lisp_Object" 102555 . 102581) (EXTERN "extern" 102555 . 102581) (symbol "Lisp_Object" 102524 . 102553) (EXTERN "extern" 102524 . 102553) (symbol "Lisp_Object" 102487 . 102522) (EXTERN "extern" 102487 . 102522) (symbol "Lisp_Object" 102462 . 102485) (EXTERN "extern" 102462 . 102485) (symbol "Lisp_Object" 102436 . 102460) (EXTERN "extern" 102436 . 102460) (symbol "Lisp_Object" 102417 . 102434) (EXTERN "extern" 102417 . 102434) (symbol "Lisp_Object" 102394 . 102415) (EXTERN "extern" 102394 . 102415) (symbol "Lisp_Object" 102371 . 102392) (EXTERN "extern" 102371 . 102392) (symbol "Lisp_Object" 102341 . 102369) (EXTERN "extern" 102341 . 102369) (symbol "Lisp_Object" 102311 . 102339) (EXTERN "extern" 102311 . 102339) (symbol "Lisp_Object" 102288 . 102309) (EXTERN "extern" 102288 . 102309) (symbol "Lisp_Object" 102259 . 102286) (EXTERN "extern" 102259 . 102286) (symbol "Lisp_Object" 102232 . 102257) (EXTERN "extern" 102232 . 102257) (symbol "Lisp_Object" 101873 . 101899) (EXTERN "extern" 101873 . 101899) (semantic-list "(/* char *, ... */)" 101729 . 101753) (symbol 101723 . 101728) (VOID 101718 . 101722) (EXTERN 101711 . 101717) (symbol "Lisp_Object" 100818 . 100842) (EXTERN "extern" 100818 . 100842) (symbol "Lisp_Object" 100148 . 100169) (EXTERN "extern" 100148 . 100169) (symbol "Lisp_Object" 100124 . 100146) (EXTERN "extern" 100124 . 100146) (symbol "Lisp_Object" 100102 . 100122) (EXTERN "extern" 100102 . 100122) (symbol "Lisp_Object" 100084 . 100100) (EXTERN "extern" 100084 . 100100) (symbol "Lisp_Object" 100062 . 100082) (EXTERN "extern" 100062 . 100082) (symbol "Lisp_Object" 100040 . 100060) (EXTERN "extern" 100040 . 100060) (semantic-list "(char *, Lisp_Object)" 100002 . 100028) (symbol 99989 . 100001) (VOID 99984 . 99988) (EXTERN 99977 . 99983) (semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)" 99908 . 99965) (symbol 99899 . 99907) (VOID 99894 . 99898) (EXTERN 99887 . 99893) (semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object)" 99831 . 99875) (symbol 99822 . 99830) (VOID 99817 . 99821) (EXTERN 99810 . 99816) (semantic-list "(Lisp_Object, Lisp_Object)" 99767 . 99798) (symbol 99758 . 99766) (VOID 99753 . 99757) (EXTERN 99746 . 99752) (semantic-list "(Lisp_Object)" 99716 . 99734) (symbol 99707 . 99715) (VOID 99702 . 99706) (EXTERN 99695 . 99701) (semantic-list "(Lisp_Object, Lisp_Object)" 99652 . 99683) (symbol 99644 . 99651) (VOID 99639 . 99643) (EXTERN 99632 . 99638) (symbol "Lisp_Object" 99612 . 99630) (EXTERN "extern" 99612 . 99630) (symbol "Lisp_Object" 99576 . 99610) (EXTERN "extern" 99576 . 99610) (symbol "Lisp_Object" 99540 . 99574) (EXTERN "extern" 99540 . 99574) (symbol "Fthrow" 99511 . 99528) (symbol "Lisp_Object" 99511 . 99528) (EXTERN "extern" 99511 . 99528) (symbol "Lisp_Object" 99484 . 99509) (EXTERN "extern" 99484 . 99509) (symbol "Lisp_Object" 99457 . 99482) (EXTERN "extern" 99457 . 99482) (symbol "Lisp_Object" 99431 . 99455) (EXTERN "extern" 99431 . 99455) (symbol "Lisp_Object" 99406 . 99429) (EXTERN "extern" 99406 . 99429) (symbol "Lisp_Object" 99379 . 99404) (EXTERN "extern" 99379 . 99404) (symbol "Lisp_Object" 99352 . 99377) (EXTERN "extern" 99352 . 99377) (symbol "Lisp_Object" 99323 . 99350) (EXTERN "extern" 99323 . 99350) (symbol "Lisp_Object" 99296 . 99321) (EXTERN "extern" 99296 . 99321) (symbol "Lisp_Object" 99270 . 99294) (EXTERN "extern" 99270 . 99294) (symbol "Lisp_Object" 99243 . 99268) (EXTERN "extern" 99243 . 99268) (symbol "Lisp_Object" 99216 . 99241) (EXTERN "extern" 99216 . 99241) (symbol "Lisp_Object" 99189 . 99214) (EXTERN "extern" 99189 . 99214) (symbol "Lisp_Object" 99165 . 99187) (EXTERN "extern" 99165 . 99187) (symbol "Lisp_Object" 99141 . 99163) (EXTERN "extern" 99141 . 99163) (symbol "Lisp_Object" 99116 . 99139) (EXTERN "extern" 99116 . 99139) (symbol "Lisp_Object" 98905 . 98952) (EXTERN "extern" 98905 . 98952) (symbol "Lisp_Object" 98856 . 98903) (EXTERN "extern" 98856 . 98903) (symbol "Lisp_Object" 98821 . 98854) (EXTERN "extern" 98821 . 98854) (symbol "Lisp_Object" 98795 . 98819) (EXTERN "extern" 98795 . 98819) (symbol "Lisp_Object" 97257 . 97280) (EXTERN "extern" 97257 . 97280) (symbol "Lisp_Object" 97154 . 97176) (EXTERN "extern" 97154 . 97176) (symbol "Lisp_Object" 97131 . 97152) (EXTERN "extern" 97131 . 97152) (symbol "Lisp_Object" 97104 . 97129) (EXTERN "extern" 97104 . 97129) (symbol "Lisp_Object" 97073 . 97102) (EXTERN "extern" 97073 . 97102) (symbol "Lisp_Object" 97055 . 97071) (EXTERN "extern" 97055 . 97071) (symbol "Lisp_Object" 97030 . 97053) (EXTERN "extern" 97030 . 97053) (symbol "Lisp_Object" 97010 . 97028) (EXTERN "extern" 97010 . 97028) (symbol "Lisp_Object" 96980 . 97008) (EXTERN "extern" 96980 . 97008) (symbol "Lisp_Object" 96962 . 96978) (EXTERN "extern" 96962 . 96978) (symbol "Lisp_Object" 96022 . 96054) (EXTERN "extern" 96022 . 96054) (symbol "Lisp_Object" 96003 . 96020) (EXTERN "extern" 96003 . 96020) (symbol "Lisp_Object" 95983 . 96001) (EXTERN "extern" 95983 . 96001) (symbol "Lisp_Object" 95964 . 95981) (EXTERN "extern" 95964 . 95981) (symbol "Lisp_Object" 95935 . 95962) (EXTERN "extern" 95935 . 95962) (symbol "Lisp_Object" 95916 . 95933) (EXTERN "extern" 95916 . 95933) (symbol "Lisp_Object" 95110 . 95136) (EXTERN "extern" 95110 . 95136) (symbol "Lisp_Object" 95077 . 95108) (EXTERN "extern" 95077 . 95108) (symbol "Lisp_Object" 95041 . 95075) (EXTERN "extern" 95041 . 95075) (symbol "Lisp_Object" 95007 . 95039) (EXTERN "extern" 95007 . 95039) (symbol "Lisp_Object" 94977 . 95005) (EXTERN "extern" 94977 . 95005) (symbol "Lisp_Object" 94938 . 94975) (EXTERN "extern" 94938 . 94975) (symbol "Lisp_Object" 94903 . 94936) (EXTERN "extern" 94903 . 94936) (symbol "Lisp_Object" 94868 . 94901) (EXTERN "extern" 94868 . 94901) (symbol "Lisp_Object" 94837 . 94866) (EXTERN "extern" 94837 . 94866) (symbol "Lisp_Object" 94808 . 94835) (EXTERN "extern" 94808 . 94835) (symbol "Lisp_Object" 93510 . 93538) (EXTERN "extern" 93510 . 93538) (symbol "Lisp_Object" 93479 . 93508) (EXTERN "extern" 93479 . 93508) (symbol "Lisp_Object" 93450 . 93477) (EXTERN "extern" 93450 . 93477) (symbol "Lisp_Object" 93182 . 93202) (EXTERN "extern" 93182 . 93202) (symbol "Lisp_Object" 92582 . 92605) (EXTERN "extern" 92582 . 92605) (symbol "Lisp_Object" 92557 . 92580) (EXTERN "extern" 92557 . 92580) (symbol "Lisp_Object" 92532 . 92555) (EXTERN "extern" 92532 . 92555) (symbol "Lisp_Object" 92509 . 92530) (EXTERN "extern" 92509 . 92530) (symbol "Lisp_Object" 92484 . 92507) (EXTERN "extern" 92484 . 92507) (symbol "Lisp_Object" 92415 . 92436) (EXTERN "extern" 92415 . 92436) (symbol "Lisp_Object" 92394 . 92413) (EXTERN "extern" 92394 . 92413) (symbol "Lisp_Object" 92376 . 92392) (EXTERN "extern" 92376 . 92392) (symbol "Lisp_Object" 92358 . 92374) (EXTERN "extern" 92358 . 92374) (symbol "Lisp_Object" 92340 . 92356) (EXTERN "extern" 92340 . 92356) (symbol "Lisp_Object" 92322 . 92338) (EXTERN "extern" 92322 . 92338) (symbol "Lisp_Object" 92304 . 92320) (EXTERN "extern" 92304 . 92320) (symbol "Lisp_Object" 92286 . 92302) (EXTERN "extern" 92286 . 92302) (semantic-list "(void)" 92108 . 92119) (symbol 92089 . 92107) (VOID 92084 . 92088) (EXTERN 92077 . 92083) (semantic-list "(void)" 92054 . 92065) (symbol 92042 . 92053) (VOID 92037 . 92041) (EXTERN 92030 . 92036) (symbol "Lisp_Object" 89346 . 89367) (EXTERN "extern" 89346 . 89367) (symbol "Lisp_Object" 89323 . 89344) (EXTERN "extern" 89323 . 89344) (symbol "Lisp_Object" 89295 . 89321) (EXTERN "extern" 89295 . 89321) (symbol "Lisp_Object" 89269 . 89293) (EXTERN "extern" 89269 . 89293) (symbol "Lisp_Object" 89251 . 89267) (EXTERN "extern" 89251 . 89267) (symbol "Lisp_Object" 86358 . 86388) (EXTERN "extern" 86358 . 86388) (symbol "Lisp_Object" 86083 . 86103) (EXTERN "extern" 86083 . 86103) (symbol "Lisp_Object" 86064 . 86081) (EXTERN "extern" 86064 . 86081) (symbol "Lisp_Object" 85924 . 85948) (EXTERN "extern" 85924 . 85948) (symbol "Lisp_Object" 85895 . 85922) (EXTERN "extern" 85895 . 85922) (symbol "Lisp_Object" 85869 . 85893) (EXTERN "extern" 85869 . 85893) (symbol "Lisp_Object" 85849 . 85867) (EXTERN "extern" 85849 . 85867) (symbol "Lisp_Object" 85823 . 85847) (EXTERN "extern" 85823 . 85847) (symbol "Lisp_Object" 85800 . 85821) (EXTERN "extern" 85800 . 85821) (symbol "Lisp_Object" 85777 . 85798) (EXTERN "extern" 85777 . 85798) (symbol "Lisp_Object" 85753 . 85775) (EXTERN "extern" 85753 . 85775) (symbol "Lisp_Object" 85040 . 85059) (EXTERN "extern" 85040 . 85059) (symbol "Lisp_Object" 85019 . 85038) (EXTERN "extern" 85019 . 85038) (symbol "Lisp_Object" 84943 . 84963) (EXTERN "extern" 84943 . 84963) (symbol "Lisp_Object" 84920 . 84941) (EXTERN "extern" 84920 . 84941) (symbol "Lisp_Object" 84900 . 84918) (EXTERN "extern" 84900 . 84918) (symbol "Lisp_Object" 84878 . 84898) (EXTERN "extern" 84878 . 84898) (symbol "Lisp_Object" 84855 . 84876) (EXTERN "extern" 84855 . 84876) (symbol "Lisp_Object" 84836 . 84853) (EXTERN "extern" 84836 . 84853) (symbol "Lisp_Object" 84819 . 84834) (EXTERN "extern" 84819 . 84834) (symbol "Lisp_Object" 84802 . 84817) (EXTERN "extern" 84802 . 84817) (symbol "Lisp_Object" 84780 . 84800) (EXTERN "extern" 84780 . 84800) (symbol "Lisp_Object" 84759 . 84778) (EXTERN "extern" 84759 . 84778) (symbol "Lisp_Object" 84741 . 84757) (EXTERN "extern" 84741 . 84757) (symbol "Lisp_Object" 84721 . 84739) (EXTERN "extern" 84721 . 84739) (symbol "Lisp_Object" 84703 . 84719) (EXTERN "extern" 84703 . 84719) (symbol "Lisp_Object" 84684 . 84701) (EXTERN "extern" 84684 . 84701) (symbol "Lisp_Object" 84664 . 84682) (EXTERN "extern" 84664 . 84682) (symbol "Lisp_Object" 84647 . 84662) (EXTERN "extern" 84647 . 84662) (symbol "Lisp_Object" 84628 . 84645) (EXTERN "extern" 84628 . 84645) (symbol "Lisp_Object" 84610 . 84626) (EXTERN "extern" 84610 . 84626) (symbol "Lisp_Object" 84592 . 84608) (EXTERN "extern" 84592 . 84608) (symbol "Lisp_Object" 84572 . 84590) (EXTERN "extern" 84572 . 84590) (symbol "Lisp_Object" 84555 . 84570) (EXTERN "extern" 84555 . 84570) (symbol "Lisp_Object" 84458 . 84479) (EXTERN "extern" 84458 . 84479) (symbol "Lisp_Object" 84427 . 84456) (EXTERN "extern" 84427 . 84456) (symbol "Lisp_Object" 84394 . 84425) (EXTERN "extern" 84394 . 84425) (symbol "Lisp_Object" 84363 . 84392) (EXTERN "extern" 84363 . 84392) (symbol "Lisp_Object" 84330 . 84361) (EXTERN "extern" 84330 . 84361) (symbol "Lisp_Object" 84297 . 84328) (EXTERN "extern" 84297 . 84328) (symbol "Lisp_Object" 84262 . 84295) (EXTERN "extern" 84262 . 84295) (symbol "Lisp_Object" 84235 . 84260) (EXTERN "extern" 84235 . 84260) (symbol "Lisp_Object" 84211 . 84233) (EXTERN "extern" 84211 . 84233) (symbol "Lisp_Object" 84188 . 84209) (EXTERN "extern" 84188 . 84209) (symbol "Lisp_Object" 84165 . 84186) (EXTERN "extern" 84165 . 84186) (symbol "Lisp_Object" 84140 . 84163) (EXTERN "extern" 84140 . 84163) (symbol "Lisp_Object" 84120 . 84138) (EXTERN "extern" 84120 . 84138) (symbol "Lisp_Object" 84100 . 84118) (EXTERN "extern" 84100 . 84118) (symbol "Lisp_Object" 84078 . 84098) (EXTERN "extern" 84078 . 84098) (symbol "Lisp_Object" 84041 . 84075) (EXTERN "extern" 84041 . 84075) (symbol "Lisp_Object" 84020 . 84039) (EXTERN "extern" 84020 . 84039) (symbol "Lisp_Object" 83999 . 84018) (EXTERN "extern" 83999 . 84018) (symbol "Lisp_Object" 83978 . 83997) (EXTERN "extern" 83978 . 83997) (symbol "Lisp_Object" 83957 . 83976) (EXTERN "extern" 83957 . 83976) (symbol "Lisp_Object" 83936 . 83955) (EXTERN "extern" 83936 . 83955) (symbol "Lisp_Object" 83910 . 83934) (EXTERN "extern" 83910 . 83934) (symbol "Lisp_Object" 83881 . 83908) (EXTERN "extern" 83881 . 83908) (symbol "Lisp_Object" 83852 . 83879) (EXTERN "extern" 83852 . 83879) (symbol "Lisp_Object" 83823 . 83850) (EXTERN "extern" 83823 . 83850) (symbol "Lisp_Object" 83782 . 83821) (EXTERN "extern" 83782 . 83821) (symbol "Lisp_Object" 83746 . 83780) (EXTERN "extern" 83746 . 83780) (symbol "Lisp_Object" 83716 . 83744) (EXTERN "extern" 83716 . 83744) (symbol "Lisp_Object" 83687 . 83714) (EXTERN "extern" 83687 . 83714) (symbol "Lisp_Object" 83665 . 83685) (EXTERN "extern" 83665 . 83685) (symbol "Lisp_Object" 83633 . 83663) (EXTERN "extern" 83633 . 83663) (symbol "Lisp_Object" 83613 . 83631) (EXTERN "extern" 83613 . 83631) (symbol "Lisp_Object" 82653 . 82681) (EXTERN "extern" 82653 . 82681) (symbol "Lisp_Object" 82627 . 82651) (EXTERN "extern" 82627 . 82651) (symbol "Lisp_Object" 82599 . 82625) (EXTERN "extern" 82599 . 82625) (symbol "Lisp_Object" 82566 . 82597) (EXTERN "extern" 82566 . 82597) (symbol "Lisp_Object" 82534 . 82564) (EXTERN "extern" 82534 . 82564) (symbol "Lisp_Object" 82508 . 82532) (EXTERN "extern" 82508 . 82532) (symbol "Lisp_Object" 81909 . 81930) (EXTERN "extern" 81909 . 81930) (symbol "Lisp_Object" 81885 . 81907) (EXTERN "extern" 81885 . 81907) (symbol "Lisp_Object" 81861 . 81883) (EXTERN "extern" 81861 . 81883) (symbol "Lisp_Object" 81794 . 81831) (EXTERN "extern" 81794 . 81831) (symbol "Lisp_Object" 81398 . 81430) (EXTERN "extern" 81398 . 81430) (symbol "Lisp_Object" 81364 . 81396) (EXTERN "extern" 81364 . 81396) (symbol "Lisp_Object" 81320 . 81362) (EXTERN "extern" 81320 . 81362) (symbol "Lisp_Object" 81275 . 81318) (EXTERN "extern" 81275 . 81318) (symbol "Lisp_Object" 81235 . 81273) (EXTERN "extern" 81235 . 81273) (symbol "Lisp_Object" 81203 . 81233) (EXTERN "extern" 81203 . 81233) (symbol "Lisp_Object" 81170 . 81201) (EXTERN "extern" 81170 . 81201) (symbol "Lisp_Object" 81137 . 81168) (EXTERN "extern" 81137 . 81168) (symbol "Lisp_Object" 81101 . 81135) (EXTERN "extern" 81101 . 81135) (symbol "Lisp_Object" 81069 . 81099) (EXTERN "extern" 81069 . 81099) (symbol "Lisp_Object" 81040 . 81067) (EXTERN "extern" 81040 . 81067) (symbol "Lisp_Object" 80862 . 80886) (EXTERN "extern" 80862 . 80886) (symbol "Lisp_Object" 80836 . 80860) (EXTERN "extern" 80836 . 80860) (symbol "Lisp_Object" 80811 . 80834) (EXTERN "extern" 80811 . 80834) (semantic-list "(Lisp_Object, Lisp_Object)" 80363 . 80394) (symbol 80343 . 80362) (symbol 80331 . 80342) (EXTERN 80324 . 80330) (semantic-list "(Lisp_Object, Lisp_Object,
				     Lisp_Object)" 80259 . 80312) (symbol 80239 . 80258) (VOID 80234 . 80238) (EXTERN 80227 . 80233) (semantic-list "(Lisp_Object, Lisp_Object)" 80184 . 80215) (symbol 80166 . 80183) (VOID 80161 . 80165) (EXTERN 80154 . 80160) (symbol "Lisp_Object" 79936 . 79974) (EXTERN "extern" 79936 . 79974) (symbol "Lisp_Object" 79918 . 79934) (EXTERN "extern" 79918 . 79934) (symbol "Lisp_Object" 79900 . 79916) (EXTERN "extern" 79900 . 79916) (symbol "Lisp_Object" 79882 . 79897) (EXTERN "extern" 79882 . 79897) (symbol "Lisp_Object" 79865 . 79880) (EXTERN "extern" 79865 . 79880) (symbol "Lisp_Object" 79845 . 79863) (EXTERN "extern" 79845 . 79863) (symbol "Lisp_Object" 79822 . 79843) (EXTERN "extern" 79822 . 79843) (symbol "Lisp_Object" 79799 . 79820) (EXTERN "extern" 79799 . 79820) (symbol "Lisp_Object" 79776 . 79797) (EXTERN "extern" 79776 . 79797) (symbol "Lisp_Object" 79756 . 79774) (EXTERN "extern" 79756 . 79774) (symbol "Lisp_Object" 79736 . 79754) (EXTERN "extern" 79736 . 79754) (symbol "Lisp_Object" 79719 . 79734) (EXTERN "extern" 79719 . 79734) (symbol "Lisp_Object" 79699 . 79717) (EXTERN "extern" 79699 . 79717) (symbol "Lisp_Object" 79677 . 79697) (EXTERN "extern" 79677 . 79697) (symbol "Lisp_Object" 79655 . 79675) (EXTERN "extern" 79655 . 79675) (symbol "Lisp_Object" 79634 . 79653) (EXTERN "extern" 79634 . 79653) (symbol "Lisp_Object" 79615 . 79632) (EXTERN "extern" 79615 . 79632) (symbol "Lisp_Object" 79598 . 79613) (EXTERN "extern" 79598 . 79613) (symbol "Lisp_Object" 79581 . 79596) (EXTERN "extern" 79581 . 79596) (symbol "Lisp_Object" 79564 . 79579) (EXTERN "extern" 79564 . 79579) (symbol "Lisp_Object" 79547 . 79562) (EXTERN "extern" 79547 . 79562) (symbol "Lisp_Object" 79530 . 79545) (EXTERN "extern" 79530 . 79545) (symbol "Lisp_Object" 79509 . 79528) (EXTERN "extern" 79509 . 79528) (symbol "Lisp_Object" 79479 . 79507) (EXTERN "extern" 79479 . 79507) (symbol "Lisp_Object" 79449 . 79477) (EXTERN "extern" 79449 . 79477) (symbol "Lisp_Object" 79430 . 79446) (EXTERN "extern" 79430 . 79446) (symbol "Lisp_Object" 79412 . 79428) (EXTERN "extern" 79412 . 79428) (symbol "Lisp_Object" 79374 . 79409) (EXTERN "extern" 79374 . 79409) (symbol "Lisp_Object" 79344 . 79372) (EXTERN "extern" 79344 . 79372) (symbol "Lisp_Object" 79311 . 79342) (EXTERN "extern" 79311 . 79342) (symbol "Lisp_Object" 79283 . 79309) (EXTERN "extern" 79283 . 79309) (symbol "Lisp_Object" 79258 . 79281) (EXTERN "extern" 79258 . 79281) (symbol "Lisp_Object" 79231 . 79256) (EXTERN "extern" 79231 . 79256) (symbol "Lisp_Object" 79214 . 79229) (EXTERN "extern" 79214 . 79229) (symbol "Lisp_Object" 79131 . 79155) (EXTERN "extern" 79131 . 79155) (symbol "Lisp_Object" 79109 . 79129) (EXTERN "extern" 79109 . 79129) (symbol "Lisp_Object" 79091 . 79107) (EXTERN "extern" 79091 . 79107) (symbol "Lisp_Object" 79060 . 79089) (EXTERN "extern" 79060 . 79089) (symbol "Lisp_Object" 78978 . 79001) (EXTERN "extern" 78978 . 79001) (symbol "Lisp_Object" 78952 . 78976) (EXTERN "extern" 78952 . 78976) (symbol "Lisp_Object" 78923 . 78950) (EXTERN "extern" 78923 . 78950) (symbol "Lisp_Object" 78898 . 78921) (EXTERN "extern" 78898 . 78921) (symbol "Lisp_Object" 78874 . 78896) (EXTERN "extern" 78874 . 78896) (symbol "Lisp_Object" 78853 . 78872) (EXTERN "extern" 78853 . 78872) (symbol "Lisp_Object" 78833 . 78851) (EXTERN "extern" 78833 . 78851) (symbol "Lisp_Object" 78813 . 78831) (EXTERN "extern" 78813 . 78831) (symbol "Lisp_Object" 78793 . 78811) (EXTERN "extern" 78793 . 78811) (symbol "Lisp_Object" 78771 . 78791) (EXTERN "extern" 78771 . 78791) (symbol "Lisp_Object" 78754 . 78769) (EXTERN "extern" 78754 . 78769) (symbol "Lisp_Object" 78732 . 78752) (EXTERN "extern" 78732 . 78752) (symbol "Lisp_Object" 78715 . 78730) (EXTERN "extern" 78715 . 78730) (symbol "Lisp_Object" 78672 . 78712) (EXTERN "extern" 78672 . 78712) (symbol "Lisp_Object" 78641 . 78670) (EXTERN "extern" 78641 . 78670) (symbol "Lisp_Object" 78621 . 78639) (EXTERN "extern" 78621 . 78639) (symbol "Lisp_Object" 78588 . 78619) (EXTERN "extern" 78588 . 78619) (symbol "Lisp_Object" 78558 . 78586) (EXTERN "extern" 78558 . 78586) (symbol "Lisp_Object" 78539 . 78556) (EXTERN "extern" 78539 . 78556) (symbol "Lisp_Object" 78518 . 78537) (EXTERN "extern" 78518 . 78537) (symbol "Lisp_Object" 78497 . 78516) (EXTERN "extern" 78497 . 78516) (symbol "Lisp_Object" 78474 . 78495) (EXTERN "extern" 78474 . 78495) (symbol "Lisp_Object" 78454 . 78472) (EXTERN "extern" 78454 . 78472) (symbol "Lisp_Object" 78422 . 78452) (EXTERN "extern" 78422 . 78452) (symbol "Lisp_Object" 78401 . 78420) (EXTERN "extern" 78401 . 78420) (symbol "Lisp_Object" 78380 . 78399) (EXTERN "extern" 78380 . 78399) (symbol "Lisp_Object" 78359 . 78378) (EXTERN "extern" 78359 . 78378) (symbol "Lisp_Object" 78338 . 78357) (EXTERN "extern" 78338 . 78357) (symbol "Lisp_Object" 78316 . 78336) (EXTERN "extern" 78316 . 78336) (symbol "Lisp_Object" 78296 . 78314) (EXTERN "extern" 78296 . 78314) (symbol "Lisp_Object" 78278 . 78294) (EXTERN "extern" 78278 . 78294) (symbol "Lisp_Object" 78259 . 78276) (EXTERN "extern" 78259 . 78276) (symbol "Lisp_Object" 78240 . 78257) (EXTERN "extern" 78240 . 78257) (symbol "Lisp_Object" 78222 . 78238) (EXTERN "extern" 78222 . 78238) (symbol "Lisp_Object" 78206 . 78220) (EXTERN "extern" 78206 . 78220) (symbol "Lisp_Object" 78128 . 78149) (EXTERN "extern" 78128 . 78149) (symbol "Lisp_Object" 78098 . 78126) (EXTERN "extern" 78098 . 78126) (semantic-list "(Lisp_Object)" 78068 . 78086) (symbol 78048 . 78067) (VOID 78043 . 78047) (EXTERN 78036 . 78042) (TYPEDEF 63501 . 63508) (punctuation 48134 . 48135) (semantic-list 48027 . 48134) (symbol 48020 . 48027) (CHAR 48015 . 48019) (string 10996 . 13010) (punctuation 10985 . 10986) (semantic-list "(const char *, const char *, int)" 1747 . 1784) (symbol 1743 . 1746) (VOID 1738 . 1742) (EXTERN 1731 . 1737))
    :lexical-table 
        '(("EMACS_INT" . ((INT "int" 1547 . 1550)))
          ("LISP_INT_TAG_P" (spp-arg-list ("x") 5849 . 5852) . ((semantic-list "((x) == Lisp_Int)" 5853 . 5870)))
          ("XFASTINT" (spp-arg-list ("a") 16175 . 16178) . ((semantic-list "(XINT (a))" 16179 . 16189)))
          ("XMISC" (spp-arg-list ("a") 18582 . 18585) . ((semantic-list "((union Lisp_Misc *) XPNTR(a))" 18588 . 18618)))
          ("XSETTERMINAL" (spp-arg-list ("a" "b") 21117 . 21123) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_TERMINAL))" 21124 . 21164)))
          ("ASIZE" (spp-arg-list ("ARRAY") 21712 . 21719) . 
              ((symbol "XVECTOR" 21721 . 21728) (semantic-list "((ARRAY))" 21729 . 21738) (punctuation "-" 21738 . 21739) (punctuation ">" 21739 . 21740) (symbol "size" 21740 . 21744)))
          ("XCDR_AS_LVALUE" (spp-arg-list ("c") 24011 . 24014) . ((semantic-list "(XCONS ((c))->u.cdr)" 24015 . 24035)))
          ("XCAR" (spp-arg-list ("c") 24091 . 24094) . ((symbol "LISP_MAKE_RVALUE" 24095 . 24111) (semantic-list "(XCAR_AS_LVALUE(c))" 24111 . 24130)))
          ("CDR" (spp-arg-list ("c") 25009 . 25012) . ((semantic-list "(CONSP ((c)) ? XCDR ((c))			\\
  : NILP ((c)) ? Qnil				\\
  : wrong_type_argument (Qlistp, (c)))" 25020 . 25115)))
          ("VECSIZE" (spp-arg-list ("type") 27133 . 27139) . ((semantic-list "((sizeof (type)					  \\
			- OFFSETOF (struct Lisp_Vector, contents[0])      \\
                        + sizeof(Lisp_Object) - 1) /* round up */	  \\
		       / sizeof (Lisp_Object))" 27140 . 27321)))
          ("PSEUDOVECSIZE" (spp-arg-list ("type" "nonlispfield") 27536 . 27556) . ((semantic-list "((OFFSETOF(type, nonlispfield) - OFFSETOF(struct Lisp_Vector, contents[0])) \\
   / sizeof (Lisp_Object))" 27561 . 27665)))
          ("CHARTAB_SIZE_BITS_0" . ((number "6" 30503 . 30504)))
          ("CHAR_MODIFIER_MASK" . ((semantic-list "(CHAR_ALT | CHAR_SUPER | CHAR_HYPER  | CHAR_SHIFT | CHAR_CTL | CHAR_META)" 50265 . 50338)))
          ("MISCP" (spp-arg-list ("x") 53055 . 53058) . ((semantic-list "(XTYPE ((x)) == Lisp_Misc)" 53059 . 53085)))
          ("BOOLFWDP" (spp-arg-list ("x") 53587 . 53590) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Boolfwd)" 53591 . 53640)))
          ("WINDOWP" (spp-arg-list ("x") 54564 . 54567) . ((symbol "PSEUDOVECTORP" 54568 . 54581) (semantic-list "(x, PVEC_WINDOW)" 54582 . 54598)))
          ("IMAGEP" (spp-arg-list ("x") 55090 . 55093) . ((semantic-list "(CONSP (x) && EQ (XCAR (x), Qimage))" 55094 . 55130)))
          ("CHECK_VECTOR" (spp-arg-list ("x") 55837 . 55840) . ((symbol "CHECK_TYPE" 55845 . 55855) (semantic-list "(VECTORP (x), Qvectorp, x)" 55856 . 55882)))
          ("CHECK_BUFFER" (spp-arg-list ("x") 56186 . 56189) . ((symbol "CHECK_TYPE" 56194 . 56204) (semantic-list "(BUFFERP (x), Qbufferp, x)" 56205 . 56231)))
          ("CHECK_OVERLAY" (spp-arg-list ("x") 57767 . 57770) . ((symbol "CHECK_TYPE" 57775 . 57785) (semantic-list "(OVERLAYP (x), Qoverlayp, x)" 57786 . 57814)))
          ("DEFUN_ARGS_8" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)" 61237 . 61347)))
          ("FUNCTIONP" (spp-arg-list ("OBJ") 61409 . 61414) . ((semantic-list "((CONSP (OBJ) && EQ (XCAR (OBJ), Qlambda))		\\
      || (SYMBOLP (OBJ) && !NILP (Ffboundp (OBJ)))	\\
      || COMPILEDP (OBJ)				\\
      || SUBRP (OBJ))" 61426 . 61576)))
          ("ELSE_PENDING_SIGNALS" . 
              ((ELSE "else" 66946 . 66950) (IF "if" 66951 . 66953) (semantic-list "(pending_signals)" 66954 . 66971) (symbol "process_pending_signals" 66981 . 67004) (semantic-list "()" 67005 . 67007) (punctuation ";" 67007 . 67008)))
          ("QUIT" . 
              ((DO "do" 67117 . 67119) (semantic-list "{							\\
    if (!NILP (Vquit_flag) && NILP (Vinhibit_quit))	\\
      {							\\
        Lisp_Object flag = Vquit_flag;			\\
	Vquit_flag = Qnil;				\\
	if (EQ (Vthrow_on_input, flag))			\\
	  Fthrow (Vthrow_on_input, Qt);			\\
	Fsignal (Qquit, Qnil);				\\
      }							\\
    ELSE_PENDING_SIGNALS				\\
  }" 67120 . 67420) (WHILE "while" 67421 . 67426) (semantic-list "(0)" 67427 . 67430)))
          ("UPCASE_TABLE" . 
              ((symbol "current_buffer" 67874 . 67888) (punctuation "-" 67888 . 67889) (punctuation ">" 67889 . 67890) (symbol "upcase_table" 67890 . 67902)))
          ("NOCASEP" (spp-arg-list ("CH") 68315 . 68319) . ((semantic-list "(UPCASE1 (CH) == (CH))" 68320 . 68342)))
          ("LOWERCASEP" (spp-arg-list ("CH") 68393 . 68397) . ((semantic-list "(!UPPERCASEP (CH) && !NOCASEP(CH))" 68398 . 68432)))
          ("GCPRO5" (spp-arg-list ("varname1" "varname2" "varname3" "varname4" "varname5") 71099 . 71149) . ((semantic-list "(((void) gcpro5, (void) gcpro4, (void) gcpro3, (void) gcpro2, (void) gcpro1))" 71154 . 71231)))
          ("RETURN_UNGCPRO" (spp-arg-list ("expr") 76082 . 76088) . 
              ((DO "do" 76093 . 76095) (semantic-list "{						\\
      Lisp_Object ret_ungc_val;			\\
      ret_ungc_val = (expr);			\\
      UNGCPRO;					\\
      return ret_ungc_val;			\\
    }" 76107 . 76242) (WHILE "while" 76250 . 76255) (semantic-list "(0)" 76256 . 76259)))
          ("DIRECTORY_SEP" . ((string "'/'" 122653 . 122656)))
          ("IS_DIRECTORY_SEP" (spp-arg-list ("_c_") 122713 . 122718) . ((semantic-list "((_c_) == DIRECTORY_SEP)" 122719 . 122743)))
          ("LISP_INT_TAG" . ((symbol "Lisp_Int" 5753 . 5761)))
          ("VALBITS" . ((semantic-list "(BITS_PER_EMACS_INT - GCTYPEBITS)" 8157 . 8190)))
          ("XHASH" (spp-arg-list ("a") 11986 . 11989) . ((semantic-list "(a)" 11990 . 11993)))
          ("XMISCTYPE" (spp-arg-list ("a") 18698 . 18701) . ((semantic-list "(XMISCANY (a)->type)" 18704 . 18724)))
          ("XBOOLFWD" (spp-arg-list ("a") 18873 . 18876) . ((semantic-list "(eassert (BOOLFWDP (a)), &(XMISC(a)->u_boolfwd))" 18877 . 18925)))
          ("XSUBR" (spp-arg-list ("a") 19690 . 19693) . ((semantic-list "(eassert (SUBRP(a)),(struct Lisp_Subr *) XPNTR(a))" 19694 . 19744)))
          ("CHECK_STRING_OR_BUFFER" (spp-arg-list ("x") 22794 . 22797) . ((symbol "CHECK_TYPE" 22802 . 22812) (semantic-list "(STRINGP (x) || BUFFERP (x), Qbuffer_or_string_p, x)" 22813 . 22865)))
          ("XSETCAR" (spp-arg-list ("c" "n") 24492 . 24497) . ((semantic-list "(XCAR_AS_LVALUE(c) = (n))" 24498 . 24523)))
          ("CHARTAB_SIZE_BITS_1" . ((number "4" 30533 . 30534)))
          ("SYMBOL_INTERNED_IN_INITIAL_OBARRAY_P" (spp-arg-list ("sym") 35316 . 35321) . ((semantic-list "(XSYMBOL (sym)->interned == SYMBOL_INTERNED_IN_INITIAL_OBARRAY)" 35329 . 35392)))
          ("KEY_DESCRIPTION_SIZE" . ((semantic-list "((2 * 6) + 1 + (CHARACTERBITS / 3) + 1 + 1)" 50888 . 50931)))
          ("INTFWDP" (spp-arg-list ("x") 53518 . 53521) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Intfwd)" 53522 . 53570)))
          ("SOME_BUFFER_LOCAL_VALUEP" (spp-arg-list ("x") 53915 . 53918) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Some_Buffer_Local_Value)" 53919 . 53984)))
          ("KBOARD_OBJFWDP" (spp-arg-list ("x") 54007 . 54010) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Kboard_Objfwd)" 54011 . 54066)))
          ("FRAMEP" (spp-arg-list ("x") 55004 . 55007) . ((symbol "PSEUDOVECTORP" 55008 . 55021) (semantic-list "(x, PVEC_FRAME)" 55022 . 55037)))
          ("CHECK_VECTOR_OR_STRING" (spp-arg-list ("x") 55914 . 55917) . ((symbol "CHECK_TYPE" 55922 . 55932) (semantic-list "(VECTORP (x) || STRINGP (x), Qarrayp, x)" 55933 . 55973)))
          ("CHECK_LIVE_WINDOW" (spp-arg-list ("x") 56749 . 56752) . ((symbol "CHECK_TYPE" 56757 . 56767) (semantic-list "(WINDOWP (x) && !NILP (XWINDOW (x)->buffer), Qwindow_live_p, x)" 56768 . 56831)))
          ("CHECK_NATNUM" (spp-arg-list ("x") 57053 . 57056) . ((symbol "CHECK_TYPE" 57061 . 57071) (semantic-list "(NATNUMP (x), Qwholenump, x)" 57072 . 57100)))
          ("DEFVAR_BOOL" (spp-arg-list ("lname" "vname" "doc") 62294 . 62313) . ((symbol "defvar_bool" 62314 . 62325) (semantic-list "(lname, vname)" 62326 . 62340)))
          ("SPECPDL_INDEX" (spp-arg-list nil 63879 . 63881) . ((semantic-list "(specpdl_ptr - specpdl)" 63882 . 63905)))
          ("GC_MARK_STACK" . ((symbol "GC_USE_GCPROS_AS_BEFORE" 70578 . 70601)))
          ("GCPRO6" (spp-arg-list ("varname1" "varname2" "varname3" "varname4" "varname5" "varname6") 71246 . 71306) . ((semantic-list "(((void) gcpro6, (void) gcpro5, (void) gcpro4, (void) gcpro3, (void) gcpro2, (void) gcpro1))" 71311 . 71403)))
          ("UNGCPRO" . ((semantic-list "((void) 0)" 71420 . 71430)))
          ("EXFUN" (spp-arg-list ("fnname" "maxargs") 76623 . 76640) . 
              ((EXTERN "extern" 76645 . 76651) (symbol "Lisp_Object" 76652 . 76663) (symbol "fnname" 76664 . 76670) (spp-symbol-merge ((symbol "DEFUN_ARGS_" 76671 . 76682) (symbol "maxargs" 76686 . 76693)) 76671 . 76693)))
          ("LOADHIST_ATTACH" (spp-arg-list ("x") 97574 . 97577) . 
              ((IF "if" 97581 . 97583) (semantic-list "(initialized)" 97584 . 97597) (symbol "Vcurrent_load_list" 97598 . 97616) (punctuation "=" 97617 . 97618) (symbol "Fcons" 97619 . 97624) (semantic-list "(x, Vcurrent_load_list)" 97625 . 97648)))
          ("min" (spp-arg-list ("a" "b") 124010 . 124016) . ((semantic-list "((a) < (b) ? (a) : (b))" 124017 . 124040)))
          ("EMACS_UINT" . ((UNSIGNED "unsigned" 1636 . 1644) (INT "int" 1645 . 1648)))
          ("LISP_STRING_TAG" . ((number "4" 5824 . 5825)))
          ("XSTRING" (spp-arg-list ("a") 18344 . 18347) . ((semantic-list "(eassert (STRINGP(a)),(struct Lisp_String *) XPNTR(a))" 18348 . 18402)))
          ("XSYMBOL" (spp-arg-list ("a") 18418 . 18421) . ((semantic-list "(eassert (SYMBOLP(a)),(struct Lisp_Symbol *) XPNTR(a))" 18422 . 18476)))
          ("XFLOAT" (spp-arg-list ("a") 18491 . 18494) . ((semantic-list "(eassert (FLOATP(a)),(struct Lisp_Float *) XPNTR(a))" 18495 . 18547)))
          ("XMARKER" (spp-arg-list ("a") 18740 . 18743) . ((semantic-list "(eassert (MARKERP (a)), &(XMISC(a)->u_marker))" 18744 . 18790)))
          ("XPROCESS" (spp-arg-list ("a") 19472 . 19475) . ((semantic-list "(eassert (PROCESSP(a)),(struct Lisp_Process *) XPNTR(a))" 19476 . 19532)))
          ("XTERMINAL" (spp-arg-list ("a") 19619 . 19622) . ((semantic-list "(eassert (TERMINALP(a)),(struct terminal *) XPNTR(a))" 19623 . 19676)))
          ("XSETFLOAT" (spp-arg-list ("a" "b") 20415 . 20421) . ((symbol "XSET" 20422 . 20426) (semantic-list "(a, Lisp_Float, b)" 20427 . 20445)))
          ("CAR" (spp-arg-list ("c") 24890 . 24893) . ((semantic-list "(CONSP ((c)) ? XCAR ((c))			\\
  : NILP ((c)) ? Qnil				\\
  : wrong_type_argument (Qlistp, (c)))" 24901 . 24996)))
          ("STRING_SET_UNIBYTE" (spp-arg-list ("STR") 25839 . 25844) . 
              ((DO "do" 25850 . 25852) (semantic-list "{ if (EQ (STR, empty_multibyte_string))  \\
      (STR) = empty_unibyte_string;  \\
    else XSTRING (STR)->size_byte = -1; }" 25853 . 25976) (WHILE "while" 25977 . 25982) (semantic-list "(0)" 25983 . 25986)))
          ("STRING_SET_MULTIBYTE" (spp-arg-list ("STR") 26118 . 26123) . 
              ((DO "do" 26129 . 26131) (semantic-list "{ if (EQ (STR, empty_unibyte_string))  \\
      (STR) = empty_multibyte_string;  \\
    else XSTRING (STR)->size_byte = XSTRING (STR)->size; }" 26132 . 26272) (WHILE "while" 26273 . 26278) (semantic-list "(0)" 26279 . 26282)))
          ("CHARTAB_SIZE_BITS_2" . ((number "5" 30563 . 30564)))
          ("SET_SYMBOL_VALUE" (spp-arg-list ("sym" "val") 35963 . 35973) . 
              ((DO "do" 35984 . 35986) (semantic-list "{							\\
       if (XSYMBOL (sym)->indirect_variable)			\\
	 indirect_variable (XSYMBOL (sym))->value = (val);	\\
       else							\\
	 XSYMBOL (sym)->value = (val);				\\
     }" 35987 . 36163) (WHILE "while" 36164 . 36169) (semantic-list "(0)" 36170 . 36173)))
          ("XHASH_TABLE" (spp-arg-list ("OBJ") 38782 . 38787) . ((semantic-list "((struct Lisp_Hash_Table *) XPNTR (OBJ))" 38795 . 38835)))
          ("HASH_NEXT" (spp-arg-list ("H" "IDX") 39435 . 39443) . ((symbol "AREF" 39445 . 39449) (semantic-list "((H)->next, (IDX))" 39450 . 39468)))
          ("HASH_HASH" (spp-arg-list ("H" "IDX") 39558 . 39566) . ((symbol "AREF" 39568 . 39572) (semantic-list "((H)->hash, (IDX))" 39573 . 39591)))
          ("DEFAULT_HASH_SIZE" . ((number "65" 39965 . 39967)))
          ("FLOATP" (spp-arg-list ("x") 53249 . 53252) . ((semantic-list "(XTYPE ((x)) == Lisp_Float)" 53253 . 53280)))
          ("BUFFER_OBJFWDP" (spp-arg-list ("x") 53731 . 53734) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Buffer_Objfwd)" 53735 . 53790)))
          ("CHECK_LIST_END" (spp-arg-list ("x" "y") 55411 . 55417) . ((symbol "CHECK_TYPE" 55422 . 55432) (semantic-list "(NILP (x), Qlistp, y)" 55433 . 55454)))
          ("CHECK_NUMBER_CDR" (spp-arg-list ("x") 58130 . 58133) . 
              ((DO "do" 58138 . 58140) (semantic-list "{					\\
    Lisp_Object tmp = XCDR (x);		\\
    CHECK_NUMBER (tmp);			\\
    XSETCDR ((x), tmp);			\\
  }" 58141 . 58243) (WHILE "while" 58244 . 58249) (semantic-list "(0)" 58250 . 58253)))
          ("DEFVAR_LISP" (spp-arg-list ("lname" "vname" "doc") 62150 . 62169) . ((symbol "defvar_lisp" 62170 . 62181) (semantic-list "(lname, vname)" 62182 . 62196)))
          ("DEFVAR_INT" (spp-arg-list ("lname" "vname" "doc") 62359 . 62378) . ((symbol "defvar_int" 62379 . 62389) (semantic-list "(lname, vname)" 62390 . 62404)))
          ("QUITP" . ((semantic-list "(!NILP (Vquit_flag) && NILP (Vinhibit_quit))" 67485 . 67529)))
          ("UPPERCASEP" (spp-arg-list ("CH") 68221 . 68225) . ((semantic-list "(DOWNCASE (CH) != (CH))" 68226 . 68249)))
          ("LIST_END_P" (spp-arg-list ("list" "obj") 123462 . 123473) . ((semantic-list "(NILP (obj)						\\
   ? 1							\\
   : (CONSP (obj)					\\
      ? 0						\\
      : (wrong_type_argument (Qlistp, (list))), 1))" 123481 . 123607)))
          ("LISP_MAKE_RVALUE" (spp-arg-list ("o") 9631 . 9634) . ((semantic-list "(0+(o))" 9635 . 9642)))
          ("make_number" (spp-arg-list ("N") 12301 . 12304) . ((semantic-list "(((EMACS_INT) (N)) << (GCTYPEBITS - 1))" 12305 . 12344)))
          ("MOST_POSITIVE_FIXNUM" . ((semantic-list "(((EMACS_INT) 1 << VALBITS) - 1)" 17367 . 17399)))
          ("FIXNUM_OVERFLOW_P" (spp-arg-list ("i") 18042 . 18045) . ((semantic-list "((i) > MOST_POSITIVE_FIXNUM \\
   || ((i) < 0 && (i) < MOST_NEGATIVE_FIXNUM))" 18050 . 18126)))
          ("XKBOARD_OBJFWD" (spp-arg-list ("a") 19358 . 19361) . ((semantic-list "(eassert (KBOARD_OBJFWDP (a)), &(XMISC(a)->u_kboard_objfwd))" 19366 . 19426)))
          ("XSETWINDOW" (spp-arg-list ("a" "b") 21051 . 21057) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_WINDOW))" 21058 . 21096)))
          ("SDATA" (spp-arg-list ("string") 22048 . 22056) . ((semantic-list "(XSTRING (string)->data + 0)" 22058 . 22086)))
          ("XSETCARFASTINT" (spp-arg-list ("c" "n") 24707 . 24712) . ((symbol "XSETFASTINT" 24714 . 24725) (semantic-list "(XCAR_AS_LVALUE(c),(n))" 24725 . 24748)))
          ("STRING_BYTES" (spp-arg-list ("STR") 25668 . 25673) . ((semantic-list "((STR)->size_byte < 0 ? (STR)->size : (STR)->size_byte)" 25679 . 25734)))
          ("CHAR_TABLE_REF" (spp-arg-list ("CT" "IDX") 29719 . 29728) . ((semantic-list "(ASCII_CHAR_P (IDX) ? CHAR_TABLE_REF_ASCII ((CT), (IDX))	\\
   : char_table_ref ((CT), (IDX)))" 29737 . 29830)))
          ("CHAR_TABLE_SET" (spp-arg-list ("CT" "IDX" "VAL") 30249 . 30263) . ((semantic-list "(((IDX) >= 0 && ASCII_CHAR_P (IDX)					\\
    && SUB_CHAR_TABLE_P (XCHAR_TABLE (CT)->ascii))			\\
   ? XSUB_CHAR_TABLE (XCHAR_TABLE (CT)->ascii)->contents[IDX] = VAL	\\
   : char_table_set (CT, IDX, VAL))" 30272 . 30473)))
          ("CHARTAB_SIZE_BITS_3" . ((number "7" 30593 . 30594)))
          ("SYMBOL_CONSTANT_P" (spp-arg-list ("sym") 35618 . 35623) . 
              ((symbol "XSYMBOL" 35626 . 35633) (semantic-list "(sym)" 35634 . 35639) (punctuation "-" 35639 . 35640) (punctuation ">" 35640 . 35641) (symbol "constant" 35641 . 35649)))
          ("CHECK_HASH_TABLE" (spp-arg-list ("x") 39015 . 39018) . ((symbol "CHECK_TYPE" 39023 . 39033) (semantic-list "(HASH_TABLE_P (x), Qhash_table_p, x)" 39034 . 39070)))
          ("COMPILED_INTERACTIVE" . ((number "5" 49777 . 49778)))
          ("CHARACTERBITS" . ((number "22" 50446 . 50448)))
          ("SUB_CHAR_TABLE_P" (spp-arg-list ("x") 54886 . 54889) . ((symbol "PSEUDOVECTORP" 54890 . 54903) (semantic-list "(x, PVEC_SUB_CHAR_TABLE)" 54904 . 54928)))
          ("CHECK_WINDOW_CONFIGURATION" (spp-arg-list ("x") 56334 . 56337) . ((symbol "CHECK_TYPE" 56342 . 56352) (semantic-list "(WINDOW_CONFIGURATIONP (x), Qwindow_configuration_p, x)" 56353 . 56408)))
          ("SWITCH_ENUM_CAST" (spp-arg-list ("x") 122990 . 122993) . ((semantic-list "(x)" 122994 . 122997)))
          ("SAFE_FREE" (spp-arg-list nil 126222 . 126224) . 
              ((DO "do" 126231 . 126233) (semantic-list "{					\\
    if (sa_must_free) {			\\
      sa_must_free = 0;			\\
      unbind_to (sa_count, Qnil);	\\
    }					\\
  }" 126234 . 126349) (WHILE "while" 126350 . 126355) (semantic-list "(0)" 126356 . 126359)))
          ("USE_LSB_TAG")
          ("USE_2_TAGS_FOR_INTS")
          ("XUINT" (spp-arg-list ("a") 12236 . 12239) . ((semantic-list "(((EMACS_UINT) (a)) >> (GCTYPEBITS - 1))" 12240 . 12280)))
          ("INTMASK" . ((semantic-list "((((EMACS_INT) 1) << (VALBITS + 1)) - 1)" 17526 . 17566)))
          ("XSAVE_VALUE" (spp-arg-list ("a") 19080 . 19083) . ((semantic-list "(eassert (SAVE_VALUEP (a)), &(XMISC(a)->u_save_value))" 19084 . 19138)))
          ("XSETBOOL_VECTOR" (spp-arg-list ("a" "b") 21452 . 21458) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_BOOL_VECTOR))" 21459 . 21502)))
          ("HASH_TABLE_P" (spp-arg-list ("OBJ") 38946 . 38951) . ((symbol "PSEUDOVECTORP" 38953 . 38966) (semantic-list "(OBJ, PVEC_HASH_TABLE)" 38967 . 38989)))
          ("XFLOAT_INIT" (spp-arg-list ("f" "n") 49263 . 49268) . ((semantic-list "(XFLOAT (f)->u.data = (n))" 49269 . 49295)))
          ("CHAR_ALT" . ((semantic-list "(0x0400000)" 50066 . 50077)))
          ("CHAR_HYPER" . ((semantic-list "(0x1000000)" 50128 . 50139)))
          ("GLYPH_CODE_CHAR_VALID_P" (spp-arg-list ("gc") 52181 . 52185) . ((symbol "CHAR_VALID_P" 52186 . 52198) (semantic-list "(GLYPH_CODE_CHAR (gc), 1)" 52199 . 52224)))
          ("NILP" (spp-arg-list ("x") 52824 . 52827) . ((symbol "EQ" 52829 . 52831) (semantic-list "(x, Qnil)" 52832 . 52841)))
          ("CHECK_LIST_CONS" (spp-arg-list ("x" "y") 55343 . 55349) . ((symbol "CHECK_TYPE" 55354 . 55364) (semantic-list "(CONSP (x), Qlistp, y)" 55365 . 55387)))
          ("CHECK_NUMBER_CAR" (spp-arg-list ("x") 57981 . 57984) . 
              ((DO "do" 57989 . 57991) (semantic-list "{					\\
    Lisp_Object tmp = XCAR (x);		\\
    CHECK_NUMBER (tmp);			\\
    XSETCAR ((x), tmp);			\\
  }" 57992 . 58094) (WHILE "while" 58095 . 58100) (semantic-list "(0)" 58101 . 58104)))
          ("UNEVALLED" . ((punctuation "-" 61753 . 61754) (number "1" 61754 . 61755)))
          ("GC_USE_GCPROS_CHECK_ZOMBIES" . ((number "3" 70531 . 70532)))
          ("MAX_ALLOCA" . 
              ((number "16" 125594 . 125596) (punctuation "*" 125596 . 125597) (number "1024" 125597 . 125601)))
          ("PSEUDOVECTOR_FLAG" . ((semantic-list "((ARRAY_MARK_FLAG >> 1))" 9964 . 9988)))
          ("BOOL_VECTOR_BITS_PER_CHAR" . ((number "8" 11663 . 11664)))
          ("XSET" (spp-arg-list ("var" "type" "ptr") 12532 . 12548) . ((semantic-list "(eassert (XTYPE (ptr) == 0), /* Check alignment.  */	\\
     (var) = ((EMACS_INT) (type)) | ((EMACS_INT) (ptr)))" 12559 . 12670)))
          ("XSETSUB_CHAR_TABLE" (spp-arg-list ("a" "b") 21529 . 21535) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_SUB_CHAR_TABLE))" 21536 . 21582)))
          ("CHAR_TABLE_REF_ASCII" (spp-arg-list ("CT" "IDX") 29165 . 29174) . ((semantic-list "(! NILP (XCHAR_TABLE (CT)->ascii)					  \\
   ? (! SUB_CHAR_TABLE_P (XCHAR_TABLE (CT)->ascii)			  \\
      ? XCHAR_TABLE (CT)->ascii						  \\
      : ! NILP (XSUB_CHAR_TABLE (XCHAR_TABLE (CT)->ascii)->contents[IDX]) \\
      ? XSUB_CHAR_TABLE (XCHAR_TABLE (CT)->ascii)->contents[IDX]	  \\
      : char_table_ref ((CT), (IDX)))					  \\
   :  char_table_ref ((CT), (IDX)))" 29185 . 29551)))
          ("SYMBOL_VALUE" (spp-arg-list ("sym") 35746 . 35751) . ((semantic-list "(XSYMBOL (sym)->indirect_variable		\\
    ? indirect_variable (XSYMBOL (sym))->value	\\
    : XSYMBOL (sym)->value)" 35759 . 35872)))
          ("HASH_KEY" (spp-arg-list ("H" "IDX") 39148 . 39156) . ((symbol "AREF" 39159 . 39163) (semantic-list "((H)->key_and_value, 2 * (IDX))" 39164 . 39195)))
          ("_UCHAR_T")
          ("GLYPH_MODE_LINE_FACE" . ((number "1" 52782 . 52783)))
          ("CHAR_TABLE_P" (spp-arg-list ("x") 54823 . 54826) . ((symbol "PSEUDOVECTORP" 54827 . 54840) (semantic-list "(x, PVEC_CHAR_TABLE)" 54841 . 54861)))
          ("CHECK_STRING_CAR" (spp-arg-list ("x") 55547 . 55550) . ((symbol "CHECK_TYPE" 55555 . 55565) (semantic-list "(STRINGP (XCAR (x)), Qstringp, XCAR (x))" 55566 . 55606)))
          ("CHECK_NUMBER" (spp-arg-list ("x") 56984 . 56987) . ((symbol "CHECK_TYPE" 56992 . 57002) (semantic-list "(INTEGERP (x), Qintegerp, x)" 57003 . 57031)))
          ("PNTR_COMPARISON_TYPE" . ((symbol "EMACS_UINT" 58658 . 58668)))
          ("DEFUN_ARGS_MANY" . ((semantic-list "(int, Lisp_Object *)" 60588 . 60608)))
          ("DEFUN_ARGS_0" . ((semantic-list "(void)" 60673 . 60679)))
          ("DEFVAR_KBOARD" (spp-arg-list ("lname" "vname" "doc") 62427 . 62446) . ((symbol "defvar_kboard" 62450 . 62463) (semantic-list "(lname, \\
		(int)((char *)(&current_kboard->vname) \\
		      - (char *)current_kboard))" 62464 . 62551)))
          ("ALLOCATE_PSEUDOVECTOR" (spp-arg-list ("typ" "field" "tag") 93770 . 93785) . ((semantic-list "((typ*)								\\
   allocate_pseudovector						\\
       (VECSIZE (typ), PSEUDOVECSIZE (typ, field), tag))" 93793 . 93898)))
          ("IS_DAEMON" . ((semantic-list "(daemon_pipe[1] != 0)" 114538 . 114559)))
          ("TYPEMASK" . ((semantic-list "((((EMACS_INT) 1) << GCTYPEBITS) - 1)" 12032 . 12069)))
          ("XSETFASTINT" (spp-arg-list ("a" "b") 16210 . 16216) . ((semantic-list "(XSETINT (a, b))" 16217 . 16233)))
          ("XBUFFER_LOCAL_VALUE" (spp-arg-list ("a") 19257 . 19260) . ((semantic-list "(eassert (BUFFER_LOCAL_VALUEP (a)), &(XMISC(a)->u_buffer_local_value))" 19265 . 19335)))
          ("XWINDOW" (spp-arg-list ("a") 19548 . 19551) . ((semantic-list "(eassert (WINDOWP(a)),(struct window *) XPNTR(a))" 19552 . 19601)))
          ("XSUB_CHAR_TABLE" (spp-arg-list ("a") 19926 . 19929) . ((semantic-list "(eassert (SUB_CHAR_TABLE_P (a)), (struct Lisp_Sub_Char_Table *) XPNTR(a))" 19930 . 20003)))
          ("XSETCONS" (spp-arg-list ("a" "b") 20214 . 20220) . ((symbol "XSET" 20221 . 20225) (semantic-list "(a, Lisp_Cons, b)" 20226 . 20243)))
          ("XSETVECTOR" (spp-arg-list ("a" "b") 20262 . 20268) . ((symbol "XSET" 20269 . 20273) (semantic-list "(a, Lisp_Vectorlike, b)" 20274 . 20297)))
          ("XSETPVECTYPE" (spp-arg-list ("v" "code") 20639 . 20647) . ((semantic-list "((v)->size |= PSEUDOVECTOR_FLAG | (code))" 20648 . 20689)))
          ("XSETBUFFER" (spp-arg-list ("a" "b") 21311 . 21317) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_BUFFER))" 21318 . 21356)))
          ("SREF" (spp-arg-list ("string" "index") 22099 . 22114) . ((semantic-list "(SDATA (string)[index] + 0)" 22115 . 22142)))
          ("SSET" (spp-arg-list ("string" "index" "new") 22155 . 22175) . ((semantic-list "(SDATA (string)[index] = (new))" 22176 . 22207)))
          ("XSETCDRFASTINT" (spp-arg-list ("c" "n") 24771 . 24776) . ((symbol "XSETFASTINT" 24778 . 24789) (semantic-list "(XCDR_AS_LVALUE(c),(n))" 24789 . 24812)))
          ("STRING_INTERVALS" (spp-arg-list ("STR") 26336 . 26341) . ((semantic-list "(XSTRING (STR)->intervals + 0)" 26343 . 26373)))
          ("CHAR_TABLE_EXTRA_SLOTS" (spp-arg-list ("CT") 28555 . 28559) . ((semantic-list "(((CT)->size & PSEUDOVECTOR_SIZE_MASK) - CHAR_TABLE_STANDARD_SLOTS)" 28564 . 28631)))
          ("CHAR_CTL" . ((semantic-list "(0x4000000)" 50190 . 50201)))
          ("GLYPH_CODE_FACE" (spp-arg-list ("gc") 51962 . 51966) . ((semantic-list "(CONSP (gc) ? XINT (XCDR (gc)) : INTEGERP (gc) ? (XINT (gc) >> CHARACTERBITS) : DEFAULT_FACE_ID)" 51971 . 52067)))
          ("SET_GLYPH_FROM_GLYPH_CODE" (spp-arg-list ("glyph" "gc") 52416 . 52427) . 
              ((DO "do" 52435 . 52437) (semantic-list "{									\\
      if (CONSP (gc))							\\
	SET_GLYPH (glyph, XINT (XCAR (gc)), XINT (XCDR (gc)));		\\
      else								\\
	SET_GLYPH (glyph, (XINT (gc) & ((1 << CHARACTERBITS)-1)),	\\
		   (XINT (gc) >> CHARACTERBITS));			\\
    }" 52452 . 52679) (WHILE "while" 52692 . 52697) (semantic-list "(0)" 52698 . 52701)))
          ("NATNUMP" (spp-arg-list ("x") 52906 . 52909) . ((semantic-list "(INTEGERP (x) && XINT (x) >= 0)" 52910 . 52941)))
          ("OBJFWDP" (spp-arg-list ("x") 53656 . 53659) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Objfwd)" 53660 . 53708)))
          ("COMPILEDP" (spp-arg-list ("x") 54716 . 54719) . ((symbol "PSEUDOVECTORP" 54720 . 54733) (semantic-list "(x, PVEC_COMPILED)" 54734 . 54752)))
          ("CHECK_STRING" (spp-arg-list ("x") 55476 . 55479) . ((symbol "CHECK_TYPE" 55484 . 55494) (semantic-list "(STRINGP (x), Qstringp, x)" 55495 . 55521)))
          ("CHECK_SYMBOL" (spp-arg-list ("x") 55689 . 55692) . ((symbol "CHECK_TYPE" 55697 . 55707) (semantic-list "(SYMBOLP (x), Qsymbolp, x)" 55708 . 55734)))
          ("CHECK_MARKER" (spp-arg-list ("x") 57122 . 57125) . ((symbol "CHECK_TYPE" 57130 . 57140) (semantic-list "(MARKERP (x), Qmarkerp, x)" 57141 . 57167)))
          ("CHECK_NUMBER_OR_FLOAT" (spp-arg-list ("x") 57484 . 57487) . ((symbol "CHECK_TYPE" 57492 . 57502) (semantic-list "(FLOATP (x) || INTEGERP (x), Qnumberp, x)" 57503 . 57544)))
          ("DEFUN_ARGS_1" . ((semantic-list "(Lisp_Object)" 60701 . 60714)))
          ("MANY" . ((punctuation "-" 61732 . 61733) (number "2" 61733 . 61734)))
          ("GC_MAKE_GCPROS_NOOPS" . ((number "1" 70456 . 70457)))
          ("GC_MARK_STACK_CHECK_GCPROS" . ((number "2" 70493 . 70494)))
          ("IS_DEVICE_SEP" (spp-arg-list ("_c_") 122813 . 122818) . ((number "0" 122819 . 122820)))
          ("SAFE_ALLOCA" (spp-arg-list ("buf" "type" "size") 125804 . 125821) . 
              ((DO "do" 125830 . 125832) (semantic-list "{							  \\
    if ((size) < MAX_ALLOCA)				  \\
      buf = (type) alloca (size);			  \\
    else						  \\
      {							  \\
	buf = (type) xmalloc (size);			  \\
	sa_must_free++;					  \\
	record_unwind_protect (safe_alloca_unwind,	  \\
			       make_save_value (buf, 0)); \\
      }							  \\
  }" 125833 . 126126) (WHILE "while" 126127 . 126132) (semantic-list "(0)" 126133 . 126136)))
          ("EMACS_LISP_H")
          ("P_" (spp-arg-list ("proto") 1018 . 1025) . ((symbol "proto" 1026 . 1031)))
          ("BITS_PER_EMACS_INT" . ((symbol "BITS_PER_INT" 1578 . 1590)))
          ("CHECK" (spp-arg-list ("check" "msg") 2742 . 2753) . ((semantic-list "((check),0)" 2754 . 2765)))
          ("XPNTR" (spp-arg-list ("a") 12685 . 12688) . ((semantic-list "((EMACS_INT) ((a) & ~TYPEMASK))" 12689 . 12720)))
          ("XOVERLAY" (spp-arg-list ("a") 19008 . 19011) . ((semantic-list "(eassert (OVERLAYP (a)), &(XMISC(a)->u_overlay))" 19012 . 19060)))
          ("AREF" (spp-arg-list ("ARRAY" "IDX") 21653 . 21665) . 
              ((symbol "XVECTOR" 21666 . 21673) (semantic-list "((ARRAY))" 21674 . 21683) (punctuation "-" 21683 . 21684) (punctuation ">" 21684 . 21685) (symbol "contents" 21685 . 21693) (semantic-list "[IDX]" 21693 . 21698)))
          ("ASET" (spp-arg-list ("ARRAY" "IDX" "VAL") 21836 . 21853) . ((semantic-list "(eassert ((IDX) == (IDX)),				\\
   eassert ((IDX) >= 0 && (IDX) < ASIZE (ARRAY)),	\\
   AREF ((ARRAY), (IDX)) = (VAL))" 21858 . 21975)))
          ("STRING_SET_INTERVALS" (spp-arg-list ("STR" "INT") 26431 . 26441) . ((semantic-list "(XSTRING (STR)->intervals = (INT))" 26442 . 26476)))
          ("OFFSETOF" (spp-arg-list ("type" "field") 26803 . 26815) . ((semantic-list "((int)((char*)&((type*)0)->field - (char*)0))" 26820 . 26865)))
          ("HASH_TABLE_SIZE" (spp-arg-list ("H") 39853 . 39856) . 
              ((symbol "XVECTOR" 39857 . 39864) (semantic-list "((H)->next)" 39865 . 39876) (punctuation "-" 39876 . 39877) (punctuation ">" 39877 . 39878) (symbol "size" 39878 . 39882)))
          ("SET_GLYPH_FACE" (spp-arg-list ("glyph" "face") 51343 . 51356) . ((semantic-list "((glyph).face_id = (face))" 51357 . 51383)))
          ("GLYPH_CODE_CHAR" (spp-arg-list ("gc") 51836 . 51840) . ((semantic-list "(CONSP (gc) ? XINT (XCAR (gc)) : INTEGERP (gc) ? (XINT (gc) & ((1 << CHARACTERBITS)-1)) : 0)" 51845 . 51937)))
          ("SYMBOLP" (spp-arg-list ("x") 53009 . 53012) . ((semantic-list "(XTYPE ((x)) == Lisp_Symbol)" 53013 . 53041)))
          ("STRINGP" (spp-arg-list ("x") 53157 . 53160) . ((semantic-list "(XTYPE ((x)) == Lisp_String)" 53161 . 53189)))
          ("MARKERP" (spp-arg-list ("x") 53450 . 53453) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Marker)" 53454 . 53502)))
          ("BUFFER_LOCAL_VALUEP" (spp-arg-list ("x") 53818 . 53821) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Buffer_Local_Value)" 53822 . 53882)))
          ("DEFUN_ARGS_2" . ((semantic-list "(Lisp_Object, Lisp_Object)" 60736 . 60762)))
          ("eabs" (spp-arg-list ("x") 124268 . 124271) . ((semantic-list "((x) < 0 ? -(x) : (x))" 124280 . 124302)))
          ("PSEUDOVECTOR_SIZE_MASK" . ((number "0x1ff" 11478 . 11483)))
          ("XSETMISC" (spp-arg-list ("a" "b") 20483 . 20489) . ((symbol "XSET" 20490 . 20494) (semantic-list "(a, Lisp_Misc, b)" 20495 . 20512)))
          ("XSETPSEUDOVECTOR" (spp-arg-list ("a" "b" "code") 20714 . 20726) . ((semantic-list "(XSETVECTOR (a, b),							\\
   eassert ((XVECTOR (a)->size & (PSEUDOVECTOR_FLAG | PVEC_TYPE_MASK))	\\
	    == (PSEUDOVECTOR_FLAG | (code))))" 20731 . 20870)))
          ("XSETPROCESS" (spp-arg-list ("a" "b") 20986 . 20992) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_PROCESS))" 20993 . 21032)))
          ("STRING_COPYIN" (spp-arg-list ("string" "index" "new" "count") 22431 . 22458) . ((symbol "bcopy" 22465 . 22470) (semantic-list "(new, SDATA (string) + index, count)" 22471 . 22507)))
          ("CHECK_TYPE" (spp-arg-list ("ok" "Qxxxp" "x") 22550 . 22564) . 
              ((DO "do" 22569 . 22571) (semantic-list "{ if (!(ok)) wrong_type_argument (Qxxxp, (x)); }" 22572 . 22620) (WHILE "while" 22621 . 22626) (semantic-list "(0)" 22627 . 22630)))
          ("CDR_SAFE" (spp-arg-list ("c") 25260 . 25263) . ((semantic-list "(CONSP ((c)) ? XCDR ((c)) : Qnil)" 25271 . 25304)))
          ("COMPILED_BYTECODE" . ((number "1" 49656 . 49657)))
          ("COMPILED_DOC_STRING" . ((number "4" 49746 . 49747)))
          ("CHAR_SUPER" . ((semantic-list "(0x0800000)" 50097 . 50108)))
          ("SET_GLYPH_CHAR" (spp-arg-list ("glyph" "char") 51285 . 51298) . ((semantic-list "((glyph).ch = (char))" 51299 . 51320)))
          ("SET_GLYPH" (spp-arg-list ("glyph" "char" "face") 51401 . 51420) . ((semantic-list "((glyph).ch = (char), (glyph).face_id = (face))" 51421 . 51468)))
          ("PROCESSP" (spp-arg-list ("x") 54513 . 54516) . ((symbol "PSEUDOVECTORP" 54517 . 54530) (semantic-list "(x, PVEC_PROCESS)" 54531 . 54548)))
          ("SUBRP" (spp-arg-list ("x") 54666 . 54669) . ((symbol "PSEUDOVECTORP" 54670 . 54683) (semantic-list "(x, PVEC_SUBR)" 54684 . 54698)))
          ("CHECK_PROCESS" (spp-arg-list ("x") 56854 . 56857) . ((symbol "CHECK_TYPE" 56862 . 56872) (semantic-list "(PROCESSP (x), Qprocessp, x)" 56873 . 56901)))
          ("CHECK_NUMBER_OR_FLOAT_COERCE_MARKER" (spp-arg-list ("x") 57589 . 57592) . 
              ((DO "do" 57597 . 57599) (semantic-list "{ if (MARKERP (x)) XSETFASTINT (x, marker_position (x));	\\
    else CHECK_TYPE (INTEGERP (x) || FLOATP (x), Qnumber_or_marker_p, x); }" 57600 . 57734) (WHILE "while" 57735 . 57740) (semantic-list "(0)" 57741 . 57744)))
          ("DEFUN_ARGS_3" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object)" 60784 . 60823)))
          ("DEFVAR_LISP_NOPRO" (spp-arg-list ("lname" "vname" "doc") 62222 . 62241) . ((symbol "defvar_lisp_nopro" 62242 . 62259) (semantic-list "(lname, vname)" 62260 . 62274)))
          ("UPCASE" (spp-arg-list ("CH") 68518 . 68522) . ((semantic-list "(!UPPERCASEP (CH) ? UPCASE1 (CH) : (CH))" 68523 . 68563)))
          ("IS_ANY_SEP" (spp-arg-list ("_c_") 122927 . 122932) . ((semantic-list "(IS_DIRECTORY_SEP (_c_))" 122933 . 122957)))
          ("eassert" (spp-arg-list ("X") 2895 . 2898) . ((semantic-list "(void)" 2899 . 2905) (number "0" 2906 . 2907)))
          ("ARRAY_MARK_FLAG" . ((semantic-list "((EMACS_UINT) 1 << (BITS_PER_EMACS_INT - 1))" 9782 . 9826)))
          ("XINT" (spp-arg-list ("a") 12178 . 12181) . ((semantic-list "(((EMACS_INT) (a)) >> (GCTYPEBITS - 1))" 12182 . 12221)))
          ("EQ" (spp-arg-list ("x" "y") 16252 . 16258) . ((semantic-list "(XHASH (x) == XHASH (y))" 16259 . 16283)))
          ("XVECTOR" (spp-arg-list ("a") 18266 . 18269) . ((semantic-list "(eassert (VECTORLIKEP(a)),(struct Lisp_Vector *) XPNTR(a))" 18270 . 18328)))
          ("XBUFFER" (spp-arg-list ("a") 19760 . 19763) . ((semantic-list "(eassert (BUFFERP(a)),(struct buffer *) XPNTR(a))" 19764 . 19813)))
          ("XSETSUBR" (spp-arg-list ("a" "b") 21181 . 21187) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_SUBR))" 21188 . 21224)))
          ("XSETCHAR_TABLE" (spp-arg-list ("a" "b") 21379 . 21385) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_CHAR_TABLE))" 21386 . 21428)))
          ("XCAR_AS_LVALUE" (spp-arg-list ("c") 23966 . 23969) . ((semantic-list "(XCONS ((c))->car)" 23970 . 23988)))
          ("SYMBOL_NAME" (spp-arg-list ("sym") 35009 . 35014) . ((symbol "LISP_MAKE_RVALUE" 35023 . 35039) (semantic-list "(XSYMBOL (sym)->xname)" 35040 . 35062)))
          ("HASH_VALUE" (spp-arg-list ("H" "IDX") 39277 . 39285) . ((symbol "AREF" 39286 . 39290) (semantic-list "((H)->key_and_value, 2 * (IDX) + 1)" 39291 . 39326)))
          ("DEFAULT_REHASH_SIZE" . ((number "1.5" 40273 . 40276)))
          ("XFLOAT_DATA" (spp-arg-list ("f") 49120 . 49123) . ((semantic-list "(XFLOAT (f)->u.data + 0)" 49124 . 49148)))
          ("CHAR_META" . ((semantic-list "(0x8000000)" 50221 . 50232)))
          ("GLYPH_CODE_P" (spp-arg-list ("gc") 52246 . 52250) . ((semantic-list "((CONSP (gc) && INTEGERP (XCAR (gc)) && INTEGERP (XCDR (gc))) || INTEGERP (gc))" 52251 . 52330)))
          ("INTEGERP" (spp-arg-list ("x") 52959 . 52962) . ((semantic-list "(LISP_INT_TAG_P (XTYPE ((x))))" 52963 . 52993)))
          ("OVERLAYP" (spp-arg-list ("x") 53381 . 53384) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Overlay)" 53385 . 53434)))
          ("SAVE_VALUEP" (spp-arg-list ("x") 54086 . 54089) . ((semantic-list "(MISCP (x) && XMISCTYPE (x) == Lisp_Misc_Save_Value)" 54090 . 54142)))
          ("TERMINALP" (spp-arg-list ("x") 54616 . 54619) . ((symbol "PSEUDOVECTORP" 54620 . 54633) (semantic-list "(x, PVEC_TERMINAL)" 54634 . 54652)))
          ("BOOL_VECTOR_P" (spp-arg-list ("x") 54950 . 54953) . ((symbol "PSEUDOVECTORP" 54954 . 54967) (semantic-list "(x, PVEC_BOOL_VECTOR)" 54968 . 54989)))
          ("CHECK_CONS" (spp-arg-list ("x") 55626 . 55629) . ((symbol "CHECK_TYPE" 55634 . 55644) (semantic-list "(CONSP (x), Qconsp, x)" 55645 . 55667)))
          ("XFLOATINT" (spp-arg-list ("n") 57366 . 57369) . ((symbol "extract_float" 57370 . 57383) (semantic-list "((n))" 57383 . 57388)))
          ("CHECK_NATNUM_CDR" (spp-arg-list ("x") 58428 . 58431) . 
              ((DO "do" 58436 . 58438) (semantic-list "{					\\
    Lisp_Object tmp = XCDR (x);		\\
    CHECK_NATNUM (tmp);			\\
    XSETCDR ((x), tmp);			\\
  }" 58439 . 58541) (WHILE "while" 58542 . 58547) (semantic-list "(0)" 58548 . 58551)))
          ("DEFUN" (spp-arg-list ("lname" "fnname" "sname" "minargs" "maxargs" "intspec" "doc") 60152 . 60206) . 
              ((symbol "Lisp_Object" 60211 . 60222) (symbol "fnname" 60223 . 60229) (spp-symbol-merge ((symbol "DEFUN_ARGS_" 60230 . 60241) (symbol "maxargs" 60245 . 60252)) 60230 . 60252) (punctuation ";" 60253 . 60254) (symbol "DECL_ALIGN" 60262 . 60272) (semantic-list "(struct Lisp_Subr, sname)" 60273 . 60298) (punctuation "=" 60299 . 60300) (semantic-list "{ PVEC_SUBR | (sizeof (struct Lisp_Subr) / sizeof (EMACS_INT)),	\\
      fnname, minargs, maxargs, lname, intspec, 0}" 60310 . 60426) (punctuation ";" 60426 . 60427) (symbol "Lisp_Object" 60434 . 60445) (symbol "fnname" 60446 . 60452)))
          ("DEFUN_ARGS_4" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)" 60845 . 60897)))
          ("UPCASE1" (spp-arg-list ("CH") 68635 . 68639) . ((semantic-list "((case_temp1 = (CH),						\\
    case_temp2 = CHAR_TABLE_REF (UPCASE_TABLE, case_temp1),	\\
    NATNUMP (case_temp2))					\\
   ? XFASTINT (case_temp2) : case_temp1)" 68649 . 68811)))
          ("GC_USE_GCPROS_AS_BEFORE" . ((number "0" 70424 . 70425)))
          ("GCPRO1" (spp-arg-list ("varname") 70773 . 70782) . ((semantic-list "((void) gcpro1)" 70783 . 70798)))
          ("CHECK_CONS_LIST" (spp-arg-list nil 1252 . 1254) . ((semantic-list "((void)0)" 1255 . 1264)))
          ("case_Lisp_Int" . ((CASE "case" 5785 . 5789) (symbol "Lisp_Int" 5790 . 5798)))
          ("XTYPE" (spp-arg-list ("a") 12083 . 12086) . ((semantic-list "((enum Lisp_Type) (((EMACS_UINT) (a)) & TYPEMASK))" 12087 . 12137)))
          ("XOBJFWD" (spp-arg-list ("a") 18941 . 18944) . ((semantic-list "(eassert (OBJFWDP (a)), &(XMISC(a)->u_objfwd))" 18945 . 18991)))
          ("XCHAR_TABLE" (spp-arg-list ("a") 19833 . 19836) . ((semantic-list "(eassert (CHAR_TABLE_P (a)), (struct Lisp_Char_Table *) XPNTR(a))" 19837 . 19902)))
          ("XSETINT" (spp-arg-list ("a" "b") 20169 . 20175) . 
              ((semantic-list "(a)" 20176 . 20179) (punctuation "=" 20180 . 20181) (symbol "make_number" 20182 . 20193) (semantic-list "(b)" 20194 . 20197)))
          ("XSETWINDOW_CONFIGURATION" (spp-arg-list ("a" "b") 20903 . 20909) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_WINDOW_CONFIGURATION))" 20914 . 20966)))
          ("SCHARS" (spp-arg-list ("string") 22222 . 22230) . ((semantic-list "(XSTRING (string)->size + 0)" 22232 . 22260)))
          ("SBYTES" (spp-arg-list ("string") 22275 . 22283) . ((semantic-list "(STRING_BYTES (XSTRING (string)) + 0)" 22285 . 22322)))
          ("CHAR_TABLE_STANDARD_SLOTS" . ((semantic-list "(VECSIZE (struct Lisp_Char_Table) - 1)" 28420 . 28458)))
          ("CHAR_TABLE_TRANSLATE" (spp-arg-list ("CT" "IDX") 30047 . 30056) . ((symbol "char_table_translate" 30061 . 30081) (semantic-list "(CT, IDX)" 30082 . 30091)))
          ("COMPILED_CONSTANTS" . ((number "2" 49685 . 49686)))
          ("GLYPH_CHAR_VALID_P" (spp-arg-list ("glyph") 51552 . 51559) . ((symbol "CHAR_VALID_P" 51560 . 51572) (semantic-list "(GLYPH_CHAR (glyph), 1)" 51573 . 51596)))
          ("VECTORLIKEP" (spp-arg-list ("x") 53105 . 53108) . ((semantic-list "(XTYPE ((x)) == Lisp_Vectorlike)" 53109 . 53141)))
          ("CONSP" (spp-arg-list ("x") 53203 . 53206) . ((semantic-list "(XTYPE ((x)) == Lisp_Cons)" 53207 . 53233)))
          ("ARRAYP" (spp-arg-list ("x") 55167 . 55170) . ((semantic-list "(VECTORP (x) || STRINGP (x) || CHAR_TABLE_P (x) || BOOL_VECTOR_P (x))" 55175 . 55244)))
          ("CHECK_LIST" (spp-arg-list ("x") 55265 . 55268) . ((symbol "CHECK_TYPE" 55273 . 55283) (semantic-list "(CONSP (x) || NILP (x), Qlistp, x)" 55284 . 55318)))
          ("CHECK_WINDOW" (spp-arg-list ("x") 56253 . 56256) . ((symbol "CHECK_TYPE" 56261 . 56271) (semantic-list "(WINDOWP (x), Qwindowp, x)" 56272 . 56298)))
          ("CHECK_FLOAT" (spp-arg-list ("x") 57409 . 57412) . ((symbol "CHECK_TYPE" 57418 . 57428) (semantic-list "(FLOATP (x), Qfloatp, x)" 57429 . 57453)))
          ("DEFUN_ARGS_5" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object)" 60919 . 60990)))
          ("DOWNCASE_TABLE" . 
              ((symbol "current_buffer" 67750 . 67764) (punctuation "-" 67764 . 67765) (punctuation ">" 67765 . 67766) (symbol "downcase_table" 67766 . 67780)))
          ("DOWNCASE" (spp-arg-list ("CH") 67992 . 67996) . ((semantic-list "((case_temp1 = (CH),						\\
    case_temp2 = CHAR_TABLE_REF (DOWNCASE_TABLE, case_temp1),	\\
    NATNUMP (case_temp2))					\\
   ? XFASTINT (case_temp2) : case_temp1)" 68006 . 68170)))
          ("GCPRO2" (spp-arg-list ("varname1" "varname2") 70813 . 70833) . ((semantic-list "(((void) gcpro2, (void) gcpro1))" 70833 . 70865)))
          ("make_fixnum_or_float" (spp-arg-list ("val") 124424 . 124429) . ((semantic-list "(FIXNUM_OVERFLOW_P (val) \\
    ? make_float (val) \\
    : make_number ((EMACS_INT)(val)))" 124435 . 124524)))
          ("CYCLE_CHECK" (spp-arg-list ("check" "el" "suspicious") 125129 . 125152) . ((semantic-list "(NILP (check)					\\
   ? make_number (0)				\\
   : (INTEGERP (check)				\\
      ? (XFASTINT (check) < (suspicious)	\\
	 ? make_number (XFASTINT (check) + 1)	\\
	 : Fcons (el, Qnil))			\\
      : (!NILP (Fmemq ((el), (check)))		\\
	 ? Qnil					\\
	 : Fcons ((el), (check)))))" 125157 . 125426)))
          ("SAFE_ALLOCA_LISP" (spp-arg-list ("buf" "nelt") 126447 . 126458) . 
              ((DO "do" 126467 . 126469) (semantic-list "{							  \\
    int size_ = (nelt) * sizeof (Lisp_Object);		  \\
    if (size_ < MAX_ALLOCA)				  \\
      buf = (Lisp_Object *) alloca (size_);		  \\
    else						  \\
      {							  \\
	Lisp_Object arg_;				  \\
	buf = (Lisp_Object *) xmalloc (size_);		  \\
	arg_ = make_save_value (buf, nelt);		  \\
	XSAVE_VALUE (arg_)->dogc = 1;			  \\
	sa_must_free++;					  \\
	record_unwind_protect (safe_alloca_unwind, arg_); \\
      }							  \\
  }" 126470 . 126903) (WHILE "while" 126904 . 126909) (semantic-list "(0)" 126910 . 126913)))
          ("DECL_ALIGN" (spp-arg-list ("type" "var") 4641 . 4652) . 
              ((symbol "type" 4660 . 4664) (symbol "__attribute__" 4665 . 4678) (semantic-list "((__aligned__ (1 << GCTYPEBITS)))" 4679 . 4712) (symbol "var" 4713 . 4716)))
          ("GCTYPEBITS" . ((number "3" 8047 . 8048)))
          ("MOST_NEGATIVE_FIXNUM" . ((punctuation "-" 17308 . 17309) (semantic-list "((EMACS_INT) 1 << VALBITS)" 17310 . 17336)))
          ("XCONS" (spp-arg-list ("a") 18196 . 18199) . ((semantic-list "(eassert (CONSP(a)),(struct Lisp_Cons *) XPNTR(a))" 18200 . 18250)))
          ("XMISCANY" (spp-arg-list ("a") 18635 . 18638) . ((semantic-list "(eassert (MISCP (a)), &(XMISC(a)->u_any))" 18639 . 18680)))
          ("XINTFWD" (spp-arg-list ("a") 18806 . 18809) . ((semantic-list "(eassert (INTFWDP (a)), &(XMISC(a)->u_intfwd))" 18810 . 18856)))
          ("XSETCOMPILED" (spp-arg-list ("a" "b") 21245 . 21251) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_COMPILED))" 21252 . 21292)))
          ("XCDR" (spp-arg-list ("c") 24143 . 24146) . ((symbol "LISP_MAKE_RVALUE" 24147 . 24163) (semantic-list "(XCDR_AS_LVALUE(c))" 24163 . 24182)))
          ("CAR_SAFE" (spp-arg-list ("c") 25198 . 25201) . ((semantic-list "(CONSP ((c)) ? XCAR ((c)) : Qnil)" 25209 . 25242)))
          ("SYMBOL_INTERNED_P" (spp-arg-list ("sym") 35145 . 35150) . ((semantic-list "(XSYMBOL (sym)->interned != SYMBOL_UNINTERNED)" 35159 . 35205)))
          ("XSET_HASH_TABLE" (spp-arg-list ("VAR" "PTR") 38860 . 38870) . ((semantic-list "(XSETPSEUDOVECTOR (VAR, PTR, PVEC_HASH_TABLE))" 38878 . 38924)))
          ("DEFAULT_REHASH_THRESHOLD" . ((number "0.8" 40170 . 40173)))
          ("COMPILED_ARGLIST" . ((number "0" 49628 . 49629)))
          ("GLYPH_FACE" (spp-arg-list ("glyph") 51236 . 51243) . ((semantic-list "((glyph).face_id)" 51244 . 51261)))
          ("VECTORP" (spp-arg-list ("x") 53296 . 53299) . ((semantic-list "(VECTORLIKEP (x) && !(XVECTOR (x)->size & PSEUDOVECTOR_FLAG))" 53303 . 53364)))
          ("PSEUDOVECTORP" (spp-arg-list ("x" "code") 54228 . 54237) . ((semantic-list "(VECTORLIKEP (x)						\\
   && (((XVECTOR (x)->size & (PSEUDOVECTOR_FLAG | (code))))	\\
       == (PSEUDOVECTOR_FLAG | (code))))" 54246 . 54372)))
          ("WINDOW_CONFIGURATIONP" (spp-arg-list ("x") 54448 . 54451) . ((symbol "PSEUDOVECTORP" 54452 . 54465) (semantic-list "(x, PVEC_WINDOW_CONFIGURATION)" 54466 . 54496)))
          ("BUFFERP" (spp-arg-list ("x") 54768 . 54771) . ((symbol "PSEUDOVECTORP" 54772 . 54785) (semantic-list "(x, PVEC_BUFFER)" 54786 . 54802)))
          ("CHECK_ARRAY" (spp-arg-list ("x" "Qxxxp") 55994 . 56004) . ((symbol "CHECK_TYPE" 56015 . 56025) (semantic-list "(ARRAYP (x), Qxxxp, x)" 56026 . 56048)))
          ("CHECK_NATNUM_CAR" (spp-arg-list ("x") 58279 . 58282) . 
              ((DO "do" 58287 . 58289) (semantic-list "{					\\
    Lisp_Object tmp = XCAR (x);		\\
    CHECK_NATNUM (tmp);			\\
    XSETCAR ((x), tmp);			\\
  }" 58290 . 58392) (WHILE "while" 58393 . 58398) (semantic-list "(0)" 58399 . 58402)))
          ("DEFUN_ARGS_UNEVALLED" . ((semantic-list "(Lisp_Object)" 60638 . 60651)))
          ("DEFUN_ARGS_6" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object, Lisp_Object)" 61012 . 61096)))
          ("GCPRO3" (spp-arg-list ("varname1" "varname2" "varname3") 70880 . 70910) . ((semantic-list "(((void) gcpro3, (void) gcpro2, (void) gcpro1))" 70915 . 70962)))
          ("FOREACH" (spp-arg-list ("hare" "list" "tortoise" "n") 123624 . 123649) . ((FOR "for" 123655 . 123658) (semantic-list "(tortoise = hare = (list), n = 0;			\\
       !LIST_END_P (list, hare);			\\
       (hare = XCDR (hare), ++n,			\\
	((n & 1) != 0					\\
	 ? (tortoise = XCDR (tortoise),			\\
	    (EQ (hare, tortoise)			\\
	     && (circular_list_error ((list)), 1)))	\\
	 : 0)))" 123659 . 123914)))
          ("USE_SAFE_ALLOCA" . 
              ((INT "int" 125687 . 125690) (symbol "sa_count" 125691 . 125699) (punctuation "=" 125700 . 125701) (symbol "SPECPDL_INDEX" 125702 . 125715) (semantic-list "()" 125716 . 125718) (punctuation "," 125718 . 125719) (symbol "sa_must_free" 125720 . 125732) (punctuation "=" 125733 . 125734) (number "0" 125735 . 125736)))
          ("XBUFFER_OBJFWD" (spp-arg-list ("a") 19161 . 19164) . ((semantic-list "(eassert (BUFFER_OBJFWDP (a)), &(XMISC(a)->u_buffer_objfwd))" 19169 . 19229)))
          ("XBOOL_VECTOR" (spp-arg-list ("a") 20024 . 20027) . ((semantic-list "(eassert (BOOL_VECTOR_P (a)), (struct Lisp_Bool_Vector *) XPNTR(a))" 20028 . 20095)))
          ("XSETSTRING" (spp-arg-list ("a" "b") 20316 . 20322) . ((symbol "XSET" 20323 . 20327) (semantic-list "(a, Lisp_String, b)" 20328 . 20347)))
          ("XSETSYMBOL" (spp-arg-list ("a" "b") 20366 . 20372) . ((symbol "XSET" 20373 . 20377) (semantic-list "(a, Lisp_Symbol, b)" 20378 . 20397)))
          ("XSETMARKER" (spp-arg-list ("a" "b") 20531 . 20537) . ((semantic-list "(XSETMISC (a, b), XMISCTYPE (a) = Lisp_Misc_Marker)" 20538 . 20589)))
          ("STRING_SET_CHARS" (spp-arg-list ("string" "newsize") 22348 . 22365) . ((semantic-list "(XSTRING (string)->size = (newsize))" 22372 . 22408)))
          ("XSETCDR" (spp-arg-list ("c" "n") 24539 . 24544) . ((semantic-list "(XCDR_AS_LVALUE(c) = (n))" 24545 . 24570)))
          ("STRING_MULTIBYTE" (spp-arg-list ("STR") 25375 . 25380) . ((semantic-list "(XSTRING (STR)->size_byte >= 0)" 25386 . 25417)))
          ("HASH_INDEX" (spp-arg-list ("H" "IDX") 39751 . 39759) . ((symbol "AREF" 39761 . 39765) (semantic-list "((H)->index, (IDX))" 39766 . 39785)))
          ("COMPILED_STACK_DEPTH" . ((number "3" 49716 . 49717)))
          ("CHAR_SHIFT" . ((semantic-list "(0x2000000)" 50159 . 50170)))
          ("GLYPH_CHAR" (spp-arg-list ("glyph") 51163 . 51170) . ((semantic-list "((glyph).ch)" 51171 . 51183)))
          ("NUMBERP" (spp-arg-list ("x") 52858 . 52861) . ((semantic-list "(INTEGERP (x) || FLOATP (x))" 52862 . 52890)))
          ("CHECK_CHAR_TABLE" (spp-arg-list ("x") 55760 . 55763) . ((symbol "CHECK_TYPE" 55768 . 55778) (semantic-list "(CHAR_TABLE_P (x), Qchar_table_p, x)" 55779 . 55815)))
          ("CHECK_VECTOR_OR_CHAR_TABLE" (spp-arg-list ("x") 56084 . 56087) . ((symbol "CHECK_TYPE" 56092 . 56102) (semantic-list "(VECTORP (x) || CHAR_TABLE_P (x), Qvector_or_char_table_p, x)" 56103 . 56164)))
          ("CHECK_SUBR" (spp-arg-list ("x") 56921 . 56924) . ((symbol "CHECK_TYPE" 56929 . 56939) (semantic-list "(SUBRP (x), Qsubrp, x)" 56940 . 56962)))
          ("CHECK_NUMBER_COERCE_MARKER" (spp-arg-list ("x") 57203 . 57206) . 
              ((DO "do" 57211 . 57213) (semantic-list "{ if (MARKERP ((x))) XSETFASTINT (x, marker_position (x)); \\
    else CHECK_TYPE (INTEGERP (x), Qinteger_or_marker_p, x); }" 57214 . 57337) (WHILE "while" 57338 . 57343) (semantic-list "(0)" 57344 . 57347)))
          ("DEFUN_ARGS_7" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object, Lisp_Object, Lisp_Object)" 61118 . 61215)))
          ("GCPRO4" (spp-arg-list ("varname1" "varname2" "varname3" "varname4") 70977 . 71017) . ((semantic-list "(((void) gcpro4, (void) gcpro3, (void) gcpro2, (void) gcpro1))" 71022 . 71084)))
          ("max" (spp-arg-list ("a" "b") 124052 . 124058) . ((semantic-list "((a) > (b) ? (a) : (b))" 124059 . 124082)))
          )

    )
   (semanticdb-table "config.h"
    :major-mode 'c-mode
    :tags 
        '( ("EMACS_CONFIG_H" variable (:constant-flag t) nil [1181 1195])
            ("AUTO_DEPEND" variable (:constant-flag t) nil [1244 1255])
            ("C_SWITCH_X_SITE" variable (:constant-flag t) nil [1973 1988])
            ("DOUG_LEA_MALLOC" variable (:constant-flag t) nil [2373 2388])
            ("EMACS_CONFIGURATION" variable (:constant-flag t) nil [2456 2475])
            ("EMACS_CONFIG_OPTIONS" variable (:constant-flag t) nil [2554 2574])
            ("GETPGRP_VOID" variable (:constant-flag t) nil [3402 3414])
            ("GNU_MALLOC" variable (:constant-flag t) nil [3590 3600])
            ("HAVE_ALARM" variable (:constant-flag t) nil [3758 3768])
            ("HAVE_ALLOCA" variable (:constant-flag t) nil [3844 3855])
            ("HAVE_ALLOCA_H" variable (:constant-flag t) nil [3950 3963])
            ("HAVE_ALSA" variable (:constant-flag t) nil [4015 4024])
            ("HAVE_BCMP" variable (:constant-flag t) nil [4087 4096])
            ("HAVE_BCOPY" variable (:constant-flag t) nil [4160 4170])
            ("HAVE_BZERO" variable (:constant-flag t) nil [4234 4244])
            ("HAVE_CBRT" variable (:constant-flag t) nil [4307 4316])
            ("HAVE_CFMAKERAW" variable (:constant-flag t) nil [4384 4398])
            ("HAVE_CFSETSPEED" variable (:constant-flag t) nil [4467 4482])
            ("HAVE_CLOSEDIR" variable (:constant-flag t) nil [4549 4562])
            ("HAVE_DBUS" variable (:constant-flag t) nil [4850 4859])
            ("HAVE_DECL_SYS_SIGLIST" variable (:constant-flag t) nil [5072 5093])
            ("HAVE_DECL___SYS_SIGLIST" variable (:constant-flag t) nil [5313 5336])
            ("HAVE_DEV_PTMX" variable (:constant-flag t) nil [5477 5490])
            ("HAVE_DIFFTIME" variable (:constant-flag t) nil [5557 5570])
            ("HAVE_DUP2" variable (:constant-flag t) nil [5633 5642])
            ("HAVE_EUIDACCESS" variable (:constant-flag t) nil [5711 5726])
            ("HAVE_FCNTL_H" variable (:constant-flag t) nil [5795 5807])
            ("HAVE_FMOD" variable (:constant-flag t) nil [5870 5879])
            ("HAVE_FORK" variable (:constant-flag t) nil [5942 5951])
            ("HAVE_FPATHCONF" variable (:constant-flag t) nil [6019 6033])
            ("HAVE_FREETYPE" variable (:constant-flag t) nil [6111 6124])
            ("HAVE_FREXP" variable (:constant-flag t) nil [6188 6198])
            ("HAVE_FSEEKO" variable (:constant-flag t) nil [6286 6297])
            ("HAVE_FSYNC" variable (:constant-flag t) nil [6361 6371])
            ("HAVE_FTIME" variable (:constant-flag t) nil [6435 6445])
            ("HAVE_GAI_STRERROR" variable (:constant-flag t) nil [6516 6533])
            ("HAVE_GCONF" variable (:constant-flag t) nil [6579 6589])
            ("HAVE_GDK_DISPLAY_OPEN" variable (:constant-flag t) nil [6664 6685])
            ("HAVE_GETADDRINFO" variable (:constant-flag t) nil [6755 6771])
            ("HAVE_GETCWD" variable (:constant-flag t) nil [6836 6847])
            ("HAVE_GETDELIM" variable (:constant-flag t) nil [6914 6927])
            ("HAVE_GETDOMAINNAME" variable (:constant-flag t) nil [6999 7017])
            ("HAVE_GETHOSTNAME" variable (:constant-flag t) nil [7087 7103])
            ("HAVE_GETLINE" variable (:constant-flag t) nil [7169 7181])
            ("HAVE_GETLOADAVG" variable (:constant-flag t) nil [7250 7265])
            ("HAVE_GETOPT_H" variable (:constant-flag t) nil [7335 7348])
            ("HAVE_GETOPT_LONG_ONLY" variable (:constant-flag t) nil [7423 7444])
            ("HAVE_GETPAGESIZE" variable (:constant-flag t) nil [7514 7530])
            ("HAVE_GETPEERNAME" variable (:constant-flag t) nil [7600 7616])
            ("HAVE_GETPT" variable (:constant-flag t) nil [7680 7690])
            ("HAVE_GETRLIMIT" variable (:constant-flag t) nil [7758 7772])
            ("HAVE_GETRUSAGE" variable (:constant-flag t) nil [7840 7854])
            ("HAVE_GETSOCKNAME" variable (:constant-flag t) nil [7924 7940])
            ("HAVE_GETSOCKOPT" variable (:constant-flag t) nil [8009 8024])
            ("HAVE_GETTIMEOFDAY" variable (:constant-flag t) nil [8095 8112])
            ("HAVE_GETWD" variable (:constant-flag t) nil [8176 8186])
            ("HAVE_GET_CURRENT_DIR_NAME" variable (:constant-flag t) nil [8265 8290])
            ("HAVE_GPM" variable (:constant-flag t) nil [8475 8483])
            ("HAVE_GRANTPT" variable (:constant-flag t) nil [8549 8561])
            ("HAVE_GTK_AND_PTHREAD" variable (:constant-flag t) nil [8632 8652])
            ("HAVE_GTK_FILE_BOTH" variable (:constant-flag t) nil [8733 8751])
            ("HAVE_GTK_FILE_CHOOSER_DIALOG_NEW" variable (:constant-flag t) nil [8837 8869])
            ("HAVE_GTK_FILE_SELECTION_NEW" variable (:constant-flag t) nil [8950 8977])
            ("HAVE_GTK_MAIN" variable (:constant-flag t) nil [9044 9057])
            ("HAVE_GTK_MULTIDISPLAY" variable (:constant-flag t) nil [9128 9149])
            ("HAVE_H_ERRNO" variable (:constant-flag t) nil [9208 9220])
            ("HAVE_INDEX" variable (:constant-flag t) nil [9284 9294])
            ("HAVE_INET_SOCKETS" variable (:constant-flag t) nil [9350 9367])
            ("HAVE_INTTYPES_H" variable (:constant-flag t) nil [9439 9454])
            ("HAVE_JPEG" variable (:constant-flag t) nil [9523 9532])
            ("HAVE_LANGINFO_CODESET" variable (:constant-flag t) nil [10354 10375])
            ("HAVE_LIBM" variable (:constant-flag t) nil [11770 11779])
            ("HAVE_LIBNCURSES" variable (:constant-flag t) nil [11942 11957])
            ("HAVE_LIMITS_H" variable (:constant-flag t) nil [12617 12630])
            ("HAVE_LINUX_VERSION_H" variable (:constant-flag t) nil [12707 12727])
            ("HAVE_LOCALE_H" variable (:constant-flag t) nil [12797 12810])
            ("HAVE_LOGB" variable (:constant-flag t) nil [12873 12882])
            ("HAVE_LONG_FILE_NAMES" variable (:constant-flag t) nil [12965 12985])
            ("HAVE_LRAND48" variable (:constant-flag t) nil [13051 13063])
            ("HAVE_MBLEN" variable (:constant-flag t) nil [13585 13595])
            ("HAVE_MBRLEN" variable (:constant-flag t) nil [13660 13671])
            ("HAVE_MBSINIT" variable (:constant-flag t) nil [13737 13749])
            ("HAVE_MBSTATE_T" variable (:constant-flag t) nil [13812 13826])
            ("HAVE_MEMCMP" variable (:constant-flag t) nil [13891 13902])
            ("HAVE_MEMCPY" variable (:constant-flag t) nil [13967 13978])
            ("HAVE_MEMMOVE" variable (:constant-flag t) nil [14044 14056])
            ("HAVE_MEMORY_H" variable (:constant-flag t) nil [14126 14139])
            ("HAVE_MEMPCPY" variable (:constant-flag t) nil [14205 14217])
            ("HAVE_MEMSET" variable (:constant-flag t) nil [14282 14293])
            ("HAVE_MENUS" variable (:constant-flag t) nil [14493 14503])
            ("HAVE_MKDIR" variable (:constant-flag t) nil [14567 14577])
            ("HAVE_MKSTEMP" variable (:constant-flag t) nil [14643 14655])
            ("HAVE_MKTIME" variable (:constant-flag t) nil [14720 14731])
            ("HAVE_MMAP" variable (:constant-flag t) nil [14803 14812])
            ("HAVE_MREMAP" variable (:constant-flag t) nil [14956 14967])
            ("HAVE_NET_IF_H" variable (:constant-flag t) nil [15037 15050])
            ("HAVE_PERSONALITY_LINUX32" variable (:constant-flag t) nil [15416 15440])
            ("HAVE_PNG" variable (:constant-flag t) nil [15507 15515])
            ("HAVE_PNG_H" variable (:constant-flag t) nil [15582 15592])
            ("HAVE_POSIX_MEMALIGN" variable (:constant-flag t) nil [15665 15684])
            ("HAVE_PTHREAD_H" variable (:constant-flag t) nil [15854 15868])
            ("HAVE_PTY_H" variable (:constant-flag t) nil [15935 15945])
            ("HAVE_PWD_H" variable (:constant-flag t) nil [16012 16022])
            ("HAVE_RANDOM" variable (:constant-flag t) nil [16087 16098])
            ("HAVE_RECVFROM" variable (:constant-flag t) nil [16165 16178])
            ("HAVE_RENAME" variable (:constant-flag t) nil [16243 16254])
            ("HAVE_RES_INIT" variable (:constant-flag t) nil [16310 16323])
            ("HAVE_RINDEX" variable (:constant-flag t) nil [16388 16399])
            ("HAVE_RINT" variable (:constant-flag t) nil [16462 16471])
            ("HAVE_RMDIR" variable (:constant-flag t) nil [16535 16545])
            ("HAVE_RSVG" variable (:constant-flag t) nil [16593 16602])
            ("HAVE_SELECT" variable (:constant-flag t) nil [16667 16678])
            ("HAVE_SENDTO" variable (:constant-flag t) nil [16743 16754])
            ("HAVE_SETITIMER" variable (:constant-flag t) nil [16822 16836])
            ("HAVE_SETLOCALE" variable (:constant-flag t) nil [16904 16918])
            ("HAVE_SETPGID" variable (:constant-flag t) nil [16984 16996])
            ("HAVE_SETRLIMIT" variable (:constant-flag t) nil [17064 17078])
            ("HAVE_SETSID" variable (:constant-flag t) nil [17143 17154])
            ("HAVE_SETSOCKOPT" variable (:constant-flag t) nil [17223 17238])
            ("HAVE_SHUTDOWN" variable (:constant-flag t) nil [17305 17318])
            ("HAVE_SIZE_T" variable (:constant-flag t) nil [17385 17396])
            ("HAVE_SPEED_T" variable (:constant-flag t) nil [17559 17571])
            ("HAVE_STDINT_H" variable (:constant-flag t) nil [17641 17654])
            ("HAVE_STDIO_EXT_H" variable (:constant-flag t) nil [17727 17743])
            ("HAVE_STDLIB_H" variable (:constant-flag t) nil [17813 17826])
            ("HAVE_STRERROR" variable (:constant-flag t) nil [17893 17906])
            ("HAVE_STRFTIME" variable (:constant-flag t) nil [17973 17986])
            ("HAVE_STRINGS_H" variable (:constant-flag t) nil [18057 18071])
            ("HAVE_STRING_H" variable (:constant-flag t) nil [18141 18154])
            ("HAVE_STRSIGNAL" variable (:constant-flag t) nil [18222 18236])
            ("HAVE_STRUCT_IFREQ_IFR_ADDR" variable (:constant-flag t) nil [18309 18335])
            ("HAVE_STRUCT_IFREQ_IFR_BROADADDR" variable (:constant-flag t) nil [18413 18444])
            ("HAVE_STRUCT_IFREQ_IFR_FLAGS" variable (:constant-flag t) nil [18518 18545])
            ("HAVE_STRUCT_IFREQ_IFR_HWADDR" variable (:constant-flag t) nil [18620 18648])
            ("HAVE_STRUCT_IFREQ_IFR_NETMASK" variable (:constant-flag t) nil [18724 18753])
            ("HAVE_STRUCT_TM_TM_ZONE" variable (:constant-flag t) nil [18930 18952])
            ("HAVE_STRUCT_UTIMBUF" variable (:constant-flag t) nil [19028 19047])
            ("HAVE_SYNC" variable (:constant-flag t) nil [19110 19119])
            ("HAVE_SYSINFO" variable (:constant-flag t) nil [19185 19197])
            ("HAVE_SYS_IOCTL_H" variable (:constant-flag t) nil [19270 19286])
            ("HAVE_SYS_MMAN_H" variable (:constant-flag t) nil [19358 19373])
            ("HAVE_SYS_PARAM_H" variable (:constant-flag t) nil [19446 19462])
            ("HAVE_SYS_RESOURCE_H" variable (:constant-flag t) nil [19538 19557])
            ("HAVE_SYS_SELECT_H" variable (:constant-flag t) nil [19631 19648])
            ("HAVE_SYS_SOCKET_H" variable (:constant-flag t) nil [19722 19739])
            ("HAVE_SYS_SOUNDCARD_H" variable (:constant-flag t) nil [19816 19836])
            ("HAVE_SYS_STAT_H" variable (:constant-flag t) nil [19908 19923])
            ("HAVE_SYS_TIMEB_H" variable (:constant-flag t) nil [20098 20114])
            ("HAVE_SYS_TIME_H" variable (:constant-flag t) nil [20186 20201])
            ("HAVE_SYS_TYPES_H" variable (:constant-flag t) nil [20274 20290])
            ("HAVE_SYS_UN_H" variable (:constant-flag t) nil [20360 20373])
            ("HAVE_SYS_UTSNAME_H" variable (:constant-flag t) nil [20448 20466])
            ("HAVE_SYS_VLIMIT_H" variable (:constant-flag t) nil [20540 20557])
            ("HAVE_SYS_WAIT_H" variable (:constant-flag t) nil [20640 20655])
            ("HAVE_TERMCAP_H" variable (:constant-flag t) nil [20828 20842])
            ("HAVE_TERMIOS_H" variable (:constant-flag t) nil [20913 20927])
            ("HAVE_TERM_H" variable (:constant-flag t) nil [20995 21006])
            ("HAVE_TIFF" variable (:constant-flag t) nil [21075 21084])
            ("HAVE_TIMEVAL" variable (:constant-flag t) nil [21163 21175])
            ("HAVE_TM_GMTOFF" variable (:constant-flag t) nil [21246 21260])
            ("HAVE_TM_ZONE" variable (:constant-flag t) nil [21378 21390])
            ("HAVE_TZSET" variable (:constant-flag t) nil [21655 21665])
            ("HAVE_UALARM" variable (:constant-flag t) nil [21730 21741])
            ("HAVE_UNISTD_H" variable (:constant-flag t) nil [21811 21824])
            ("HAVE_UTIMES" variable (:constant-flag t) nil [21889 21900])
            ("HAVE_UTIME_H" variable (:constant-flag t) nil [21969 21981])
            ("HAVE_UTMP_H" variable (:constant-flag t) nil [22049 22060])
            ("HAVE_VFORK" variable (:constant-flag t) nil [22124 22134])
            ("HAVE_WORKING_FORK" variable (:constant-flag t) nil [22265 22282])
            ("HAVE_WORKING_VFORK" variable (:constant-flag t) nil [22330 22348])
            ("HAVE_X11" variable (:constant-flag t) nil [22469 22477])
            ("HAVE_X11R6" variable (:constant-flag t) nil [22555 22565])
            ("HAVE_XFT" variable (:constant-flag t) nil [22799 22807])
            ("HAVE_XIM" variable (:constant-flag t) nil [22857 22865])
            ("HAVE_XKBGETKEYBOARD" variable (:constant-flag t) nil [22936 22955])
            ("HAVE_XPM" variable (:constant-flag t) nil [23021 23029])
            ("HAVE_XRMSETDATABASE" variable (:constant-flag t) nil [23102 23121])
            ("HAVE_XSCREENNUMBEROFSCREEN" variable (:constant-flag t) nil [23201 23227])
            ("HAVE_XSCREENRESOURCESTRING" variable (:constant-flag t) nil [23307 23333])
            ("HAVE_XSETWMPROTOCOLS" variable (:constant-flag t) nil [23407 23427])
            ("HAVE_X_SM" variable (:constant-flag t) nil [23492 23501])
            ("HAVE_X_WINDOWS" variable (:constant-flag t) nil [23571 23585])
            ("HAVE___FPENDING" variable (:constant-flag t) nil [23654 23669])
            ("LD_SWITCH_X_SITE" variable (:constant-flag t) nil [24238 24254])
            ("LD_SWITCH_X_SITE_AUX" variable (:constant-flag t) nil [24368 24388])
            ("MAIL_USE_POP" variable (:constant-flag t) nil [24603 24615])
            ("PACKAGE_BUGREPORT" variable (:constant-flag t) nil [25204 25221])
            ("PACKAGE_NAME" variable (:constant-flag t) nil [25281 25293])
            ("PACKAGE_STRING" variable (:constant-flag t) nil [25370 25384])
            ("PACKAGE_TARNAME" variable (:constant-flag t) nil [25466 25481])
            ("PACKAGE_VERSION" variable (:constant-flag t) nil [25544 25559])
            ("POINTER_TYPE" variable (:constant-flag t) nil [25665 25677])
            ("PROTOTYPES" variable (:constant-flag t) nil [25758 25768])
            ("REL_ALLOC" variable (:constant-flag t) nil [25868 25877])
            ("RETSIGTYPE" variable (:constant-flag t) nil [25959 25969])
            ("STDC_HEADERS" variable (:constant-flag t) nil [26402 26414])
            ("SYNC_INPUT" variable (:constant-flag t) nil [26527 26537])
            ("TIME_WITH_SYS_TIME" variable (:constant-flag t) nil [26625 26643])
            ("UNEXEC_SRC" variable (:constant-flag t) nil [26969 26979])
            ("USE_GTK" variable (:constant-flag t) nil [27022 27029])
            ("USE_TOOLKIT_SCROLL_BARS" variable (:constant-flag t) nil [27241 27264])
            ("USE_XIM" variable (:constant-flag t) nil [27336 27343])
            ("XRegisterIMInstantiateCallback_arg6" variable (:constant-flag t) nil [27622 27657])
            ("_FILE_OFFSET_BITS" variable (:constant-flag t) nil [27748 27765])
            ("_ALL_SOURCE" variable (:constant-flag t) nil [28309 28320])
            ("_POSIX_PTHREAD_SEMANTICS" variable (:constant-flag t) nil [28525 28549])
            ("_TANDEM_SOURCE" variable (:constant-flag t) nil [28631 28645])
            ("__EXTENSIONS__" variable (:constant-flag t) nil [28732 28746])
            ("__PROTOTYPES" variable (:constant-flag t) nil [28952 28964])
            ("__restrict_arr" variable (:constant-flag t) nil [29234 29248])
            ("config_machfile" variable (:constant-flag t) nil [29318 29333])
            ("config_opsysfile" variable (:constant-flag t) nil [29402 29418])
            ("HAVE_WINDOW_SYSTEM" variable (:constant-flag t) nil [30113 30131])
            ("HAVE_MOUSE" variable (:constant-flag t) nil [30140 30150])
            ("AMPERSAND_FULL_NAME" variable (:constant-flag t) nil [30337 30356])
            ("HAVE_SOUND" variable (:constant-flag t) nil [30696 30706])
            ("HAVE_SOUND" variable (:constant-flag t) nil [30793 30803])
            ("INLINE" variable (:constant-flag t) nil [31157 31163])
            ("subprocesses" variable (:constant-flag t) nil [31444 31456])
            ("SIGTYPE" variable (:constant-flag t) nil [32321 32328])
            ("RE_TRANSLATE_TYPE" variable (:constant-flag t) nil [32460 32477])
            ("RE_TRANSLATE" variable (:constant-flag t) nil [32498 32510])
            ("RE_TRANSLATE_P" variable (:constant-flag t) nil [32728 32742])
            ("mktime" variable (:constant-flag t) nil [32921 32927])
            ("my_strftime" variable (:constant-flag t) nil [32957 32968])
            ("BSTRING" variable (:constant-flag t) nil [33283 33290])
            ("getenv" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [33572 33595])
            ("BITS_PER_CHAR" variable (:constant-flag t) nil [33750 33763])
            ("BITS_PER_SHORT" variable (:constant-flag t) nil [33805 33819])
            ("BITS_PER_INT" variable (:constant-flag t) nil [34040 34052])
            ("BITS_PER_LONG" variable (:constant-flag t) nil [34138 34151])
            ("PROTOTYPES" variable (:constant-flag t) nil [34332 34342])
            ("__P" variable (:constant-flag t) nil [34412 34415])
            ("string.h" include nil nil [34597 34616])
            ("strings.h" include nil nil [34646 34666])
            ("stdlib.h" include (:system-flag t) nil [34732 34751])
            ("HAVE_X_I18N" variable (:constant-flag t) nil [35155 35166])
            ("HAVE_X_I18N" variable (:constant-flag t) nil [35209 35220])
            ("HAVE_X11R6_XIM" variable (:constant-flag t) nil [35363 35377])
            ("NO_RETURN" variable (:constant-flag t) nil [35502 35511])
            ("GC_SETJMP_WORKS" variable (:constant-flag t) nil [36034 36049])
            ("GC_LISP_OBJECT_ALIGNMENT" variable (:constant-flag t) nil [36108 36132]))          
    :file "config.h"
    :pointmax 36412
    :fsize 36411
    :lastmodtime '(19571 14272)
    :unmatched-syntax '((string "\"m/intel386.h\"" 31544 . 31559) (symbol 31536 . 31543) (punctuation 31535 . 31536) (string "\"s/gnu-linux.h\"" 31518 . 31534) (symbol 31510 . 31517) (punctuation 31509 . 31510))
    :lexical-table 
        '(("HAVE_ALSA" . ((number "1" 4025 . 4026)))
          ("HAVE_DECL___SYS_SIGLIST" . ((number "0" 5337 . 5338)))
          ("HAVE_GETWD" . ((number "1" 8187 . 8188)))
          ("HAVE_JPEG" . ((number "1" 9533 . 9534)))
          ("HAVE_MEMPCPY" . ((number "1" 14218 . 14219)))
          ("HAVE_MKSTEMP" . ((number "1" 14656 . 14657)))
          ("HAVE_SELECT" . ((number "1" 16679 . 16680)))
          ("HAVE_SETLOCALE" . ((number "1" 16919 . 16920)))
          ("HAVE_STRUCT_IFREQ_IFR_BROADADDR" . ((number "1" 18445 . 18446)))
          ("HAVE_SYNC" . ((number "1" 19120 . 19121)))
          ("HAVE_SYS_STAT_H" . ((number "1" 19924 . 19925)))
          ("HAVE_TIMEVAL" . ((number "1" 21176 . 21177)))
          ("SIGTYPE" . ((symbol "RETSIGTYPE" 32329 . 32339)))
          ("mktime" . ((symbol "emacs_mktime" 32928 . 32940)))
          ("GC_SETJMP_WORKS" . ((number "1" 36050 . 36051)))
          ("C_SWITCH_X_SITE" . 
              ((punctuation "-" 1989 . 1990) (symbol "I" 1990 . 1991) (punctuation "/" 1991 . 1992) (symbol "usr" 1992 . 1995) (punctuation "/" 1995 . 1996) (symbol "include" 1996 . 2003) (punctuation "/" 2003 . 2004) (symbol "gtk" 2004 . 2007) (punctuation "-" 2007 . 2008) (number "2.0" 2008 . 2011) (punctuation "-" 2012 . 2013) (symbol "I" 2013 . 2014) (punctuation "/" 2014 . 2015) (symbol "usr" 2015 . 2018) (punctuation "/" 2018 . 2019) (symbol "lib" 2019 . 2022) (punctuation "/" 2022 . 2023) (symbol "gtk" 2023 . 2026) (punctuation "-" 2026 . 2027) (number "2.0" 2027 . 2030) (punctuation "/" 2030 . 2031) (symbol "include" 2031 . 2038) (punctuation "-" 2039 . 2040) (symbol "I" 2040 . 2041) (punctuation "/" 2041 . 2042) (symbol "usr" 2042 . 2045) (punctuation "/" 2045 . 2046) (symbol "include" 2046 . 2053) (punctuation "/" 2053 . 2054) (symbol "atk" 2054 . 2057) (punctuation "-" 2057 . 2058) (number "1.0" 2058 . 2061) (punctuation "-" 2062 . 2063) (symbol "I" 2063 . 2064) (punctuation "/" 2064 . 2065) (symbol "usr" 2065 . 2068) (punctuation "/" 2068 . 2069) (symbol "include" 2069 . 2076) (punctuation "/" 2076 . 2077) (symbol "cairo" 2077 . 2082) (punctuation "-" 2083 . 2084) (symbol "I" 2084 . 2085) (punctuation "/" 2085 . 2086) (symbol "usr" 2086 . 2089) (punctuation "/" 2089 . 2090) (symbol "include" 2090 . 2097) (punctuation "/" 2097 . 2098) (symbol "pango" 2098 . 2103) (punctuation "-" 2103 . 2104) (number "1.0" 2104 . 2107) (punctuation "-" 2108 . 2109) (symbol "I" 2109 . 2110) (punctuation "/" 2110 . 2111) (symbol "usr" 2111 . 2114) (punctuation "/" 2114 . 2115) (symbol "include" 2115 . 2122) (punctuation "/" 2122 . 2123) (symbol "glib" 2123 . 2127) (punctuation "-" 2127 . 2128) (number "2.0" 2128 . 2131) (punctuation "-" 2132 . 2133) (symbol "I" 2133 . 2134) (punctuation "/" 2134 . 2135) (symbol "usr" 2135 . 2138) (punctuation "/" 2138 . 2139) (symbol "lib" 2139 . 2142) (punctuation "/" 2142 . 2143) (symbol "glib" 2143 . 2147) (punctuation "-" 2147 . 2148) (number "2.0" 2148 . 2151) (punctuation "/" 2151 . 2152) (symbol "include" 2152 . 2159) (punctuation "-" 2160 . 2161) (symbol "I" 2161 . 2162) (punctuation "/" 2162 . 2163) (symbol "usr" 2163 . 2166) (punctuation "/" 2166 . 2167) (symbol "include" 2167 . 2174) (punctuation "/" 2174 . 2175) (symbol "freetype2" 2175 . 2184) (punctuation "-" 2185 . 2186) (symbol "I" 2186 . 2187) (punctuation "/" 2187 . 2188) (symbol "usr" 2188 . 2191) (punctuation "/" 2191 . 2192) (symbol "include" 2192 . 2199) (punctuation "/" 2199 . 2200) (symbol "libpng12" 2200 . 2208) (punctuation "-" 2211 . 2212) (symbol "I" 2212 . 2213) (punctuation "/" 2213 . 2214) (symbol "usr" 2214 . 2217) (punctuation "/" 2217 . 2218) (symbol "include" 2218 . 2225) (punctuation "/" 2225 . 2226) (symbol "freetype2" 2226 . 2235)))
          ("DOUG_LEA_MALLOC" . ((number "1" 2389 . 2390)))
          ("HAVE_GET_CURRENT_DIR_NAME" . ((number "1" 8291 . 8292)))
          ("HAVE_GRANTPT" . ((number "1" 8562 . 8563)))
          ("HAVE_INTTYPES_H" . ((number "1" 9455 . 9456)))
          ("HAVE_MEMMOVE" . ((number "1" 14057 . 14058)))
          ("HAVE_PERSONALITY_LINUX32" . ((number "1" 15441 . 15442)))
          ("HAVE_PWD_H" . ((number "1" 16023 . 16024)))
          ("HAVE_RINDEX" . ((number "1" 16400 . 16401)))
          ("HAVE_STRINGS_H" . ((number "1" 18072 . 18073)))
          ("HAVE_STRSIGNAL" . ((number "1" 18237 . 18238)))
          ("HAVE_SYS_WAIT_H" . ((number "1" 20656 . 20657)))
          ("LD_SWITCH_X_SITE")
          ("MAIL_USE_POP" . ((number "1" 24616 . 24617)))
          ("_POSIX_PTHREAD_SEMANTICS" . ((number "1" 28550 . 28551)))
          ("_TANDEM_SOURCE" . ((number "1" 28646 . 28647)))
          ("BITS_PER_INT" . ((number "32" 34053 . 34055)))
          ("EMACS_CONFIG_OPTIONS" . ((string "\" '--prefix=/home/xhyang/emacs' '--with-gif=no'\"" 2575 . 2623)))
          ("HAVE_EUIDACCESS" . ((number "1" 5727 . 5728)))
          ("HAVE_FCNTL_H" . ((number "1" 5808 . 5809)))
          ("HAVE_GETOPT_H" . ((number "1" 7349 . 7350)))
          ("HAVE_GPM" . ((number "1" 8484 . 8485)))
          ("HAVE_LONG_FILE_NAMES" . ((number "1" 12986 . 12987)))
          ("HAVE_RES_INIT" . ((number "1" 16324 . 16325)))
          ("HAVE_RINT" . ((number "1" 16472 . 16473)))
          ("HAVE_SETRLIMIT" . ((number "1" 17079 . 17080)))
          ("HAVE_STRING_H" . ((number "1" 18155 . 18156)))
          ("HAVE_SYS_IOCTL_H" . ((number "1" 19287 . 19288)))
          ("HAVE_SYS_TYPES_H" . ((number "1" 20291 . 20292)))
          ("HAVE_UNISTD_H" . ((number "1" 21825 . 21826)))
          ("HAVE_X11R6" . ((number "1" 22566 . 22567)))
          ("PACKAGE_BUGREPORT" . ((string "\"\"" 25222 . 25224)))
          ("config_machfile" . ((string "\"m/intel386.h\"" 29334 . 29348)))
          ("HAVE_SOUND" . ((number "1" 30804 . 30805)))
          ("RE_TRANSLATE_P" (spp-arg-list ("TBL") 32742 . 32747) . ((semantic-list "(!(INTEGERP (TBL) && XINT (TBL) == 0))" 32748 . 32786)))
          ("my_strftime" . ((symbol "nstrftime" 32969 . 32978)))
          ("BITS_PER_SHORT" . ((number "16" 33820 . 33822)))
          ("NO_RETURN" . ((symbol "__attribute__" 35512 . 35525) (semantic-list "((__noreturn__))" 35526 . 35542)))
          ("HAVE_ALLOCA" . ((number "1" 3856 . 3857)))
          ("HAVE_GCONF" . ((number "1" 6590 . 6591)))
          ("HAVE_GETLINE" . ((number "1" 7182 . 7183)))
          ("HAVE_GETRLIMIT" . ((number "1" 7773 . 7774)))
          ("HAVE_GETSOCKNAME" . ((number "1" 7941 . 7942)))
          ("HAVE_GTK_AND_PTHREAD" . ((number "1" 8653 . 8654)))
          ("HAVE_MEMCPY" . ((number "1" 13979 . 13980)))
          ("HAVE_SPEED_T" . ((number "1" 17572 . 17573)))
          ("HAVE_STDLIB_H" . ((number "1" 17827 . 17828)))
          ("HAVE_SYS_MMAN_H" . ((number "1" 19374 . 19375)))
          ("HAVE_SYS_UN_H" . ((number "1" 20374 . 20375)))
          ("HAVE_SYS_VLIMIT_H" . ((number "1" 20558 . 20559)))
          ("HAVE_UTMP_H" . ((number "1" 22061 . 22062)))
          ("HAVE_XFT" . ((number "1" 22808 . 22809)))
          ("HAVE_XKBGETKEYBOARD" . ((number "1" 22956 . 22957)))
          ("PACKAGE_NAME" . ((string "\"emacs\"" 25294 . 25301)))
          ("__restrict_arr" . ((symbol "__restrict" 29249 . 29259)))
          ("HAVE_X_I18N")
          ("GC_LISP_OBJECT_ALIGNMENT" . ((semantic-list "(__alignof__ (Lisp_Object))" 36133 . 36160)))
          ("HAVE_ALARM" . ((number "1" 3769 . 3770)))
          ("HAVE_DECL_SYS_SIGLIST" . ((number "0" 5094 . 5095)))
          ("HAVE_FPATHCONF" . ((number "1" 6034 . 6035)))
          ("HAVE_FSYNC" . ((number "1" 6372 . 6373)))
          ("HAVE_GETRUSAGE" . ((number "1" 7855 . 7856)))
          ("HAVE_INDEX" . ((number "1" 9295 . 9296)))
          ("HAVE_PTHREAD_H" . ((number "1" 15869 . 15870)))
          ("HAVE_PTY_H" . ((number "1" 15946 . 15947)))
          ("HAVE_RECVFROM" . ((number "1" 16179 . 16180)))
          ("HAVE_RSVG" . ((number "1" 16603 . 16604)))
          ("HAVE_STRUCT_UTIMBUF" . ((number "1" 19048 . 19049)))
          ("HAVE_TZSET" . ((number "1" 21666 . 21667)))
          ("HAVE_WORKING_FORK" . ((number "1" 22283 . 22284)))
          ("HAVE_X_SM" . ((number "1" 23502 . 23503)))
          ("PACKAGE_VERSION" . ((string "\"23.2\"" 25560 . 25566)))
          ("RETSIGTYPE" . ((VOID "void" 25970 . 25974)))
          ("USE_TOOLKIT_SCROLL_BARS" . ((number "1" 27265 . 27266)))
          ("config_opsysfile" . ((string "\"s/gnu-linux.h\"" 29419 . 29434)))
          ("RE_TRANSLATE_TYPE" . ((symbol "Lisp_Object" 32478 . 32489)))
          ("__P" (spp-arg-list ("args") 34415 . 34421) . ((symbol "args" 34422 . 34426)))
          ("EMACS_CONFIG_H")
          ("GETPGRP_VOID" . ((number "1" 3415 . 3416)))
          ("HAVE_CBRT" . ((number "1" 4317 . 4318)))
          ("HAVE_GETSOCKOPT" . ((number "1" 8025 . 8026)))
          ("HAVE_H_ERRNO" . ((number "1" 9221 . 9222)))
          ("HAVE_LOCALE_H" . ((number "1" 12811 . 12812)))
          ("HAVE_MBSINIT" . ((number "1" 13750 . 13751)))
          ("HAVE_MBSTATE_T" . ((number "1" 13827 . 13828)))
          ("HAVE_PNG_H" . ((number "1" 15593 . 15594)))
          ("HAVE_POSIX_MEMALIGN" . ((number "1" 15685 . 15686)))
          ("HAVE_SYS_TIMEB_H" . ((number "1" 20115 . 20116)))
          ("HAVE_SYS_UTSNAME_H" . ((number "1" 20467 . 20468)))
          ("HAVE_VFORK" . ((number "1" 22135 . 22136)))
          ("HAVE_WORKING_VFORK" . ((number "1" 22349 . 22350)))
          ("HAVE_X_WINDOWS" . ((number "1" 23586 . 23587)))
          ("LD_SWITCH_X_SITE_AUX")
          ("STDC_HEADERS" . ((number "1" 26415 . 26416)))
          ("USE_GTK" . ((number "1" 27030 . 27031)))
          ("HAVE_DIFFTIME" . ((number "1" 5571 . 5572)))
          ("HAVE_DUP2" . ((number "1" 5643 . 5644)))
          ("HAVE_FREETYPE" . ((number "1" 6125 . 6126)))
          ("HAVE_FTIME" . ((number "1" 6446 . 6447)))
          ("HAVE_GAI_STRERROR" . ((number "1" 6534 . 6535)))
          ("HAVE_GETDOMAINNAME" . ((number "1" 7018 . 7019)))
          ("HAVE_GETPAGESIZE" . ((number "1" 7531 . 7532)))
          ("HAVE_INET_SOCKETS" . ((number "1" 9368 . 9369)))
          ("HAVE_LANGINFO_CODESET" . ((number "1" 10376 . 10377)))
          ("HAVE_MKDIR" . ((number "1" 14578 . 14579)))
          ("HAVE_MREMAP" . ((number "1" 14968 . 14969)))
          ("HAVE_NET_IF_H" . ((number "1" 15051 . 15052)))
          ("HAVE_RENAME" . ((number "1" 16255 . 16256)))
          ("HAVE_SETSID" . ((number "1" 17155 . 17156)))
          ("HAVE_STRERROR" . ((number "1" 17907 . 17908)))
          ("HAVE_STRUCT_IFREQ_IFR_HWADDR" . ((number "1" 18649 . 18650)))
          ("HAVE_SYS_SOCKET_H" . ((number "1" 19740 . 19741)))
          ("HAVE_XRMSETDATABASE" . ((number "1" 23122 . 23123)))
          ("HAVE_XSETWMPROTOCOLS" . ((number "1" 23428 . 23429)))
          ("TIME_WITH_SYS_TIME" . ((number "1" 26644 . 26645)))
          ("USE_XIM" . ((number "1" 27344 . 27345)))
          ("_FILE_OFFSET_BITS" . ((number "64" 27766 . 27768)))
          ("__EXTENSIONS__" . ((number "1" 28747 . 28748)))
          ("AUTO_DEPEND" . ((number "1" 1256 . 1257)))
          ("HAVE_BCMP" . ((number "1" 4097 . 4098)))
          ("HAVE_BCOPY" . ((number "1" 4171 . 4172)))
          ("HAVE_CLOSEDIR" . ((number "1" 4563 . 4564)))
          ("HAVE_DBUS" . ((number "1" 4860 . 4861)))
          ("HAVE_GETDELIM" . ((number "1" 6928 . 6929)))
          ("HAVE_GETHOSTNAME" . ((number "1" 7104 . 7105)))
          ("HAVE_GETOPT_LONG_ONLY" . ((number "1" 7445 . 7446)))
          ("HAVE_GETTIMEOFDAY" . ((number "1" 8113 . 8114)))
          ("HAVE_LRAND48" . ((number "1" 13064 . 13065)))
          ("HAVE_MEMORY_H" . ((number "1" 14140 . 14141)))
          ("HAVE_MKTIME" . ((number "1" 14732 . 14733)))
          ("HAVE_STDINT_H" . ((number "1" 17655 . 17656)))
          ("HAVE_SYS_SELECT_H" . ((number "1" 19649 . 19650)))
          ("HAVE_SYS_TIME_H" . ((number "1" 20202 . 20203)))
          ("HAVE_TERMIOS_H" . ((number "1" 20928 . 20929)))
          ("HAVE_XIM" . ((number "1" 22866 . 22867)))
          ("HAVE_XSCREENNUMBEROFSCREEN" . ((number "1" 23228 . 23229)))
          ("PACKAGE_STRING" . ((string "\"emacs 23.2\"" 25385 . 25397)))
          ("_ALL_SOURCE" . ((number "1" 28321 . 28322)))
          ("HAVE_WINDOW_SYSTEM")
          ("RE_TRANSLATE" (spp-arg-list ("TBL" "C") 32510 . 32518) . ((symbol "CHAR_TABLE_TRANSLATE" 32519 . 32539) (semantic-list "(TBL, C)" 32540 . 32548)))
          ("EMACS_CONFIGURATION" . ((string "\"i686-pc-linux-gnu\"" 2476 . 2495)))
          ("HAVE_BZERO" . ((number "1" 4245 . 4246)))
          ("HAVE_CFSETSPEED" . ((number "1" 4483 . 4484)))
          ("HAVE_DEV_PTMX" . ((number "1" 5491 . 5492)))
          ("HAVE_FMOD" . ((number "1" 5880 . 5881)))
          ("HAVE_FREXP" . ((number "1" 6199 . 6200)))
          ("HAVE_GETPEERNAME" . ((number "1" 7617 . 7618)))
          ("HAVE_LIMITS_H" . ((number "1" 12631 . 12632)))
          ("HAVE_LINUX_VERSION_H" . ((number "1" 12728 . 12729)))
          ("HAVE_MBLEN" . ((number "1" 13596 . 13597)))
          ("HAVE_MBRLEN" . ((number "1" 13672 . 13673)))
          ("HAVE_MMAP" . ((number "1" 14813 . 14814)))
          ("HAVE_RMDIR" . ((number "1" 16546 . 16547)))
          ("HAVE_SETITIMER" . ((number "1" 16837 . 16838)))
          ("HAVE_STRUCT_TM_TM_ZONE" . ((number "1" 18953 . 18954)))
          ("HAVE_TERM_H" . ((number "1" 21007 . 21008)))
          ("HAVE_X11" . ((number "1" 22478 . 22479)))
          ("HAVE___FPENDING" . ((number "1" 23670 . 23671)))
          ("__PROTOTYPES" . ((number "1" 28965 . 28966)))
          ("subprocesses")
          ("HAVE_CFMAKERAW" . ((number "1" 4399 . 4400)))
          ("HAVE_GTK_FILE_CHOOSER_DIALOG_NEW" . ((number "1" 8870 . 8871)))
          ("HAVE_GTK_MULTIDISPLAY" . ((number "1" 9150 . 9151)))
          ("HAVE_LOGB" . ((number "1" 12883 . 12884)))
          ("HAVE_MEMCMP" . ((number "1" 13903 . 13904)))
          ("PROTOTYPES" . ((number "1" 34343 . 34344)))
          ("REL_ALLOC" . ((number "1" 25878 . 25879)))
          ("SYNC_INPUT" . ((number "1" 26538 . 26539)))
          ("AMPERSAND_FULL_NAME")
          ("BITS_PER_CHAR" . ((number "8" 33764 . 33765)))
          ("GNU_MALLOC" . ((number "1" 3601 . 3602)))
          ("HAVE_LIBNCURSES" . ((number "1" 11958 . 11959)))
          ("HAVE_PNG" . ((number "1" 15516 . 15517)))
          ("HAVE_RANDOM" . ((number "1" 16099 . 16100)))
          ("HAVE_STRFTIME" . ((number "1" 17987 . 17988)))
          ("HAVE_STRUCT_IFREQ_IFR_NETMASK" . ((number "1" 18754 . 18755)))
          ("HAVE_SYS_PARAM_H" . ((number "1" 19463 . 19464)))
          ("HAVE_UTIMES" . ((number "1" 21901 . 21902)))
          ("HAVE_XSCREENRESOURCESTRING" . ((number "1" 23334 . 23335)))
          ("PACKAGE_TARNAME" . ((string "\"emacs\"" 25482 . 25489)))
          ("BITS_PER_LONG" . ((number "32" 34152 . 34154)))
          ("HAVE_ALLOCA_H" . ((number "1" 3964 . 3965)))
          ("HAVE_FORK" . ((number "1" 5952 . 5953)))
          ("HAVE_GETADDRINFO" . ((number "1" 6772 . 6773)))
          ("HAVE_GETLOADAVG" . ((number "1" 7266 . 7267)))
          ("HAVE_MEMSET" . ((number "1" 14294 . 14295)))
          ("HAVE_MENUS" . ((number "1" 14504 . 14505)))
          ("HAVE_SETPGID" . ((number "1" 16997 . 16998)))
          ("HAVE_SHUTDOWN" . ((number "1" 17319 . 17320)))
          ("HAVE_STDIO_EXT_H" . ((number "1" 17744 . 17745)))
          ("HAVE_STRUCT_IFREQ_IFR_ADDR" . ((number "1" 18336 . 18337)))
          ("HAVE_STRUCT_IFREQ_IFR_FLAGS" . ((number "1" 18546 . 18547)))
          ("HAVE_SYSINFO" . ((number "1" 19198 . 19199)))
          ("HAVE_SYS_SOUNDCARD_H" . ((number "1" 19837 . 19838)))
          ("HAVE_XPM" . ((number "1" 23030 . 23031)))
          ("UNEXEC_SRC")
          ("HAVE_MOUSE")
          ("INLINE" . ((symbol "__inline__" 31164 . 31174)))
          ("BSTRING")
          ("HAVE_FSEEKO" . ((number "1" 6298 . 6299)))
          ("HAVE_GDK_DISPLAY_OPEN" . ((number "1" 6686 . 6687)))
          ("HAVE_GETCWD" . ((number "1" 6848 . 6849)))
          ("HAVE_GETPT" . ((number "1" 7691 . 7692)))
          ("HAVE_GTK_FILE_BOTH" . ((number "1" 8752 . 8753)))
          ("HAVE_GTK_FILE_SELECTION_NEW" . ((number "1" 8978 . 8979)))
          ("HAVE_GTK_MAIN" . ((number "1" 9058 . 9059)))
          ("HAVE_LIBM" . ((number "1" 11780 . 11781)))
          ("HAVE_SENDTO" . ((number "1" 16755 . 16756)))
          ("HAVE_SETSOCKOPT" . ((number "1" 17239 . 17240)))
          ("HAVE_SIZE_T" . ((number "1" 17397 . 17398)))
          ("HAVE_SYS_RESOURCE_H" . ((number "1" 19558 . 19559)))
          ("HAVE_TERMCAP_H" . ((number "1" 20843 . 20844)))
          ("HAVE_TIFF" . ((number "1" 21085 . 21086)))
          ("HAVE_TM_GMTOFF" . ((number "1" 21261 . 21262)))
          ("HAVE_TM_ZONE" . ((number "1" 21391 . 21392)))
          ("HAVE_UALARM" . ((number "1" 21742 . 21743)))
          ("HAVE_UTIME_H" . ((number "1" 21982 . 21983)))
          ("POINTER_TYPE" . ((VOID "void" 25678 . 25682)))
          ("XRegisterIMInstantiateCallback_arg6" . ((symbol "XPointer" 27658 . 27666)))
          ("HAVE_X11R6_XIM")
          )

    )
   (semanticdb-table "lread.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [892 911])
            ("stdio.h" include (:system-flag t) nil [912 930])
            ("sys/types.h" include (:system-flag t) nil [931 953])
            ("sys/stat.h" include (:system-flag t) nil [954 975])
            ("sys/file.h" include (:system-flag t) nil [976 997])
            ("errno.h" include (:system-flag t) nil [998 1016])
            ("setjmp.h" include (:system-flag t) nil [1017 1036])
            ("lisp.h" include nil nil [1037 1054])
            ("intervals.h" include nil nil [1055 1077])
            ("buffer.h" include nil nil [1078 1097])
            ("character.h" include nil nil [1098 1120])
            ("charset.h" include nil nil [1121 1141])
            ("coding.h" include nil nil [1142 1161])
            ("epaths.h" include (:system-flag t) nil [1162 1181])
            ("commands.h" include nil nil [1182 1203])
            ("keyboard.h" include nil nil [1204 1225])
            ("frame.h" include nil nil [1226 1244])
            ("termhooks.h" include nil nil [1245 1267])
            ("coding.h" include nil nil [1268 1287])
            ("blockinput.h" include nil nil [1288 1311])
            ("unistd.h" include (:system-flag t) nil [1437 1456])
            ("X_OK" variable (:constant-flag t) nil [1486 1490])
            ("math.h" include (:system-flag t) nil [1502 1519])
            ("locale.h" include (:system-flag t) nil [1543 1562])
            ("fcntl.h" include (:system-flag t) nil [1612 1630])
            ("O_RDONLY" variable (:constant-flag t) nil [1663 1671])
            ("file_offset" variable (:constant-flag t) nil [1709 1720])
            ("file_tell" variable (:constant-flag t) nil [1735 1744])
            ("errno" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [1835 1852])
            ("Qdata" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1893 1924])
            ("Qhash_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1893 1924])
            ("Qsize" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1925 1950])
            ("Qtest" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1925 1950])
            ("Qweakness" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1951 1973])
            ("Qrehash_size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1974 1999])
            ("Qrehash_threshold" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2000 2030])
            ("QCweakness" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2031 2112])
            ("QCrehash_threshold" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2031 2112])
            ("QCrehash_size" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2031 2112])
            ("QCsize" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2031 2112])
            ("QCtest" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2031 2112])
            ("Qcurrent_load_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2114 2190])
            ("Qstandard_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2114 2190])
            ("Qget_file_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2114 2190])
            ("Qread_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2114 2190])
            ("Vafter_load_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2191 2272])
            ("Vstandard_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2191 2272])
            ("Vvalues" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2191 2272])
            ("Qvariable_documentation" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2191 2272])
            ("Qload_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2273 2326])
            ("Qload" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2273 2326])
            ("Qascii_character" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2273 2326])
            ("Qfunction" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2327 2392])
            ("Qcomma_dot" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2327 2392])
            ("Qcomma_at" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2327 2392])
            ("Qcomma" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2327 2392])
            ("Qbackquote" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2327 2392])
            ("Qinhibit_file_name_operation" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2393 2434])
            ("Veval_buffer_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2435 2484])
            ("Qeval_buffer_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2435 2484])
            ("Qdo_after_load_evaluation" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2485 2539])
            ("Qfile_truename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2485 2539])
            ("Qget_emacs_mule_file_char" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2659 2704])
            ("Qload_force_doc_strings" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2706 2749])
            ("Qevent_symbol_element_mask" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2751 2797])
            ("Qfile_exists_p" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2798 2832])
            ("load_in_progress" variable (:type "int") nil [2866 2887])
            ("Qload_in_progress" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2888 2925])
            ("Vsource_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2977 3007])
            ("Vload_file_rep_suffixes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3064 3128])
            ("Vload_suffixes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3064 3128])
            ("Vload_path" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3064 3128])
            ("Vuser_init_file" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3168 3196])
            ("Vload_history" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3306 3332])
            ("Vcurrent_load_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3380 3411])
            ("Vpreloaded_file_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3455 3488])
            ("Vload_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3541 3569])
            ("Vload_read_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3630 3662])
            ("Vread_circle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3737 3762])
            ("read_objects" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4023 4048])
            ("load_force_doc_strings" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4122 4156])
            ("load_convert_to_unibyte" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4219 4254])
            ("load_each_byte" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4465 4491])
            ("Vload_source_file_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4597 4636])
            ("Vbyte_boolean_vars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4709 4740])
            ("Vread_with_symbol_positions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4818 4858])
            ("Vread_symbol_positions_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4914 4954])
            ("load_descriptor_list" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [5003 5043])
            ("instream" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("FILE" type (:type "class") nil nil))
                nil [5103 5125])
            ("read_pure" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5173 5194])
            ("read_from_string_index" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5268 5302])
            ("read_from_string_index_byte" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5303 5342])
            ("read_from_string_limit" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5343 5377])
            ("readchar_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5465 5491])
            ("saved_doc_string" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [5547 5577])
            ("saved_doc_string_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5633 5666])
            ("saved_doc_string_length" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5717 5752])
            ("saved_doc_string_position" variable
               (:typemodifiers ("static")
                :type ("off_t" type (:type "class") nil nil))
                nil [5809 5854])
            ("prev_saved_doc_string" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [5999 6034])
            ("prev_saved_doc_string_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6095 6133])
            ("prev_saved_doc_string_length" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6189 6229])
            ("prev_saved_doc_string_position" variable
               (:typemodifiers ("static")
                :type ("off_t" type (:type "class") nil nil))
                nil [6286 6336])
            ("new_backquote_flag" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6547 6577])
            ("Qold_style_backquotes" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6578 6642])
            ("Vold_style_backquotes" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6578 6642])
            ("Vloads_in_progress" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6745 6783])
            ("load_dangerous_libraries" variable (:type "int") nil [6844 6873])
            ("force_load_messages" variable (:type "int") nil [6947 6971])
            ("Vbytecomp_version_regexp" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7044 7088])
            ("read_emacs_mule_char" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [7090 7183])
            ("readevalloop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7185 7353])
            ("load_unwind" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7354 7404])
            ("load_descriptor_unwind" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7405 7466])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [7520 7530])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [7569 7579])
            ("readbyte_for_lambda" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [7875 7930])
            ("readbyte_from_file" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [7931 7985])
            ("readbyte_from_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [7986 8042])
            ("READCHAR" variable (:constant-flag t) nil [8249 8257])
            ("UNREAD" variable (:constant-flag t) nil [8295 8301])
            ("READCHAR_REPORT_MULTIBYTE" variable (:constant-flag t) nil [8421 8446])
            ("unread_char" variable
               (:typemodifiers ("static")
                :type "int")
                nil [8746 8769])
            ("readchar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("multibyte" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [8771 12631])
            ("unreadchar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("c" variable (:type "int") nil nil))                  
                :type "void")
                nil [12787 14272])
            ("readbyte_for_lambda" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type "int") nil nil)
                    ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [14274 14405])
            ("readbyte_from_file" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type "int") nil nil)
                    ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [14408 14971])
            ("readbyte_from_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type "int") nil nil)
                    ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [14973 15464])
            ("emacs_mule_bytes" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type "char")
                nil [15608 15642])
            ("c" variable (:type "int") nil [15708 15714])
            ("readbyte" variable
               (:functionpointer-flag t
                :type "int")
                nil [15720 15760])
            ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15766 15790])
            ("read_internal_start" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16998 17091])
            ("read0" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17092 17136])
            ("read1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17137 17193])
            ("read_list" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17195 17248])
            ("read_vector" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17249 17304])
            ("substitute_object_recurse" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17306 17404])
            ("substitute_object_in_subtree" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [17405 17489])
            ("substitute_in_interval" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("INTERVAL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [17490 17554])
            ("read_filtered_event" function
               (:arguments 
                  ( ("input_method" variable (:type "int") nil nil)
                    ("error_nonascii" variable (:type "int") nil nil)
                    ("ascii_required" variable (:type "int") nil nil)
                    ("no_switch_frame" variable (:type "int") nil nil)
                    ("seconds" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [18455 20984])
            ("DEFUN_ARGS_" variable (:type ("Sread_char" type (:type "class") nil nil)) nil [20986 22046])
            ("doc" variable
               (:default-value "DEFUN (\"read-char\", Fread_char, Sread_char, 0, 3, 0,
       doc: /* Read a character from the command input (keyboard or macro).
It is returned as a number.
If the character has modifiers, they are resolved and reflected to the
character code if possible (e.g. C-SPC -> 0).

If the user generates an event which is not a character (i.e. a mouse
click or function key event), `read-char' signals an error.  As an
exception, switch-frame events are put off until non-character events
can be read.
If you want to read non-character events, or ignore them, call
`read-event' or `read-char-exclusive' instead.

If the optional argument PROMPT is non-nil, display that as a prompt.
If the optional argument INHERIT-INPUT-METHOD is non-nil and some
input method is turned on in the current buffer, that input method
is used for reading a character.
If the optional argument SECONDS is non-nil, it should be a number
specifying the maximum number of seconds to wait for input.  If no
input arrives in that time, return nil.  SECONDS may be a
floating-point value.  */)"
                :type "int")
                nil [20986 22046])
            ("Sread_char" function
               (:arguments 
                  ( ("seconds" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("inherit_input_method" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20986 22406])
            ("DEFUN_ARGS_" variable (:type ("Sread_event" type (:type "class") nil nil)) nil [22408 22977])
            ("doc" variable
               (:default-value "DEFUN (\"read-event\", Fread_event, Sread_event, 0, 3, 0,
       doc: /* Read an event object from the input stream.
If the optional argument PROMPT is non-nil, display that as a prompt.
If the optional argument INHERIT-INPUT-METHOD is non-nil and some
input method is turned on in the current buffer, that input method
is used for reading a character.
If the optional argument SECONDS is non-nil, it should be a number
specifying the maximum number of seconds to wait for input.  If no
input arrives in that time, return nil.  SECONDS may be a
floating-point value.  */)"
                :type "int")
                nil [22408 22977])
            ("Sread_event" function
               (:arguments 
                  ( ("seconds" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("inherit_input_method" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [22408 23228])
            ("DEFUN_ARGS_" variable (:type ("Sread_char_exclusive" type (:type "class") nil nil)) nil [23230 24024])
            ("doc" variable
               (:default-value "DEFUN (\"read-char-exclusive\", Fread_char_exclusive, Sread_char_exclusive, 0, 3, 0,
       doc: /* Read a character from the command input (keyboard or macro).
It is returned as a number.  Non-character events are ignored.
If the character has modifiers, they are resolved and reflected to the
character code if possible (e.g. C-SPC -> 0).

If the optional argument PROMPT is non-nil, display that as a prompt.
If the optional argument INHERIT-INPUT-METHOD is non-nil and some
input method is turned on in the current buffer, that input method
is used for reading a character.
If the optional argument SECONDS is non-nil, it should be a number
specifying the maximum number of seconds to wait for input.  If no
input arrives in that time, return nil.  SECONDS may be a
floating-point value.  */)"
                :type "int")
                nil [23230 24024])
            ("Sread_char_exclusive" function
               (:arguments 
                  ( ("seconds" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("inherit_input_method" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [23230 24385])
            ("DEFUN_ARGS_" variable (:type ("Sget_file_char" type (:type "class") nil nil)) nil [24387 24496])
            ("doc" variable
               (:default-value "DEFUN (\"get-file-char\", Fget_file_char, Sget_file_char, 0, 0, 0,
       doc: /* Don't use this yourself.  */)"
                :type "int")
                nil [24387 24496])
            ("Sget_file_char" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [24387 24616])
            ("safe_to_load_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fd" variable (:type "int") nil nil))                  
                :type "int")
                nil [24948 25708])
            ("record_load_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("old" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [25825 25929])
            ("load_error_handler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [26000 26086])
            ("load_warn_old_style_backquotes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("file" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [26088 26389])
            ("DEFUN_ARGS_" variable (:type ("Sget_load_suffixes" type (:type "class") nil nil)) nil [26391 26627])
            ("doc" variable
               (:default-value "DEFUN (\"get-load-suffixes\", Fget_load_suffixes, Sget_load_suffixes, 0, 0, 0,
       doc: /* Return the suffixes that `load' should try if a suffix is \\
required.
This uses the variables `load-suffixes' and `load-file-rep-suffixes'.  */)"
                :type "int")
                nil [26391 26627])
            ("Sget_load_suffixes" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [26391 27009])
            ("DEFUN_ARGS_" variable (:type ("Sload" type (:type "class") nil nil)) nil [27011 28839])
            ("doc" variable
               (:default-value "DEFUN (\"load\", Fload, Sload, 1, 5, 0,
       doc: /* Execute a file of Lisp code named FILE.
First try FILE with `.elc' appended, then try with `.el',
then try FILE unmodified (the exact suffixes in the exact order are
determined by `load-suffixes').  Environment variable references in
FILE are replaced with their values by calling `substitute-in-file-name'.
This function searches the directories in `load-path'.

If optional second arg NOERROR is non-nil,
report no error if FILE doesn't exist.
Print messages at start and end of loading unless
optional third arg NOMESSAGE is non-nil (but `force-load-messages'
overrides that).
If optional fourth arg NOSUFFIX is non-nil, don't try adding
suffixes `.elc' or `.el' to the specified name FILE.
If optional fifth arg MUST-SUFFIX is non-nil, insist on
the suffix `.elc' or `.el'; don't accept just FILE unless
it ends in one of those suffixes or includes a directory name.

If this function fails to find a file, it may look for different
representations of that file before trying another file.
It does so by adding the non-empty suffixes in `load-file-rep-suffixes'
to the file name.  Emacs uses this feature mainly to find compressed
versions of files when Auto Compression mode is enabled.

The exact suffixes that this function tries out, in the exact order,
are given by the value of the variable `load-file-rep-suffixes' if
NOSUFFIX is non-nil and by the return value of the function
`get-load-suffixes' if MUST-SUFFIX is non-nil.  If both NOSUFFIX and
MUST-SUFFIX are nil, this function first tries out the latter suffixes
and then the former.

Loading a file records its definitions, and its `provide' and
`require' calls, in an element of `load-history' whose
car is the file name loaded.  See `load-history'.

Return t if the file exists and loads successfully.  */)"
                :type "int")
                nil [27011 28839])
            ("Sload" function
               (:arguments 
                  ( ("must_suffix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("nosuffix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("nomessage" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("noerror" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("file" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27011 38154])
            ("load_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [38156 38431])
            ("load_descriptor_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("oldlist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [38433 38563])
            ("close_load_descs" function (:type "void") nil [38658 38843])
            ("complete_filename_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pathname" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [38846 39096])
            ("DEFUN_ARGS_" variable (:type ("Slocate_file_internal" type (:type "class") nil nil)) nil [39098 39569])
            ("doc" variable
               (:default-value "DEFUN (\"locate-file-internal\", Flocate_file_internal, Slocate_file_internal, 2, 4, 0,
       doc: /* Search for FILENAME through PATH.
Returns the file's name in absolute form, or nil if not found.
If SUFFIXES is non-nil, it should be a list of suffixes to append to
file name when searching.
If non-nil, PREDICATE is used instead of `file-readable-p'.
PREDICATE can also be an integer to pass to the access(2) function,
in which case file-name-handlers are ignored.  */)"
                :type "int")
                nil [39098 39569])
            ("Slocate_file_internal" function
               (:arguments 
                  ( ("predicate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("suffixes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("path" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [39098 39818])
            ("openp" function
               (:arguments 
                  ( ("str" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("path" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("suffixes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("storeptr" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("predicate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [40673 44719])
            ("build_load_history" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("entire" variable (:type "int") nil nil))                  
                :type "void")
                nil [45049 46389])
            ("unreadpure" function
               (:arguments 
                  ( ("junk" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [46391 46533])
            ("readevalloop_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("old" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [46535 46657])
            ("end_of_file_error" function
               (:typemodifiers ("static")
                :type "void")
                nil [46741 46884])
            ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [47275 47299])
            ("stream" variable
               (:pointer 1
                :type ("FILE" type (:type "class") nil nil))
                nil [47305 47318])
            ("sourcename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [47324 47347])
            ("evalfun" variable
               (:functionpointer-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [47353 47379])
            ("printflag" variable (:type "int") nil [47385 47399])
            ("readfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [47405 47434])
            ("unibyte" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [47405 47434])
            ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [47440 47463])
            ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [47440 47463])
            ("DEFUN_ARGS_" variable (:type ("Seval_buffer" type (:type "class") nil nil)) nil [51419 52132])
            ("doc" variable
               (:default-value "DEFUN (\"eval-buffer\", Feval_buffer, Seval_buffer, 0, 5, \"\",
       doc: /* Execute the current buffer as Lisp code.
When called from a Lisp program (i.e., not interactively), this
function accepts up to five optional arguments:
BUFFER is the buffer to evaluate (nil means use current buffer).
PRINTFLAG controls printing of output:
 A value of nil means discard it; anything else is stream for print.
FILENAME specifies the file name to use for `load-history'.
UNIBYTE, if non-nil, specifies `load-convert-to-unibyte' for this
 invocation.
DO-ALLOW-PRINT, if non-nil, specifies that `print' and related
 functions should work normally even if PRINTFLAG is nil.

This function preserves the position of point.  */)"
                :type "int")
                nil [51419 52132])
            ("Seval_buffer" function
               (:arguments 
                  ( ("do_allow_print" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("unibyte" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("printflag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [51419 52993])
            ("DEFUN_ARGS_" variable (:type ("Seval_region" type (:type "class") nil nil)) nil [52995 53594])
            ("doc" variable
               (:default-value "DEFUN (\"eval-region\", Feval_region, Seval_region, 2, 4, \"r\",
       doc: /* Execute the region as Lisp code.
When called from programs, expects two arguments,
giving starting and ending indices in the current buffer
of the text to be executed.
Programs can pass third argument PRINTFLAG which controls output:
A value of nil means discard it; anything else is stream for printing it.
Also the fourth argument READ-FUNCTION, if non-nil, is used
instead of `read' to read each expression.  It gets one argument
which is the input stream for reading characters.

This function does not move point.  */)"
                :type "int")
                nil [52995 53594])
            ("Seval_region" function
               (:arguments 
                  ( ("read_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("printflag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [52995 54186])
            ("DEFUN_ARGS_" variable (:type ("Sread" type (:type "class") nil nil)) nil [54190 54800])
            ("doc" variable
               (:default-value "DEFUN (\"read\", Fread, Sread, 0, 1, 0,
       doc: /* Read one Lisp expression as text from STREAM, return as Lisp object.
If STREAM is nil, use the value of `standard-input' (which see).
STREAM or the value of `standard-input' may be:
 a buffer (read from point and advance it)
 a marker (read from where it points and advance it)
 a function (call it with no arguments for each character,
     call it with a char as argument to push a char back)
 a string (takes text from string, starting at the beginning)
 t (read text line using minibuffer and use it, or read from
    standard input in batch mode).  */)"
                :type "int")
                nil [54190 54800])
            ("Sread" function
               (:arguments 
                  ( ("stream" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [54190 55097])
            ("DEFUN_ARGS_" variable (:type ("Sread_from_string" type (:type "class") nil nil)) nil [55099 55437])
            ("doc" variable
               (:default-value "DEFUN (\"read-from-string\", Fread_from_string, Sread_from_string, 1, 3, 0,
       doc: /* Read one Lisp expression which is represented as text by STRING.
Returns a cons: (OBJECT-READ . FINAL-STRING-INDEX).
START and END optionally delimit a substring of STRING from which to read;
 they default to 0 and (length STRING) respectively.  */)"
                :type "int")
                nil [55099 55437])
            ("Sread_from_string" function
               (:arguments 
                  ( ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [55099 55715])
            ("read_internal_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("stream" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [55796 57230])
            ("invalid_syntax" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("n" variable (:type "int") nil nil))                  
                :type "void")
                nil [57319 57473])
            ("read0" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [57567 57829])
            ("read_buffer_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [57832 57860])
            ("read_buffer" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [57861 57886])
            ("read_escape" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("stringp" variable (:type "int") nil nil))                  
                :type "int")
                nil [58021 62373])
            ("read_integer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("radix" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [62655 63703])
            ("read1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pch" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("first_in_list" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [63971 84117])
            ("seen_list" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [84189 84218])
            ("substitute_object_in_subtree" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("placeholder" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [84220 84792])
            ("SUBSTITUTE" variable (:constant-flag t) nil [84876 84886])
            ("substitute_object_recurse" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("placeholder" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("subtree" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [85194 87425])
            ("substitute_in_interval" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("interval" variable (:type ("INTERVAL" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [87482 87728])
            ("LEAD_INT" variable (:constant-flag t) nil [87740 87748])
            ("DOT_CHAR" variable (:constant-flag t) nil [87759 87767])
            ("TRAIL_INT" variable (:constant-flag t) nil [87778 87787])
            ("E_CHAR" variable (:constant-flag t) nil [87798 87804])
            ("EXP_INT" variable (:constant-flag t) nil [87815 87822])
            ("isfloat_string" function
               (:arguments 
                  ( ("cp" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("ignore_trailing" variable (:type "int") nil nil))                  
                :type "int")
                nil [87827 89227])
            ("read_vector" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("bytecodeflag" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [89231 91545])
            ("read_list" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("flag" variable (:type "int") nil nil)
                    ("readcharfun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [91693 96718])
            ("Vobarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [96721 96742])
            ("initial_obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [96743 96771])
            ("oblookup_last_bucket_number" variable (:type "int") nil [96848 96880])
            ("hash_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "int")
                nil [96882 96908])
            ("check_obarray" function
               (:arguments 
                  ( ("obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96989 97314])
            ("intern" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97417 97787])
            ("intern_c_string" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [97818 97834]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [97789 98364])
            ("make_symbol" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98417 98610])
            ("DEFUN_ARGS_" variable (:type ("Sintern" type (:type "class") nil nil)) nil [98613 98886])
            ("doc" variable
               (:default-value "DEFUN (\"intern\", Fintern, Sintern, 1, 2, 0,
       doc: /* Return the canonical symbol whose name is STRING.
If there is none, one is created by this function and returned.
A second optional argument specifies the obarray to use;
it defaults to the value of `obarray'.  */)"
                :type "int")
                nil [98613 98886])
            ("Sintern" function
               (:arguments 
                  ( ("obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [98613 99802])
            ("DEFUN_ARGS_" variable (:type ("Sintern_soft" type (:type "class") nil nil)) nil [99804 100130])
            ("doc" variable
               (:default-value "DEFUN (\"intern-soft\", Fintern_soft, Sintern_soft, 1, 2, 0,
       doc: /* Return the canonical symbol named NAME, or nil if none exists.
NAME may be a string or a symbol.  If it is a symbol, that exact
symbol is searched for.
A second optional argument specifies the obarray to use;
it defaults to the value of `obarray'.  */)"
                :type "int")
                nil [99804 100130])
            ("Sintern_soft" function
               (:arguments 
                  ( ("obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [99804 100607])
            ("DEFUN_ARGS_" variable (:type ("Sunintern" type (:type "class") nil nil)) nil [100610 100985])
            ("doc" variable
               (:default-value "DEFUN (\"unintern\", Funintern, Sunintern, 1, 2, 0,
       doc: /* Delete the symbol named NAME, if any, from OBARRAY.
The value is t if a symbol was found and deleted, nil otherwise.
NAME may be a string or a symbol.  If it is a symbol, that symbol
is deleted, if it belongs to OBARRAY--no other symbol is deleted.
OBARRAY defaults to the value of the variable `obarray'.  */)"
                :type "int")
                nil [100610 100985])
            ("Sunintern" function
               (:arguments 
                  ( ("obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [100610 102624])
            ("oblookup" function
               (:arguments 
                  ( ("obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("ptr" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("size_byte" variable (:type "int") nil nil)
                    ("size" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [102862 103954])
            ("hash_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("len" variable (:type "int") nil nil))                  
                :type "int")
                nil [103956 104329])
            ("obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [104373 104393])
            ("fn" variable
               (:functionpointer-flag t
                :type "void")
                nil [104399 104442])
            ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [104448 104464])
            ("mapatoms_1" function
               (:arguments 
                  ( ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("sym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [104820 104912])
            ("DEFUN_ARGS_" variable (:type ("Smapatoms" type (:type "class") nil nil)) nil [104914 105069])
            ("doc" variable
               (:default-value "DEFUN (\"mapatoms\", Fmapatoms, Smapatoms, 1, 2, 0,
       doc: /* Call FUNCTION on every symbol in OBARRAY.
OBARRAY defaults to the value of `obarray'.  */)"
                :type "int")
                nil [104914 105069])
            ("Smapatoms" function
               (:arguments 
                  ( ("obarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [104914 105276])
            ("OBARRAY_SIZE" variable (:constant-flag t) nil [105286 105298])
            ("init_obarray" function (:type "void") nil [105305 106615])
            ("defsubr" function
               (:arguments 
                  ( ("sname" variable
                       (:pointer 1
                        :type ("Lisp_Subr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [106618 106817])
            ("defalias" function
               (:arguments 
                  ( ("sname" variable
                       (:pointer 1
                        :type ("Lisp_Subr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [106863 107034])
            ("defvar_int" function
               (:arguments 
                  ( ("namestring" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [107258 107281])
                    ("address" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [107282 107301]))                  
                :type "void")
                nil [107241 107497])
            ("defvar_bool" function
               (:arguments 
                  ( ("namestring" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [107624 107647])
                    ("address" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [107648 107661]))                  
                :type "void")
                nil [107606 107916])
            ("defvar_lisp_nopro" function
               (:arguments 
                  ( ("namestring" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [108256 108279])
                    ("address" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [108280 108301]))                  
                :type "void")
                nil [108232 108497])
            ("defvar_lisp" function
               (:arguments 
                  ( ("namestring" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [108517 108540])
                    ("address" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [108541 108562]))                  
                :type "void")
                nil [108499 108632])
            ("defvar_kboard" function
               (:arguments 
                  ( ("namestring" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [108786 108809])
                    ("offset" variable (:type "int") (reparse-symbol arg-sub-list) [108810 108821]))                  
                :type "void")
                nil [108766 109030])
            ("dump_path" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109161 109190])
            ("init_lread" function (:type "void") nil [109192 114808])
            ("dir_warning" function
               (:arguments 
                  ( ("format" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("dirname" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [114951 115356])
            ("syms_of_lread" function (:type "void") nil [115358 128020]))          
    :file "lread.c"
    :pointmax 128107
    :fsize 128106
    :lastmodtime '(19383 49279)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 104914 . 105069) (symbol "__attribute__" 104914 . 105069) (symbol "Lisp_Subr" 104914 . 105069) (symbol "Lisp_Object" 104914 . 105069) (semantic-list 104465 . 104818) (semantic-list 104349 . 104367) (symbol 104337 . 104348) (VOID 104332 . 104336) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 100610 . 100985) (symbol "__attribute__" 100610 . 100985) (symbol "Lisp_Subr" 100610 . 100985) (symbol "Lisp_Object" 100610 . 100985) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 99804 . 100130) (symbol "__attribute__" 99804 . 100130) (symbol "Lisp_Subr" 99804 . 100130) (symbol "Lisp_Object" 99804 . 100130) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 98613 . 98886) (symbol "__attribute__" 98613 . 98886) (symbol "Lisp_Subr" 98613 . 98886) (symbol "Lisp_Object" 98613 . 98886) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 55099 . 55437) (symbol "__attribute__" 55099 . 55437) (symbol "Lisp_Subr" 55099 . 55437) (symbol "Lisp_Object" 55099 . 55437) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 54190 . 54800) (symbol "__attribute__" 54190 . 54800) (symbol "Lisp_Subr" 54190 . 54800) (symbol "Lisp_Object" 54190 . 54800) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 52995 . 53594) (symbol "__attribute__" 52995 . 53594) (symbol "Lisp_Subr" 52995 . 53594) (symbol "Lisp_Object" 52995 . 53594) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 51419 . 52132) (symbol "__attribute__" 51419 . 52132) (symbol "Lisp_Subr" 51419 . 52132) (symbol "Lisp_Object" 51419 . 52132) (semantic-list 47464 . 51417) (semantic-list 47179 . 47269) (symbol 47166 . 47178) (VOID 47161 . 47165) (STATIC 47154 . 47160) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 39098 . 39569) (symbol "__attribute__" 39098 . 39569) (symbol "Lisp_Subr" 39098 . 39569) (symbol "Lisp_Object" 39098 . 39569) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 27011 . 28839) (symbol "__attribute__" 27011 . 28839) (symbol "Lisp_Subr" 27011 . 28839) (symbol "Lisp_Object" 27011 . 28839) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 26391 . 26627) (symbol "__attribute__" 26391 . 26627) (symbol "Lisp_Subr" 26391 . 26627) (symbol "Lisp_Object" 26391 . 26627) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 24387 . 24496) (symbol "__attribute__" 24387 . 24496) (symbol "Lisp_Subr" 24387 . 24496) (symbol "Lisp_Object" 24387 . 24496) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 23230 . 24024) (symbol "__attribute__" 23230 . 24024) (symbol "Lisp_Subr" 23230 . 24024) (symbol "Lisp_Object" 23230 . 24024) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 22408 . 22977) (symbol "__attribute__" 22408 . 22977) (symbol "Lisp_Subr" 22408 . 22977) (symbol "Lisp_Object" 22408 . 22977) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 20986 . 22046) (symbol "__attribute__" 20986 . 22046) (symbol "Lisp_Subr" 20986 . 22046) (symbol "Lisp_Object" 20986 . 22046) (semantic-list 15791 . 16995) (semantic-list 15676 . 15702) (symbol 15655 . 15675) (INT 15651 . 15654) (STATIC 15644 . 15650) (semantic-list "()" 7561 . 7568) (symbol 7543 . 7560) (VOID 7538 . 7542) (STATIC 7531 . 7537) (semantic-list "(const char *, int)" 7495 . 7519) (symbol 7480 . 7494) (VOID 7475 . 7479) (STATIC 7468 . 7474))
    :lexical-table 
        '(("READCHAR" . ((symbol "readchar" 8258 . 8266) (semantic-list "(readcharfun, NULL)" 8267 . 8286)))
          ("READCHAR_REPORT_MULTIBYTE" (spp-arg-list ("multibyte") 8446 . 8457) . ((symbol "readchar" 8458 . 8466) (semantic-list "(readcharfun, multibyte)" 8467 . 8491)))
          ("file_tell" . ((symbol "ftello" 1745 . 1751)))
          ("TRAIL_INT" . ((number "4" 87788 . 87789)))
          ("E_CHAR" . ((number "8" 87805 . 87806)))
          ("EXP_INT" . ((number "16" 87823 . 87825)))
          ("LEAD_INT" . ((number "1" 87749 . 87750)))
          ("DOT_CHAR" . ((number "2" 87768 . 87769)))
          ("file_offset" . ((symbol "off_t" 1721 . 1726)))
          ("O_RDONLY" . ((number "0" 1672 . 1673)))
          ("UNREAD" (spp-arg-list ("c") 8301 . 8304) . ((symbol "unreadchar" 8305 . 8315) (semantic-list "(readcharfun, c)" 8316 . 8332)))
          ("OBARRAY_SIZE" . ((number "1511" 105299 . 105303)))
          ("X_OK" . ((number "01" 1491 . 1493)))
          ("SUBSTITUTE" (spp-arg-list ("get_val" "set_val") 84886 . 84904) . 
              ((DO "do" 84911 . 84913) (semantic-list "{							\\
    Lisp_Object old_value = get_val;			\\
    Lisp_Object true_value				\\
      = substitute_object_recurse (object, placeholder,	\\
				   old_value);		\\
    							\\
    if (!EQ (old_value, true_value))			\\
      {							\\
	set_val;					\\
      }							\\
  }" 84914 . 85182) (WHILE "while" 85183 . 85188) (semantic-list "(0)" 85189 . 85192)))
          )

    )
   (semanticdb-table "ecrt0.c"
    :major-mode 'c-mode
    :tags 
        '( ("data_start" variable
               (:default-value "0"
                :type "int")
                nil [2393 2412])
            ("environ" variable
               (:pointer 2
                :type "char")
                nil [2465 2480])
            ("start1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "int")
                nil [2764 2781])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3758 3781])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3783 3797])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3799 3815])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3817 3843])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3845 3866])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3868 3882])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3886 3914])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3916 3936])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3938 3963])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3965 3983])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [3985 4007])
            ("asm" function
               (:prototype-flag t
                :type "int")
                nil [4030 4047])
            ("start1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("argc" variable (:type "int") nil nil)
                    ("xargv" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [4116 4327])
            ("__progname" variable
               (:pointer 1
                :type "char")
                nil [4841 4858]))          
    :file "ecrt0.c"
    :pointmax 4952
    :fsize 4951
    :lastmodtime '(19383 49279)
    :unmatched-syntax '((string 4035 . 4045) (string 3990 . 4005) (string 3970 . 3981) (string 3943 . 3961) (string 3921 . 3934) (string 3891 . 3912) (string 3873 . 3880) (string 3850 . 3864) (string 3822 . 3841) (string 3804 . 3813) (string 3788 . 3795) (string 3763 . 3779))
    )
   (semanticdb-table "tparam.c"
    :major-mode 'c-mode
    :tags 
        '( ("stdlib.h" include (:system-flag t) nil [1109 1128])
            ("string.h" include (:system-flag t) nil [1129 1148])
            ("bcopy" variable (:constant-flag t) nil [1348 1353])
            ("NULL" variable (:constant-flag t) nil [1439 1443])
            ("memory_out" function
               (:typemodifiers ("static")
                :type "void")
                nil [1478 1566])
            ("xmalloc" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("size" variable (:type "unsigned int") nil nil))                  
                :type "char")
                nil [1568 1704])
            ("xrealloc" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("size" variable (:type "unsigned int") nil nil))                  
                :type "char")
                nil [1706 1870])
            ("tparam1" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [2456 2480])
            ("tparam" function
               (:pointer 1
                :arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("outstring" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("len" variable (:type "int") nil nil)
                    ("arg3" variable (:type "int") nil nil)
                    ("arg2" variable (:type "int") nil nil)
                    ("arg1" variable (:type "int") nil nil)
                    ("arg0" variable (:type "int") nil nil))                  
                :type "char")
                nil [2498 2795])
            ("BC" variable
               (:pointer 1
                :type "char")
                nil [2797 2806])
            ("UP" variable
               (:pointer 1
                :type "char")
                nil [2807 2816])
            ("tgoto_buf" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [2818 2844])
            ("tgoto" function
               (:pointer 1
                :arguments 
                  ( ("cm" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("vpos" variable (:type "int") nil nil)
                    ("hpos" variable (:type "int") nil nil))                  
                :type "char")
                nil [2846 3046])
            ("tparam1" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("outstring" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("len" variable (:type "int") nil nil)
                    ("left" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("up" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("argp" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "char")
                nil [3048 7841]))          
    :file "tparam.c"
    :pointmax 8216
    :fsize 8215
    :lastmodtime '(19383 49282)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("NULL" . ((semantic-list "(char *)" 1444 . 1452) (number "0" 1453 . 1454)))
          ("bcopy" (spp-arg-list ("s" "d" "n") 1353 . 1362) . ((symbol "memcpy" 1363 . 1369) (semantic-list "((d), (s), (n))" 1370 . 1385)))
          )

    )
   (semanticdb-table "xterm.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [1016 1035])
            ("signal.h" include (:system-flag t) nil [1169 1188])
            ("stdio.h" include (:system-flag t) nil [1190 1208])
            ("setjmp.h" include (:system-flag t) nil [1209 1228])
            ("lisp.h" include nil nil [1253 1270])
            ("blockinput.h" include nil nil [1271 1294])
            ("syssignal.h" include nil nil [1450 1472])
            ("xterm.h" include nil nil [1588 1606])
            ("X11/cursorfont.h" include (:system-flag t) nil [1607 1634])
            ("sys/types.h" include (:system-flag t) nil [1748 1770])
            ("systime.h" include nil nil [1871 1891])
            ("fcntl.h" include (:system-flag t) nil [1916 1934])
            ("ctype.h" include (:system-flag t) nil [1942 1960])
            ("errno.h" include (:system-flag t) nil [1961 1979])
            ("setjmp.h" include (:system-flag t) nil [1980 1999])
            ("sys/stat.h" include (:system-flag t) nil [2000 2021])
            ("charset.h" include nil nil [2126 2146])
            ("character.h" include nil nil [2147 2169])
            ("coding.h" include nil nil [2170 2189])
            ("frame.h" include nil nil [2190 2208])
            ("dispextern.h" include nil nil [2209 2232])
            ("fontset.h" include nil nil [2233 2253])
            ("termhooks.h" include nil nil [2254 2276])
            ("termopts.h" include nil nil [2277 2298])
            ("termchar.h" include nil nil [2299 2320])
            ("emacs-icon.h" include nil nil [2321 2344])
            ("disptab.h" include nil nil [2345 2365])
            ("buffer.h" include nil nil [2366 2385])
            ("window.h" include nil nil [2386 2405])
            ("keyboard.h" include nil nil [2406 2427])
            ("intervals.h" include nil nil [2428 2450])
            ("process.h" include nil nil [2451 2471])
            ("atimer.h" include nil nil [2472 2491])
            ("keymap.h" include nil nil [2492 2511])
            ("font.h" include nil nil [2512 2529])
            ("fontset.h" include nil nil [2530 2550])
            ("xsettings.h" include nil nil [2551 2573])
            ("xgselect.h" include nil nil [2574 2595])
            ("sysselect.h" include nil nil [2596 2618])
            ("sys/time.h" include (:system-flag t) nil [2695 2716])
            ("unistd.h" include (:system-flag t) nil [2745 2764])
            ("gtkutil.h" include nil nil [2788 2808])
            ("free_frame_menubar" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2997 3050])
            ("use_xim" variable
               (:default-value "1"
                :type "int")
                nil [3982 3998])
            ("Vx_toolkit_scroll_bars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4118 4153])
            ("any_help_event_p" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4237 4265])
            ("last_window" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4344 4375])
            ("x_use_underline_position_properties" variable (:type "int") nil [4448 4488])
            ("x_underline_at_descent_line" variable (:type "int") nil [4574 4606])
            ("x_display_list" variable
               (:pointer 1
                :type ("x_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [4690 4728])
            ("x_display_name_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4981 5013])
            ("updating_frame" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5291 5327])
            ("pending_autoraise_frame" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5402 5447])
            ("pending_event_wait" variable
               (:typemodifiers ("static")
                :type ("" type
                     (:members 
                        ( ("f" variable
                             (:pointer 1
                              :type ("frame" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil))
                              (reparse-symbol classsubparts) [5549 5565])
                          ("eventtype" variable (:type "int") (reparse-symbol classsubparts) [5568 5582]))                        
                      :type "struct")
                      nil nil))
                nil [5531 5604])
            ("toolkit_scroll_bar_interaction" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5837 5879])
            ("x_mouse_click_focus_ignore_position" variable (:type "int") nil [6007 6047])
            ("ignore_next_mouse_click_timeout" variable
               (:typemodifiers ("static")
                :type "unsigned long")
                nil [6253 6306])
            ("last_mouse_glyph" variable
               (:typemodifiers ("static")
                :type ("XRectangle" type (:type "class") nil nil))
                nil [7369 7404])
            ("last_mouse_glyph_frame" variable
               (:typemodifiers ("static")
                :type ("FRAME_PTR" type (:type "class") nil nil))
                nil [7405 7445])
            ("last_mouse_press_frame" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7446 7488])
            ("last_mouse_scroll_bar" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7870 7911])
            ("last_mouse_movement_time" variable
               (:typemodifiers ("static")
                :type ("Time" type (:type "class") nil nil))
                nil [8293 8330])
            ("last_user_time" variable
               (:typemodifiers ("static")
                :type ("Time" type (:type "class") nil nil))
                nil [8396 8423])
            ("input_signal_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [8568 8598])
            ("x_noop_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [8650 8674])
            ("initial_argv" variable
               (:pointer 2
                :typemodifiers ("extern")
                :type "char")
                nil [8717 8744])
            ("initial_argc" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [8745 8769])
            ("Vsystem_name" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8771 8823])
            ("Vcommand_line_args" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8771 8823])
            ("Vx_no_window_manager" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8878 8918])
            ("Qeql" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8920 8944])
            ("errno" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [8946 8963])
            ("extra_keyboard_modifiers" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9036 9078])
            ("Vx_super_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9134 9210])
            ("Vx_meta_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9134 9210])
            ("Vx_hyper_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9134 9210])
            ("Vx_alt_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9134 9210])
            ("Vx_keysym_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9211 9239])
            ("Qmodifier_value" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9240 9304])
            ("Qsuper" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9240 9304])
            ("Qmeta" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9240 9304])
            ("Qhyper" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9240 9304])
            ("Qalt" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9240 9304])
            ("Qvendor_specific_keysyms" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9306 9350])
            ("Qlatin_1" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9351 9379])
            ("xg_default_icon_file" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9436 9476])
            ("Qx_gtk_map_stock" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9504 9533])
            ("Vinhibit_redisplay" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9567 9605])
            ("x_load_resources" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("XrmDatabase" type (:type "class") nil nil))
                nil [9607 9684])
            ("x_bitmap_mask" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [9685 9732])
            ("x_alloc_nearest_color_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Colormap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [9734 9806])
            ("x_set_window_size_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [9807 9876])
            ("x_color_cells" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :constant-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("XColor" type (:type "class") nil nil))
                nil [9877 9936])
            ("x_update_window_end" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [9937 10002])
            ("x_io_error_quitter" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [10004 10051])
            ("x_create_terminal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [10052 10125])
            ("x_delete_terminal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10126 10174])
            ("x_update_end" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10175 10222])
            ("XTframe_up_to_date" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10223 10276])
            ("XTset_terminal_modes" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10277 10335])
            ("XTreset_terminal_modes" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10336 10396])
            ("x_clear_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10397 10445])
            ("frame_highlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10446 10496])
            ("frame_unhighlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10497 10549])
            ("x_new_focus_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10550 10627])
            ("x_focus_changed" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10628 10742])
            ("x_detect_focus_change" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10743 10879])
            ("XTframe_rehighlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10880 10934])
            ("x_frame_rehighlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10935 10998])
            ("x_draw_hollow_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10999 11075])
            ("x_draw_bar_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_cursor_kinds" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11076 11185])
            ("x_clip_to_row" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("GC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11187 11265])
            ("x_flush" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11266 11309])
            ("x_update_begin" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11310 11359])
            ("x_update_window_begin" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11360 11417])
            ("x_after_update_window_line" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11418 11483])
            ("x_window_to_scroll_bar" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("scroll_bar" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [11484 11558])
            ("x_scroll_bar_report_motion" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("scroll_bar_part" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "unsigned long")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11559 11734])
            ("x_handle_net_wm_state" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XPropertyEvent" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11735 11809])
            ("x_check_fullscreen" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11810 11863])
            ("x_check_expected_move" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11864 11930])
            ("x_sync_with_move" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11931 11997])
            ("handle_one_xevent" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11998 12103])
            ("x_connection_closed" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12207 12267])
            ("x_flush" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [12335 12792])
            ("XFlush" variable (:constant-flag t) nil [13147 13153])
            ("x_display_info_for_display" function
               (:pointer 1
                :arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type ("x_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [13950 14199])
            ("OPAQUE" variable (:constant-flag t) nil [14209 14215])
            ("OPACITY" variable (:constant-flag t) nil [14236 14243])
            ("x_set_frame_alpha" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [14270 15979])
            ("x_display_pixel_height" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [15981 16101])
            ("x_display_pixel_width" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [16103 16221])
            ("x_update_begin" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [16752 16832])
            ("x_update_window_begin" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [16994 17602])
            ("x_draw_vertical_window_border" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y1" variable (:type "int") nil nil)
                    ("y0" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [17665 18101])
            ("x_update_window_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("mouse_face_overwritten_p" variable (:type "int") nil nil)
                    ("cursor_on_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [18630 19516])
            ("x_update_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [19606 19846])
            ("XTframe_up_to_date" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [20024 20520])
            ("x_after_update_window_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("desired_row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [20928 22153])
            ("x_draw_fringe_bitmap" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type ("draw_fringe_bitmap_params" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [22155 26165])
            ("XTset_terminal_modes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26433 26459]))                  
                :type "void")
                nil [26399 26463])
            ("XTreset_terminal_modes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26638 26664]))                  
                :type "void")
                nil [26602 26668])
            ("x_set_glyph_string_clipping" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26843 26912])
            ("x_set_glyph_string_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26913 26976])
            ("x_draw_glyph_string_background" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26977 27060])
            ("x_draw_glyph_string_foreground" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27061 27133])
            ("x_draw_composite_glyph_string_foreground" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27134 27216])
            ("x_draw_glyph_string_box" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27217 27282])
            ("x_draw_glyph_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27283 27345])
            ("x_compute_glyph_string_overhangs" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27346 27420])
            ("x_set_cursor_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27421 27478])
            ("x_set_mode_line_face_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27479 27544])
            ("x_set_mouse_face_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27545 27606])
            ("x_alloc_lighter_color" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Colormap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "unsigned long")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [27607 27723])
            ("x_setup_relief_color" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("relief" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27724 27834])
            ("x_setup_relief_colors" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27835 27898])
            ("x_draw_image_glyph_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27899 27966])
            ("x_draw_image_relief" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27967 28028])
            ("x_draw_image_foreground" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28029 28094])
            ("x_draw_image_foreground_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Pixmap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28095 28170])
            ("x_clear_glyph_string_rect" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28171 28266])
            ("x_draw_relief_rect" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28267 28400])
            ("x_draw_box_rect" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28401 28512])
            ("x_check_font" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28530 28592])
            ("x_set_cursor_gc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [28683 30283])
            ("x_set_mouse_face_gc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [30357 31714])
            ("x_set_mode_line_face_gc" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [31932 32020])
            ("x_set_glyph_string_gc" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [32189 33073])
            ("x_set_glyph_string_clipping" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [33218 33463])
            ("x_set_glyph_string_clipping_exactly" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dst" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("src" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [33630 33939])
            ("x_compute_glyph_string_overhangs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [34009 35049])
            ("x_clear_glyph_string_rect" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("h" variable (:type "int") nil nil)
                    ("w" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [35141 35502])
            ("x_draw_glyph_string_background" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("force_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [35825 36846])
            ("x_draw_glyph_string_foreground" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [36896 38078])
            ("x_draw_composite_glyph_string_foreground" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [38137 40508])
            ("x_color_cells" function
               (:pointer 1
                :typemodifiers ("static")
                :constant-flag t
                :arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("ncells" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("XColor" type (:type "class") nil nil))
                nil [47280 47987])
            ("x_query_colors" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("colors" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil)
                    ("ncolors" variable (:type "int") nil nil))                  
                :type "void")
                nil [48123 48658])
            ("x_query_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [48783 48890])
            ("x_alloc_nearest_color_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("cmap" variable (:type ("Colormap" type (:type "class") nil nil)) nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [49110 51018])
            ("x_alloc_nearest_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("cmap" variable (:type ("Colormap" type (:type "class") nil nil)) nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [51238 51443])
            ("x_copy_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pixel" variable (:type "unsigned long") nil nil))                  
                :type "unsigned long")
                nil [51627 51961])
            ("x_copy_dpy_color" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("cmap" variable (:type ("Colormap" type (:type "class") nil nil)) nil nil)
                    ("pixel" variable (:type "unsigned long") nil nil))                  
                :type "unsigned long")
                nil [52149 52486])
            ("HIGHLIGHT_COLOR_DARK_BOOST_LIMIT" variable (:constant-flag t) nil [53022 53054])
            ("x_alloc_lighter_color" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("cmap" variable (:type ("Colormap" type (:type "class") nil nil)) nil nil)
                    ("pixel" variable
                       (:pointer 1
                        :type "unsigned long")
                        nil nil)
                    ("factor" variable (:type "double") nil nil)
                    ("delta" variable (:type "int") nil nil))                  
                :type "int")
                nil [53446 55551])
            ("x_setup_relief_color" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("relief" variable
                       (:pointer 1
                        :type ("relief" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("factor" variable (:type "double") nil nil)
                    ("delta" variable (:type "int") nil nil)
                    ("default_pixel" variable (:type "unsigned long") nil nil))                  
                :type "void")
                nil [55947 57374])
            ("x_setup_relief_colors" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [57443 58338])
            ("x_draw_relief_rect" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("bottom_y" variable (:type "int") nil nil)
                    ("right_x" variable (:type "int") nil nil)
                    ("top_y" variable (:type "int") nil nil)
                    ("left_x" variable (:type "int") nil nil)
                    ("raised_p" variable (:type "int") nil nil)
                    ("right_p" variable (:type "int") nil nil)
                    ("left_p" variable (:type "int") nil nil)
                    ("bot_p" variable (:type "int") nil nil)
                    ("top_p" variable (:type "int") nil nil)
                    ("clip_rect" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [58775 60230])
            ("x_draw_box_rect" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("right_p" variable (:type "int") nil nil)
                    ("left_p" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("bottom_y" variable (:type "int") nil nil)
                    ("right_x" variable (:type "int") nil nil)
                    ("top_y" variable (:type "int") nil nil)
                    ("left_x" variable (:type "int") nil nil)
                    ("clip_rect" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [60609 61663])
            ("x_draw_glyph_string_box" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [61708 63131])
            ("x_draw_image_foreground" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [63183 65975])
            ("x_draw_image_relief" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [66033 67411])
            ("x_draw_image_foreground_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pixmap" variable (:type ("Pixmap" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [67477 69785])
            ("x_draw_glyph_string_bg_rect" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("h" variable (:type "int") nil nil)
                    ("w" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [69890 70317])
            ("x_draw_image_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [70602 73601])
            ("x_draw_stretch_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [73641 75886])
            ("x_draw_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [75918 83540])
            ("x_shift_glyphs_for_insert" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("shift_by" variable (:type "int") nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [83599 83890])
            ("x_delete_glyphs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("n" variable (:type "int") nil nil))                  
                :type "void")
                nil [83982 84075])
            ("x_clear_area" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("window" variable (:type ("Window" type (:type "class") nil nil)) nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("exposures" variable (:type "int") nil nil))                  
                :type "void")
                nil [84199 84461])
            ("x_clear_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [84522 84538]))                  
                :type "void")
                nil [84495 85377])
            ("timeval_subtract" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("y" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("x" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("result" variable
                       (:pointer 1
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [85783 86608])
            ("XTflash" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [86610 90997])
            ("XTtoggle_invisible_pointer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("invisible" variable (:type "int") nil nil))                  
                :type "void")
                nil [91062 91567])
            ("XTring_bell" function (:type "void") nil [91597 91915])
            ("XTset_terminal_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("n" variable (:type "int") nil nil))                  
                :type "void")
                nil [92177 92288])
            ("x_ins_del_lines" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("n" variable (:type "int") nil nil)
                    ("vpos" variable (:type "int") nil nil))                  
                :type "void")
                nil [92589 92685])
            ("x_scroll_run" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("run" variable
                       (:pointer 1
                        :type ("run" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [92744 94018])
            ("frame_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [94195 94709])
            ("frame_unhighlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [94711 95231])
            ("x_new_focus_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [95593 96230])
            ("x_focus_changed" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("type" variable (:type "int") nil nil)
                    ("state" variable (:type "int") nil nil)
                    ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [96390 97725])
            ("x_detect_focus_change" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [97909 99193])
            ("x_mouse_leave" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [99270 99400])
            ("XTframe_rehighlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [99776 99899])
            ("x_frame_rehighlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [99901 100690])
            ("x_find_modifier_meanings" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [100826 103516])
            ("x_x_to_emacs_modifiers" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("state" variable (:type "unsigned int") nil nil))                  
                :type "unsigned int")
                nil [103604 104695])
            ("x_emacs_to_x_modifiers" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("state" variable (:type "unsigned int") nil nil))                  
                :type "unsigned int")
                nil [104697 105779])
            ("x_get_keysym_name" function
               (:pointer 1
                :arguments 
                  ( ("keysym" variable (:type ("KeySym" type (:type "class") nil nil)) nil nil))                  
                :type "char")
                nil [105819 105977])
            ("construct_mouse_click" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("XButtonEvent" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106185 106859])
            ("last_mouse_motion_event" variable
               (:typemodifiers ("static")
                :type ("XMotionEvent" type (:type "class") nil nil))
                nil [107252 107296])
            ("last_mouse_motion_frame" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107297 107340])
            ("note_mouse_movement" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("XMotionEvent" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [107342 108478])
            ("redo_mouse_highlight" function
               (:typemodifiers ("static")
                :type "void")
                nil [108652 108912])
            ("XTmouse_position" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fp" variable
                       (:pointer 1
                        :type ("FRAME_PTR" type (:type "class") nil nil))
                        nil nil)
                    ("insist" variable (:type "int") nil nil)
                    ("bar_window" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("part" variable
                       (:pointer 1
                        :type ("scroll_bar_part" type (:type "enum") nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("time" variable
                       (:pointer 1
                        :type "unsigned long")
                        nil nil))                  
                :type "void")
                nil [109696 114976])
            ("x_window_to_scroll_bar" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("window_id" variable (:type ("Window" type (:type "class") nil nil)) nil nil))                  
                :type ("scroll_bar" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [115351 116584])
            ("x_window_to_menu_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Window" type (:type "class") nil nil)) nil nil))                  
                :type ("Widget" type (:type "class") nil nil))
                nil [116716 117168])
            ("x_scroll_bar_to_input_event" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117402 117480])
            ("x_send_scroll_bar_event" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117481 117551])
            ("x_create_toolkit_scroll_bar" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117552 117645])
            ("x_set_toolkit_scroll_bar_thumb" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [117646 117737])
            ("window_being_scrolled" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117879 117920])
            ("last_scroll_bar_part" variable
               (:typemodifiers ("static")
                :type "int")
                nil [117979 118011])
            ("scroll_bar_windows" variable
               (:pointer 2
                :typemodifiers ("static")
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [120072 120114])
            ("scroll_bar_windows_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [120115 120150])
            ("x_send_scroll_bar_event" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("portion" variable (:type "int") nil nil)
                    ("part" variable (:type "int") nil nil))                  
                :type "void")
                nil [120401 122367])
            ("x_scroll_bar_to_input_event" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        nil nil)
                    ("ievent" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [122460 123250])
            ("xg_scroll_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("range" variable
                       (:pointer 1
                        :type ("GtkRange" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [125264 125284])
                    ("scroll" variable (:type ("GtkScrollType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125305 125326])
                    ("value" variable (:type ("gdouble" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125347 125367])
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125388 125412]))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [125228 126854])
            ("xg_end_scroll_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [126978 126996])
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEventButton" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [127021 127043])
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127068 127087]))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [126938 127394])
            ("SCROLL_BAR_NAME" variable (:constant-flag t) nil [130316 130331])
            ("x_create_toolkit_scroll_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [130486 130833])
            ("x_set_toolkit_scroll_bar_thumb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("position" variable (:type "int") nil nil)
                    ("portion" variable (:type "int") nil nil))                  
                :type "void")
                nil [137342 137551])
            ("x_scroll_bar_create" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("left" variable (:type "int") nil nil)
                    ("top" variable (:type "int") nil nil))                  
                :type ("scroll_bar" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [141242 144345])
            ("x_scroll_bar_remove" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [148041 148595])
            ("XTset_vertical_scroll_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("position" variable (:type "int") nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("portion" variable (:type "int") nil nil))                  
                :type "void")
                nil [148822 155132])
            ("XTcondemn_scroll_bars" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [155833 156424])
            ("XTredeem_scroll_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [156556 157732])
            ("XTjudge_scroll_bars" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [157853 158439])
            ("x_scroll_bar_handle_click" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        nil nil)
                    ("emacs_event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [159967 161528])
            ("x_scroll_bar_report_motion" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fp" variable
                       (:pointer 1
                        :type ("FRAME_PTR" type (:type "class") nil nil))
                        nil nil)
                    ("bar_window" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("part" variable
                       (:pointer 1
                        :type ("scroll_bar_part" type (:type "enum") nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("time" variable
                       (:pointer 1
                        :type "unsigned long")
                        nil nil))                  
                :type "void")
                nil [162491 164169])
            ("x_scroll_bar_clear" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [164394 164903])
            ("compose_status" variable
               (:typemodifiers ("static")
                :type ("XComposeStatus" type (:type "class") nil nil))
                nil [165359 165396])
            ("temp_index" variable
               (:typemodifiers ("static")
                :type "int")
                nil [165498 165520])
            ("temp_buffer" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "short")
                nil [165521 165551])
            ("STORE_KEYSYM_FOR_DEBUG" variable (:constant-flag t) nil [165561 165583])
            ("XTread_socket_fake_io_error" variable
               (:pointer 1
                :type ("x_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [165804 165855])
            ("next_noop_dpyinfo" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("x_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [166108 166156])
            ("SET_SAVED_MENU_EVENT" variable (:constant-flag t) nil [166166 166186])
            ("SET_SAVED_BUTTON_EVENT" variable (:constant-flag t) nil [166590 166612])
            ("SET_SAVED_KEY_EVENT" variable (:constant-flag t) nil [166666 166685])
            ("" type
               (:members 
                  ( ("X_EVENT_NORMAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [166742 166757])
                    ("X_EVENT_GOTO_OUT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [166760 166777])
                    ("X_EVENT_DROP" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [166780 166794]))                  
                :type "enum")
                nil [166733 166795])
            ("x_filter_event" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [167091 167572])
            ("current_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [167596 167621])
            ("current_finish" variable
               (:typemodifiers ("static")
                :type "int")
                nil [167622 167648])
            ("current_hold_quit" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("input_event" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [167649 167694])
            ("event_handler_gdk" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("gxev" variable
                       (:pointer 1
                        :type ("GdkXEvent" type (:type "class") nil nil))
                        nil nil)
                    ("ev" variable
                       (:pointer 1
                        :type ("GdkEvent" type (:type "class") nil nil))
                        nil nil)
                    ("data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("GdkFilterReturn" type (:type "class") nil nil))
                nil [167880 168937])
            ("handle_one_xevent" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("eventp" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        nil nil)
                    ("finish" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("hold_quit" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [169280 210650])
            ("x_dispatch_event" function
               (:arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        nil nil)
                    ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [210899 211185])
            ("XTread_socket" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("expected" variable (:type "int") nil nil)
                    ("hold_quit" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [211614 215104])
            ("x_clip_to_row" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil)
                    ("gc" variable (:type ("GC" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [215604 216196])
            ("x_draw_hollow_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [216262 217590])
            ("x_draw_bar_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("kind" variable (:type ("text_cursor_kinds" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [217870 220614])
            ("x_define_frame_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("cursor" variable (:type ("Cursor" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [220663 220949])
            ("x_clear_frame_area" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [220988 221362])
            ("x_draw_window_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyph_row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("cursor_width" variable (:type "int") nil nil)
                    ("cursor_type" variable (:type "int") nil nil)
                    ("active_p" variable (:type "int") nil nil)
                    ("on_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [221403 222674])
            ("x_bitmap_icon" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("file" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [222755 224694])
            ("x_text_icon" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("icon_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [224791 225336])
            ("X_ERROR_MESSAGE_SIZE" variable (:constant-flag t) nil [225347 225367])
            ("x_error_message_stack" type
               (:members 
                  ( ("string" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [225630 225664])
                    ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [225667 225680])
                    ("prev" variable
                       (:pointer 1
                        :type ("x_error_message_stack" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [225683 225718]))                  
                :type "struct")
                nil [225597 225721])
            ("x_error_message" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("x_error_message_stack" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [225722 225775])
            ("x_error_catcher" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("error" variable
                       (:pointer 1
                        :type ("XErrorEvent" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [225931 226126])
            ("x_check_errors" function
               (:prototype-flag t
                :type "void")
                nil [226647 226670])
            ("x_catch_errors" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [226672 226984])
            ("x_uncatch_errors" function (:type "void") nil [227093 227506])
            ("x_check_errors" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("format" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [227711 228078])
            ("x_had_errors_p" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [228167 228335])
            ("x_clear_errors" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [228418 228500])
            ("x_fully_uncatch_errors" function (:type "void") nil [228653 228738])
            ("x_catching_errors" function (:type "int") nil [228817 228876])
            ("x_connection_signal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("signalnum" variable (:type "int") nil nil))                  
                :type "void")
                nil [229333 229647])
            ("error_msg" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [229877 229900])
            ("x_fatal_error_signal" function
               (:typemodifiers ("static")
                :type "void")
                nil [230084 230175])
            ("x_connection_closed" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("error_message" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [230315 234554])
            ("x_error_quitter" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XErrorEvent" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [234707 234767])
            ("x_error_handler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("error" variable
                       (:pointer 1
                        :type ("XErrorEvent" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [234880 235093])
            ("NO_INLINE" variable (:constant-flag t) nil [235432 235441])
            ("x_error_quitter" function
               (:arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("error" variable
                       (:pointer 1
                        :type ("XErrorEvent" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [235751 236319])
            ("x_io_error_quitter" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [236511 236723])
            ("x_new_font" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("font_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("fontset" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [236981 238613])
            ("xim_destroy_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("xim" variable (:type ("XIM" type (:type "class") nil nil)) nil nil)
                    ("client_data" variable (:type ("XPointer" type (:type "class") nil nil)) nil nil)
                    ("call_data" variable (:type ("XPointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [239023 239628])
            ("XSetIMValues" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("XIM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [239722 239764])
            ("xim_open_dpy" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("resource_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [239889 240642])
            ("xim_instantiate_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("XPointer" type (:type "class") nil nil)) nil nil)
                    ("call_data" variable (:type ("XPointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [240909 242033])
            ("xim_initialize" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("resource_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [242312 243339])
            ("xim_close_dpy" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [243408 243976])
            ("x_calc_absolute_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [244123 245648])
            ("x_set_offset" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("yoff" variable (:type "int") nil nil)
                    ("xoff" variable (:type "int") nil nil)
                    ("change_gravity" variable (:type "int") nil nil))                  
                :type "void")
                nil [245985 248265])
            ("wm_supports" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("atomname" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [248582 251199])
            ("set_wm_state" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("add" variable (:type "int") nil nil)
                    ("what" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("what2" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [251201 251969])
            ("x_set_sticky" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("old_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("new_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [251971 252221])
            ("do_ewmh_fullscreen" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [252290 253614])
            ("XTfullscreen_hook" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [253616 253795])
            ("x_handle_net_wm_state" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("XPropertyEvent" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [253798 255904])
            ("x_check_fullscreen" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [256013 257157])
            ("x_check_expected_move" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("expected_left" variable (:type "int") nil nil)
                    ("expected_top" variable (:type "int") nil nil))                  
                :type "void")
                nil [257667 258942])
            ("x_sync_with_move" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("fuzzy" variable (:type "int") nil nil)
                    ("top" variable (:type "int") nil nil)
                    ("left" variable (:type "int") nil nil))                  
                :type "void")
                nil [259274 260251])
            ("x_wait_for_event" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("eventtype" variable (:type "int") nil nil))                  
                :type "void")
                nil [260310 261354])
            ("x_set_window_size_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("change_gravity" variable (:type "int") nil nil)
                    ("rows" variable (:type "int") nil nil)
                    ("cols" variable (:type "int") nil nil))                  
                :type "void")
                nil [261631 263845])
            ("x_set_window_size" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("change_gravity" variable (:type "int") nil nil)
                    ("rows" variable (:type "int") nil nil)
                    ("cols" variable (:type "int") nil nil))                  
                :type "void")
                nil [264084 266054])
            ("x_set_mouse_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [266080 266635])
            ("x_set_mouse_pixel_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pix_y" variable (:type "int") nil nil)
                    ("pix_x" variable (:type "int") nil nil))                  
                :type "void")
                nil [266712 266935])
            ("x_focus_on_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [266984 267363])
            ("x_unfocus_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [267365 267635])
            ("x_raise_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [267660 267861])
            ("x_lower_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [267886 268112])
            ("x_ewmh_activate_frame" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [268171 268863])
            ("XTframe_raise_lower" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("raise_flag" variable (:type "int") nil nil))                  
                :type "void")
                nil [268865 269026])
            ("xembed_set_info" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("flags" variable (:type ("xembed_info" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [269060 269431])
            ("xembed_send_message" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("time" variable (:type ("Time" type (:type "class") nil nil)) nil nil)
                    ("message" variable (:type ("xembed_message" type (:type "enum") nil nil)) nil nil)
                    ("detail" variable (:type "long") nil nil)
                    ("data1" variable (:type "long") nil nil)
                    ("data2" variable (:type "long") nil nil))                  
                :type "void")
                nil [269433 270159])
            ("x_make_frame_visible" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [270525 275539])
            ("x_make_frame_invisible" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [275653 277250])
            ("x_iconify_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [277306 280550])
            ("x_free_frame_resources" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [280591 284464])
            ("x_destroy_window" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [284508 284809])
            ("x_wm_set_window_state" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("state" variable (:type "int") nil nil))                  
                :type "void")
                nil [288111 288594])
            ("x_wm_set_icon_pixmap" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pixmap_id" variable (:type "int") nil nil))                  
                :type "void")
                nil [288596 289791])
            ("x_wm_set_icon_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("icon_y" variable (:type "int") nil nil)
                    ("icon_x" variable (:type "int") nil nil))                  
                :type "void")
                nil [289793 290157])
            ("x_check_font" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("font" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [290429 290679])
            ("x_initialized" variable
               (:typemodifiers ("static")
                :type "int")
                nil [291839 291864])
            ("x_session_initialized" variable
               (:typemodifiers ("static")
                :type "int")
                nil [291883 291916])
            ("same_x_server" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("name2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("name1" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [292050 293493])
            ("get_bits_and_offset" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("mask" variable (:type "unsigned long") nil nil)
                    ("bits" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("offset" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [293649 293953])
            ("x_display_ok" function
               (:arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [294088 294302])
            ("my_log_handler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("log_domain" variable
                       (:pointer 1
                        :type ("gchar" type (:type "class") nil nil))
                        nil nil)
                    ("log_level" variable (:type ("GLogLevelFlags" type (:type "class") nil nil)) nil nil)
                    ("message" variable
                       (:pointer 1
                        :type ("gchar" type (:type "class") nil nil))
                        nil nil)
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [294319 294616])
            ("x_term_init" function
               (:pointer 1
                :arguments 
                  ( ("display_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("xrm_option" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("resource_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("x_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [294791 312201])
            ("x_delete_display" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [312325 313931])
            ("x_frame_parm_handlers" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type ("frame_parm_handler" type (:type "class") nil nil))
                nil [315452 315502])
            ("x_redisplay_interface" variable
               (:typemodifiers ("static")
                :default-value "{
    x_frame_parm_handlers,
    x_produce_glyphs,
    x_write_glyphs,
    x_insert_glyphs,
    x_clear_end_of_line,
    x_scroll_run,
    x_after_update_window_line,
    x_update_window_begin,
    x_update_window_end,
    x_cursor_to,
    x_flush,
#ifdef XFlush
    x_flush,
#else
    0,  /* flush_display_optional */
#endif
    x_clear_window_mouse_face,
    x_get_glyph_overhangs,
    x_fix_overlapping_area,
    x_draw_fringe_bitmap,
    0, /* define_fringe_bitmap */
    0, /* destroy_fringe_bitmap */
    x_compute_glyph_string_overhangs,
    x_draw_glyph_string,
    x_define_frame_cursor,
    x_clear_frame_area,
    x_draw_window_cursor,
    x_draw_vertical_window_border,
    x_shift_glyphs_for_insert
  }"
                :type ("redisplay_interface" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [315504 316280])
            ("x_delete_terminal" function
               (:arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [316382 316408]))                  
                :type "void")
                nil [316358 318491])
            ("x_create_terminal" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [318660 318691]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [318616 320554])
            ("x_initialize" function (:type "void") nil [320556 321852])
            ("syms_of_xterm" function (:type "void") nil [321855 326716]))          
    :file "xterm.c"
    :pointmax 326832
    :fsize 326831
    :lastmodtime '(19390 29550)
    :unmatched-syntax '((semantic-list "((noinline))" 235741 . 235750) (symbol "__attribute__" 235741 . 235750) (VOID 235736 . 235740) (STATIC 235729 . 235735) (punctuation 228598 . 228599) (punctuation 228597 . 228598) (symbol 228586 . 228594) (punctuation 228585 . 228586) (punctuation 228584 . 228585) (punctuation 228581 . 228582) (symbol 228577 . 228581) (punctuation 228575 . 228576) (symbol "__inline__" 35134 . 35140) (STATIC 35127 . 35133) (symbol "__inline__" 33211 . 33217) (STATIC 33204 . 33210) (symbol "__inline__" 32182 . 32188) (STATIC 32175 . 32181) (symbol "__inline__" 31925 . 31931) (STATIC 31918 . 31924))
    :lexical-table 
        '(("NO_INLINE" . ((symbol "__attribute__" 235442 . 235455) (semantic-list "((noinline))" 235455 . 235467)))
          ("OPAQUE" . ((number "0xffffffff" 14217 . 14227)))
          ("SCROLL_BAR_NAME" . ((string "\"verticalScrollBar\"" 130332 . 130351)))
          ("SET_SAVED_KEY_EVENT" . ((symbol "SET_SAVED_MENU_EVENT" 166689 . 166709) (semantic-list "(sizeof (XKeyEvent))" 166710 . 166730)))
          ("X_ERROR_MESSAGE_SIZE" . ((number "200" 225368 . 225371)))
          ("HIGHLIGHT_COLOR_DARK_BOOST_LIMIT" . ((number "48000" 53055 . 53060)))
          ("STORE_KEYSYM_FOR_DEBUG" (spp-arg-list ("keysym") 165583 . 165591) . 
              ((IF "if" 165599 . 165601) (semantic-list "(temp_index == sizeof temp_buffer / sizeof (short))" 165602 . 165653) (symbol "temp_index" 165660 . 165670) (punctuation "=" 165671 . 165672) (number "0" 165673 . 165674) (punctuation ";" 165674 . 165675) (symbol "temp_buffer" 165685 . 165696) (semantic-list "[temp_index++]" 165696 . 165710) (punctuation "=" 165711 . 165712) (semantic-list "(keysym)" 165713 . 165721)))
          ("SET_SAVED_BUTTON_EVENT" . ((symbol "SET_SAVED_MENU_EVENT" 166613 . 166633) (semantic-list "(sizeof (XButtonEvent))" 166634 . 166657)))
          ("XFlush" (spp-arg-list ("DISPLAY") 13153 . 13162) . ((semantic-list "(void)" 13163 . 13169) (number "0" 13170 . 13171)))
          ("OPACITY" . ((string "\"_NET_WM_WINDOW_OPACITY\"" 14244 . 14268)))
          ("SET_SAVED_MENU_EVENT" (spp-arg-list ("size") 166186 . 166192) . 
              ((DO "do" 166204 . 166206) (semantic-list "{								\\
	 if (f->output_data.x->saved_menu_event == 0)			\\
           f->output_data.x->saved_menu_event				\\
	     = (XEvent *) xmalloc (sizeof (XEvent));			\\
         bcopy (&event, f->output_data.x->saved_menu_event, size);	\\
	 inev.ie.kind = MENU_BAR_ACTIVATE_EVENT;			\\
	 XSETFRAME (inev.ie.frame_or_window, f);			\\
       }" 166224 . 166556) (WHILE "while" 166571 . 166576) (semantic-list "(0)" 166577 . 166580)))
          )

    )
   (semanticdb-table "gtkutil.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [795 814])
            ("string.h" include (:system-flag t) nil [831 850])
            ("signal.h" include (:system-flag t) nil [851 870])
            ("stdio.h" include (:system-flag t) nil [871 889])
            ("setjmp.h" include (:system-flag t) nil [890 909])
            ("lisp.h" include nil nil [910 927])
            ("xterm.h" include nil nil [928 946])
            ("blockinput.h" include nil nil [947 970])
            ("syssignal.h" include nil nil [971 993])
            ("window.h" include nil nil [994 1013])
            ("gtkutil.h" include nil nil [1014 1034])
            ("termhooks.h" include nil nil [1035 1057])
            ("keyboard.h" include nil nil [1058 1079])
            ("charset.h" include nil nil [1080 1100])
            ("coding.h" include nil nil [1101 1120])
            ("gdk/gdkkeysyms.h" include (:system-flag t) nil [1121 1148])
            ("X11/Xft/Xft.h" include (:system-flag t) nil [1166 1190])
            ("FRAME_TOTAL_PIXEL_HEIGHT" variable (:constant-flag t) nil [1207 1231])
            ("SSDATA" variable (:constant-flag t) nil [1365 1371])
            ("gdpy_def" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("GdkDisplay" type (:type "class") nil nil))
                nil [1734 1762])
            ("xg_set_screen" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [1934 2351])
            ("xg_display_open" function
               (:arguments 
                  ( ("display_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("dpy" variable
                       (:pointer 2
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [3193 3695])
            ("xg_display_close" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3748 3761]))                  
                :type "void")
                nil [3725 4969])
            ("widget_value_free_list" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("widget_value" type (:type "class") nil nil))
                nil [5226 5270])
            ("malloc_cpt" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5271 5293])
            ("malloc_widget_value" function
               (:pointer 1
                :type ("widget_value" type (:type "class") nil nil))
                nil [5471 5834])
            ("free_widget_value" function
               (:arguments 
                  ( ("wv" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [5954 6299])
            ("xg_create_default_cursor" function
               (:pointer 1
                :arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GdkCursor" type (:type "class") nil nil))
                nil [6401 6576])
            ("xg_get_pixbuf_from_pix_and_mask" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("gpix" variable
                       (:pointer 1
                        :type ("GdkPixmap" type (:type "class") nil nil))
                        nil nil)
                    ("gmask" variable
                       (:pointer 1
                        :type ("GdkPixmap" type (:type "class") nil nil))
                        nil nil)
                    ("cmap" variable
                       (:pointer 1
                        :type ("GdkColormap" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GdkPixbuf" type (:type "class") nil nil))
                nil [6652 8404])
            ("file_for_image" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("image" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8406 8796])
            ("xg_get_image_for_pixmap" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("img" variable
                       (:pointer 1
                        :type ("image" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("old_widget" variable
                       (:pointer 1
                        :type ("GtkImage" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [9483 11905])
            ("xg_set_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("cursor" variable
                       (:pointer 1
                        :type ("GdkCursor" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [12094 12645])
            ("xg_list_insert" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable
                       (:pointer 1
                        :type ("xg_list_node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12713 12732])
                    ("node" variable
                       (:pointer 1
                        :type ("xg_list_node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12733 12752]))                  
                :type "void")
                nil [12685 12907])
            ("xg_list_remove" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable
                       (:pointer 1
                        :type ("xg_list_node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12975 12994])
                    ("node" variable
                       (:pointer 1
                        :type ("xg_list_node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12995 13014]))                  
                :type "void")
                nil [12947 13281])
            ("get_utf8_string" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [13476 15225])
            ("xg_set_geometry" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [15678 16591])
            ("xg_clear_under_internal_border" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [16739 17957])
            ("xg_frame_resized" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("pixelheight" variable (:type "int") nil nil)
                    ("pixelwidth" variable (:type "int") nil nil))                  
                :type "void")
                nil [18242 19195])
            ("xg_frame_set_char_size" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("cols" variable (:type "int") nil nil)
                    ("rows" variable (:type "int") nil nil))                  
                :type "void")
                nil [19339 21374])
            ("xg_height_changed" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [21493 21753])
            ("xg_win_to_widget" function
               (:pointer 1
                :arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("wdesc" variable (:type ("Window" type (:type "class") nil nil)) nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [21976 22411])
            ("xg_pix_to_gcolor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("pixel" variable (:type "unsigned long") nil nil)
                    ("c" variable
                       (:pointer 1
                        :type ("GdkColor" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [22545 22748])
            ("xg_create_frame_widgets" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [22857 27089])
            ("x_wm_set_size_hint" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("flags" variable (:type "long") nil nil)
                    ("user_position" variable (:type "int") nil nil))                  
                :type "void")
                nil [27356 30712])
            ("xg_set_background_color" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("bg" variable (:type "unsigned long") nil nil))                  
                :type "void")
                nil [30932 31255])
            ("xg_set_frame_icon" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("icon_pixmap" variable (:type ("Pixmap" type (:type "class") nil nil)) nil nil)
                    ("icon_mask" variable (:type ("Pixmap" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [31383 31873])
            ("get_dialog_title" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("key" variable (:type "char") (reparse-symbol arg-sub-list) [32226 32235]))                  
                :type "char")
                nil [32194 32583])
            ("dialog_delete_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEvent" type (:type "class") nil nil))
                        nil nil)
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [33104 33273])
            ("create_dialog" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("wv" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("deactivate_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [33564 37221])
            ("xg_dialog_data" type
               (:members 
                  ( ("loop" variable
                       (:pointer 1
                        :type ("GMainLoop" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37249 37265])
                    ("response" variable (:type "int") (reparse-symbol classsubparts) [37268 37281])
                    ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37284 37297])
                    ("timerid" variable (:type ("guint" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37300 37314]))                  
                :type "struct")
                nil [37223 37317])
            ("xg_dialog_response_cb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkDialog" type (:type "class") nil nil))
                        nil nil)
                    ("response" variable (:type ("gint" type (:type "class") nil nil)) nil nil)
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [37504 37800])
            ("pop_down_dialog" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [37857 38252])
            ("xg_maybe_add_timer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [38404 38914])
            ("xg_dialog_run" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [39112 40143])
            ("xg_uses_old_file_dialog" function (:type "int") nil [40433 40710])
            ("xg_get_file_func" variable
               (:functionpointer-flag t
                :type "char")
                nil [40721 40767])
            ("xg_get_file_name_from_chooser" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil))                  
                :type "char")
                nil [40909 41042])
            ("xg_toggle_visibility_cb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [41181 41485])
            ("xg_toggle_notify_cb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("gobject" variable
                       (:pointer 1
                        :type ("GObject" type (:type "class") nil nil))
                        nil nil)
                    ("arg1" variable
                       (:pointer 1
                        :type ("GParamSpec" type (:type "class") nil nil))
                        nil nil)
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [41816 42809])
            ("xg_get_file_with_chooser" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("default_filename" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("only_dir_p" variable (:type "int") nil nil)
                    ("mustmatch_p" variable (:type "int") nil nil)
                    ("func" variable
                       (:pointer 1
                        :type ("xg_get_file_func" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [43265 47048])
            ("xg_get_file_name_from_selector" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil))                  
                :type "char")
                nil [47232 47427])
            ("xg_get_file_with_selection" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("default_filename" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("only_dir_p" variable (:type "int") nil nil)
                    ("mustmatch_p" variable (:type "int") nil nil)
                    ("func" variable
                       (:pointer 1
                        :type ("xg_get_file_func" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [47855 48635])
            ("xg_get_file_name" function
               (:pointer 1
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("default_filename" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("only_dir_p" variable (:type "int") nil nil)
                    ("mustmatch_p" variable (:type "int") nil nil))                  
                :type "char")
                nil [49274 50885])
            ("xg_get_font_name" function
               (:pointer 1
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("default_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [51212 52084])
            ("MENU_ITEM_NAME" variable (:constant-flag t) nil [52514 52528])
            ("xg_menu_cb_list" variable
               (:typemodifiers ("static")
                :type ("xg_list_node" type (:type "class") nil nil))
                nil [52678 52714])
            ("xg_menu_item_cb_list" variable
               (:typemodifiers ("static")
                :type ("xg_list_node" type (:type "class") nil nil))
                nil [52851 52892])
            ("make_cl_data" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil))                  
                :type ("xg_menu_cb_data" type (:type "class") nil nil))
                nil [53337 53888])
            ("update_cl_data" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [54433 54775])
            ("unref_cl_data" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [54868 55162])
            ("xg_mark_data" function (:type "void") nil [55217 55608])
            ("menuitem_destroy_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [55814 56100])
            ("menuitem_highlight_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEventCrossing" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [56346 57084])
            ("menu_destroy_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [57275 57425])
            ("make_widget_for_menu_item" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("utf8_label" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("utf8_key" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [57586 58252])
            ("make_menu_item" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("utf8_label" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("utf8_key" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("item" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("group" variable
                       (:pointer 2
                        :type ("GSList" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [58987 60487])
            ("separator_names" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
  \"space\",
  \"no-line\",
  \"single-line\",
  \"double-line\",
  \"single-dashed-line\",
  \"double-dashed-line\",
  \"shadow-etched-in\",
  \"shadow-etched-out\",
  \"shadow-etched-in-dash\",
  \"shadow-etched-out-dash\",
  \"shadow-double-etched-in\",
  \"shadow-double-etched-out\",
  \"shadow-double-etched-in-dash\",
  \"shadow-double-etched-out-dash\",
  0,
}"
                :type "char")
                nil [60581 60963])
            ("xg_separator_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("label" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [60992 61004]))                  
                :type "int")
                nil [60965 61469])
            ("xg_detached_menus" variable
               (:typemodifiers ("static")
                :type "int")
                nil [61471 61500])
            ("xg_have_tear_offs" function (:type "int") nil [61556 61616])
            ("tearoff_remove" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [61837 61990])
            ("tearoff_activate" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [62153 62562])
            ("xg_create_one_menuitem" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("item" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil)
                    ("group" variable
                       (:pointer 2
                        :type ("GSList" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [63301 64669])
            ("create_menus" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("GCallback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("GCallback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("GCallback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [64671 64839])
            ("create_menus" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("deactivate_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("pop_up_p" variable (:type "int") nil nil)
                    ("menu_bar_p" variable (:type "int") nil nil)
                    ("add_tearoff_p" variable (:type "int") nil nil)
                    ("topmenu" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil)
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [65938 70584])
            ("xg_create_widget" function
               (:pointer 1
                :arguments 
                  ( ("type" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("val" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("deactivate_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [71321 73031])
            ("xg_get_menu_item_label" function
               (:pointer 1
                :typemodifiers ("static")
                :constant-flag t
                :arguments 
                  ( ("witem" variable
                       (:pointer 1
                        :type ("GtkMenuItem" type (:type "class") nil nil))
                        nil nil))                  
                :type "char")
                nil [73079 73267])
            ("xg_item_label_same_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("witem" variable
                       (:pointer 1
                        :type ("GtkMenuItem" type (:type "class") nil nil))
                        nil nil)
                    ("label" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [73336 73786])
            ("xg_destroy_widgets" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable
                       (:pointer 1
                        :type ("GList" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [73821 74117])
            ("xg_update_menubar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("menubar" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("list" variable
                       (:pointer 2
                        :type ("GList" type (:type "class") nil nil))
                        nil nil)
                    ("iter" variable
                       (:pointer 1
                        :type ("GList" type (:type "class") nil nil))
                        nil nil)
                    ("pos" variable (:type "int") nil nil)
                    ("val" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("deactivate_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [74769 81499])
            ("xg_update_menu_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [81763 84859])
            ("xg_update_toggle_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [84925 85089])
            ("xg_update_radio_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("val" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [85154 85317])
            ("xg_update_submenu" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("submenu" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("val" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("deactivate_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("cl_data" variable
                       (:pointer 1
                        :type ("xg_menu_cb_data" type (:type "class") nil nil))
                        nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [85923 89835])
            ("xg_modify_menubar_widgets" function
               (:arguments 
                  ( ("menubar" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("val" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("deep_p" variable (:type "int") nil nil)
                    ("select_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("deactivate_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("highlight_cb" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [90318 92688])
            ("xg_update_frame_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [92819 93557])
            ("free_frame_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [93699 94145])
            ("xg_ignore_gtk_scrollbar" variable (:type "int") nil [94465 94493])
            ("id_to_widget" variable
               (:typemodifiers ("static")
                :type ("" type
                     (:members 
                        ( ("widgets" variable
                             (:pointer 2
                              :type ("GtkWidget" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [94720 94740])
                          ("max_size" variable (:type "int") (reparse-symbol classsubparts) [94743 94756])
                          ("used" variable (:type "int") (reparse-symbol classsubparts) [94759 94768]))                        
                      :type "struct")
                      nil nil))
                nil [94702 94784])
            ("ID_TO_WIDGET_INCR" variable (:constant-flag t) nil [94853 94870])
            ("xg_store_widget_in_map" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [94957 95873])
            ("xg_remove_widget_from_map" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("idx" variable (:type "int") nil nil))                  
                :type "void")
                nil [95964 96170])
            ("xg_get_widget_from_map" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("idx" variable (:type "int") nil nil))                  
                :type ("GtkWidget" type (:type "class") nil nil))
                nil [96228 96413])
            ("xg_get_scroll_id_for_window" function
               (:arguments 
                  ( ("dpy" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("wid" variable (:type ("Window" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [96521 96824])
            ("xg_gtk_scroll_destroy" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [97011 97219])
            ("xg_create_scroll_bar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("end_callback" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("scroll_callback" variable (:type ("GCallback" type (:type "class") nil nil)) nil nil)
                    ("scroll_bar_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [97555 99595])
            ("xg_show_scroll_bar" function
               (:arguments 
                  ( ("scrollbar_id" variable (:type "int") nil nil))                  
                :type "void")
                nil [99662 99845])
            ("xg_remove_scroll_bar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("scrollbar_id" variable (:type "int") nil nil))                  
                :type "void")
                nil [99923 100238])
            ("xg_update_scrollbar_pos" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("scrollbar_id" variable (:type "int") nil nil)
                    ("top" variable (:type "int") nil nil)
                    ("left" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("height" variable (:type "int") nil nil))                  
                :type "void")
                nil [100465 102311])
            ("xg_set_toolkit_scroll_bar_thumb" function
               (:arguments 
                  ( ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("position" variable (:type "int") nil nil)
                    ("portion" variable (:type "int") nil nil))                  
                :type "void")
                nil [102461 104772])
            ("xg_event_is_for_scrollbar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("XEvent" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [105095 105885])
            ("XG_TOOL_BAR_IMAGE_DATA" variable (:constant-flag t) nil [106262 106284])
            ("XG_TOOL_BAR_LAST_MODIFIER" variable (:constant-flag t) nil [106407 106432])
            ("XG_TOOL_BAR_PROXY_BUTTON" variable (:constant-flag t) nil [106536 106560])
            ("XG_TOOL_BAR_STOCK_NAME" variable (:constant-flag t) nil [106781 106803])
            ("XG_TOOL_BAR_ICON_NAME" variable (:constant-flag t) nil [106930 106951])
            ("xg_tool_bar_button_cb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEventButton" type (:type "class") nil nil))
                        nil nil)
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [107212 107585])
            ("xg_tool_bar_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [107820 109222])
            ("xg_tool_bar_proxy_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [109538 109840])
            ("xg_tool_bar_help_callback" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEventCrossing" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [109843 110014])
            ("xg_tool_bar_proxy_help_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEventCrossing" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [110162 110532])
            ("xg_tool_bar_menu_proxy" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("toolitem" variable
                       (:pointer 1
                        :type ("GtkToolItem" type (:type "class") nil nil))
                        nil nil)
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [110771 114460])
            ("xg_tool_bar_detach_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("wbox" variable
                       (:pointer 1
                        :type ("GtkHandleBox" type (:type "class") nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [114808 115417])
            ("xg_tool_bar_attach_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("wbox" variable
                       (:pointer 1
                        :type ("GtkHandleBox" type (:type "class") nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [115759 116207])
            ("xg_tool_bar_help_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEventCrossing" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [116598 117375])
            ("xg_tool_bar_item_expose_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("GdkEventExpose" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type ("gboolean" type (:type "class") nil nil))
                nil [117827 118429])
            ("xg_pack_tool_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [118469 119292])
            ("xg_create_tool_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [119333 120244])
            ("PROP" variable (:constant-flag t) nil [120255 120259])
            ("find_rtl_image" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("image" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("rtl" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [120443 121155])
            ("Qx_gtk_map_stock" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [121231 121267])
            ("update_frame_tool_bar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [121269 134010])
            ("free_frame_tool_bar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [134098 134790])
            ("xg_initialize" function (:type "void") nil [134977 136779]))          
    :file "gtkutil.c"
    :pointmax 136888
    :fsize 136887
    :lastmodtime '(19383 49284)
    :unmatched-syntax '((TYPEDEF 40713 . 40720))
    :lexical-table 
        '(("XG_TOOL_BAR_PROXY_BUTTON" . ((string "\"emacs-tool-bar-proxy-button\"" 106561 . 106590)))
          ("XG_TOOL_BAR_ICON_NAME" . ((string "\"emacs-tool-bar-icon-name\"" 106952 . 106978)))
          ("XG_TOOL_BAR_IMAGE_DATA" . ((string "\"emacs-tool-bar-image\"" 106285 . 106307)))
          ("XG_TOOL_BAR_STOCK_NAME" . ((string "\"emacs-tool-bar-stock-name\"" 106804 . 106831)))
          ("PROP" (spp-arg-list ("IDX") 120259 . 120264) . ((symbol "AREF" 120265 . 120269) (semantic-list "(f->tool_bar_items, i * TOOL_BAR_ITEM_NSLOTS + (IDX))" 120270 . 120323)))
          ("SSDATA" (spp-arg-list ("x") 1371 . 1374) . ((semantic-list "((char *) SDATA (x))" 1376 . 1396)))
          ("MENU_ITEM_NAME" . ((string "\"emacs-menuitem\"" 52529 . 52545)))
          ("ID_TO_WIDGET_INCR" . ((number "32" 94872 . 94874)))
          ("FRAME_TOTAL_PIXEL_HEIGHT" (spp-arg-list ("f") 1231 . 1234) . ((semantic-list "(FRAME_PIXEL_HEIGHT (f) + FRAME_MENUBAR_HEIGHT (f) + FRAME_TOOLBAR_HEIGHT (f))" 1239 . 1317)))
          ("XG_TOOL_BAR_LAST_MODIFIER" . ((string "\"emacs-tool-bar-modifier\"" 106433 . 106458)))
          )

    )
   (semanticdb-table "regex.c"
    :major-mode 'c-mode
    :tags 
        '( ("stddef.h" include (:system-flag t) nil [1685 1705])
            ("WIDE_CHAR_SUPPORT" variable (:constant-flag t) nil [1968 1985])
            ("wchar.h" include (:system-flag t) nil [2302 2321])
            ("wctype.h" include (:system-flag t) nil [2322 2342])
            ("WEAK_ALIAS" variable (:constant-flag t) nil [3857 3867])
            ("libintl.h" include (:system-flag t) nil [3993 4014])
            ("gettext_noop" variable (:constant-flag t) nil [4170 4182])
            ("stdlib.h" include (:system-flag t) nil [6748 6769])
            ("xmalloc" function
               (:pointer 1
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [6888 7098])
            ("xrealloc" function
               (:pointer 1
                :arguments 
                  ( ("block" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [7100 7499])
            ("malloc" variable (:constant-flag t) nil [7549 7555])
            ("realloc" variable (:constant-flag t) nil [7614 7621])
            ("string.h" include (:system-flag t) nil [8229 8251])
            ("bzero" variable (:constant-flag t) nil [8300 8305])
            ("syntaxcode" type
               (:members 
                  ( ("Swhitespace" variable
                       (:constant-flag t
                        :default-value (8773 8774)
                        :type "int")
                        (reparse-symbol enumsubparts) [8759 8774])
                    ("Sword" variable
                       (:constant-flag t
                        :default-value (8784 8785)
                        :type "int")
                        (reparse-symbol enumsubparts) [8776 8785])
                    ("Ssymbol" variable
                       (:constant-flag t
                        :default-value (8797 8798)
                        :type "int")
                        (reparse-symbol enumsubparts) [8787 8798]))                  
                :type "enum")
                nil [8741 8801])
            ("SWITCH_ENUM_CAST" variable (:constant-flag t) nil [8813 8829])
            ("BASE_LEADING_CODE_P" variable (:constant-flag t) nil [8895 8914])
            ("CHAR_CHARSET" variable (:constant-flag t) nil [8931 8943])
            ("CHARSET_LEADING_CODE_BASE" variable (:constant-flag t) nil [8958 8983])
            ("MAX_MULTIBYTE_LENGTH" variable (:constant-flag t) nil [8998 9018])
            ("RE_MULTIBYTE_P" variable (:constant-flag t) nil [9030 9044])
            ("RE_TARGET_MULTIBYTE_P" variable (:constant-flag t) nil [9059 9080])
            ("WORD_BOUNDARY_P" variable (:constant-flag t) nil [9095 9110])
            ("CHAR_HEAD_P" variable (:constant-flag t) nil [9132 9143])
            ("SINGLE_BYTE_CHAR_P" variable (:constant-flag t) nil [9160 9178])
            ("SAME_CHARSET_P" variable (:constant-flag t) nil [9195 9209])
            ("MULTIBYTE_FORM_LENGTH" variable (:constant-flag t) nil [9231 9252])
            ("PREV_CHAR_BOUNDARY" variable (:constant-flag t) nil [9272 9290])
            ("STRING_CHAR" variable (:constant-flag t) nil [9318 9329])
            ("RE_STRING_CHAR" variable (:constant-flag t) nil [9349 9363])
            ("CHAR_STRING" variable (:constant-flag t) nil [9403 9414])
            ("STRING_CHAR_AND_LENGTH" variable (:constant-flag t) nil [9446 9468])
            ("RE_STRING_CHAR_AND_LENGTH" variable (:constant-flag t) nil [9518 9543])
            ("RE_CHAR_TO_MULTIBYTE" variable (:constant-flag t) nil [9604 9624])
            ("RE_CHAR_TO_UNIBYTE" variable (:constant-flag t) nil [9641 9659])
            ("GET_CHAR_BEFORE_2" variable (:constant-flag t) nil [9676 9693])
            ("GET_CHAR_AFTER" variable (:constant-flag t) nil [9788 9802])
            ("MAKE_CHAR" variable (:constant-flag t) nil [9845 9854])
            ("BYTE8_TO_CHAR" variable (:constant-flag t) nil [9886 9899])
            ("CHAR_BYTE8_P" variable (:constant-flag t) nil [9916 9928])
            ("CHAR_LEADING_CODE" variable (:constant-flag t) nil [9945 9962])
            ("regex.h" include nil nil [10169 10187])
            ("ctype.h" include (:system-flag t) nil [10245 10263])
            ("ISASCII" variable (:constant-flag t) nil [12674 12681])
            ("IS_REAL_ASCII" variable (:constant-flag t) nil [12781 12794])
            ("ISUNIBYTE" variable (:constant-flag t) nil [12881 12890])
            ("ISBLANK" variable (:constant-flag t) nil [12980 12987])
            ("ISGRAPH" variable (:constant-flag t) nil [13110 13117])
            ("ISPRINT" variable (:constant-flag t) nil [13200 13207])
            ("ISDIGIT" variable (:constant-flag t) nil [13249 13256])
            ("ISALNUM" variable (:constant-flag t) nil [13298 13305])
            ("ISALPHA" variable (:constant-flag t) nil [13347 13354])
            ("ISCNTRL" variable (:constant-flag t) nil [13396 13403])
            ("ISLOWER" variable (:constant-flag t) nil [13445 13452])
            ("ISPUNCT" variable (:constant-flag t) nil [13494 13501])
            ("ISSPACE" variable (:constant-flag t) nil [13543 13550])
            ("ISUPPER" variable (:constant-flag t) nil [13592 13599])
            ("ISXDIGIT" variable (:constant-flag t) nil [13641 13649])
            ("ISWORD" variable (:constant-flag t) nil [13693 13699])
            ("TOLOWER" variable (:constant-flag t) nil [13782 13789])
            ("CHAR_SET_SIZE" variable (:constant-flag t) nil [13871 13884])
            ("re_syntax_table" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [13974 14017])
            ("init_syntax_once" function
               (:typemodifiers ("static")
                :type "void")
                nil [14019 14318])
            ("SYNTAX" variable (:constant-flag t) nil [14361 14367])
            ("NULL" variable (:constant-flag t) nil [14440 14444])
            ("SIGN_EXTEND_CHAR" variable (:constant-flag t) nil [14751 14767])
            ("alloca.h" include (:system-flag t) nil [15851 15874])
            ("REGEX_ALLOCATE" variable (:constant-flag t) nil [15969 15983])
            ("REGEX_REALLOCATE" variable (:constant-flag t) nil [16048 16064])
            ("REGEX_FREE" variable (:constant-flag t) nil [16242 16252])
            ("REGEX_ALLOCATE_STACK" variable (:constant-flag t) nil [16451 16471])
            ("REGEX_REALLOCATE_STACK" variable (:constant-flag t) nil [16531 16553])
            ("REGEX_FREE_STACK" variable (:constant-flag t) nil [16631 16647])
            ("FIRST_STRING_P" variable (:constant-flag t) nil [17416 17430])
            ("TALLOC" variable (:constant-flag t) nil [17570 17576])
            ("RETALLOC" variable (:constant-flag t) nil [17625 17633])
            ("RETALLOC_IF" variable (:constant-flag t) nil [17704 17715])
            ("REGEX_TALLOC" variable (:constant-flag t) nil [17806 17818])
            ("BYTEWIDTH" variable (:constant-flag t) nil [17876 17885])
            ("STREQ" variable (:constant-flag t) nil [17913 17918])
            ("MAX" variable (:constant-flag t) nil [17983 17986])
            ("MIN" variable (:constant-flag t) nil [18025 18028])
            ("re_char" type
               (:typedef ("unsigned char")
                :superclasses "unsigned char"
                :type "typedef")
                nil [18108 18144])
            ("boolean" type
               (:typedef ("char")
                :superclasses "char"
                :type "typedef")
                nil [18146 18167])
            ("false" variable (:constant-flag t) nil [18176 18181])
            ("true" variable (:constant-flag t) nil [18192 18196])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("re_match_2_internal" type (:type "class") nil nil))
                nil [18211 18404])
            ("re_opcode_t" type
               (:typedef ("" type
                     (:members 
                        ( ("no_op" variable
                             (:constant-flag t
                              :default-value (18704 18705)
                              :type "int")
                              (reparse-symbol enumsubparts) [18696 18705])
                          ("succeed" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [18761 18769])
                          ("exactn" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [18837 18844])
                          ("anychar" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [18894 18902])
                          ("charset" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [19624 19632])
                          ("charset_not" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [19736 19748])
                          ("start_memory" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [19959 19972])
                          ("stop_memory" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20186 20198])
                          ("duplicate" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20310 20320])
                          ("begline" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20366 20374])
                          ("endline" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20414 20422])
                          ("begbuf" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20534 20541])
                          ("endbuf" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20592 20599])
                          ("jump" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20667 20672])
                          ("on_failure_jump" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20768 20784])
                          ("on_failure_keep_string_jump" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [20901 20929])
                          ("on_failure_jump_loop" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [21085 21106])
                          ("on_failure_jump_nastyloop" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [21328 21354])
                          ("on_failure_jump_smart" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [21737 21759])
                          ("succeed_n" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [21968 21978])
                          ("jump_n" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22096 22103])
                          ("set_number_at" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22251 22265])
                          ("wordbeg" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22269 22277])
                          ("wordend" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22318 22326])
                          ("wordbound" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22362 22372])
                          ("notwordbound" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22414 22427])
                          ("symbeg" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22474 22481])
                          ("symend" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22530 22537])
                          ("syntaxspec" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22705 22716])
                          ("notsyntaxspec" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [22786 23388]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [18679 23401])
            ("STORE_NUMBER" variable (:constant-flag t) nil [23533 23545])
            ("STORE_NUMBER_AND_INCR" variable (:constant-flag t) nil [23856 23877])
            ("EXTRACT_NUMBER" variable (:constant-flag t) nil [24113 24127])
            ("EXTRACT_NUMBER_AND_INCR" variable (:constant-flag t) nil [24862 24885])
            ("STORE_CHARACTER_AND_INCR" variable (:constant-flag t) nil [25706 25730])
            ("EXTRACT_CHARACTER" variable (:constant-flag t) nil [26070 26087])
            ("CHARSET_BITMAP_SIZE" variable (:constant-flag t) nil [26412 26431])
            ("CHARSET_RANGE_TABLE_EXISTS_P" variable (:constant-flag t) nil [26505 26533])
            ("CHARSET_RANGE_TABLE" variable (:constant-flag t) nil [26827 26846])
            ("CHARSET_RANGE_TABLE_BITS" variable (:constant-flag t) nil [26950 26974])
            ("CHARSET_LOOKUP_BITMAP" variable (:constant-flag t) nil [27131 27152])
            ("CHARSET_RANGE_TABLE_END" variable (:constant-flag t) nil [27501 27524])
            ("CHARSET_LOOKUP_RANGE_TABLE_RAW" variable (:constant-flag t) nil [27708 27738])
            ("CHARSET_LOOKUP_RANGE_TABLE" variable (:constant-flag t) nil [28437 28463])
            ("assert" variable (:constant-flag t) nil [36952 36958])
            ("DEBUG_STATEMENT" variable (:constant-flag t) nil [36972 36987])
            ("DEBUG_PRINT1" variable (:constant-flag t) nil [37000 37012])
            ("DEBUG_PRINT2" variable (:constant-flag t) nil [37025 37037])
            ("DEBUG_PRINT3" variable (:constant-flag t) nil [37055 37067])
            ("DEBUG_PRINT4" variable (:constant-flag t) nil [37089 37101])
            ("DEBUG_PRINT_COMPILED_PATTERN" variable (:constant-flag t) nil [37127 37155])
            ("DEBUG_PRINT_DOUBLE_STRING" variable (:constant-flag t) nil [37174 37199])
            ("re_syntax_options" variable (:type ("reg_syntax_t" type (:type "class") nil nil)) nil [37561 37592])
            ("re_set_syntax" function
               (:arguments 
                  ( ("syntax" variable (:type ("reg_syntax_t" type (:type "class") nil nil)) nil nil))                  
                :type ("reg_syntax_t" type (:type "class") nil nil))
                nil [37895 38045])
            ("whitespace_regexp" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("re_char" type (:type "class") nil nil))
                nil [38154 38188])
            ("re_set_whitespace_regexp" function
               (:arguments 
                  ( ("regexp" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [38190 38299])
            ("re_error_msgid" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
    gettext_noop (\"Success\"),	/* REG_NOERROR */
    gettext_noop (\"No match\"),	/* REG_NOMATCH */
    gettext_noop (\"Invalid regular expression\"), /* REG_BADPAT */
    gettext_noop (\"Invalid collation character\"), /* REG_ECOLLATE */
    gettext_noop (\"Invalid character class name\"), /* REG_ECTYPE */
    gettext_noop (\"Trailing backslash\"), /* REG_EESCAPE */
    gettext_noop (\"Invalid back reference\"), /* REG_ESUBREG */
    gettext_noop (\"Unmatched [ or [^\"),	/* REG_EBRACK */
    gettext_noop (\"Unmatched ( or \\\\(\"), /* REG_EPAREN */
    gettext_noop (\"Unmatched \\\\{\"), /* REG_EBRACE */
    gettext_noop (\"Invalid content of \\\\{\\\\}\"), /* REG_BADBR */
    gettext_noop (\"Invalid range end\"),	/* REG_ERANGE */
    gettext_noop (\"Memory exhausted\"), /* REG_ESPACE */
    gettext_noop (\"Invalid preceding regular expression\"), /* REG_BADRPT */
    gettext_noop (\"Premature end of regular expression\"), /* REG_EEND */
    gettext_noop (\"Regular expression too big\"), /* REG_ESIZE */
    gettext_noop (\"Unmatched ) or \\\\)\"), /* REG_ERPAREN */
    gettext_noop (\"Range striding over charsets\") /* REG_ERANGEX  */
  }"
                :type "char")
                nil [38575 39730])
            ("MATCH_MAY_ALLOCATE" variable (:constant-flag t) nil [40749 40767])
            ("INIT_FAILURE_ALLOC" variable (:constant-flag t) nil [41553 41571])
            ("re_max_failures" variable
               (:default-value "40000"
                :type ("size_t" type (:type "class") nil nil))
                nil [42200 42231])
            ("fail_stack_elt" type
               (:members 
                  ( ("pointer" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42304 42321])
                    ("integer" variable (:type "long") (reparse-symbol classsubparts) [42399 42412]))                  
                :type "union")
                nil [42279 42415])
            ("fail_stack_elt_t" type
               (:typedef ("fail_stack_elt" type (:type "union") nil nil)
                :superclasses "fail_stack_elt"
                :type "typedef")
                nil [42417 42463])
            ("fail_stack_type" type
               (:typedef ("" type
                     (:members 
                        ( ("stack" variable
                             (:pointer 1
                              :type ("fail_stack_elt_t" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [42484 42508])
                          ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42511 42523])
                          ("avail" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42526 42539])
                          ("frame" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42579 42592]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [42465 42655])
            ("FAIL_STACK_EMPTY" variable (:constant-flag t) nil [42665 42681])
            ("FAIL_STACK_FULL" variable (:constant-flag t) nil [42720 42735])
            ("INIT_FAIL_STACK" variable (:constant-flag t) nil [43418 43433])
            ("RESET_FAIL_STACK" variable (:constant-flag t) nil [43550 43566])
            ("FAIL_STACK_GROWTH_FACTOR" variable (:constant-flag t) nil [44108 44132])
            ("GROW_FAIL_STACK" variable (:constant-flag t) nil [44144 44159])
            ("PUSH_FAILURE_POINTER" variable (:constant-flag t) nil [45082 45102])
            ("PUSH_FAILURE_INT" variable (:constant-flag t) nil [45353 45369])
            ("PUSH_FAILURE_ELT" variable (:constant-flag t) nil [45615 45631])
            ("POP_FAILURE_POINTER" variable (:constant-flag t) nil [45825 45844])
            ("POP_FAILURE_INT" variable (:constant-flag t) nil [45900 45915])
            ("POP_FAILURE_ELT" variable (:constant-flag t) nil [45971 45986])
            ("NUM_NONREG_ITEMS" variable (:constant-flag t) nil [46085 46101])
            ("FAILURE_PAT" variable (:constant-flag t) nil [46174 46185])
            ("FAILURE_STR" variable (:constant-flag t) nil [46231 46242])
            ("NEXT_FAILURE_HANDLE" variable (:constant-flag t) nil [46290 46309])
            ("TOP_FAILURE_HANDLE" variable (:constant-flag t) nil [46355 46373])
            ("ENSURE_FAIL_STACK" variable (:constant-flag t) nil [46403 46420])
            ("PUSH_FAILURE_REG" variable (:constant-flag t) nil [46741 46757])
            ("PUSH_NUMBER" variable (:constant-flag t) nil [47190 47201])
            ("POP_FAILURE_REG_OR_COUNT" variable (:constant-flag t) nil [47612 47636])
            ("CHECK_INFINITE_LOOP" variable (:constant-flag t) nil [48409 48428])
            ("PUSH_FAILURE_POINT" variable (:constant-flag t) nil [49442 49460])
            ("TYPICAL_FAILURE_SIZE" variable (:constant-flag t) nil [50912 50932])
            ("REMAINING_AVAIL_SLOTS" variable (:constant-flag t) nil [51023 51044])
            ("POP_FAILURE_POINT" variable (:constant-flag t) nil [51463 51480])
            ("REG_UNSET" variable (:constant-flag t) nil [52955 52964])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("regex_compile" type (:type "class") nil nil))
                nil [53067 53199])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("store_op1" type (:type "class") nil nil))
                nil [53212 53279])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("store_op2" type (:type "class") nil nil))
                nil [53292 53375])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("insert_op1" type (:type "class") nil nil))
                nil [53388 53482])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("insert_op2" type (:type "class") nil nil))
                nil [53495 53600])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("at_begline_loc_p" type (:type "class") nil nil))
                nil [53616 53712])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("at_endline_loc_p" type (:type "class") nil nil))
                nil [53728 53821])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("skip_one_char" type (:type "class") nil nil))
                nil [53838 53876])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("analyse_first" type (:type "class") nil nil))
                nil [53888 53985])
            ("PATFETCH" variable (:constant-flag t) nil [54078 54086])
            ("TRANSLATE" variable (:constant-flag t) nil [54583 54592])
            ("INIT_BUF_SIZE" variable (:constant-flag t) nil [54815 54828])
            ("GET_BUFFER_SPACE" variable (:constant-flag t) nil [54909 54925])
            ("BUF_PUSH" variable (:constant-flag t) nil [55112 55120])
            ("BUF_PUSH_2" variable (:constant-flag t) nil [55325 55335])
            ("BUF_PUSH_3" variable (:constant-flag t) nil [55554 55564])
            ("STORE_JUMP" variable (:constant-flag t) nil [55917 55927])
            ("STORE_JUMP2" variable (:constant-flag t) nil [56034 56045])
            ("INSERT_JUMP" variable (:constant-flag t) nil [56196 56207])
            ("INSERT_JUMP2" variable (:constant-flag t) nil [56353 56365])
            ("MAX_BUF_SIZE" variable (:constant-flag t) nil [56645 56657])
            ("MAX_BUF_SIZE" variable (:constant-flag t) nil [57156 57168])
            ("SET_HIGH_BOUND" variable (:constant-flag t) nil [57546 57560])
            ("MOVE_BUFFER_POINTER" variable (:constant-flag t) nil [57622 57641])
            ("ELSE_EXTEND_BUFFER_HIGH_BOUND" variable (:constant-flag t) nil [57816 57845])
            ("EXTEND_BUFFER" variable (:constant-flag t) nil [58268 58281])
            ("MAX_REGNUM" variable (:constant-flag t) nil [59415 59425])
            ("regnum_t" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [59525 59546])
            ("pattern_offset_t" type
               (:typedef ("long")
                :superclasses "long"
                :type "typedef")
                nil [59788 59818])
            ("compile_stack_elt_t" type
               (:typedef ("" type
                     (:members 
                        ( ("begalt_offset" variable (:type ("pattern_offset_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [59839 59870])
                          ("fixup_alt_jump" variable (:type ("pattern_offset_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [59873 59905])
                          ("laststart_offset" variable (:type ("pattern_offset_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [59908 59942])
                          ("regnum" variable (:type ("regnum_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [59945 59961]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [59820 59984])
            ("compile_stack_type" type
               (:typedef ("" type
                     (:members 
                        ( ("stack" variable
                             (:pointer 1
                              :type ("compile_stack_elt_t" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [60006 60033])
                          ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [60036 60050])
                          ("avail" variable (:type "unsigned int") (reparse-symbol classsubparts) [60053 60068]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [59987 60129])
            ("INIT_COMPILE_STACK_SIZE" variable (:constant-flag t) nil [60140 60163])
            ("COMPILE_STACK_EMPTY" variable (:constant-flag t) nil [60176 60195])
            ("COMPILE_STACK_FULL" variable (:constant-flag t) nil [60232 60250])
            ("COMPILE_STACK_TOP" variable (:constant-flag t) nil [60340 60357])
            ("immediate_quit" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [60591 60617])
            ("IMMEDIATE_QUIT_CHECK" variable (:constant-flag t) nil [60627 60647])
            ("range_table_work_area" type
               (:members 
                  ( ("table" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol classsubparts) [60864 60875])
                    ("allocated" variable (:type "int") (reparse-symbol classsubparts) [60905 60919])
                    ("used" variable (:type "int") (reparse-symbol classsubparts) [60969 60978])
                    ("bits" variable (:type "int") (reparse-symbol classsubparts) [61019 61028]))                  
                :type "struct")
                nil [60831 61072])
            ("EXTEND_RANGE_TABLE" variable (:constant-flag t) nil [61335 61353])
            ("SET_RANGE_TABLE_WORK_AREA_BIT" variable (:constant-flag t) nil [61659 61688])
            ("BIT_WORD" variable (:constant-flag t) nil [61876 61884])
            ("BIT_LOWER" variable (:constant-flag t) nil [61897 61906])
            ("BIT_PUNCT" variable (:constant-flag t) nil [61919 61928])
            ("BIT_SPACE" variable (:constant-flag t) nil [61941 61950])
            ("BIT_UPPER" variable (:constant-flag t) nil [61963 61972])
            ("BIT_MULTIBYTE" variable (:constant-flag t) nil [61986 61999])
            ("SET_RANGE_TABLE_WORK_AREA" variable (:constant-flag t) nil [62072 62097])
            ("FREE_RANGE_TABLE_WORK_AREA" variable (:constant-flag t) nil [62387 62413])
            ("CLEAR_RANGE_TABLE_WORK_USED" variable (:constant-flag t) nil [62531 62558])
            ("RANGE_TABLE_WORK_USED" variable (:constant-flag t) nil [62623 62644])
            ("RANGE_TABLE_WORK_BITS" variable (:constant-flag t) nil [62683 62704])
            ("RANGE_TABLE_WORK_ELT" variable (:constant-flag t) nil [62743 62763])
            ("SET_LIST_BIT" variable (:constant-flag t) nil [62858 62870])
            ("GET_UNSIGNED_NUMBER" variable (:constant-flag t) nil [66634 66653])
            ("re_wctype" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil))                  
                :type ("re_wctype_t" type (:type "class") nil nil))
                nil [67299 68347])
            ("re_iswctype" function
               (:arguments 
                  ( ("ch" variable (:type "int") nil nil)
                    ("cc" variable (:type ("re_wctype_t" type (:type "class") nil nil)) nil nil))                  
                :type ("boolean" type (:type "class") nil nil))
                nil [68392 69288])
            ("re_wctype_to_bit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("cc" variable (:type ("re_wctype_t" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [69390 69973])
            ("extend_range_table_work_area" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("work_area" variable
                       (:pointer 1
                        :type ("range_table_work_area" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [70076 70409])
            ("fail_stack" variable
               (:typemodifiers ("static")
                :type ("fail_stack_type" type (:type "class") nil nil))
                nil [77394 77428])
            ("regs_allocated_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [77581 77612])
            ("regend" variable
               (:pointer 2
                :typemodifiers ("static")
                :type ("re_char" type (:type "class") nil nil))
                nil [77614 77660])
            ("regstart" variable
               (:pointer 2
                :typemodifiers ("static")
                :type ("re_char" type (:type "class") nil nil))
                nil [77614 77660])
            ("best_regend" variable
               (:pointer 2
                :typemodifiers ("static")
                :type ("re_char" type (:type "class") nil nil))
                nil [77661 77707])
            ("best_regstart" variable
               (:pointer 2
                :typemodifiers ("static")
                :type ("re_char" type (:type "class") nil nil))
                nil [77661 77707])
            ("regex_grow_registers" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("num_regs" variable (:type "int") nil nil))                  
                :type "int")
                nil [77810 78173])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("group_in_compile_stack" type (:type "class") nil nil))
                nil [78228 78328])
            ("FIXUP_ALT_JUMP" variable (:constant-flag t) nil [79137 79151])
            ("FREE_STACK_RETURN" variable (:constant-flag t) nil [79320 79337])
            ("regex_compile" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pattern" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil)
                    ("syntax" variable (:type ("reg_syntax_t" type (:type "class") nil nil)) nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("reg_errcode_t" type (:type "class") nil nil))
                nil [79492 114629])
            ("store_op1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("op" variable (:type ("re_opcode_t" type (:type "class") nil nil)) nil nil)
                    ("loc" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("arg" variable (:type "int") nil nil))                  
                :type "void")
                nil [114761 114918])
            ("store_op2" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("op" variable (:type ("re_opcode_t" type (:type "class") nil nil)) nil nil)
                    ("loc" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("arg2" variable (:type "int") nil nil)
                    ("arg1" variable (:type "int") nil nil))                  
                :type "void")
                nil [114994 115198])
            ("insert_op1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("op" variable (:type ("re_opcode_t" type (:type "class") nil nil)) nil nil)
                    ("loc" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("arg" variable (:type "int") nil nil)
                    ("end" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil))                  
                :type "void")
                nil [115333 115616])
            ("insert_op2" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("op" variable (:type ("re_opcode_t" type (:type "class") nil nil)) nil nil)
                    ("loc" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("arg2" variable (:type "int") nil nil)
                    ("arg1" variable (:type "int") nil nil)
                    ("end" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil))                  
                :type "void")
                nil [115693 115997])
            ("at_begline_loc_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("pattern" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("syntax" variable (:type ("reg_syntax_t" type (:type "class") nil nil)) nil nil))                  
                :type ("boolean" type (:type "class") nil nil))
                nil [116186 116836])
            ("at_endline_loc_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pend" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("syntax" variable (:type ("reg_syntax_t" type (:type "class") nil nil)) nil nil))                  
                :type ("boolean" type (:type "class") nil nil))
                nil [116974 117473])
            ("group_in_compile_stack" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("compile_stack" variable (:type ("compile_stack_type" type (:type "class") nil nil)) nil nil)
                    ("regnum" variable (:type ("regnum_t" type (:type "class") nil nil)) nil nil))                  
                :type ("boolean" type (:type "class") nil nil))
                nil [117571 117908])
            ("analyse_first" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pend" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("fastmap" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("multibyte" variable (:type "int") nil nil))                  
                :type "int")
                nil [118343 126702])
            ("re_compile_fastmap" function
               (:arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [127460 127914])
            ("re_set_registers" function
               (:arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("num_regs" variable (:type "unsigned int") nil nil)
                    ("ends" variable
                       (:pointer 1
                        :type ("regoff_t" type (:type "class") nil nil))
                        nil nil)
                    ("starts" variable
                       (:pointer 1
                        :type ("regoff_t" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [128521 129001])
            ("re_search" function
               (:arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("range" variable (:type "int") nil nil)
                    ("startpos" variable (:type "int") nil nil)
                    ("size" variable (:type "int") nil nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [129199 129475])
            ("HEAD_ADDR_VSTRING" variable (:constant-flag t) nil [129577 129594])
            ("STOP_ADDR_VSTRING" variable (:constant-flag t) nil [129704 129721])
            ("POS_ADDR_VSTRING" variable (:constant-flag t) nil [129855 129871])
            ("re_search_2" function
               (:arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("str2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("str1" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("size2" variable (:type "int") nil nil)
                    ("size1" variable (:type "int") nil nil)
                    ("startpos" variable (:type "int") nil nil)
                    ("range" variable (:type "int") nil nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("stop" variable (:type "int") nil nil))                  
                :type "int")
                nil [130775 136828])
            ("_RE_ARGS" function
               (:prototype-flag t
                :type ("bcmp_translate" type (:type "class") nil nil))
                nil [136948 137092])
            ("POINTER_TO_OFFSET" variable (:constant-flag t) nil [137246 137263])
            ("PREFETCH" variable (:constant-flag t) nil [137627 137635])
            ("PREFETCH_NOLIMIT" variable (:constant-flag t) nil [138182 138198])
            ("AT_STRINGS_BEG" variable (:constant-flag t) nil [138483 138497])
            ("AT_STRINGS_END" variable (:constant-flag t) nil [138556 138570])
            ("WORDCHAR_P" variable (:constant-flag t) nil [138861 138871])
            ("FREE_VARIABLES" variable (:constant-flag t) nil [140087 140101])
            ("skip_one_char" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil))                  
                :type ("re_char" type (:type "class") nil nil))
                nil [140352 141015])
            ("skip_noops" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("pend" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil))                  
                :type ("re_char" type (:type "class") nil nil))
                nil [141060 141455])
            ("mutually_exclusive_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p2" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("p1" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [141519 147028])
            ("re_match" function
               (:arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("pos" variable (:type "int") nil nil)
                    ("size" variable (:type "int") nil nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [147177 147458])
            ("re_match_2" function
               (:arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("string1" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("size2" variable (:type "int") nil nil)
                    ("size1" variable (:type "int") nil nil)
                    ("pos" variable (:type "int") nil nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("stop" variable (:type "int") nil nil))                  
                :type "int")
                nil [148269 148850])
            ("re_match_2_internal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string2" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("string1" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("size2" variable (:type "int") nil nil)
                    ("size1" variable (:type "int") nil nil)
                    ("pos" variable (:type "int") nil nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("stop" variable (:type "int") nil nil))                  
                :type "int")
                nil [148980 187962])
            ("bcmp_translate" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s2" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("s1" variable
                       (:pointer 1
                        :type ("re_char" type (:type "class") nil nil))
                        nil nil)
                    ("len" variable (:type "int") nil nil)
                    ("translate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("target_multibyte" variable (:type "int") nil nil))                  
                :type "int")
                nil [188135 188984])
            ("re_compile_pattern" function
               (:pointer 1
                :constant-flag t
                :arguments 
                  ( ("pattern" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "char")
                nil [189383 190137])
            ("re_comp_buf" variable
               (:typemodifiers ("static")
                :type ("re_pattern_buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [190403 190447])
            ("re_comp" function
               (:pointer 1
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [190449 191807])
            ("re_exec" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [191810 192001])
            ("regcomp" function
               (:arguments 
                  ( ("preg" variable
                       (:pointer 1
                        :type ("regex_t" type (:type "class") nil nil))
                        nil nil)
                    ("pattern" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("cflags" variable (:type "int") nil nil))                  
                :type "int")
                nil [193410 195351])
            ("regexec" function
               (:arguments 
                  ( ("preg" variable
                       (:pointer 1
                        :type ("regex_t" type (:type "class") nil nil))
                        nil nil)
                    ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nmatch" variable (:type ("size_t" type (:type "class") nil nil)) nil nil)
                    ("pmatch" variable
                       (:dereference 1
                        :type ("regmatch_t" type (:type "class") nil nil))
                        nil nil)
                    ("eflags" variable (:type "int") nil nil))                  
                :type "int")
                nil [195973 198105])
            ("regerror" function
               (:arguments 
                  ( ("err_code" variable (:type "int") nil nil)
                    ("preg" variable
                       (:pointer 1
                        :type ("regex_t" type (:type "class") nil nil))
                        nil nil)
                    ("errbuf" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("errbuf_size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [198376 199236])
            ("regfree" function
               (:arguments 
                  ( ("preg" variable
                       (:pointer 1
                        :type ("regex_t" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [199328 199590]))          
    :file "regex.c"
    :pointmax 199734
    :fsize 199733
    :lastmodtime '(19383 49278)
    :unmatched-syntax '((semantic-list 136972 . 137090) (INT 136944 . 136947) (STATIC 136937 . 136943) (semantic-list 78261 . 78326) (symbol 78220 . 78227) (STATIC 78213 . 78219) (semantic-list 53912 . 53983) (INT 53884 . 53887) (STATIC 53877 . 53883) (semantic-list 53862 . 53874) (punctuation 53837 . 53838) (symbol 53829 . 53836) (STATIC 53822 . 53828) (semantic-list 53755 . 53819) (symbol 53720 . 53727) (STATIC 53713 . 53719) (semantic-list 53643 . 53710) (symbol 53608 . 53615) (STATIC 53601 . 53607) (semantic-list 53516 . 53598) (VOID 53490 . 53494) (STATIC 53483 . 53489) (semantic-list 53409 . 53480) (VOID 53383 . 53387) (STATIC 53376 . 53382) (semantic-list 53312 . 53373) (VOID 53287 . 53291) (STATIC 53280 . 53286) (semantic-list 53232 . 53277) (VOID 53207 . 53211) (STATIC 53200 . 53206) (semantic-list 53091 . 53197) (symbol 53053 . 53066) (STATIC 53046 . 53052) (semantic-list 18241 . 18402) (INT 18207 . 18210) (STATIC 18200 . 18206) (symbol 1577 . 1583) (symbol 1570 . 1576) (punctuation 1569 . 1570))
    :lexical-table 
        '(("malloc" . ((symbol "xmalloc" 7556 . 7563)))
          ("BASE_LEADING_CODE_P" (spp-arg-list ("c") 8914 . 8917) . ((semantic-list "(0)" 8918 . 8921)))
          ("MAX_MULTIBYTE_LENGTH" . ((number "1" 9019 . 9020)))
          ("GET_CHAR_BEFORE_2" (spp-arg-list ("c" "p" "str1" "end1" "str2" "end2") 9693 . 9723) . ((semantic-list "(c = ((p) == (str2) ? *((end1) - 1) : *((p) - 1)))" 9728 . 9778)))
          ("ISPRINT" (spp-arg-list ("c") 13207 . 13210) . ((semantic-list "(ISASCII (c) && isprint (c))" 13211 . 13239)))
          ("ISPUNCT" (spp-arg-list ("c") 13501 . 13504) . ((semantic-list "(ISASCII (c) && ispunct (c))" 13505 . 13533)))
          ("MIN" (spp-arg-list ("a" "b") 18028 . 18034) . ((semantic-list "((a) < (b) ? (a) : (b))" 18035 . 18058)))
          ("CHARSET_RANGE_TABLE_BITS" (spp-arg-list ("p") 26974 . 26977) . ((semantic-list "((p)[2 + CHARSET_BITMAP_SIZE (p)]		\\
   + (p)[3 + CHARSET_BITMAP_SIZE (p)] * 0x100)" 26983 . 27066)))
          ("CHARSET_RANGE_TABLE_END" (spp-arg-list ("range_table" "count") 27524 . 27544) . ((semantic-list "((range_table) + (count) * 2 * 3)" 27549 . 27582)))
          ("DEBUG_PRINT3" (spp-arg-list ("x1" "x2" "x3") 37067 . 37079))
          ("FAIL_STACK_EMPTY" (spp-arg-list nil 42681 . 42683) . ((semantic-list "(fail_stack.frame == 0)" 42688 . 42711)))
          ("POP_FAILURE_INT" (spp-arg-list nil 45915 . 45917) . 
              ((symbol "fail_stack" 45918 . 45928) (punctuation "." 45928 . 45929) (symbol "stack" 45929 . 45934) (semantic-list "[--fail_stack.avail]" 45934 . 45954) (punctuation "." 45954 . 45955) (symbol "integer" 45955 . 45962)))
          ("REG_UNSET" (spp-arg-list ("e") 52964 . 52967) . ((semantic-list "((e) == NULL)" 52968 . 52981)))
          ("INIT_COMPILE_STACK_SIZE" . ((number "32" 60164 . 60166)))
          ("CHARSET_LEADING_CODE_BASE" (spp-arg-list ("c") 8983 . 8986) . ((number "0" 8987 . 8988)))
          ("WORD_BOUNDARY_P" (spp-arg-list ("c1" "c2") 9110 . 9118) . ((semantic-list "(0)" 9119 . 9122)))
          ("ISXDIGIT" (spp-arg-list ("c") 13649 . 13652) . ((semantic-list "(ISASCII (c) && isxdigit (c))" 13653 . 13682)))
          ("NULL" . ((semantic-list "(void *)" 14445 . 14453) (number "0" 14453 . 14454)))
          ("RETALLOC" (spp-arg-list ("addr" "n" "t") 17633 . 17645) . ((semantic-list "((addr) = (t *) realloc (addr, (n) * sizeof (t)))" 17646 . 17695)))
          ("STREQ" (spp-arg-list ("s1" "s2") 17918 . 17926) . ((semantic-list "((strcmp (s1, s2) == 0))" 17927 . 17951)))
          ("STORE_CHARACTER_AND_INCR" (spp-arg-list ("destination" "character") 25730 . 25754) . 
              ((DO "do" 25759 . 25761) (semantic-list "{								\\
    (destination)[0] = (character) & 0377;			\\
    (destination)[1] = ((character) >> 8) & 0377;		\\
    (destination)[2] = (character) >> 16;			\\
    (destination) += 3;						\\
  }" 25762 . 25953) (WHILE "while" 25954 . 25959) (semantic-list "(0)" 25960 . 25963)))
          ("EXTRACT_CHARACTER" (spp-arg-list ("destination" "source") 26087 . 26108) . 
              ((DO "do" 26113 . 26115) (semantic-list "{						\\
    (destination) = ((source)[0]		\\
		     | ((source)[1] << 8)	\\
		     | ((source)[2] << 16));	\\
  }" 26116 . 26227) (WHILE "while" 26228 . 26233) (semantic-list "(0)" 26234 . 26237)))
          ("CHARSET_RANGE_TABLE_EXISTS_P" (spp-arg-list ("p") 26533 . 26536) . ((semantic-list "((p)[1] & 0x80)" 26538 . 26553)))
          ("CHARSET_LOOKUP_RANGE_TABLE" (spp-arg-list ("not" "c" "charset") 28463 . 28480) . 
              ((DO "do" 28487 . 28489) (semantic-list "{									\\
      /* Number of ranges in range table. */				\\
      int count;							\\
      re_char *range_table = CHARSET_RANGE_TABLE (charset);		\\
      									\\
      EXTRACT_NUMBER_AND_INCR (count, range_table);			\\
      CHARSET_LOOKUP_RANGE_TABLE_RAW ((not), (c), range_table, count);	\\
    }" 28504 . 28805) (WHILE "while" 28818 . 28823) (semantic-list "(0)" 28824 . 28827)))
          ("DEBUG_PRINT4" (spp-arg-list ("x1" "x2" "x3" "x4") 37101 . 37117))
          ("FAIL_STACK_FULL" (spp-arg-list nil 42735 . 42737) . ((semantic-list "(fail_stack.avail == fail_stack.size)" 42743 . 42780)))
          ("POP_FAILURE_ELT" (spp-arg-list nil 45986 . 45988) . 
              ((symbol "fail_stack" 45989 . 45999) (punctuation "." 45999 . 46000) (symbol "stack" 46000 . 46005) (semantic-list "[--fail_stack.avail]" 46005 . 46025)))
          ("BUF_PUSH" (spp-arg-list ("c") 55120 . 55123) . 
              ((DO "do" 55134 . 55136) (semantic-list "{									\\
    GET_BUFFER_SPACE (1);						\\
    *b++ = (unsigned char) (c);						\\
  }" 55137 . 55224) (WHILE "while" 55225 . 55230) (semantic-list "(0)" 55231 . 55234)))
          ("STORE_JUMP" (spp-arg-list ("op" "loc" "to") 55927 . 55940) . ((symbol "store_op1" 55945 . 55954) (semantic-list "(op, loc, (to) - (loc) - 3)" 55955 . 55982)))
          ("EXTEND_BUFFER" (spp-arg-list nil 58281 . 58283) . 
              ((DO "do" 58294 . 58296) (semantic-list "{									\\
    unsigned char *old_buffer = bufp->buffer;				\\
    if (bufp->allocated == MAX_BUF_SIZE)				\\
      return REG_ESIZE;							\\
    bufp->allocated <<= 1;						\\
    if (bufp->allocated > MAX_BUF_SIZE)					\\
      bufp->allocated = MAX_BUF_SIZE;					\\
    RETALLOC (bufp->buffer, bufp->allocated, unsigned char);		\\
    if (bufp->buffer == NULL)						\\
      return REG_ESPACE;						\\
    /* If the buffer moved, move all the pointers into it.  */		\\
    if (old_buffer != bufp->buffer)					\\
      {									\\
	unsigned char *new_buffer = bufp->buffer;			\\
	MOVE_BUFFER_POINTER (b);					\\
	MOVE_BUFFER_POINTER (begalt);					\\
	if (fixup_alt_jump)						\\
	  MOVE_BUFFER_POINTER (fixup_alt_jump);				\\
	if (laststart)							\\
	  MOVE_BUFFER_POINTER (laststart);				\\
	if (pending_exact)						\\
	  MOVE_BUFFER_POINTER (pending_exact);				\\
      }									\\
    ELSE_EXTEND_BUFFER_HIGH_BOUND					\\
  }" 58297 . 59209) (WHILE "while" 59210 . 59215) (semantic-list "(0)" 59216 . 59219)))
          ("RANGE_TABLE_WORK_ELT" (spp-arg-list ("work_area" "i") 62763 . 62777) . ((semantic-list "((work_area).table[i])" 62778 . 62800)))
          ("STOP_ADDR_VSTRING" (spp-arg-list ("P") 129721 . 129724) . ((semantic-list "(((P) >= size1 ? string2 + size2 : string1 + size1))" 129732 . 129784)))
          ("SINGLE_BYTE_CHAR_P" (spp-arg-list ("c") 9178 . 9181) . ((semantic-list "(1)" 9182 . 9185)))
          ("CHAR_STRING" (spp-arg-list ("c" "s") 9414 . 9420) . ((semantic-list "(*(s) = (c), 1)" 9421 . 9436)))
          ("ISSPACE" (spp-arg-list ("c") 13550 . 13553) . ((semantic-list "(ISASCII (c) && isspace (c))" 13554 . 13582)))
          ("REGEX_REALLOCATE_STACK" (spp-arg-list ("source" "osize" "nsize") 16553 . 16575) . ((symbol "r_re_alloc" 16581 . 16591) (semantic-list "(&failure_stack_ptr, (nsize))" 16592 . 16621)))
          ("BYTEWIDTH" . ((number "8" 17886 . 17887)))
          ("DEBUG_STATEMENT" (spp-arg-list ("e") 36987 . 36990))
          ("SET_HIGH_BOUND" (spp-arg-list ("P") 57560 . 57563) . ((semantic-list "(__ptrhigh (P) = __ptrlow (P) + bufp->allocated)" 57564 . 57612)))
          ("BIT_UPPER" . ((number "0x10" 61973 . 61977)))
          ("PREFETCH" (spp-arg-list nil 137635 . 137637) . 
              ((WHILE "while" 137648 . 137653) (semantic-list "(d == dend)" 137654 . 137665) (semantic-list "{									\\
      /* End of string2 => fail.  */					\\
      if (dend == end_match_2)						\\
	goto fail;							\\
      /* End of string1 => advance to string2.  */			\\
      d = string2;							\\
      dend = end_match_2;						\\
    }" 137678 . 137911)))
          ("FREE_VARIABLES" (spp-arg-list nil 140101 . 140103) . ((semantic-list "((void)0)" 140104 . 140113)))
          ("SWITCH_ENUM_CAST" (spp-arg-list ("x") 8829 . 8832) . ((semantic-list "(x)" 8833 . 8836)))
          ("CHAR_HEAD_P" (spp-arg-list ("p") 9143 . 9146) . ((semantic-list "(1)" 9147 . 9150)))
          ("CHAR_BYTE8_P" (spp-arg-list ("c") 9928 . 9931) . ((semantic-list "(0)" 9932 . 9935)))
          ("ISUNIBYTE" (spp-arg-list ("c") 12890 . 12893) . ((number "1" 12894 . 12895)))
          ("ISGRAPH" (spp-arg-list ("c") 13117 . 13120) . ((semantic-list "(ISASCII (c) && isprint (c) && !isspace (c))" 13121 . 13165)))
          ("CHAR_SET_SIZE" . ((number "256" 13885 . 13888)))
          ("SYNTAX" (spp-arg-list ("c") 14367 . 14370) . ((symbol "re_syntax_table" 14371 . 14386) (semantic-list "[(c)]" 14386 . 14391)))
          ("CHARSET_RANGE_TABLE" (spp-arg-list ("p") 26846 . 26849) . ((semantic-list "(&(p)[4 + CHARSET_BITMAP_SIZE (p)])" 26850 . 26885)))
          ("FAIL_STACK_GROWTH_FACTOR" . ((number "4" 44133 . 44134)))
          ("BUF_PUSH_2" (spp-arg-list ("c1" "c2") 55335 . 55343) . 
              ((DO "do" 55353 . 55355) (semantic-list "{									\\
    GET_BUFFER_SPACE (2);						\\
    *b++ = (unsigned char) (c1);					\\
    *b++ = (unsigned char) (c2);					\\
  }" 55356 . 55482) (WHILE "while" 55483 . 55488) (semantic-list "(0)" 55489 . 55492)))
          ("INSERT_JUMP2" (spp-arg-list ("op" "loc" "to" "arg") 56365 . 56383) . ((symbol "insert_op2" 56388 . 56398) (semantic-list "(op, loc, (to) - (loc) - 3, arg, b)" 56399 . 56434)))
          ("ELSE_EXTEND_BUFFER_HIGH_BOUND" . ((ELSE "else" 57851 . 57855) (semantic-list "{						\\
      SET_HIGH_BOUND (b);			\\
      SET_HIGH_BOUND (begalt);			\\
      if (fixup_alt_jump)			\\
	SET_HIGH_BOUND (fixup_alt_jump);	\\
      if (laststart)				\\
	SET_HIGH_BOUND (laststart);		\\
      if (pending_exact)			\\
	SET_HIGH_BOUND (pending_exact);		\\
    }" 57867 . 58135)))
          ("RANGE_TABLE_WORK_BITS" (spp-arg-list ("work_area") 62704 . 62715) . ((semantic-list "((work_area).bits)" 62716 . 62734)))
          ("bzero" (spp-arg-list ("s" "n") 8305 . 8311) . ((semantic-list "(memset (s, '\\0', n), (s))" 8312 . 8338)))
          ("RE_STRING_CHAR" (spp-arg-list ("p" "multibyte") 9363 . 9377) . ((symbol "STRING_CHAR" 9378 . 9389) (semantic-list "(p)" 9390 . 9393)))
          ("RE_CHAR_TO_UNIBYTE" (spp-arg-list ("c") 9659 . 9662) . ((semantic-list "(c)" 9663 . 9666)))
          ("REGEX_ALLOCATE" . ((symbol "alloca" 15984 . 15990)))
          ("REGEX_REALLOCATE" (spp-arg-list ("source" "osize" "nsize") 16064 . 16086) . ((semantic-list "(destination = (char *) alloca (nsize),				\\
   memcpy (destination, source, osize))" 16094 . 16178)))
          ("false" . ((number "0" 18182 . 18183)))
          ("STORE_NUMBER_AND_INCR" (spp-arg-list ("destination" "number") 23877 . 23898) . 
              ((DO "do" 23905 . 23907) (semantic-list "{									\\
    STORE_NUMBER (destination, number);					\\
    (destination) += 2;							\\
  }" 23908 . 24001) (WHILE "while" 24002 . 24007) (semantic-list "(0)" 24008 . 24011)))
          ("DEBUG_PRINT_DOUBLE_STRING" (spp-arg-list ("w" "s1" "sz1" "s2" "sz2") 37199 . 37220))
          ("PUSH_FAILURE_REG" (spp-arg-list ("num") 46757 . 46762) . 
              ((DO "do" 46770 . 46772) (semantic-list "{									\\
  char *destination;							\\
  ENSURE_FAIL_STACK(3);							\\
  DEBUG_PRINT4 (\"    Push reg %d (spanning %p -> %p)\\n\",		\\
		num, regstart[num], regend[num]);			\\
  PUSH_FAILURE_POINTER (regstart[num]);					\\
  PUSH_FAILURE_POINTER (regend[num]);					\\
  PUSH_FAILURE_INT (num);						\\
}" 46773 . 47070) (WHILE "while" 47071 . 47076) (semantic-list "(0)" 47077 . 47080)))
          ("BUF_PUSH_3" (spp-arg-list ("c1" "c2" "c3") 55564 . 55576) . 
              ((DO "do" 55586 . 55588) (semantic-list "{									\\
    GET_BUFFER_SPACE (3);						\\
    *b++ = (unsigned char) (c1);					\\
    *b++ = (unsigned char) (c2);					\\
    *b++ = (unsigned char) (c3);					\\
  }" 55589 . 55754) (WHILE "while" 55755 . 55760) (semantic-list "(0)" 55761 . 55764)))
          ("HEAD_ADDR_VSTRING" (spp-arg-list ("P") 129594 . 129597) . ((semantic-list "(((P) >= size1 ? string2 : string1))" 129603 . 129639)))
          ("realloc" . ((symbol "xrealloc" 7622 . 7630)))
          ("RE_MULTIBYTE_P" (spp-arg-list ("x") 9044 . 9047) . ((number "0" 9048 . 9049)))
          ("ISUPPER" (spp-arg-list ("c") 13599 . 13602) . ((semantic-list "(ISASCII (c) && isupper (c))" 13603 . 13631)))
          ("ISWORD" (spp-arg-list ("c") 13699 . 13702) . ((symbol "ISALPHA" 13703 . 13710) (semantic-list "(c)" 13710 . 13713)))
          ("REGEX_FREE_STACK" (spp-arg-list ("ptr") 16647 . 16652) . ((symbol "r_alloc_free" 16661 . 16673) (semantic-list "(&failure_stack_ptr)" 16674 . 16694)))
          ("RETALLOC_IF" (spp-arg-list ("addr" "n" "t") 17715 . 17727) . 
              ((IF "if" 17732 . 17734) (semantic-list "(addr)" 17735 . 17741) (symbol "RETALLOC" 17742 . 17750) (semantic-list "((addr), (n), t)" 17750 . 17766) (punctuation ";" 17766 . 17767) (ELSE "else" 17768 . 17772) (semantic-list "(addr)" 17773 . 17779) (punctuation "=" 17780 . 17781) (symbol "TALLOC" 17782 . 17788) (semantic-list "((n), t)" 17789 . 17797)))
          ("EXTRACT_NUMBER_AND_INCR" (spp-arg-list ("destination" "source") 24885 . 24906) . 
              ((DO "do" 24913 . 24915) (semantic-list "{									\\
    EXTRACT_NUMBER (destination, source);				\\
    (source) += 2;							\\
  }" 24916 . 25005) (WHILE "while" 25006 . 25011) (semantic-list "(0)" 25012 . 25015)))
          ("assert" (spp-arg-list ("e") 36958 . 36961))
          ("DEBUG_PRINT_COMPILED_PATTERN" (spp-arg-list ("p" "s" "e") 37155 . 37164))
          ("INIT_FAIL_STACK" (spp-arg-list nil 43433 . 43435) . 
              ((DO "do" 43445 . 43447) (semantic-list "{									\\
    fail_stack.avail = 0;						\\
    fail_stack.frame = 0;						\\
  }" 43448 . 43529) (WHILE "while" 43530 . 43535) (semantic-list "(0)" 43536 . 43539)))
          ("TYPICAL_FAILURE_SIZE" . ((number "20" 50933 . 50935)))
          ("REMAINING_AVAIL_SLOTS" . ((semantic-list "((fail_stack).size - (fail_stack).avail)" 51045 . 51085)))
          ("POP_FAILURE_POINT" (spp-arg-list ("str" "pat") 51480 . 51490) . 
              ((DO "do" 51529 . 51531) (semantic-list "{									\\
  assert (!FAIL_STACK_EMPTY ());					\\
									\\
  /* Remove failure points and point to how many regs pushed.  */	\\
  DEBUG_PRINT1 (\"POP_FAILURE_POINT:\\n\");				\\
  DEBUG_PRINT2 (\"  Before pop, next avail: %d\\n\", fail_stack.avail);	\\
  DEBUG_PRINT2 (\"		     size: %d\\n\", fail_stack.size);	\\
									\\
  /* Pop the saved registers.  */					\\
  while (fail_stack.frame < fail_stack.avail)				\\
    POP_FAILURE_REG_OR_COUNT ();					\\
									\\
  pat = POP_FAILURE_POINTER ();				\\
  DEBUG_PRINT2 (\"  Popping pattern %p: \", pat);				\\
  DEBUG_PRINT_COMPILED_PATTERN (bufp, pat, pend);			\\
									\\
  /* If the saved string location is NULL, it came from an		\\
     on_failure_keep_string_jump opcode, and we want to throw away the	\\
     saved NULL, thus retaining our current position in the string.  */	\\
  str = POP_FAILURE_POINTER ();						\\
  DEBUG_PRINT2 (\"  Popping string %p: `\", str);				\\
  DEBUG_PRINT_DOUBLE_STRING (str, string1, size1, string2, size2);	\\
  DEBUG_PRINT1 (\"'\\n\");							\\
									\\
  fail_stack.frame = POP_FAILURE_INT ();				\\
  DEBUG_PRINT2 (\"  Popping  frame index: %d\\n\", fail_stack.frame);	\\
									\\
  assert (fail_stack.avail >= 0);					\\
  assert (fail_stack.frame <= fail_stack.avail);			\\
									\\
  DEBUG_STATEMENT (nfailure_points_popped++);				\\
}" 51532 . 52838) (WHILE "while" 52839 . 52844) (semantic-list "(0)" 52845 . 52848)))
          ("MAX_REGNUM" . ((number "255" 59426 . 59429)))
          ("SET_RANGE_TABLE_WORK_AREA" (spp-arg-list ("work_area" "range_start" "range_end") 62097 . 62132) . 
              ((DO "do" 62137 . 62139) (semantic-list "{									\\
    EXTEND_RANGE_TABLE ((work_area), 2);				\\
    (work_area).table[(work_area).used++] = (range_start);		\\
    (work_area).table[(work_area).used++] = (range_end);		\\
  }" 62140 . 62323) (WHILE "while" 62324 . 62329) (semantic-list "(0)" 62330 . 62333)))
          ("RANGE_TABLE_WORK_USED" (spp-arg-list ("work_area") 62644 . 62655) . ((semantic-list "((work_area).used)" 62656 . 62674)))
          ("POINTER_TO_OFFSET" (spp-arg-list ("ptr") 137263 . 137268) . ((semantic-list "(FIRST_STRING_P (ptr)				\\
   ? ((regoff_t) ((ptr) - string1))		\\
   : ((regoff_t) ((ptr) - string2 + size1)))" 137275 . 137385)))
          ("AT_STRINGS_BEG" (spp-arg-list ("d") 138497 . 138500) . ((semantic-list "((d) == (size1 ? string1 : string2) || !size2)" 138501 . 138547)))
          ("WORDCHAR_P" (spp-arg-list ("d") 138871 . 138874) . ((semantic-list "(SYNTAX ((d) == end1 ? *string2					\\
	   : (d) == string2 - 1 ? *(end1 - 1) : *(d))			\\
   == Sword)" 138885 . 138986)))
          ("CHAR_CHARSET" (spp-arg-list ("c") 8943 . 8946) . ((number "0" 8947 . 8948)))
          ("STRING_CHAR" (spp-arg-list ("p") 9329 . 9332) . ((semantic-list "(*(p))" 9333 . 9339)))
          ("BYTE8_TO_CHAR" (spp-arg-list ("c") 9899 . 9902) . ((semantic-list "(c)" 9903 . 9906)))
          ("IS_REAL_ASCII" (spp-arg-list ("c") 12794 . 12797) . ((semantic-list "((c) < 0200)" 12798 . 12810)))
          ("ISCNTRL" (spp-arg-list ("c") 13403 . 13406) . ((semantic-list "(ISASCII (c) && iscntrl (c))" 13407 . 13435)))
          ("TOLOWER" (spp-arg-list ("c") 13789 . 13792) . ((symbol "tolower" 13793 . 13800) (semantic-list "(c)" 13800 . 13803)))
          ("STORE_NUMBER" (spp-arg-list ("destination" "number") 23545 . 23566) . 
              ((DO "do" 23574 . 23576) (semantic-list "{									\\
    (destination)[0] = (number) & 0377;					\\
    (destination)[1] = (number) >> 8;					\\
  }" 23577 . 23682) (WHILE "while" 23683 . 23688) (semantic-list "(0)" 23689 . 23692)))
          ("PUSH_FAILURE_POINTER" (spp-arg-list ("item") 45102 . 45108) . 
              ((symbol "fail_stack" 45117 . 45127) (punctuation "." 45127 . 45128) (symbol "stack" 45128 . 45133) (semantic-list "[fail_stack.avail++]" 45133 . 45153) (punctuation "." 45153 . 45154) (symbol "pointer" 45154 . 45161) (punctuation "=" 45162 . 45163) (semantic-list "(item)" 45164 . 45170)))
          ("POP_FAILURE_POINTER" (spp-arg-list nil 45844 . 45846) . 
              ((symbol "fail_stack" 45847 . 45857) (punctuation "." 45857 . 45858) (symbol "stack" 45858 . 45863) (semantic-list "[--fail_stack.avail]" 45863 . 45883) (punctuation "." 45883 . 45884) (symbol "pointer" 45884 . 45891)))
          ("FREE_RANGE_TABLE_WORK_AREA" (spp-arg-list ("work_area") 62413 . 62424) . 
              ((DO "do" 62429 . 62431) (semantic-list "{						\\
    if ((work_area).table)			\\
      free ((work_area).table);			\\
  }" 62432 . 62511) (WHILE "while" 62512 . 62517) (semantic-list "(0)" 62518 . 62521)))
          ("AT_STRINGS_END" (spp-arg-list ("d") 138570 . 138573) . ((semantic-list "((d) == end2)" 138574 . 138587)))
          ("RE_TARGET_MULTIBYTE_P" (spp-arg-list ("x") 9080 . 9083) . ((number "0" 9084 . 9085)))
          ("SAME_CHARSET_P" (spp-arg-list ("c1" "c2") 9209 . 9217) . ((semantic-list "(1)" 9218 . 9221)))
          ("RE_CHAR_TO_MULTIBYTE" (spp-arg-list ("c") 9624 . 9627) . ((semantic-list "(c)" 9628 . 9631)))
          ("MAKE_CHAR" (spp-arg-list ("charset" "c1" "c2") 9854 . 9871) . ((semantic-list "(c1)" 9872 . 9876)))
          ("CHAR_LEADING_CODE" (spp-arg-list ("c") 9962 . 9965) . ((semantic-list "(c)" 9966 . 9969)))
          ("ISBLANK" (spp-arg-list ("c") 12987 . 12990) . ((semantic-list "((c) == ' ' || (c) == '\\t')" 12991 . 13018)))
          ("REGEX_ALLOCATE_STACK" (spp-arg-list ("size") 16471 . 16477) . ((symbol "r_alloc" 16485 . 16492) (semantic-list "(&failure_stack_ptr, (size))" 16493 . 16521)))
          ("FIRST_STRING_P" (spp-arg-list ("ptr") 17430 . 17435) . ((semantic-list "(size1 && string1 <= (ptr) && (ptr) <= string1 + size1)" 17444 . 17499)))
          ("PUSH_FAILURE_INT" (spp-arg-list ("item") 45369 . 45375) . 
              ((symbol "fail_stack" 45384 . 45394) (punctuation "." 45394 . 45395) (symbol "stack" 45395 . 45400) (semantic-list "[fail_stack.avail++]" 45400 . 45420) (punctuation "." 45420 . 45421) (symbol "integer" 45421 . 45428) (punctuation "=" 45429 . 45430) (semantic-list "(item)" 45431 . 45437)))
          ("ENSURE_FAIL_STACK" (spp-arg-list ("space") 46420 . 46427) . 
              ((WHILE "while" 46434 . 46439) (semantic-list "(REMAINING_AVAIL_SLOTS <= space)" 46440 . 46472) (semantic-list "{				\\
  if (!GROW_FAIL_STACK (fail_stack))					\\
    return -2;								\\
  DEBUG_PRINT2 (\"\\n  Doubled stack; size now: %d\\n\", (fail_stack).size);\\
  DEBUG_PRINT2 (\"	 slots available: %d\\n\", REMAINING_AVAIL_SLOTS);\\
}" 46473 . 46690)))
          ("INSERT_JUMP" (spp-arg-list ("op" "loc" "to") 56207 . 56220) . ((symbol "insert_op1" 56225 . 56235) (semantic-list "(op, loc, (to) - (loc) - 3, b)" 56236 . 56266)))
          ("IMMEDIATE_QUIT_CHECK" . 
              ((DO "do" 60656 . 60658) (semantic-list "{					\\
      if (immediate_quit) QUIT;			\\
    }" 60659 . 60708) (WHILE "while" 60709 . 60714) (semantic-list "(0)" 60715 . 60718)))
          ("BIT_LOWER" . ((number "0x2" 61907 . 61910)))
          ("RE_STRING_CHAR_AND_LENGTH" (spp-arg-list ("p" "len" "multibyte") 9543 . 9562) . ((symbol "STRING_CHAR_AND_LENGTH" 9563 . 9585) (semantic-list "(p, len)" 9586 . 9594)))
          ("GET_CHAR_AFTER" (spp-arg-list ("c" "p" "len") 9802 . 9813) . ((semantic-list "(c = *p, len = 1)" 9818 . 9835)))
          ("true" . ((number "1" 18197 . 18198)))
          ("PUSH_FAILURE_ELT" (spp-arg-list ("item") 45631 . 45637) . 
              ((symbol "fail_stack" 45646 . 45656) (punctuation "." 45656 . 45657) (symbol "stack" 45657 . 45662) (semantic-list "[fail_stack.avail++]" 45662 . 45682) (punctuation "=" 45683 . 45684) (semantic-list "(item)" 45686 . 45692)))
          ("NUM_NONREG_ITEMS" . ((number "3" 46102 . 46103)))
          ("FAILURE_PAT" (spp-arg-list ("h") 46185 . 46188) . 
              ((symbol "fail_stack" 46189 . 46199) (punctuation "." 46199 . 46200) (symbol "stack" 46200 . 46205) (semantic-list "[(h) - 1]" 46205 . 46214) (punctuation "." 46214 . 46215) (symbol "pointer" 46215 . 46222)))
          ("GET_BUFFER_SPACE" (spp-arg-list ("n") 54925 . 54928) . 
              ((WHILE "while" 54940 . 54945) (semantic-list "((size_t) (b - bufp->buffer + (n)) > bufp->allocated)" 54946 . 54999) (symbol "EXTEND_BUFFER" 55009 . 55022) (semantic-list "()" 55023 . 55025)))
          ("SET_LIST_BIT" (spp-arg-list ("c") 62870 . 62873) . ((semantic-list "(b[((c)) / BYTEWIDTH] |= 1 << ((c) % BYTEWIDTH))" 62874 . 62922)))
          ("PREFETCH_NOLIMIT" (spp-arg-list nil 138198 . 138200) . 
              ((IF "if" 138210 . 138212) (semantic-list "(d == end1)" 138213 . 138224) (semantic-list "{									\\
       d = string2;							\\
       dend = end_match_2;						\\
     }" 138238 . 138318)))
          ("WIDE_CHAR_SUPPORT" . ((number "1" 1986 . 1987)))
          ("PREV_CHAR_BOUNDARY" (spp-arg-list ("p" "limit") 9290 . 9300) . ((semantic-list "((p)--)" 9301 . 9308)))
          ("ISDIGIT" (spp-arg-list ("c") 13256 . 13259) . ((semantic-list "(ISASCII (c) && isdigit (c))" 13260 . 13288)))
          ("NEXT_FAILURE_HANDLE" (spp-arg-list ("h") 46309 . 46312) . 
              ((symbol "fail_stack" 46313 . 46323) (punctuation "." 46323 . 46324) (symbol "stack" 46324 . 46329) (semantic-list "[(h) - 3]" 46329 . 46338) (punctuation "." 46338 . 46339) (symbol "integer" 46339 . 46346)))
          ("PATFETCH" (spp-arg-list ("c") 54086 . 54089) . 
              ((DO "do" 54100 . 54102) (semantic-list "{									\\
    int len;								\\
    if (p == pend) return REG_EEND;					\\
    c = RE_STRING_CHAR_AND_LENGTH (p, len, multibyte);			\\
    p += len;								\\
  }" 54103 . 54264) (WHILE "while" 54265 . 54270) (semantic-list "(0)" 54271 . 54274)))
          ("TRANSLATE" (spp-arg-list ("d") 54592 . 54595) . ((semantic-list "(RE_TRANSLATE_P (translate) ? RE_TRANSLATE (translate, (d)) : (d))" 54600 . 54666)))
          ("INIT_BUF_SIZE" . ((number "32" 54830 . 54832)))
          ("MAX_BUF_SIZE" . ((number "65500L" 57170 . 57176)))
          ("MOVE_BUFFER_POINTER" (spp-arg-list ("P") 57641 . 57644) . ((semantic-list "(__ptrlow (P) = new_buffer + (__ptrlow (P) - old_buffer),	\\
   SET_HIGH_BOUND (P),						\\
   __ptrvalue (P) = new_buffer + (__ptrvalue (P) - old_buffer))" 57653 . 57806)))
          ("BIT_MULTIBYTE" . ((number "0x20" 62000 . 62004)))
          ("CLEAR_RANGE_TABLE_WORK_USED" (spp-arg-list ("work_area") 62558 . 62569) . ((semantic-list "((work_area).used = 0, (work_area).bits = 0)" 62570 . 62614)))
          ("GET_UNSIGNED_NUMBER" (spp-arg-list ("num") 66653 . 66658) . 
              ((DO "do" 66667 . 66669) (semantic-list "{									\\
    if (p == pend)							\\
      FREE_STACK_RETURN (REG_EBRACE);					\\
    else								\\
      {									\\
	PATFETCH (c);							\\
	while ('0' <= c && c <= '9')					\\
	  {								\\
	    int prev;							\\
	    if (num < 0)						\\
	      num = 0;							\\
	    prev = num;							\\
	    num = num * 10 + c - '0';					\\
	    if (num / 10 != prev)					\\
	      FREE_STACK_RETURN (REG_BADBR);				\\
	    if (p == pend)						\\
	      FREE_STACK_RETURN (REG_EBRACE);				\\
	    PATFETCH (c);						\\
	  }								\\
      }									\\
  }" 66670 . 67204) (WHILE "while" 67205 . 67210) (semantic-list "(0)" 67211 . 67214)))
          ("MULTIBYTE_FORM_LENGTH" (spp-arg-list ("p" "s") 9252 . 9258) . ((semantic-list "(1)" 9259 . 9262)))
          ("ISASCII" (spp-arg-list ("c") 12681 . 12684) . ((number "1" 12685 . 12686)))
          ("ISLOWER" (spp-arg-list ("c") 13452 . 13455) . ((semantic-list "(ISASCII (c) && islower (c))" 13456 . 13484)))
          ("SIGN_EXTEND_CHAR" (spp-arg-list ("c") 14767 . 14770) . ((semantic-list "((signed char) (c))" 14771 . 14790)))
          ("EXTRACT_NUMBER" (spp-arg-list ("destination" "source") 24127 . 24148) . 
              ((DO "do" 24156 . 24158) (semantic-list "{									\\
    (destination) = *(source) & 0377;					\\
    (destination) += SIGN_EXTEND_CHAR (*((source) + 1)) << 8;		\\
  }" 24159 . 24283) (WHILE "while" 24284 . 24289) (semantic-list "(0)" 24290 . 24293)))
          ("RESET_FAIL_STACK" (spp-arg-list nil 43566 . 43568) . ((semantic-list "((void)0)" 43569 . 43578)))
          ("GROW_FAIL_STACK" (spp-arg-list ("fail_stack") 44159 . 44171) . ((semantic-list "(((fail_stack).size * sizeof (fail_stack_elt_t)			\\
    >= re_max_failures * TYPICAL_FAILURE_SIZE)				\\
   ? 0									\\
   : ((fail_stack).stack						\\
      = (fail_stack_elt_t *)						\\
	REGEX_REALLOCATE_STACK ((fail_stack).stack,			\\
	  (fail_stack).size * sizeof (fail_stack_elt_t),		\\
	  MIN (re_max_failures * TYPICAL_FAILURE_SIZE,			\\
	       ((fail_stack).size * sizeof (fail_stack_elt_t)		\\
		* FAIL_STACK_GROWTH_FACTOR))),				\\
									\\
      (fail_stack).stack == NULL					\\
      ? 0								\\
      : ((fail_stack).size						\\
	 = (MIN (re_max_failures * TYPICAL_FAILURE_SIZE,		\\
		 ((fail_stack).size * sizeof (fail_stack_elt_t)		\\
		  * FAIL_STACK_GROWTH_FACTOR))				\\
	    / sizeof (fail_stack_elt_t)),				\\
	 1)))" 44180 . 44912)))
          ("PUSH_NUMBER" (spp-arg-list ("ptr" "val") 47201 . 47210) . 
              ((DO "do" 47218 . 47220) (semantic-list "{									\\
  char *destination;							\\
  int c;								\\
  ENSURE_FAIL_STACK(3);							\\
  EXTRACT_NUMBER (c, ptr);						\\
  DEBUG_PRINT4 (\"    Push number %p = %d -> %d\\n\", ptr, c, val);	\\
  PUSH_FAILURE_INT (c);							\\
  PUSH_FAILURE_POINTER (ptr);						\\
  PUSH_FAILURE_INT (-1);						\\
  STORE_NUMBER (ptr, val);						\\
}" 47221 . 47549) (WHILE "while" 47550 . 47555) (semantic-list "(0)" 47556 . 47559)))
          ("BIT_PUNCT" . ((number "0x4" 61929 . 61932)))
          ("FREE_STACK_RETURN" (spp-arg-list ("value") 79337 . 79344) . 
              ((DO "do" 79350 . 79352) (semantic-list "{							\\
    FREE_RANGE_TABLE_WORK_AREA (range_table_work);	\\
    free (compile_stack.stack);				\\
    return value;					\\
  }" 79353 . 79480) (WHILE "while" 79481 . 79486) (semantic-list "(0)" 79487 . 79490)))
          ("ISALPHA" (spp-arg-list ("c") 13354 . 13357) . ((semantic-list "(ISASCII (c) && isalpha (c))" 13358 . 13386)))
          ("REGEX_FREE" (spp-arg-list ("arg") 16252 . 16257) . ((semantic-list "((void)0)" 16258 . 16267)))
          ("TALLOC" (spp-arg-list ("n" "t") 17576 . 17582) . ((semantic-list "((t *) malloc ((n) * sizeof (t)))" 17583 . 17616)))
          ("REGEX_TALLOC" (spp-arg-list ("n" "t") 17818 . 17824) . ((semantic-list "((t *) REGEX_ALLOCATE ((n) * sizeof (t)))" 17825 . 17866)))
          ("MAX" (spp-arg-list ("a" "b") 17986 . 17992) . ((semantic-list "((a) > (b) ? (a) : (b))" 17993 . 18016)))
          ("CHARSET_LOOKUP_BITMAP" (spp-arg-list ("p" "c") 27152 . 27158) . ((semantic-list "((c) < CHARSET_BITMAP_SIZE (p) * BYTEWIDTH			\\
   && (p)[2 + (c) / BYTEWIDTH] & (1 << ((c) % BYTEWIDTH)))" 27166 . 27271)))
          ("DEBUG_PRINT1" (spp-arg-list ("x") 37012 . 37015))
          ("POP_FAILURE_REG_OR_COUNT" (spp-arg-list nil 47636 . 47638) . 
              ((DO "do" 47645 . 47647) (semantic-list "{									\\
  int reg = POP_FAILURE_INT ();						\\
  if (reg == -1)							\\
    {									\\
      /* It's a counter.  */						\\
      /* Here, we discard `const', making re_match non-reentrant.  */	\\
      unsigned char *ptr = (unsigned char*) POP_FAILURE_POINTER ();	\\
      reg = POP_FAILURE_INT ();						\\
      STORE_NUMBER (ptr, reg);						\\
      DEBUG_PRINT3 (\"     Pop counter %p = %d\\n\", ptr, reg);		\\
    }									\\
  else									\\
    {									\\
      regend[reg] = POP_FAILURE_POINTER ();				\\
      regstart[reg] = POP_FAILURE_POINTER ();				\\
      DEBUG_PRINT4 (\"     Pop reg %d (spanning %p -> %p)\\n\",		\\
		    reg, regstart[reg], regend[reg]);			\\
    }									\\
}" 47648 . 48333) (WHILE "while" 48334 . 48339) (semantic-list "(0)" 48340 . 48343)))
          ("CHECK_INFINITE_LOOP" (spp-arg-list ("pat_cur" "string_place") 48428 . 48451) . 
              ((DO "do" 48456 . 48458) (semantic-list "{									\\
  int failure = TOP_FAILURE_HANDLE ();					\\
  /* Check for infinite matching loops */				\\
  while (failure > 0							\\
	 && (FAILURE_STR (failure) == string_place			\\
	     || FAILURE_STR (failure) == NULL))				\\
    {									\\
      assert (FAILURE_PAT (failure) >= bufp->buffer			\\
	      && FAILURE_PAT (failure) <= bufp->buffer + bufp->used);	\\
      if (FAILURE_PAT (failure) == pat_cur)				\\
	{								\\
	  cycle = 1;							\\
	  break;							\\
	}								\\
      DEBUG_PRINT2 (\"  Other pattern: %p\\n\", FAILURE_PAT (failure));	\\
      failure = NEXT_FAILURE_HANDLE(failure);				\\
    }									\\
  DEBUG_PRINT2 (\"  Other string: %p\\n\", FAILURE_STR (failure));		\\
}" 48459 . 49142) (WHILE "while" 49143 . 49148) (semantic-list "(0)" 49149 . 49152)))
          ("PUSH_FAILURE_POINT" (spp-arg-list ("pattern" "string_place") 49460 . 49483) . 
              ((DO "do" 49488 . 49490) (semantic-list "{									\\
  char *destination;							\\
  /* Must be int, so when we don't save any registers, the arithmetic	\\
     of 0 + -1 isn't done as unsigned.  */				\\
  									\\
  DEBUG_STATEMENT (nfailure_points_pushed++);				\\
  DEBUG_PRINT1 (\"\\nPUSH_FAILURE_POINT:\\n\");				\\
  DEBUG_PRINT2 (\"  Before push, next avail: %d\\n\", (fail_stack).avail);	\\
  DEBUG_PRINT2 (\"			size: %d\\n\", (fail_stack).size);\\
  									\\
  ENSURE_FAIL_STACK (NUM_NONREG_ITEMS);					\\
  									\\
  DEBUG_PRINT1 (\"\\n\");							\\
  									\\
  DEBUG_PRINT2 (\"  Push frame index: %d\\n\", fail_stack.frame);		\\
  PUSH_FAILURE_INT (fail_stack.frame);					\\
  									\\
  DEBUG_PRINT2 (\"  Push string %p: `\", string_place);			\\
  DEBUG_PRINT_DOUBLE_STRING (string_place, string1, size1, string2, size2);\\
  DEBUG_PRINT1 (\"'\\n\");							\\
  PUSH_FAILURE_POINTER (string_place);					\\
  									\\
  DEBUG_PRINT2 (\"  Push pattern %p: \", pattern);			\\
  DEBUG_PRINT_COMPILED_PATTERN (bufp, pattern, pend);			\\
  PUSH_FAILURE_POINTER (pattern);					\\
  									\\
  /* Close the frame by moving the frame pointer past it.  */		\\
  fail_stack.frame = fail_stack.avail;					\\
}" 49491 . 50633) (WHILE "while" 50634 . 50639) (semantic-list "(0)" 50640 . 50643)))
          ("STORE_JUMP2" (spp-arg-list ("op" "loc" "to" "arg") 56045 . 56063) . ((symbol "store_op2" 56068 . 56077) (semantic-list "(op, loc, (to) - (loc) - 3, arg)" 56078 . 56110)))
          ("COMPILE_STACK_EMPTY" . ((semantic-list "(compile_stack.avail == 0)" 60197 . 60223)))
          ("COMPILE_STACK_TOP" . ((semantic-list "(compile_stack.stack[compile_stack.avail])" 60358 . 60400)))
          ("EXTEND_RANGE_TABLE" (spp-arg-list ("work_area" "n") 61353 . 61367) . 
              ((DO "do" 61375 . 61377) (semantic-list "{									\\
    if (((work_area).used + (n)) * sizeof (int) > (work_area).allocated) \\
      {									\\
        extend_range_table_work_area (&work_area);			\\
        if ((work_area).table == 0)					\\
          return (REG_ESPACE);						\\
      }									\\
  }" 61378 . 61639) (WHILE "while" 61640 . 61645) (semantic-list "(0)" 61646 . 61649)))
          ("SET_RANGE_TABLE_WORK_AREA_BIT" (spp-arg-list ("work_area" "bit") 61688 . 61704) . 
              ((semantic-list "(work_area)" 61710 . 61721) (punctuation "." 61721 . 61722) (symbol "bits" 61722 . 61726) (punctuation "|" 61727 . 61728) (punctuation "=" 61728 . 61729) (semantic-list "(bit)" 61730 . 61735)))
          ("BIT_WORD" . ((number "0x1" 61885 . 61888)))
          ("FIXUP_ALT_JUMP" (spp-arg-list nil 79151 . 79153) . 
              ((DO "do" 79161 . 79163) (semantic-list "{									\\
  if (fixup_alt_jump)							\\
    STORE_JUMP (jump, fixup_alt_jump, b);				\\
}" 79164 . 79254) (WHILE "while" 79255 . 79260) (semantic-list "(0)" 79261 . 79264)))
          ("POS_ADDR_VSTRING" (spp-arg-list ("POS") 129871 . 129876) . ((semantic-list "(((POS) >= size1 ? string2 - size1 : string1) + (POS))" 129885 . 129939)))
          ("WEAK_ALIAS" (spp-arg-list ("a" "b") 3867 . 3872))
          ("gettext_noop" (spp-arg-list ("String") 4182 . 4190) . ((symbol "String" 4191 . 4197)))
          ("STRING_CHAR_AND_LENGTH" (spp-arg-list ("p" "actual_len") 9468 . 9483) . ((semantic-list "((actual_len) = 1, *(p))" 9484 . 9508)))
          ("ISALNUM" (spp-arg-list ("c") 13305 . 13308) . ((semantic-list "(ISASCII (c) && isalnum (c))" 13309 . 13337)))
          ("CHARSET_BITMAP_SIZE" (spp-arg-list ("p") 26431 . 26434) . ((semantic-list "((p)[1] & 0x7F)" 26435 . 26450)))
          ("CHARSET_LOOKUP_RANGE_TABLE_RAW" (spp-arg-list ("not" "c" "range_table" "count") 27738 . 27766) . 
              ((DO "do" 27771 . 27773) (semantic-list "{									\\
      re_wchar_t range_start, range_end;				\\
      re_char *p;							\\
      re_char *range_table_end						\\
	= CHARSET_RANGE_TABLE_END ((range_table), (count));		\\
									\\
      for (p = (range_table); p < range_table_end; p += 2 * 3)		\\
	{								\\
	  EXTRACT_CHARACTER (range_start, p);				\\
	  EXTRACT_CHARACTER (range_end, p + 3);				\\
									\\
	  if (range_start <= (c) && (c) <= range_end)			\\
	    {								\\
	      (not) = !(not);						\\
	      break;							\\
	    }								\\
	}								\\
    }" 27788 . 28308) (WHILE "while" 28321 . 28326) (semantic-list "(0)" 28327 . 28330)))
          ("DEBUG_PRINT2" (spp-arg-list ("x1" "x2") 37037 . 37045))
          ("INIT_FAILURE_ALLOC" . ((number "20" 41572 . 41574)))
          ("FAILURE_STR" (spp-arg-list ("h") 46242 . 46245) . ((semantic-list "(fail_stack.stack[(h) - 2].pointer)" 46246 . 46281)))
          ("TOP_FAILURE_HANDLE" (spp-arg-list nil 46373 . 46375) . 
              ((symbol "fail_stack" 46376 . 46386) (punctuation "." 46386 . 46387) (symbol "frame" 46387 . 46392)))
          ("COMPILE_STACK_FULL" . ((semantic-list "(compile_stack.avail == compile_stack.size)" 60252 . 60295)))
          ("BIT_SPACE" . ((number "0x8" 61951 . 61954)))
          )

    )
   (semanticdb-table "xmenu.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [1204 1223])
            ("signal.h" include (:system-flag t) nil [1340 1359])
            ("stdio.h" include (:system-flag t) nil [1368 1386])
            ("setjmp.h" include (:system-flag t) nil [1387 1406])
            ("lisp.h" include nil nil [1408 1425])
            ("keyboard.h" include nil nil [1426 1447])
            ("keymap.h" include nil nil [1448 1467])
            ("frame.h" include nil nil [1468 1486])
            ("termhooks.h" include nil nil [1487 1509])
            ("window.h" include nil nil [1510 1529])
            ("blockinput.h" include nil nil [1530 1553])
            ("buffer.h" include nil nil [1554 1573])
            ("charset.h" include nil nil [1574 1594])
            ("coding.h" include nil nil [1595 1614])
            ("sysselect.h" include nil nil [1615 1637])
            ("xterm.h" include nil nil [1815 1833])
            ("sys/types.h" include (:system-flag t) nil [1954 1976])
            ("dispextern.h" include nil nil [1985 2008])
            ("gtkutil.h" include nil nil [2695 2715])
            ("menu.h" include nil nil [2724 2741])
            ("TRUE" variable (:constant-flag t) nil [2764 2768])
            ("FALSE" variable (:constant-flag t) nil [2779 2784])
            ("Qdebug_on_next_call" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2809 2841])
            ("Qmenu_bar" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2843 2872])
            ("QCradio" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2874 2911])
            ("QCtoggle" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2874 2911])
            ("Voverriding_local_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2913 2954])
            ("Voverriding_local_map_menu_flag" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2955 3006])
            ("Qoverriding_terminal_local_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3008 3081])
            ("Qoverriding_local_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3008 3081])
            ("Qmenu_bar_update_hook" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3083 3124])
            ("set_frame_menubar" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3506 3563])
            ("xdialog_show" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3564 3662])
            ("update_frame_menubar" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [3671 3725])
            ("popup_activated_flag" variable
               (:typemodifiers ("static")
                :type "int")
                nil [3844 3876])
            ("next_menubar_widget_id" variable
               (:typemodifiers ("static")
                :type "int")
                nil [3878 3912])
            ("xmalloc_widget_value" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("widget_value" type (:type "class") nil nil))
                nil [4032 4086])
            ("digest_single_submenu" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("widget_value" type (:type "class") nil nil))
                nil [4087 4151])
            ("pending_menu_activation" variable (:type "int") nil [4510 4538])
            ("mouse_position_for_popup" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [5465 6481])
            ("DEFUN_ARGS_" variable (:type ("Sx_popup_dialog" type (:type "class") nil nil)) nil [6531 7622])
            ("doc" variable
               (:default-value "DEFUN (\"x-popup-dialog\", Fx_popup_dialog, Sx_popup_dialog, 2, 3, 0,
       doc: /* Pop up a dialog box and return user's selection.
POSITION specifies which frame to use.
This is normally a mouse button event or a window or frame.
If POSITION is t, it means to use the frame the mouse is on.
The dialog box appears in the middle of the specified frame.

CONTENTS specifies the alternatives to display in the dialog box.
It is a list of the form (DIALOG ITEM1 ITEM2...).
Each ITEM is a cons cell (STRING . VALUE).
The return value is VALUE from the chosen item.

An ITEM may also be just a string--that makes a nonselectable item.
An ITEM may also be nil--that means to put all preceding items
on the left of the dialog box and all following items on the right.
\\(By default, approximately half appear on each side.)

If HEADER is non-nil, the frame title for the box is \"Information\",
otherwise it is \"Question\".

If the user gets rid of the dialog box without making a valid choice,
for instance using the window manager, then this produces a quit and
`x-popup-dialog' does not return.  */)"
                :type "int")
                nil [6531 7622])
            ("Sx_popup_dialog" function
               (:arguments 
                  ( ("header" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("contents" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6531 11214])
            ("x_menu_set_in_use" function
               (:arguments 
                  ( ("in_use" variable (:type "int") nil nil))                  
                :type "void")
                nil [11306 11522])
            ("x_menu_wait_for_event" function
               (:arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [11616 11627]))                  
                :type "void")
                nil [11588 12761])
            ("DEFUN_ARGS_" variable (:type ("Sx_menu_bar_open_internal" type (:type "class") nil nil)) nil [17334 17772])
            ("doc" variable
               (:default-value "DEFUN (\"x-menu-bar-open-internal\", Fx_menu_bar_open_internal, Sx_menu_bar_open_internal, 0, 1, \"i\",
       doc: /* Start key navigation of the menu bar in FRAME.
This initially opens the first menu bar item and you can then navigate with the
arrow keys, select a menu entry with the return key or cancel with the
escape key.  If FRAME has no menu bar this function does nothing.

If FRAME is nil or not given, use the selected frame.  */)"
                :type "int")
                nil [17334 17772])
            ("Sx_menu_bar_open_internal" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17334 18451])
            ("popup_widget_loop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("do_timers" variable (:type "int") nil nil)
                    ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [18558 18860])
            ("x_activate_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [19378 20192])
            ("popup_deactivate_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [20685 20827])
            ("show_help_event" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("widget" variable (:type ("xt_or_gtk_widget" type (:type "class") nil nil)) nil nil)
                    ("help" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [21147 21930])
            ("menu_highlight_callback" function
               (:arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("call_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [22236 22857])
            ("xg_crazy_callback_abort" variable
               (:typemodifiers ("static")
                :type "int")
                nil [23452 23487])
            ("menubar_selection_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [23682 25111])
            ("update_frame_menubar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [25817 27222])
            ("set_frame_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("first_time" variable (:type "int") nil nil)
                    ("deep_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [27408 37818])
            ("initialize_frame_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [38067 38365])
            ("menu_item_selection" variable
               (:typemodifiers ("volatile")
                :type "int")
                nil [40868 40897])
            ("next_popup_x_y" type
               (:members 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41046 41058])
                    ("x" variable (:type "int") (reparse-symbol classsubparts) [41061 41067])
                    ("y" variable (:type "int") (reparse-symbol classsubparts) [41070 41076]))                  
                :type "struct")
                nil [41020 41079])
            ("menu_position_func" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("menu" variable
                       (:pointer 1
                        :type ("GtkMenu" type (:type "class") nil nil))
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type ("gint" type (:type "class") nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type ("gint" type (:type "class") nil nil))
                        nil nil)
                    ("push_in" variable
                       (:pointer 1
                        :type ("gboolean" type (:type "class") nil nil))
                        nil nil)
                    ("user_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [41555 42346])
            ("popup_selection_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [42348 42645])
            ("pop_down_menu" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42647 42884])
            ("create_and_show_popup_menu" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("first_wv" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("for_click" variable (:type "int") nil nil)
                    ("timestamp" variable (:type "unsigned int") nil nil))                  
                :type "void")
                nil [43039 45096])
            ("xmenu_show" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48219 48231])
                    ("x" variable (:type "int") (reparse-symbol arg-sub-list) [48232 48238])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [48239 48245])
                    ("for_click" variable (:type "int") (reparse-symbol arg-sub-list) [48246 48260])
                    ("keymaps" variable (:type "int") (reparse-symbol arg-sub-list) [48261 48273])
                    ("title" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48279 48297])
                    ("error" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [48298 48311])
                    ("timestamp" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [48312 48333]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [48195 55728])
            ("dialog_selection_callback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("widget" variable
                       (:pointer 1
                        :type ("GtkWidget" type (:type "class") nil nil))
                        nil nil)
                    ("client_data" variable (:type ("gpointer" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [55746 56119])
            ("create_and_show_dialog" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("first_wv" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [56271 56994])
            ("button_names" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{
  \"button1\", \"button2\", \"button3\", \"button4\", \"button5\",
  \"button6\", \"button7\", \"button8\", \"button9\", \"button10\" }"
                :type "char")
                nil [58779 58929])
            ("xdialog_show" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("keymaps" variable (:type "int") nil nil)
                    ("header" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("title" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("error_name" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [58931 63772])
            ("popup_activated" function (:type "int") nil [74021 74078])
            ("DEFUN_ARGS_" variable (:type ("Smenu_or_popup_active_p" type (:type "class") nil nil)) nil [74143 74300])
            ("doc" variable
               (:default-value "DEFUN (\"menu-or-popup-active-p\", Fmenu_or_popup_active_p, Smenu_or_popup_active_p, 0, 0, 0,
       doc: /* Return t if a menu or popup dialog is active.  */)"
                :type "int")
                nil [74143 74300])
            ("Smenu_or_popup_active_p" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [74143 74418])
            ("syms_of_xmenu" function (:type "void") nil [74421 74931]))          
    :file "xmenu.c"
    :pointmax 75018
    :fsize 75017
    :lastmodtime '(19383 49283)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 74143 . 74300) (symbol "__attribute__" 74143 . 74300) (symbol "Lisp_Subr" 74143 . 74300) (symbol "Lisp_Object" 74143 . 74300) (punctuation 40867 . 40868) (symbol 40855 . 40866) (STATIC 40848 . 40854) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 17334 . 17772) (symbol "__attribute__" 17334 . 17772) (symbol "Lisp_Subr" 17334 . 17772) (symbol "Lisp_Object" 17334 . 17772) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 6531 . 7622) (symbol "__attribute__" 6531 . 7622) (symbol "Lisp_Subr" 6531 . 7622) (symbol "Lisp_Object" 6531 . 7622))
    :lexical-table 
        '(("TRUE" . ((number "1" 2769 . 2770)))
          ("FALSE" . ((number "0" 2785 . 2786)))
          )

    )
   (semanticdb-table "xdisp.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [8099 8118])
            ("stdio.h" include (:system-flag t) nil [8119 8137])
            ("limits.h" include (:system-flag t) nil [8138 8157])
            ("setjmp.h" include (:system-flag t) nil [8158 8177])
            ("lisp.h" include nil nil [8179 8196])
            ("keyboard.h" include nil nil [8197 8218])
            ("frame.h" include nil nil [8219 8237])
            ("window.h" include nil nil [8238 8257])
            ("termchar.h" include nil nil [8258 8279])
            ("dispextern.h" include nil nil [8280 8303])
            ("buffer.h" include nil nil [8304 8323])
            ("character.h" include nil nil [8324 8346])
            ("charset.h" include nil nil [8347 8367])
            ("indent.h" include nil nil [8368 8387])
            ("commands.h" include nil nil [8388 8409])
            ("keymap.h" include nil nil [8410 8429])
            ("macros.h" include nil nil [8430 8449])
            ("disptab.h" include nil nil [8450 8470])
            ("termhooks.h" include nil nil [8471 8493])
            ("intervals.h" include nil nil [8494 8516])
            ("coding.h" include nil nil [8517 8536])
            ("process.h" include nil nil [8537 8557])
            ("region-cache.h" include nil nil [8558 8583])
            ("font.h" include nil nil [8584 8601])
            ("fontset.h" include nil nil [8602 8622])
            ("blockinput.h" include nil nil [8623 8646])
            ("xterm.h" include nil nil [8670 8688])
            ("gtkutil.h" include nil nil [8798 8818])
            ("font.h" include nil nil [8827 8844])
            ("FRAME_X_OUTPUT" variable (:constant-flag t) nil [8877 8891])
            ("INFINITY" variable (:constant-flag t) nil [8932 8940])
            ("set_frame_menubar" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [9050 9113])
            ("pending_menu_activation" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9114 9149])
            ("interrupt_input" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9158 9185])
            ("command_loop_level" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9186 9216])
            ("do_mouse_tracking" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9218 9255])
            ("minibuffer_auto_raise" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9257 9290])
            ("Vminibuffer_list" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9291 9327])
            ("Qface" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9329 9354])
            ("Qheader_line" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9355 9420])
            ("Qmode_line_inactive" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9355 9420])
            ("Qmode_line" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9355 9420])
            ("Voverriding_local_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9422 9463])
            ("Voverriding_local_map_menu_flag" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9464 9515])
            ("Qmenu_item" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9516 9546])
            ("Qwhen" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9547 9572])
            ("Qhelp_echo" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9573 9603])
            ("Qafter_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9604 9653])
            ("Qbefore_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9604 9653])
            ("Qoverriding_terminal_local_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9655 9721])
            ("Qoverriding_local_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9655 9721])
            ("Vwindow_scroll_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9722 9785])
            ("Qwindow_scroll_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9722 9785])
            ("Vwindow_text_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9786 9859])
            ("Qwindow_text_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9786 9859])
            ("Vredisplay_end_trigger_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9860 9939])
            ("Qredisplay_end_trigger_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9860 9939])
            ("Qinhibit_point_motion_hooks" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9940 9980])
            ("QCpropertize" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9981 10030])
            ("QCdata" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9981 10030])
            ("QCfile" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9981 10030])
            ("QCeval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9981 10030])
            ("Qfontified" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10031 10054])
            ("Qgrow_only" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10055 10078])
            ("Qinhibit_eval_during_redisplay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10079 10122])
            ("Qobject" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10123 10172])
            ("Qposition" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10123 10172])
            ("Qbuffer_position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10123 10172])
            ("Qhollow" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10194 10233])
            ("Qbox" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10194 10233])
            ("Qhbar" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10194 10233])
            ("Qbar" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10194 10233])
            ("Qtext" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10256 10289])
            ("Qhand" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10256 10289])
            ("Qarrow" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10256 10289])
            ("Qrisky_local_variable" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10291 10325])
            ("list_of_error" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10358 10384])
            ("Vfontification_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10439 10476])
            ("Qfontification_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10477 10514])
            ("Vmouse_autoselect_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10609 10646])
            ("Qwrap_prefix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10648 10687])
            ("Vwrap_prefix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10648 10687])
            ("Qline_prefix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10688 10727])
            ("Vline_prefix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10688 10727])
            ("auto_raise_tool_bar_buttons_p" variable (:type "int") nil [10816 10850])
            ("make_cursor_line_fully_visible_p" variable (:type "int") nil [10938 10975])
            ("Vtool_bar_border" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11149 11178])
            ("Vtool_bar_button_margin" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11230 11266])
            ("tool_bar_button_relief" variable (:type "int") nil [11329 11362])
            ("Vauto_resize_tool_bars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11543 11578])
            ("x_stretch_cursor_p" variable (:type "int") nil [11769 11792])
            ("Qinhibit_redisplay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11849 11900])
            ("Vinhibit_redisplay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11849 11900])
            ("inhibit_eval_during_redisplay" variable (:type "int") nil [11972 12006])
            ("Qdisplay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12065 12086])
            ("Qwidth" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12087 12132])
            ("Qinvisible" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12087 12132])
            ("Qface" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12087 12132])
            ("Vdisplay_pixels_per_inch" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12180 12217])
            ("QCrelative_height" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12218 12286])
            ("QCrelative_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12218 12286])
            ("QCalign_to" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12218 12286])
            ("Qspace" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12218 12286])
            ("Qraise" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12287 12349])
            ("Qspace_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12287 12349])
            ("Qright_margin" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12287 12349])
            ("Qleft_margin" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12287 12349])
            ("Qslice" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12350 12369])
            ("Qcenter" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12370 12390])
            ("Qpointer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12391 12421])
            ("Qmargin" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12391 12421])
            ("Qline_height" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12422 12447])
            ("Qheight" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12448 12475])
            ("QCascent" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12476 12523])
            ("QCheight" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12476 12523])
            ("QCwidth" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12476 12523])
            ("Qscroll_bar" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12524 12555])
            ("Qcursor" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12556 12583])
            ("Vshow_trailing_whitespace" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12638 12676])
            ("Vnobreak_char_display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12736 12770])
            ("Voverflow_newline_into_fringe" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12798 12847])
            ("IT_OVERFLOW_NEWLINE_INTO_FRINGE" variable (:constant-flag t) nil [12991 13022])
            ("IT_DISPLAYING_WHITESPACE" variable (:constant-flag t) nil [13472 13496])
            ("Vvoid_text_area_pointer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13716 13752])
            ("Qtrailing_whitespace" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13818 13851])
            ("Qescape_glyph" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13922 13948])
            ("Qnobreak_space" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [14025 14052])
            ("Qimage" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [14148 14167])
            ("QCpointer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [14197 14226])
            ("QCmap" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [14197 14226])
            ("Qpoly" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [14227 14261])
            ("Qcircle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [14227 14261])
            ("Qrect" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [14227 14261])
            ("noninteractive_need_newline" variable (:type "int") nil [14346 14378])
            ("message_log_need_newline" variable
               (:typemodifiers ("static")
                :type "int")
                nil [14453 14489])
            ("message_dolog_marker1" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [14630 14671])
            ("message_dolog_marker2" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [14672 14713])
            ("message_dolog_marker3" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [14714 14755])
            ("this_line_start_pos" variable
               (:typemodifiers ("static")
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15015 15058])
            ("this_line_end_pos" variable
               (:typemodifiers ("static")
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15159 15200])
            ("this_line_vpos" variable
               (:typemodifiers ("static")
                :type "int")
                nil [15262 15288])
            ("this_line_y" variable
               (:typemodifiers ("static")
                :type "int")
                nil [15289 15312])
            ("this_line_pixel_height" variable
               (:typemodifiers ("static")
                :type "int")
                nil [15313 15347])
            ("this_line_start_x" variable
               (:typemodifiers ("static")
                :type "int")
                nil [15471 15500])
            ("this_line_buffer" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15563 15602])
            ("Vtruncate_partial_width_windows" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15685 15729])
            ("unibyte_display_via_language_environment" variable (:type "int") nil [15797 15842])
            ("multiple_frames" variable (:type "int") nil [15993 16013])
            ("Vglobal_mode_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16015 16047])
            ("Voverlay_arrow_variable_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16232 16273])
            ("Voverlay_arrow_position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16347 16383])
            ("Voverlay_arrow_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16457 16491])
            ("Qlast_arrow_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16712 16765])
            ("Qlast_arrow_position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16712 16765])
            ("Qoverlay_arrow_bitmap" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16891 16948])
            ("Qoverlay_arrow_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16891 16948])
            ("Vframe_title_format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17023 17055])
            ("Vicon_title_format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17133 17164])
            ("Vwindow_size_change_functions" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17324 17373])
            ("Vmenu_bar_update_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17375 17432])
            ("Qmenu_bar_update_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17375 17432])
            ("overlay_arrow_seen" variable
               (:typemodifiers ("static")
                :type "int")
                nil [17505 17535])
            ("highlight_nonselected_windows" variable (:type "int") nil [17609 17643])
            ("scroll_step" variable
               (:typemodifiers ("static")
                :type "int")
                nil [17771 17800])
            ("scroll_conservatively" variable
               (:typemodifiers ("static")
                :type "int")
                nil [17903 17942])
            ("scroll_margin" variable (:type "int") nil [18216 18240])
            ("buffer_shared" variable (:type "int") nil [18391 18409])
            ("default_invis_vector" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [18467 18510])
            ("mode_line_inverse_video" variable (:type "int") nil [18776 18804])
            ("minibuf_prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [18870 18897])
            ("minibuf_prompt_width" variable (:type "int") nil [19014 19039])
            ("echo_area_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [19222 19251])
            ("Vmessage_stack" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [19489 19516])
            ("message_enable_multibyte" variable (:type "int") nil [19619 19648])
            ("update_mode_lines" variable (:type "int") nil [19724 19746])
            ("windows_or_buffers_changed" variable (:type "int") nil [19844 19875])
            ("cursor_type_changed" variable (:type "int") nil [19939 19963])
            ("line_number_displayed" variable (:type "int") nil [20055 20081])
            ("Vline_number_display_limit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [20146 20185])
            ("line_number_display_limit_width" variable
               (:typemodifiers ("static")
                :type "int")
                nil [20262 20311])
            ("Vmessage_log_max" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [20423 20452])
            ("Vmessages_buffer_name" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20507 20548])
            ("echo_area_buffer" variable
               (:dereference 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20683 20715])
            ("echo_buffer" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20771 20805])
            ("Vwith_echo_area_save_vector" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20874 20921])
            ("display_last_displayed_message_p" variable
               (:typemodifiers ("static")
                :type "int")
                nil [21054 21098])
            ("message_buf_print" variable (:type "int") nil [21187 21209])
            ("Qinhibit_menubar_update" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [21285 21321])
            ("inhibit_menubar_update" variable (:type "int") nil [21322 21349])
            ("Vmenu_updating_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [21493 21526])
            ("Vmax_mini_window_height" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [21691 21727])
            ("message_truncate_lines" variable (:type "int") nil [21833 21860])
            ("Qmessage_truncate_lines" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [21861 21897])
            ("message_cleared_p" variable
               (:typemodifiers ("static")
                :type "int")
                nil [21994 22023])
            ("Vblink_cursor_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [22075 22107])
            ("MAX_SCRATCH_GLYPHS" variable (:constant-flag t) nil [22241 22259])
            ("scratch_glyph_row" variable (:type ("glyph_row" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [22264 22299])
            ("scratch_glyphs" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("glyph" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [22300 22355])
            ("last_height" variable
               (:typemodifiers ("static")
                :type "int")
                nil [22425 22465])
            ("last_max_ascent" variable
               (:typemodifiers ("static")
                :type "int")
                nil [22425 22465])
            ("help_echo_showing_p" variable (:type "int") nil [22525 22549])
            ("current_header_line_height" variable (:type "int") nil [22711 22768])
            ("current_mode_line_height" variable (:type "int") nil [22711 22768])
            ("TEXT_PROP_DISTANCE_LIMIT" variable (:constant-flag t) nil [23109 23133])
            ("inhibit_try_window_reusing" variable (:type "int") nil [23219 23273])
            ("inhibit_try_window_id" variable (:type "int") nil [23219 23273])
            ("inhibit_try_cursor_movement" variable (:type "int") nil [23274 23306])
            ("trace_redisplay_p" variable (:type "int") nil [23395 23417])
            ("TRACE_MOVE" variable (:constant-flag t) nil [23618 23628])
            ("automatic_hscrolling_p" variable (:type "int") nil [23740 23767])
            ("Qauto_hscroll_mode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [23768 23799])
            ("hscroll_margin" variable (:type "int") nil [23893 23918])
            ("Vhscroll_step" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [23998 24024])
            ("Vresize_mini_windows" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [24240 24273])
            ("displayed_buffer" variable
               (:pointer 1
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [24339 24371])
            ("overline_margin" variable (:type "int") nil [24413 24439])
            ("underline_minimum_offset" variable (:type "int") nil [24667 24702])
            ("prop_handled" type
               (:members 
                  ( ("HANDLED_NORMALLY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [24790 24807])
                    ("HANDLED_RECOMPUTE_PROPS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [24810 24834])
                    ("HANDLED_OVERLAY_STRING_CONSUMED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [24837 24869])
                    ("HANDLED_RETURN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [24872 24888]))                  
                :type "enum")
                nil [24768 24889])
            ("props" type
               (:members 
                  ( ("name" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25020 25038])
                    ("idx" variable (:type ("prop_idx" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [25084 25102])
                    ("handler" variable
                       (:functionpointer-flag t
                        :type ("prop_handled" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25254 25299]))                  
                :type "struct")
                nil [24968 25302])
            ("handle_face_prop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [25304 25365])
            ("handle_invisible_prop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [25366 25432])
            ("handle_display_prop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [25433 25497])
            ("handle_composition_prop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [25498 25566])
            ("handle_overlay_change" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [25567 25633])
            ("handle_fontified_prop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [25634 25700])
            ("it_props" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
  {&Qfontified,		FONTIFIED_PROP_IDX,	handle_fontified_prop},
  /* Handle `face' before `display' because some sub-properties of
     `display' need to know the face.  */
  {&Qface,		FACE_PROP_IDX,		handle_face_prop},
  {&Qdisplay,		DISPLAY_PROP_IDX,	handle_display_prop},
  {&Qinvisible,		INVISIBLE_PROP_IDX,	handle_invisible_prop},
  {&Qcomposition,	COMPOSITION_PROP_IDX,	handle_composition_prop},
  {NULL,		0,			NULL}
}"
                :type ("props" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [25743 26200])
            ("COERCE_MARKER" variable (:constant-flag t) nil [26337 26350])
            ("move_it_result" type
               (:members 
                  ( ("MOVE_UNDEFINED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [26531 26546])
                    ("MOVE_POS_MATCH_OR_ZV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [26610 26631])
                    ("MOVE_X_REACHED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [26690 26705])
                    ("MOVE_LINE_CONTINUED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [26793 26813])
                    ("MOVE_LINE_TRUNCATED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [26912 26932])
                    ("MOVE_NEWLINE_OR_CR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [26985 27005]))                  
                :type "enum")
                nil [26470 27006])
            ("CLEAR_FACE_CACHE_COUNT" variable (:constant-flag t) nil [27235 27257])
            ("clear_face_cache_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [27262 27296])
            ("CLEAR_IMAGE_CACHE_COUNT" variable (:constant-flag t) nil [27371 27394])
            ("clear_image_cache_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [27399 27434])
            ("redisplaying_p" variable (:type "int") nil [27501 27520])
            ("inhibit_free_realized_faces" variable (:type "int") nil [27678 27710])
            ("Qinhibit_free_realized_faces" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [27711 27752])
            ("help_echo_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [27871 27900])
            ("help_echo_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [27901 27930])
            ("help_echo_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [27931 27960])
            ("help_echo_pos" variable (:type "int") nil [27961 27979])
            ("previous_help_echo_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [28027 28065])
            ("null_glyph_slice" variable
               (:typemodifiers ("static")
                :default-value "{ 0, 0, 0, 0 }"
                :type ("glyph_slice" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28091 28151])
            ("display_hourglass_p" variable (:type "int") nil [28286 28310])
            ("hourglass_shown_p" variable (:type "int") nil [28374 28396])
            ("hourglass_atimer" variable
               (:pointer 1
                :type ("atimer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28510 28542])
            ("Vhourglass_delay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [28616 28645])
            ("DEFAULT_HOURGLASS_DELAY" variable (:constant-flag t) nil [28738 28761])
            ("setup_for_ellipsis" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28796 28851])
            ("mark_window_display_accurate_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [28852 28923])
            ("single_display_spec_string_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [28924 28996])
            ("display_prop_string_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [28997 29062])
            ("cursor_row_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [29063 29130])
            ("redisplay_mode_lines" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [29131 29187])
            ("decode_mode_spec_coding" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [29188 29257])
            ("get_it_property" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29259 29333])
            ("handle_line_prefix" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [29335 29385])
            ("pint2str" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [29387 29432])
            ("pint2hrstr" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [29433 29480])
            ("run_window_scroll_functions" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [29481 29575])
            ("reconsider_clip_changes" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [29576 29652])
            ("text_outside_line_unchanged_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [29653 29727])
            ("store_mode_line_noprop_char" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [29728 29780])
            ("store_mode_line_noprop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [29781 29854])
            ("x_consider_frame_title" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [29855 29909])
            ("handle_stop" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [29910 29953])
            ("tool_bar_lines_needed" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [29954 30016])
            ("single_display_spec_intangible_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30017 30080])
            ("ensure_echo_area_buffers" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [30081 30130])
            ("unwind_with_echo_area_buffer" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30131 30198])
            ("with_echo_area_buffer_unwind_data" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30199 30275])
            ("with_echo_area_buffer" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30276 30459])
            ("clear_garbaged_frames" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [30460 30506])
            ("current_message_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30507 30588])
            ("truncate_message_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30589 30671])
            ("set_message_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30672 30749])
            ("display_echo_area" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30750 30802])
            ("display_echo_area_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30803 30886])
            ("resize_mini_window_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30887 30971])
            ("unwind_redisplay" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30972 31027])
            ("string_char_and_length" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31028 31098])
            ("display_prop_end" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [31099 31198])
            ("compute_window_start_on_continuation_line" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31199 31275])
            ("safe_eval_handler" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [31276 31332])
            ("insert_left_trunc_glyphs" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [31333 31389])
            ("get_overlay_arrow_glyph_row" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [31390 31488])
            ("extend_face_to_end_of_line" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [31489 31547])
            ("append_space_for_newline" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31548 31608])
            ("cursor_row_fully_visible_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31609 31680])
            ("try_scrolling" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31681 31762])
            ("try_cursor_movement" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31763 31837])
            ("trailing_whitespace_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31838 31882])
            ("message_log_check_duplicate" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [31883 31948])
            ("push_it" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [31949 31988])
            ("pop_it" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [31989 32027])
            ("sync_frame_with_window_matrix_rows" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [32028 32098])
            ("select_frame_for_redisplay" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [32099 32157])
            ("redisplay_internal" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [32158 32200])
            ("echo_area_display" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32201 32241])
            ("redisplay_windows" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [32242 32291])
            ("redisplay_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [32292 32345])
            ("redisplay_window_error" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [32346 32391])
            ("redisplay_window_0" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [32392 32449])
            ("redisplay_window_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [32450 32507])
            ("update_menu_bar" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32508 32567])
            ("try_window_reusing_current_matrix" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32568 32636])
            ("try_window_id" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32637 32685])
            ("display_line" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32686 32729])
            ("display_mode_lines" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32730 32783])
            ("display_mode_line" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("face_id" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32784 32863])
            ("display_mode_element" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32864 32961])
            ("store_mode_line_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32962 33051])
            ("decode_mode_spec" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [33052 33142])
            ("display_menu_bar" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33143 33195])
            ("display_count_lines" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [33196 33260])
            ("display_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [33261 33401])
            ("compute_line_metrics" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33402 33454])
            ("run_redisplay_end_trigger_hook" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33455 33517])
            ("get_overlay_strings" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [33518 33573])
            ("get_overlay_strings_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [33574 33636])
            ("next_overlay_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33637 33688])
            ("reseat" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33689 33749])
            ("reseat_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33750 33812])
            ("back_to_previous_visible_line_start" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33813 33880])
            ("reseat_at_previous_visible_line_start" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33881 33943])
            ("reseat_at_next_visible_line_start" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [33944 34014])
            ("next_element_from_ellipsis" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34015 34072])
            ("next_element_from_display_vector" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34073 34136])
            ("next_element_from_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34137 34192])
            ("next_element_from_c_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34193 34250])
            ("next_element_from_buffer" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34251 34306])
            ("next_element_from_composition" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34307 34367])
            ("next_element_from_image" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34368 34422])
            ("next_element_from_stretch" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34423 34479])
            ("load_overlay_strings" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [34480 34537])
            ("init_from_display_pos" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("display_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [34538 34639])
            ("reseat_to_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [34640 34744])
            ("move_it_in_display_line_to" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [34807 34819])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [34820 34830])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [34831 34835])
                    ("" variable (:type ("move_operation_enum" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [34843 34868]))                  
                :type ("move_it_result" type (:type "enum") nil nil))
                nil [34745 34869])
            ("move_it_vertically_backward" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [34870 34927])
            ("init_to_row_start" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [34928 35021])
            ("init_to_row_end" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35022 35109])
            ("back_to_previous_line_start" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [35110 35169])
            ("forward_to_next_line_start" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35170 35234])
            ("string_pos_nchars_ahead" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [35235 35333])
            ("string_pos" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [35334 35392])
            ("c_string_pos" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [35393 35462])
            ("number_of_chars" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35463 35518])
            ("compute_stop_pos" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [35519 35567])
            ("compute_string_pos" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("text_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [35568 35662])
            ("face_before_or_after_it_pos" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35663 35726])
            ("next_overlay_change" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35727 35781])
            ("handle_single_display_spec" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("text_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35782 35918])
            ("underlying_face_id" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35919 35968])
            ("in_ellipses_for_invisible_text_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("display_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [35969 36065])
            ("face_before_it_pos" variable (:constant-flag t) nil [36075 36093])
            ("face_after_it_pos" variable (:constant-flag t) nil [36144 36161])
            ("update_tool_bar" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [36233 36288])
            ("build_desired_tool_bar_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [36289 36354])
            ("redisplay_tool_bar" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [36355 36407])
            ("display_tool_bar_line" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [36408 36466])
            ("notice_overwritten_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("glyph_row_area" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [36467 36585])
            ("window_text_bottom_y" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [37062 37254])
            ("window_box_width" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil))                  
                :type "int")
                nil [37438 38255])
            ("window_box_height" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [38372 39683])
            ("window_box_left_offset" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil))                  
                :type "int")
                nil [39891 40565])
            ("window_box_right_offset" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil))                  
                :type "int")
                nil [40775 40926])
            ("window_box_left" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil))                  
                :type "int")
                nil [41133 41411])
            ("window_box_right" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil))                  
                :type "int")
                nil [41620 41757])
            ("window_box" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil)
                    ("box_height" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("box_width" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("box_y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("box_x" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [42170 42646])
            ("window_box_edges" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil)
                    ("bottom_right_y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("bottom_right_x" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("top_left_y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("top_left_x" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [43065 43422])
            ("line_bottom_y" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [43700 44425])
            ("pos_visible_p" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("vpos" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("rowh" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("rbot" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("rtop" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("charpos" variable (:type "int") nil nil))                  
                :type "int")
                nil [44766 48776])
            ("string_char_and_length" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("len" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [49077 49430])
            ("string_pos_nchars_ahead" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("nchars" variable (:type "int") nil nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [49572 50190])
            ("string_pos" function
               (:arguments 
                  ( ("charpos" variable (:type "int") nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [50322 50576])
            ("c_string_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("charpos" variable (:type "int") nil nil)
                    ("s" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("multibyte_p" variable (:type "int") nil nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [50759 51288])
            ("number_of_chars" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("multibyte_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [51411 51792])
            ("compute_string_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("newpos" variable
                       (:pointer 1
                        :type ("text_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [51964 52341])
            ("estimate_mode_line_height" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type ("face_id" type (:type "enum") nil nil)) nil nil))                  
                :type "int")
                nil [52493 53124])
            ("pixel_to_glyph_coords" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("pix_y" variable (:type "int") nil nil)
                    ("pix_x" variable (:type "int") nil nil)
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("bounds" variable
                       (:pointer 1
                        :type ("NativeRectangle" type (:type "class") nil nil))
                        nil nil)
                    ("noclip" variable (:type "int") nil nil))                  
                :type "void")
                nil [53370 54411])
            ("glyph_to_pixel_coords" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("vpos" variable (:type "int") nil nil)
                    ("hpos" variable (:type "int") nil nil)
                    ("frame_y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("frame_x" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [54634 55730])
            ("x_y_to_hpos_vpos" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("area" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("dy" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("dx" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("vpos" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("hpos" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("glyph" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [56179 57757])
            ("frame_to_window_pixel_xy" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [57881 58349])
            ("get_glyph_string_clip_rects" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("rects" variable
                       (:pointer 1
                        :type ("NativeRectangle" type (:type "class") nil nil))
                        nil nil)
                    ("n" variable (:type "int") nil nil))                  
                :type "int")
                nil [58481 63689])
            ("get_glyph_string_clip_rect" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("nr" variable
                       (:pointer 1
                        :type ("NativeRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [63767 63907])
            ("get_phys_cursor_geometry" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyph" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("heightp" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("yp" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("xp" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [64044 65446])
            ("remember_mouse_glyph" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("gy" variable (:type "int") nil nil)
                    ("gx" variable (:type "int") nil nil)
                    ("rect" variable
                       (:pointer 1
                        :type ("NativeRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [65499 69976])
            ("safe_eval_handler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [70237 70376])
            ("safe_call" function
               (:arguments 
                  ( ("nargs" variable (:type "int") nil nil)
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [70674 71272])
            ("safe_call1" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [71377 71525])
            ("Qeval" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [71527 71552])
            ("safe_eval" function
               (:arguments 
                  ( ("sexpr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71577 71595]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [71554 71635])
            ("safe_call2" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71763 71778])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71779 71796])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71797 71814]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [71739 71923])
            ("CHECK_IT" variable (:constant-flag t) nil [72825 72833])
            ("check_window_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [73016 73380])
            ("CHECK_WINDOW_END" variable (:constant-flag t) nil [73390 73406])
            ("init_iterator" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("bytepos" variable (:type "int") nil nil)
                    ("charpos" variable (:type "int") nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("base_face_id" variable (:type ("face_id" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [74648 84177])
            ("start_display" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pos" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil))                  
                :type "void")
                nil [84253 86520])
            ("in_ellipses_for_invisible_text_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos" variable
                       (:pointer 1
                        :type ("display_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [86661 87579])
            ("init_from_display_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pos" variable
                       (:pointer 1
                        :type ("display_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [87854 91571])
            ("init_to_row_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [91671 91941])
            ("init_to_row_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [92166 92532])
            ("handle_stop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [92864 95262])
            ("compute_stop_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [95378 98435])
            ("next_overlay_change" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos" variable (:type "int") nil nil))                  
                :type "int")
                nil [98642 99210])
            ("handle_fontified_prop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [99547 101669])
            ("handle_face_prop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [101933 106247])
            ("underlying_face_id" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [106492 106752])
            ("face_before_or_after_it_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("before_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [106939 110052])
            ("handle_invisible_prop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [110334 116419])
            ("setup_for_ellipsis" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("len" variable (:type "int") nil nil))                  
                :type "void")
                nil [116506 117514])
            ("handle_display_prop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [117955 120652])
            ("display_prop_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("start_pos" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [120758 121261])
            ("handle_single_display_spec" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("position" variable
                       (:pointer 1
                        :type ("text_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("display_replaced_before_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [122034 132157])
            ("single_display_spec_intangible_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [132261 133048])
            ("display_prop_intangible_p" function
               (:arguments 
                  ( ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [133148 133755])
            ("single_display_spec_string_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [133834 134415])
            ("display_prop_string_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [134485 135123])
            ("string_buffer_position" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("around_charpos" variable (:type "int") nil nil))                  
                :type "int")
                nil [135626 136642])
            ("handle_composition_prop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [136930 138280])
            ("overlay_entry" type
               (:members 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [138592 138612])
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [138615 138634])
                    ("priority" variable (:type "int") (reparse-symbol classsubparts) [138637 138650])
                    ("after_string_p" variable (:type "int") (reparse-symbol classsubparts) [138653 138672]))                  
                :type "struct")
                nil [138567 138675])
            ("handle_overlay_change" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("prop_handled" type (:type "enum") nil nil))
                nil [138779 138986])
            ("next_overlay_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [139351 141078])
            ("compare_overlay_entries" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("e2" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("e1" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [141656 142472])
            ("load_overlay_strings" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("charpos" variable (:type "int") nil nil))                  
                :type "void")
                nil [143641 148580])
            ("get_overlay_strings_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("charpos" variable (:type "int") nil nil)
                    ("compute_stop_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [148760 150712])
            ("get_overlay_strings" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("charpos" variable (:type "int") nil nil))                  
                :type "int")
                nil [150714 151021])
            ("push_it" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [151433 152531])
            ("pop_it" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [152874 154349])
            ("back_to_previous_line_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [154587 154784])
            ("forward_to_next_line_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("skipped_p" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [155606 157775])
            ("back_to_previous_visible_line_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [158007 159986])
            ("reseat_at_previous_visible_line_start" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [160220 160387])
            ("reseat_at_next_visible_line_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("on_newline_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [160780 161909])
            ("reseat" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pos" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("force_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [162338 162779])
            ("reseat_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pos" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("set_stop_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [162887 163771])
            ("reseat_to_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("s" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("charpos" variable (:type "int") nil nil)
                    ("multibyte" variable (:type "int") nil nil)
                    ("field_width" variable (:type "int") nil nil)
                    ("precision" variable (:type "int") nil nil))                  
                :type "void")
                nil [164449 167104])
            ("GET_NEXT_DISPLAY_ELEMENT" variable (:constant-flag t) nil [167618 167642])
            ("CHAR_COMPOSED_P" variable (:constant-flag t) nil [167811 167826])
            ("last_escape_glyph_frame" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "NULL;"
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [168296 168348])
            ("last_escape_glyph_face_id" variable
               (:typemodifiers ("static")
                :default-value "(1 << FACE_ID_BITS)"
                :type "unsigned int")
                nil [168349 168413])
            ("last_escape_glyph_merged_face_id" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [168414 168462])
            ("get_next_display_element" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [168464 179398])
            ("set_iterator_to_next" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("reseat_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [180160 184983])
            ("next_element_from_display_vector" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [185394 186656])
            ("next_element_from_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [186889 189399])
            ("next_element_from_c_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [189765 190897])
            ("next_element_from_ellipsis" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [191155 191780])
            ("next_element_from_image" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [191941 192039])
            ("next_element_from_stretch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [192197 192299])
            ("next_element_from_buffer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [192520 195361])
            ("run_redisplay_end_trigger_hook" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [195415 196157])
            ("next_element_from_composition" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [196411 197245])
            ("IT_POS_VALID_AFTER_MOVE_P" variable (:constant-flag t) nil [197569 197594])
            ("move_it_in_display_line_to" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [198858 198872])
                    ("to_charpos" variable (:type "int") (reparse-symbol arg-sub-list) [198880 198901])
                    ("to_x" variable (:type "int") (reparse-symbol arg-sub-list) [198902 198911])
                    ("op" variable (:type ("move_operation_enum" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [198919 198947]))                  
                :type ("move_it_result" type (:type "enum") nil nil))
                nil [198803 208947])
            ("move_it_in_display_line" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [209004 209018])
                    ("to_charpos" variable (:type "int") (reparse-symbol arg-sub-list) [209023 209044])
                    ("to_x" variable (:type "int") (reparse-symbol arg-sub-list) [209045 209054])
                    ("op" variable (:type ("move_operation_enum" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [209059 209087]))                  
                :type "void")
                nil [208974 209691])
            ("move_it_to" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("to_vpos" variable (:type "int") nil nil)
                    ("to_y" variable (:type "int") nil nil)
                    ("to_x" variable (:type "int") nil nil)
                    ("to_charpos" variable (:type "int") nil nil)
                    ("op" variable (:type "int") nil nil))                  
                :type "void")
                nil [210140 217362])
            ("move_it_vertically_backward" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("dy" variable (:type "int") nil nil))                  
                :type "void")
                nil [217753 221453])
            ("move_it_vertically" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("dy" variable (:type "int") nil nil))                  
                :type "void")
                nil [221653 222274])
            ("move_it_past_eol" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [222342 222544])
            ("move_it_by_lines" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("need_y_p" variable (:type "int") nil nil)
                    ("dvpos" variable (:type "int") nil nil))                  
                :type "void")
                nil [222971 225864])
            ("in_display_vector_p" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [225933 226124])
            ("add_to_log" function
               (:arguments 
                  ( ("format" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [226390 227161])
            ("message_log_maybe_newline" function (:type "void") nil [227230 227332])
            ("message_dolog" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("multibyte" variable (:type "int") nil nil)
                    ("nlflag" variable (:type "int") nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type "void")
                nil [227770 232377])
            ("message_log_check_duplicate" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("this_bol" variable (:type "int") nil nil)
                    ("prev_bol" variable (:type "int") nil nil)
                    ("this_bol_byte" variable (:type "int") nil nil)
                    ("prev_bol_byte" variable (:type "int") nil nil))                  
                :type "int")
                nil [232725 233521])
            ("message2" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil)
                    ("multibyte" variable (:type "int") nil nil))                  
                :type "void")
                nil [233808 234094])
            ("message2_nolog" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("multibyte" variable (:type "int") nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type "void")
                nil [234146 235717])
            ("message3" function
               (:arguments 
                  ( ("m" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("nbytes" variable (:type "int") nil nil)
                    ("multibyte" variable (:type "int") nil nil))                  
                :type "void")
                nil [235983 236542])
            ("message3_nolog" function
               (:arguments 
                  ( ("m" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("multibyte" variable (:type "int") nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type "void")
                nil [236747 238454])
            ("message1" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [238834 238910])
            ("message1_nolog" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [238962 239050])
            ("message_with_string" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("log" variable (:type "int") nil nil))                  
                :type "void")
                nil [239143 240781])
            ("message" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("a3" variable (:type "int") nil nil)
                    ("a2" variable (:type "int") nil nil)
                    ("a1" variable (:type "int") nil nil))                  
                :type "void")
                nil [240942 242629])
            ("message_nolog" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("a3" variable (:type "int") nil nil)
                    ("a2" variable (:type "int") nil nil)
                    ("a1" variable (:type "int") nil nil))                  
                :type "void")
                nil [242676 242904])
            ("update_echo_area" function (:type "void") nil [243058 243292])
            ("ensure_echo_area_buffers" function
               (:typemodifiers ("static")
                :type "void")
                nil [243393 244033])
            ("w" variable
               (:pointer 1
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [244727 244744])
            ("which" variable (:type "int") nil [244750 244760])
            ("fn" variable
               (:functionpointer-flag t
                :type "int")
                nil [244766 244828])
            ("a1" variable (:type "int") nil [244834 244847])
            ("a2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [244853 244868])
            ("a4" variable (:type "int") nil [244874 244891])
            ("a3" variable (:type "int") nil [244874 244891])
            ("with_echo_area_buffer_unwind_data" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [247293 248234])
            ("unwind_with_echo_area_buffer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vector" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [248337 249005])
            ("setup_echo_area_for_printing" function
               (:arguments 
                  ( ("multibyte_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [249121 250990])
            ("display_echo_area" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [251231 252312])
            ("display_echo_area_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("a1" variable (:type "int") nil nil)
                    ("a2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("a4" variable (:type "int") nil nil)
                    ("a3" variable (:type "int") nil nil))                  
                :type "int")
                nil [252644 253422])
            ("resize_echo_area_exactly" function (:type "void") nil [253594 254136])
            ("resize_mini_window_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("a1" variable (:type "int") nil nil)
                    ("exactly" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("a4" variable (:type "int") nil nil)
                    ("a3" variable (:type "int") nil nil))                  
                :type "int")
                nil [254449 254643])
            ("resize_mini_window" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("exact_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [255148 259484])
            ("current_message" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [259577 259863])
            ("current_message_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("a1" variable (:type "int") nil nil)
                    ("a2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("a4" variable (:type "int") nil nil)
                    ("a3" variable (:type "int") nil nil))                  
                :type "int")
                nil [259866 260114])
            ("push_message" function (:type "int") nil [260349 260491])
            ("restore_message" function (:type "void") nil [260558 260796])
            ("pop_message_unwind" function
               (:arguments 
                  ( ("dummy" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [260862 260961])
            ("pop_message" function (:type "void") nil [261014 261115])
            ("check_message_stack" function (:type "void") nil [261274 261349])
            ("truncate_echo_area" function
               (:arguments 
                  ( ("nchars" variable (:type "int") nil nil))                  
                :type "void")
                nil [261480 262031])
            ("truncate_message_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("nchars" variable (:type "int") nil nil)
                    ("a2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("a4" variable (:type "int") nil nil)
                    ("a3" variable (:type "int") nil nil))                  
                :type "int")
                nil [262145 262383])
            ("set_message" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("multibyte_p" variable (:type "int") nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type "void")
                nil [262984 263374])
            ("set_message_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("a1" variable (:type "int") nil nil)
                    ("a2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("multibyte_p" variable (:type "int") nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type "int")
                nil [263593 265648])
            ("clear_message" function
               (:arguments 
                  ( ("last_displayed_p" variable (:type "int") nil nil)
                    ("current_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [265801 266066])
            ("clear_garbaged_frames" function
               (:typemodifiers ("static")
                :type "void")
                nil [266482 267047])
            ("echo_area_display" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("update_frame_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [267229 270557])
            ("mode_line_noprop_buf" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [270935 270969])
            ("mode_line_noprop_buf_end" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [271034 271072])
            ("mode_line_noprop_ptr" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [271073 271107])
            ("MODE_LINE_NOPROP_LEN" variable (:constant-flag t) nil [271117 271137])
            ("mode_line_target" variable
               (:typemodifiers ("static")
                :type ("" type
                     (:members 
                        ( ("MODE_LINE_DISPLAY" variable
                             (:constant-flag t
                              :default-value (271242 271243)
                              :type "int")
                              (reparse-symbol enumsubparts) [271222 271243])
                          ("MODE_LINE_TITLE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [271247 271263])
                          ("MODE_LINE_NOPROP" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [271266 271283])
                          ("MODE_LINE_STRING" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [271286 271304]))                        
                      :type "enum")
                      nil nil))
                nil [271206 271322])
            ("mode_line_proptrans_alist" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [271434 271479])
            ("mode_line_string_list" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [271529 271570])
            ("mode_line_string_face" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [271642 271683])
            ("mode_line_string_face_prop" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [271684 271730])
            ("Vmode_line_unwind_vector" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [271774 271818])
            ("format_mode_line_unwind_data" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("obuf" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [271869 271889])
                    ("owin" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [271899 271916])
                    ("save_proptrans" variable (:type "int") (reparse-symbol arg-sub-list) [271926 271945]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [271820 272654])
            ("unwind_format_mode_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vector" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [272656 273411])
            ("store_mode_line_noprop_char" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [273603 273610]))                  
                :type "void")
                nil [273544 274182])
            ("store_mode_line_noprop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("precision" variable (:type "int") nil nil)
                    ("field_width" variable (:type "int") nil nil))                  
                :type "int")
                nil [274618 275164])
            ("x_consider_frame_title" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [275518 277797])
            ("prepare_menu_bars" function (:type "void") nil [278112 280811])
            ("update_menu_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("save_match_data" variable (:type "int") nil nil)
                    ("hooks_run" variable (:type "int") nil nil))                  
                :type "int")
                nil [281281 284693])
            ("output_cursor" variable (:type ("cursor_pos" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [285075 285107])
            ("set_output_cursor" function
               (:arguments 
                  ( ("cursor" variable
                       (:pointer 1
                        :type ("cursor_pos" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [285235 285437])
            ("x_cursor_to" function
               (:arguments 
                  ( ("x" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("hpos" variable (:type "int") nil nil)
                    ("vpos" variable (:type "int") nil nil))                  
                :type "void")
                nil [285899 286676])
            ("last_mouse_frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil [286973 287000])
            ("last_tool_bar_item" variable (:type "int") nil [287088 287111])
            ("update_tool_bar_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [287114 287232])
            ("update_tool_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("save_match_data" variable (:type "int") nil nil))                  
                :type "void")
                nil [287460 290601])
            ("build_desired_tool_bar_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [290798 295775])
            ("display_tool_bar_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("height" variable (:type "int") nil nil))                  
                :type "void")
                nil [296222 299458])
            ("MAX_FRAME_TOOL_BAR_HEIGHT" variable (:constant-flag t) nil [299498 299523])
            ("tool_bar_lines_needed" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("n_rows" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [299750 300917])
            ("DEFUN_ARGS_" variable (:type ("Stool_bar_lines_needed" type (:type "class") nil nil)) nil [300920 301097])
            ("doc" variable
               (:default-value "DEFUN (\"tool-bar-lines-needed\", Ftool_bar_lines_needed, Stool_bar_lines_needed,
       0, 1, 0,
       doc: /* Return the number of lines occupied by the tool bar of FRAME.  */)"
                :type "int")
                nil [300920 301097])
            ("Stool_bar_lines_needed" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [300920 301604])
            ("redisplay_tool_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [301710 306348])
            ("tool_bar_item_info" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyph" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("prop_idx" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [306595 307411])
            ("get_tool_bar_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("glyph" variable
                       (:pointer 2
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("prop_idx" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("vpos" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("hpos" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [307851 308858])
            ("handle_tool_bar_click" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("down_p" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("modifiers" variable (:type "unsigned int") nil nil))                  
                :type "void")
                nil [309083 310646])
            ("note_tool_bar_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [310806 313557])
            ("hscroll_window_tree" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [313770 313820])
            ("hscroll_windows" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [313821 313867])
            ("hscroll_window_tree" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [314163 318086])
            ("hscroll_windows" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [318397 318623])
            ("debug_first_unchanged_at_end_vpos" variable (:type "int") nil [319024 319062])
            ("debug_last_unchanged_at_beg_vpos" variable (:type "int") nil [319063 319100])
            ("debug_dy" variable (:type "int") nil [319128 319154])
            ("debug_dvpos" variable (:type "int") nil [319128 319154])
            ("debug_delta_bytes" variable (:type "int") nil [319213 319248])
            ("debug_delta" variable (:type "int") nil [319213 319248])
            ("debug_end_vpos" variable (:type "int") nil [319335 319375])
            ("debug_end_pos" variable (:type "int") nil [319335 319375])
            ("debug_method_add" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("fmt" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("a9" variable (:type "int") nil nil)
                    ("a8" variable (:type "int") nil nil)
                    ("a7" variable (:type "int") nil nil)
                    ("a6" variable (:type "int") nil nil)
                    ("a5" variable (:type "int") nil nil)
                    ("a4" variable (:type "int") nil nil)
                    ("a3" variable (:type "int") nil nil)
                    ("a2" variable (:type "int") nil nil)
                    ("a1" variable (:type "int") nil nil))                  
                :type "void")
                nil [319613 320382])
            ("text_outside_line_unchanged_p" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("end" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil))                  
                :type "int")
                nil [320676 322171])
            ("redisplay" function (:type "void") nil [322474 322521])
            ("overlay_arrow_string_or_property" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("var" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [322524 322738])
            ("overlay_arrow_in_current_buffer_p" function
               (:typemodifiers ("static")
                :type "int")
                nil [322807 323218])
            ("overlay_arrows_changed_p" function
               (:typemodifiers ("static")
                :type "int")
                nil [323311 323860])
            ("update_overlay_arrows" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("up_to_date" variable (:type "int") nil nil))                  
                :type "void")
                nil [323923 324585])
            ("overlay_arrow_at_row" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [324745 325708])
            ("check_point_in_composition" function
               (:arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("prev_buf" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pt" variable (:type "int") nil nil)
                    ("prev_pt" variable (:type "int") nil nil))                  
                :type "int")
                nil [325916 326923])
            ("reconsider_clip_changes" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [327025 328080])
            ("select_frame_for_redisplay" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [328240 329007])
            ("STOP_POLLING" variable (:constant-flag t) nil [329018 329030])
            ("RESUME_POLLING" variable (:constant-flag t) nil [329143 329157])
            ("redisplay_internal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("preserve_echo_area" variable (:type "int") nil nil))                  
                :type "void")
                nil [329573 353408])
            ("redisplay_preserve_echo_area" function
               (:arguments 
                  ( ("from_where" variable (:type "int") nil nil))                  
                :type "void")
                nil [353888 354518])
            ("unwind_redisplay" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [354873 355239])
            ("mark_window_display_accurate_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("accurate_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [355473 356676])
            ("mark_window_display_accurate" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("accurate_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [356957 357681])
            ("disp_char_vector" function
               (:arguments 
                  ( ("dp" variable
                       (:pointer 1
                        :type ("Lisp_Char_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("c" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [357923 358336])
            ("redisplay_windows" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [358584 359187])
            ("redisplay_window_error" function
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [359189 359326])
            ("redisplay_window_0" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [359328 359530])
            ("redisplay_window_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [359532 359734])
            ("SKIP_GLYPHS" variable (:constant-flag t) nil [359852 359863])
            ("set_cursor_from_row" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("matrix" variable
                       (:pointer 1
                        :type ("glyph_matrix" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("dvpos" variable (:type "int") nil nil)
                    ("dy" variable (:type "int") nil nil)
                    ("delta_bytes" variable (:type "int") nil nil)
                    ("delta" variable (:type "int") nil nil))                  
                :type "int")
                nil [360306 366406])
            ("run_window_scroll_functions" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("startp" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil))                  
                :type ("text_pos" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [366621 367260])
            ("cursor_row_fully_visible_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("force_p" variable (:type "int") nil nil)
                    ("current_matrix_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [367659 368680])
            ("" type
               (:members 
                  ( ("SCROLLING_SUCCESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [369352 369370])
                    ("SCROLLING_FAILED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [369373 369390])
                    ("SCROLLING_NEED_LARGER_MATRICES" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [369393 369425]))                  
                :type "enum")
                nil [369343 369426])
            ("try_scrolling" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("just_this_one_p" variable (:type "int") nil nil)
                    ("scroll_step" variable (:type "int") nil nil)
                    ("scroll_conservatively" variable (:type "int") nil nil)
                    ("temp_scroll_step" variable (:type "int") nil nil)
                    ("last_line_misfit" variable (:type "int") nil nil))                  
                :type "int")
                nil [369428 376414])
            ("compute_window_start_on_continuation_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [376785 378947])
            ("" type
               (:members 
                  ( ("CURSOR_MOVEMENT_SUCCESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [379534 379558])
                    ("CURSOR_MOVEMENT_CANNOT_BE_USED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [379561 379592])
                    ("CURSOR_MOVEMENT_MUST_SCROLL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [379595 379623])
                    ("CURSOR_MOVEMENT_NEED_LARGER_MATRICES" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [379626 379664]))                  
                :type "enum")
                nil [379525 379665])
            ("try_cursor_movement" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("startp" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("scroll_step" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [379667 387165])
            ("set_vertical_scroll_bar" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [387167 388420])
            ("redisplay_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("just_this_one_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [388675 413179])
            ("try_window" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pos" variable (:type ("text_pos" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("check_margins" variable (:type "int") nil nil))                  
                :type "int")
                nil [413519 416220])
            ("try_window_reusing_current_matrix" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [416683 430125])
            ("find_last_unchanged_at_beg_row" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [430347 430426])
            ("find_first_unchanged_at_end_row" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [430427 430533])
            ("find_last_row_displaying_text" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_matrix" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [430534 430659])
            ("find_last_row_displaying_text" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("matrix" variable
                       (:pointer 1
                        :type ("glyph_matrix" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("start" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [430904 431544])
            ("find_last_unchanged_at_beg_row" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [432081 433205])
            ("find_first_unchanged_at_end_row" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("delta_bytes" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("delta" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [433660 436196])
            ("sync_frame_with_window_matrix_rows" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [436498 437881])
            ("row_containing_pos" function
               (:pointer 1
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("charpos" variable (:type "int") nil nil)
                    ("end" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("start" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("dy" variable (:type "int") nil nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [438125 439399])
            ("try_window_id" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [440673 466104])
            ("dump_glyph_row" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [466300 466356])
            ("dump_glyph_matrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_matrix" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [466357 466414])
            ("dump_glyph" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [466415 466478])
            ("dump_glyph_matrix" function
               (:arguments 
                  ( ("matrix" variable
                       (:pointer 1
                        :type ("glyph_matrix" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyphs" variable (:type "int") nil nil))                  
                :type "void")
                nil [466677 466874])
            ("dump_glyph" function
               (:arguments 
                  ( ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyph" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil))                  
                :type "void")
                nil [466997 469113])
            ("dump_glyph_row" function
               (:arguments 
                  ( ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyphs" variable (:type "int") nil nil)
                    ("vpos" variable (:type "int") nil nil))                  
                :type "void")
                nil [469319 471848])
            ("DEFUN_ARGS_" variable (:type ("Sdump_glyph_matrix" type (:type "class") nil nil)) nil [471851 472186])
            ("doc" variable
               (:default-value "DEFUN (\"dump-glyph-matrix\", Fdump_glyph_matrix,
       Sdump_glyph_matrix, 0, 1, \"p\",
       doc: /* Dump the current matrix of the selected window to stderr.
Shows contents of glyph row structures.  With non-nil
parameter GLYPHS, dump glyphs as well.  If GLYPHS is 1 show
glyphs in short form, otherwise show glyphs in long form.  */)"
                :type "int")
                nil [471851 472186])
            ("Sdump_glyph_matrix" function
               (:arguments 
                  ( ("glyphs" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [471851 472735])
            ("DEFUN_ARGS_" variable (:type ("Sdump_frame_glyph_matrix" type (:type "class") nil nil)) nil [472738 472852])
            ("doc" variable
               (:default-value "DEFUN (\"dump-frame-glyph-matrix\", Fdump_frame_glyph_matrix,
       Sdump_frame_glyph_matrix, 0, 0, \"\", doc: /* */)"
                :type "int")
                nil [472738 472852])
            ("Sdump_frame_glyph_matrix" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [472738 472968])
            ("DEFUN_ARGS_" variable (:type ("Sdump_glyph_row" type (:type "class") nil nil)) nil [472971 473216])
            ("doc" variable
               (:default-value "DEFUN (\"dump-glyph-row\", Fdump_glyph_row, Sdump_glyph_row, 1, 2, \"\",
       doc: /* Dump glyph row ROW to stderr.
GLYPH 0 means don't dump glyphs.
GLYPH 1 means dump glyphs in short form.
GLYPH > 1 or omitted means dump glyphs in long form.  */)"
                :type "int")
                nil [472971 473216])
            ("Sdump_glyph_row" function
               (:arguments 
                  ( ("glyphs" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("row" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [472971 473571])
            ("DEFUN_ARGS_" variable (:type ("Sdump_tool_bar_row" type (:type "class") nil nil)) nil [473574 473865])
            ("doc" variable
               (:default-value "DEFUN (\"dump-tool-bar-row\", Fdump_tool_bar_row, Sdump_tool_bar_row, 1, 2, \"\",
       doc: /* Dump glyph row ROW of the tool-bar of the current frame to stderr.
GLYPH 0 means don't dump glyphs.
GLYPH 1 means dump glyphs in short form.
GLYPH > 1 or omitted means dump glyphs in long form.  */)"
                :type "int")
                nil [473574 473865])
            ("Sdump_tool_bar_row" function
               (:arguments 
                  ( ("glyphs" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("row" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [473574 474233])
            ("DEFUN_ARGS_" variable (:type ("Strace_redisplay" type (:type "class") nil nil)) nil [474236 474415])
            ("doc" variable
               (:default-value "DEFUN (\"trace-redisplay\", Ftrace_redisplay, Strace_redisplay, 0, 1, \"P\",
       doc: /* Toggle tracing of redisplay.
With ARG, turn tracing on if and only if ARG is positive.  */)"
                :type "int")
                nil [474236 474415])
            ("Strace_redisplay" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [474236 474632])
            ("DEFUN_ARGS_" variable (:type ("Strace_to_stderr" type (:type "class") nil nil)) nil [474635 474818])
            ("doc" variable
               (:default-value "DEFUN (\"trace-to-stderr\", Ftrace_to_stderr, Strace_to_stderr, 1, MANY, \"\",
       doc: /* Like `format', but print result to stderr.
usage: (trace-to-stderr STRING &rest OBJECTS)  */)"
                :type "int")
                nil [474635 474818])
            ("Strace_to_stderr" function
               (:arguments 
                  ( ("nargs" variable (:type "int") nil nil)
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [474635 474974])
            ("get_overlay_arrow_glyph_row" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("overlay_arrow_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("glyph_row" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [475341 476995])
            ("insert_left_trunc_glyphs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [477289 478468])
            ("compute_line_metrics" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [479136 481865])
            ("append_space_for_newline" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("default_face_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [482435 483933])
            ("extend_face_to_end_of_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [484202 486783])
            ("trailing_whitespace_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("charpos" variable (:type "int") nil nil))                  
                :type "int")
                nil [486885 487225])
            ("highlight_trailing_whitespace" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [487283 488532])
            ("cursor_row_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [488628 490564])
            ("push_display_prop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [490759 490773])
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [490774 490791]))                  
                :type "int")
                nil [490729 491667])
            ("get_it_property" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [491743 492105])
            ("handle_line_prefix" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [492212 492226]))                  
                :type "void")
                nil [492180 492845])
            ("display_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [493120 511049])
            ("display_menu_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [511626 514211])
            ("redisplay_mode_lines" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("force" variable (:type "int") nil nil))                  
                :type "int")
                nil [514646 516157])
            ("display_mode_lines" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [516287 517244])
            ("display_mode_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type ("face_id" type (:type "enum") nil nil)) nil nil)
                    ("format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [517518 519229])
            ("move_elt_to_front" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("elt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [519314 519900])
            ("display_mode_element" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("depth" variable (:type "int") nil nil)
                    ("precision" variable (:type "int") nil nil)
                    ("field_width" variable (:type "int") nil nil)
                    ("props" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("elt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("risky" variable (:type "int") nil nil))                  
                :type "int")
                nil [520818 532268])
            ("store_mode_line_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("lisp_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("copy_string" variable (:type "int") nil nil)
                    ("field_width" variable (:type "int") nil nil)
                    ("precision" variable (:type "int") nil nil)
                    ("props" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [532984 535155])
            ("DEFUN_ARGS_" variable (:type ("Sformat_mode_line" type (:type "class") nil nil)) nil [535158 535946])
            ("doc" variable
               (:default-value "DEFUN (\"format-mode-line\", Fformat_mode_line, Sformat_mode_line,
       1, 4, 0,
       doc: /* Format a string out of a mode line format specification.
First arg FORMAT specifies the mode line format (see `mode-line-format'
for details) to use.

Optional second arg FACE specifies the face property to put
on all characters for which no face is specified.
The value t means whatever face the window's mode line currently uses
\\(either `mode-line' or `mode-line-inactive', depending).
A value of nil means the default is no face property.
If FACE is an integer, the value string has no text properties.

Optional third and fourth args WINDOW and BUFFER specify the window
and buffer to use as the context for the formatting (defaults
are the selected window and the window's buffer).  */)"
                :type "int")
                nil [535158 535946])
            ("Sformat_mode_line" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("face" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [535158 538342])
            ("pint2str" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("d" variable (:type "int") nil nil))                  
                :type "void")
                nil [538487 538902])
            ("power_letter" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
    0,	 /* not used */
    'k', /* kilo */
    'M', /* mega */
    'G', /* giga */
    'T', /* tera */
    'P', /* peta */
    'E', /* exa */
    'Z', /* zetta */
    'Y'	 /* yotta */
  }"
                :type "char")
                nil [539109 539336])
            ("pint2hrstr" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("d" variable (:type "int") nil nil))                  
                :type "void")
                nil [539338 541044])
            ("invalid_eol_type" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "\"(*invalid*)\""
                :type "unsigned char")
                nil [541246 541302])
            ("decode_mode_spec_coding" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("coding_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buf" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("eol_flag" variable (:type "int") nil nil))                  
                :type "char")
                nil [541304 543173])
            ("lots_of_dashes" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "\"--------------------------------------------------------------------------------------------------------------------------------------------\""
                :type "char")
                nil [543621 543795])
            ("decode_mode_spec" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("c" variable (:type "int") nil nil)
                    ("precision" variable (:type "int") nil nil)
                    ("field_width" variable (:type "int") nil nil)
                    ("string" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type "char")
                nil [543797 554128])
            ("display_count_lines" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("count" variable (:type "int") nil nil)
                    ("limit_byte" variable (:type "int") nil nil)
                    ("start_byte" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil)
                    ("byte_pos_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [554366 556694])
            ("display_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil)
                    ("lisp_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("face_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("face_string_pos" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil)
                    ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("max_x" variable (:type "int") nil nil)
                    ("precision" variable (:type "int") nil nil)
                    ("field_width" variable (:type "int") nil nil)
                    ("multibyte" variable (:type "int") nil nil))                  
                :type "int")
                nil [558327 563564])
            ("invisible_p" function
               (:arguments 
                  ( ("propval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [564023 564849])
            ("DEFUN_ARGS_" variable (:type ("Sinvisible_p" type (:type "class") nil nil)) nil [564851 565379])
            ("doc" variable
               (:default-value "DEFUN (\"invisible-p\", Finvisible_p, Sinvisible_p, 1, 1, 0,
       doc: /* Non-nil if the property makes the text invisible.
POS-OR-PROP can be a marker or number, in which case it is taken to be
a position in the current buffer and the value of the `invisible' property
is checked; or it can be some other value, which is then presumed to be the
value of the `invisible' property of the text of interest.
The non-nil value returned can be t for truly invisible text or something
else if the text is replaced by an ellipsis.  */)"
                :type "int")
                nil [564851 565379])
            ("Sinvisible_p" function
               (:arguments 
                  ( ("pos_or_prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [564851 565712])
            ("NUMVAL" variable (:constant-flag t) nil [568023 568029])
            ("calc_pixel_width_or_height" function
               (:arguments 
                  ( ("res" variable
                       (:pointer 1
                        :type "double")
                        nil nil)
                    ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("font" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("align_to" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("width_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [568117 573214])
            ("dump_glyph_string" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [573432 574077])
            ("OPTIONAL_HDC" variable (:constant-flag t) nil [574772 574784])
            ("DECLARE_HDC" variable (:constant-flag t) nil [574798 574809])
            ("ALLOCATE_HDC" variable (:constant-flag t) nil [574823 574835])
            ("RELEASE_HDC" variable (:constant-flag t) nil [574852 574863])
            ("init_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("char2b" variable
                       (:pointer 1
                        :type ("XChar2b" type (:type "class") nil nil))
                        nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type ("glyph_row_area" type (:type "enum") nil nil)) nil nil)
                    ("start" variable (:type "int") nil nil)
                    ("hl" variable (:type ("draw_glyphs_face" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [574880 575575])
            ("append_glyph_string_lists" function
               (:arguments 
                  ( ("tail" variable
                       (:pointer 2
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("head" variable
                       (:pointer 2
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("t" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("h" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [575739 575987])
            ("prepend_glyph_string_lists" function
               (:arguments 
                  ( ("tail" variable
                       (:pointer 2
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("head" variable
                       (:pointer 2
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("t" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("h" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [576155 576404])
            ("append_glyph_string" function
               (:arguments 
                  ( ("tail" variable
                       (:pointer 2
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("head" variable
                       (:pointer 2
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [576541 576731])
            ("get_char_face_and_encoding" function
               (:pointer 1
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type "int") nil nil)
                    ("c" variable (:type "int") nil nil)
                    ("char2b" variable
                       (:pointer 1
                        :type ("XChar2b" type (:type "class") nil nil))
                        nil nil)
                    ("display_p" variable (:type "int") nil nil)
                    ("multibyte_p" variable (:type "int") nil nil))                  
                :type ("face" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [577127 577806])
            ("get_glyph_face_and_encoding" function
               (:pointer 1
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyph" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("char2b" variable
                       (:pointer 1
                        :type ("XChar2b" type (:type "class") nil nil))
                        nil nil)
                    ("two_byte_p" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("face" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [578019 578714])
            ("fill_composite_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("base_face" variable
                       (:pointer 1
                        :type ("face" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("overlaps" variable (:type "int") nil nil))                  
                :type "int")
                nil [579082 580765])
            ("fill_gstring_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type "int") nil nil)
                    ("overlaps" variable (:type "int") nil nil)
                    ("end" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil))                  
                :type "int")
                nil [580767 581865])
            ("fill_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type "int") nil nil)
                    ("overlaps" variable (:type "int") nil nil)
                    ("end" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil))                  
                :type "int")
                nil [582246 583920])
            ("fill_image_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [583984 584445])
            ("fill_stretch_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type ("glyph_row_area" type (:type "enum") nil nil)) nil nil)
                    ("end" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil))                  
                :type "int")
                nil [584744 585736])
            ("get_per_char_metric" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("font" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("char2b" variable
                       (:pointer 1
                        :type ("XChar2b" type (:type "class") nil nil))
                        nil nil))                  
                :type ("font_metrics" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [585738 586125])
            ("x_get_glyph_overhangs" function
               (:arguments 
                  ( ("glyph" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("right" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("left" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [586305 587543])
            ("left_overwritten" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [587719 588090])
            ("left_overwriting" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [588274 588675])
            ("right_overwritten" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [588848 589268])
            ("right_overwriting" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [589439 589901])
            ("set_glyph_string_background_width" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("start" variable (:type "int") nil nil)
                    ("last_x" variable (:type "int") nil nil))                  
                :type "void")
                nil [590086 590887])
            ("compute_overhangs_and_x" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("backward_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [591079 591618])
            ("INIT_GLYPH_STRING" variable (:constant-flag t) nil [592130 592147])
            ("BUILD_STRETCH_GLYPH_STRING" variable (:constant-flag t) nil [592846 592872])
            ("BUILD_IMAGE_GLYPH_STRING" variable (:constant-flag t) nil [593752 593776])
            ("BUILD_CHAR_GLYPH_STRINGS" variable (:constant-flag t) nil [594668 594692])
            ("BUILD_COMPOSITE_GLYPH_STRING" variable (:constant-flag t) nil [595811 595839])
            ("BUILD_GSTRING_GLYPH_STRING" variable (:constant-flag t) nil [597173 597199])
            ("BUILD_GLYPH_STRINGS" variable (:constant-flag t) nil [598396 598415])
            ("draw_glyphs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type ("glyph_row_area" type (:type "enum") nil nil)) nil nil)
                    ("end" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil)
                    ("hl" variable (:type ("draw_glyphs_face" type (:type "enum") nil nil)) nil nil)
                    ("overlaps" variable (:type "int") nil nil))                  
                :type "int")
                nil [600625 608393])
            ("IT_EXPAND_MATRIX_WIDTH" variable (:constant-flag t) nil [608485 608507])
            ("append_glyph" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [608886 610329])
            ("append_composite_glyph" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [610489 611880])
            ("take_vertical_position_into_account" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [611982 612345])
            ("produce_image_glyph" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [612537 616820])
            ("append_stretch_glyph" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("ascent" variable (:type "int") nil nil))                  
                :type "void")
                nil [617032 618268])
            ("produce_stretch_glyph" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [619564 623338])
            ("calc_line_height_property" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("font" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("override" variable (:type "int") nil nil)
                    ("boff" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [623648 625185])
            ("x_produce_glyphs" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [625368 648041])
            ("x_write_glyphs" function
               (:arguments 
                  ( ("start" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("len" variable (:type "int") nil nil))                  
                :type "void")
                nil [648363 649191])
            ("x_insert_glyphs" function
               (:arguments 
                  ( ("start" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("len" variable (:type "int") nil nil))                  
                :type "void")
                nil [649282 650690])
            ("x_clear_end_of_line" function
               (:arguments 
                  ( ("to_x" variable (:type "int") nil nil))                  
                :type "void")
                nil [651023 652753])
            ("get_specified_cursor_type" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("width" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("text_cursor_kinds" type (:type "enum") nil nil))
                nil [653125 654172])
            ("set_frame_cursor_types" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [654231 654791])
            ("get_window_cursor_type" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyph" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("width" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("active_cursor" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("text_cursor_kinds" type (:type "enum") nil nil))
                nil [655375 659789])
            ("notice_overwritten_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type ("glyph_row_area" type (:type "enum") nil nil)) nil nil)
                    ("y1" variable (:type "int") nil nil)
                    ("x1" variable (:type "int") nil nil)
                    ("y0" variable (:type "int") nil nil)
                    ("x0" variable (:type "int") nil nil))                  
                :type "void")
                nil [660178 661887])
            ("x_fix_overlapping_area" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type ("glyph_row_area" type (:type "enum") nil nil)) nil nil)
                    ("overlaps" variable (:type "int") nil nil))                  
                :type "void")
                nil [662262 662938])
            ("draw_phys_cursor_glyph" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("hl" variable (:type ("draw_glyphs_face" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [663070 664337])
            ("erase_phys_cursor" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [664416 668245])
            ("display_and_set_cursor" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("vpos" variable (:type "int") nil nil)
                    ("hpos" variable (:type "int") nil nil)
                    ("on" variable (:type "int") nil nil))                  
                :type "void")
                nil [668464 671173])
            ("update_window_cursor" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("on" variable (:type "int") nil nil))                  
                :type "void")
                nil [671261 671629])
            ("update_cursor_in_window_tree" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("on_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [671741 672133])
            ("x_update_cursor" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("on_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [672258 672394])
            ("x_clear_cursor" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [672577 672726])
            ("show_mouse_face" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("Display_Info" type (:type "class") nil nil))
                        nil nil)
                    ("draw" variable (:type ("draw_glyphs_face" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [672819 675234])
            ("clear_mouse_face" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("Display_Info" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [675407 675870])
            ("cursor_in_mouse_face_p" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [675954 676639])
            ("mouse_face_from_buffer_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [677197 677216])
                    ("dpyinfo" variable
                       (:pointer 1
                        :type ("Display_Info" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [677224 677246])
                    ("mouse_charpos" variable (:type "int") (reparse-symbol arg-sub-list) [677254 677278])
                    ("start_charpos" variable (:type "int") (reparse-symbol arg-sub-list) [677286 677310])
                    ("end_charpos" variable (:type "int") (reparse-symbol arg-sub-list) [677318 677340])
                    ("before_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [677348 677374])
                    ("after_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [677382 677407])
                    ("display_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [677415 677442]))                  
                :type "void")
                nil [677157 682567])
            ("fast_find_string_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pos" variable (:type "int") nil nil)
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("vpos" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("hpos" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("right_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [683255 684568])
            ("on_hot_spot_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hot_spot" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "int")
                nil [684634 687242])
            ("find_hot_spot" function
               (:arguments 
                  ( ("map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [687244 687492])
            ("DEFUN_ARGS_" variable (:type ("Slookup_image_map" type (:type "class") nil nil)) nil [687494 688218])
            ("doc" variable
               (:default-value "DEFUN (\"lookup-image-map\", Flookup_image_map, Slookup_image_map,
       3, 3, 0,
       doc: /* Lookup in image map MAP coordinates X and Y.
An image map is an alist where each element has the format (AREA ID PLIST).
An AREA is specified as either a rectangle, a circle, or a polygon:
A rectangle is a cons (rect . ((x0 . y0) . (x1 . y1))) specifying the
pixel coordinates of the upper left and bottom right corners.
A circle is a cons (circle . ((x0 . y0) . r)) specifying the center
and the radius of the circle; r may be a float or integer.
A polygon is a cons (poly . [x0 y0 x1 y1 ...]) where each pair in the
vector describes one corner in the polygon.
Returns the alist element for the first matching AREA in MAP.  */)"
                :type "int")
                nil [687494 688218])
            ("Slookup_image_map" function
               (:arguments 
                  ( ("map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("y" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [687494 688411])
            ("define_frame_cursor1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("cursor" variable (:type ("Cursor" type (:type "class") nil nil)) nil nil)
                    ("pointer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [688486 689550])
            ("note_mode_line_or_margin_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("area" variable (:type ("window_part" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [689885 696664])
            ("note_mouse_highlight" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [696932 710349])
            ("x_clear_window_mouse_face" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [710563 710852])
            ("cancel_mouse_face" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [710982 711405])
            ("expose_area" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("r" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil)
                    ("area" variable (:type ("glyph_row_area" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [711787 713128])
            ("expose_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("r" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [713309 713910])
            ("expose_overlaps" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("first_overlapping_row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("last_overlapping_row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("r" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [714316 715058])
            ("phys_cursor_in_rect_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("r" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [715123 716512])
            ("x_draw_vertical_border" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [716632 717882])
            ("expose_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("fr" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [718100 721496])
            ("expose_window_tree" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("r" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [721688 722265])
            ("expose_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("h" variable (:type "int") nil nil)
                    ("w" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [722513 725161])
            ("x_intersect_rectangles" function
               (:arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil)
                    ("r2" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil)
                    ("r1" variable
                       (:pointer 1
                        :type ("XRectangle" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [725325 726608])
            ("syms_of_xdisp" function (:type "void") nil [726815 753208])
            ("init_xdisp" function (:type "void") nil [753261 754693])
            ("hourglass_started" function (:type "int") nil [754986 755070])
            ("start_hourglass" function (:type "void") nil [755143 755825])
            ("cancel_hourglass" function (:type "void") nil [755912 756136]))          
    :file "xdisp.c"
    :pointmax 756249
    :fsize 756248
    :lastmodtime '(19385 60988)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 687494 . 688218) (symbol "__attribute__" 687494 . 688218) (symbol "Lisp_Subr" 687494 . 688218) (symbol "Lisp_Object" 687494 . 688218) (symbol "__inline__" 611975 . 611981) (STATIC 611968 . 611974) (symbol "__inline__" 610482 . 610488) (STATIC 610475 . 610481) (symbol "__inline__" 608879 . 608885) (STATIC 608872 . 608878) (symbol "__inline__" 590079 . 590085) (STATIC 590072 . 590078) (symbol "__inline__" 578012 . 578018) (STATIC 578005 . 578011) (symbol "__inline__" 577120 . 577126) (STATIC 577113 . 577119) (symbol "__inline__" 576534 . 576540) (STATIC 576527 . 576533) (symbol "__inline__" 576148 . 576154) (STATIC 576141 . 576147) (symbol "__inline__" 575732 . 575738) (STATIC 575725 . 575731) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 564851 . 565379) (symbol "__attribute__" 564851 . 565379) (symbol "Lisp_Subr" 564851 . 565379) (symbol "Lisp_Object" 564851 . 565379) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 535158 . 535946) (symbol "__attribute__" 535158 . 535946) (symbol "Lisp_Subr" 535158 . 535946) (symbol "Lisp_Object" 535158 . 535946) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 474635 . 474818) (symbol "__attribute__" 474635 . 474818) (symbol "Lisp_Subr" 474635 . 474818) (symbol "Lisp_Object" 474635 . 474818) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 474236 . 474415) (symbol "__attribute__" 474236 . 474415) (symbol "Lisp_Subr" 474236 . 474415) (symbol "Lisp_Object" 474236 . 474415) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 473574 . 473865) (symbol "__attribute__" 473574 . 473865) (symbol "Lisp_Subr" 473574 . 473865) (symbol "Lisp_Object" 473574 . 473865) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 472971 . 473216) (symbol "__attribute__" 472971 . 473216) (symbol "Lisp_Subr" 472971 . 473216) (symbol "Lisp_Object" 472971 . 473216) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 472738 . 472852) (symbol "__attribute__" 472738 . 472852) (symbol "Lisp_Subr" 472738 . 472852) (symbol "Lisp_Object" 472738 . 472852) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 471851 . 472186) (symbol "__attribute__" 471851 . 472186) (symbol "Lisp_Subr" 471851 . 472186) (symbol "Lisp_Object" 471851 . 472186) (symbol "__inline__" 366614 . 366620) (STATIC 366607 . 366613) (symbol "__inline__" 327018 . 327024) (STATIC 327011 . 327017) (symbol "__inline__" 320669 . 320675) (STATIC 320662 . 320668) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 300920 . 301097) (symbol "__attribute__" 300920 . 301097) (symbol "Lisp_Subr" 300920 . 301097) (symbol "Lisp_Object" 300920 . 301097) (semantic-list 244892 . 247175) (semantic-list 244691 . 244721) (symbol 244669 . 244690) (INT 244665 . 244668) (STATIC 244658 . 244664) (punctuation 167607 . 167608) (semantic-list 167427 . 167607) (punctuation 167425 . 167426) (semantic-list "(struct it *it)" 167404 . 167424) (semantic-list 167367 . 167403) (INT 167363 . 167366) (STATIC 167356 . 167362) (symbol "__inline__" 50315 . 50321) (STATIC 50308 . 50314) (symbol "__inline__" 49070 . 49076) (STATIC 49063 . 49069) (symbol "__inline__" 43058 . 43064) (symbol "__inline__" 42163 . 42169) (symbol "__inline__" 41613 . 41619) (symbol "__inline__" 41126 . 41132) (symbol "__inline__" 40768 . 40774) (symbol "__inline__" 39884 . 39890) (symbol "__inline__" 38365 . 38371) (symbol "__inline__" 37431 . 37437) (symbol "__inline__" 37055 . 37061) (ENUM 25249 . 25253) (close-paren 25276 . 25277) (punctuation 25268 . 25269) (open-paren 25267 . 25268) (close-paren 25276 . 25277) (punctuation 25268 . 25269) (open-paren 25267 . 25268))
    :lexical-table 
        '(("IT_OVERFLOW_NEWLINE_INTO_FRINGE" (spp-arg-list ("it") 13022 . 13026) . ((semantic-list "(!NILP (Voverflow_newline_into_fringe)	\\
   && FRAME_WINDOW_P (it->f)			\\
   && WINDOW_RIGHT_FRINGE_WIDTH (it->w) > 0	\\
   && it->current_x == it->last_visible_x	\\
   && it->line_wrap != WORD_WRAP)" 13031 . 13228)))
          ("COERCE_MARKER" (spp-arg-list ("X") 26350 . 26353) . ((semantic-list "(MARKERP ((X)) ? Fmarker_position (X) : (X))" 26354 . 26398)))
          ("CLEAR_FACE_CACHE_COUNT" . ((number "500" 27258 . 27261)))
          ("MODE_LINE_NOPROP_LEN" (spp-arg-list ("start") 271137 . 271144) . ((semantic-list "((mode_line_noprop_ptr - mode_line_noprop_buf) - start)" 271149 . 271204)))
          ("BUILD_COMPOSITE_GLYPH_STRING" (spp-arg-list ("START" "END" "HEAD" "TAIL" "HL" "X" "LAST_X") 595839 . 595878) . 
              ((DO "do" 595883 . 595885) (semantic-list "{									    \\
    int face_id = (row)->glyphs[area][START].face_id;			    \\
    struct face *base_face = FACE_FROM_ID (f, face_id);			    \\
    int cmp_id = (row)->glyphs[area][START].u.cmp.id;			    \\
    struct composition *cmp = composition_table[cmp_id];		    \\
    XChar2b *char2b;							    \\
    struct glyph_string *first_s;					    \\
    int n;								    \\
    									    \\
    char2b = (XChar2b *) alloca ((sizeof *char2b) * cmp->glyph_len);	    \\
    									    \\
    /* Make glyph_strings for each glyph sequence that is drawable by	    \\
       the same face, and append them to HEAD/TAIL.  */			    \\
    for (n = 0; n < cmp->glyph_len;)					    \\
      {									    \\
	s = (struct glyph_string *) alloca (sizeof *s);			    \\
	INIT_GLYPH_STRING (s, char2b, w, row, area, START, HL);		    \\
	append_glyph_string (&(HEAD), &(TAIL), s);			    \\
	s->cmp = cmp;							    \\
	s->cmp_from = n;						    \\
	s->x = (X);							    \\
	if (n == 0)							    \\
	  first_s = s;							    \\
	n = fill_composite_glyph_string (s, base_face, overlaps);	    \\
      }									    \\
    									    \\
    ++START;								    \\
    s = first_s;							    \\
  }" 595886 . 597048) (WHILE "while" 597049 . 597054) (semantic-list "(0)" 597055 . 597058)))
          ("BUILD_GSTRING_GLYPH_STRING" (spp-arg-list ("START" "END" "HEAD" "TAIL" "HL" "X" "LAST_X") 597199 . 597238) . 
              ((DO "do" 597243 . 597245) (semantic-list "{									  \\
    int face_id;							  \\
    XChar2b *char2b;							  \\
    Lisp_Object gstring;						  \\
    									  \\
    face_id = (row)->glyphs[area][START].face_id;			  \\
    gstring = (composition_gstring_from_id				  \\
	       ((row)->glyphs[area][START].u.cmp.id));			  \\
    s = (struct glyph_string *) alloca (sizeof *s);			  \\
    char2b = (XChar2b *) alloca ((sizeof *char2b)			  \\
				 * LGSTRING_GLYPH_LEN (gstring));	  \\
    INIT_GLYPH_STRING (s, char2b, w, row, area, START, HL);		  \\
    append_glyph_string (&(HEAD), &(TAIL), s);				  \\
    s->x = (X);								  \\
    START = fill_gstring_glyph_string (s, face_id, START, END, overlaps); \\
  }" 597246 . 597910) (WHILE "while" 597911 . 597916) (semantic-list "(0)" 597917 . 597920)))
          ("IT_EXPAND_MATRIX_WIDTH" (spp-arg-list ("it" "area") 608507 . 608517) . ((semantic-list "{							\\
    if (!fonts_changed_p				\\
	&& (it->glyph_row->glyphs[area]			\\
	    < it->glyph_row->glyphs[area + 1]))		\\
      {							\\
	it->w->ncols_scale_factor++;			\\
	fonts_changed_p = 1;				\\
      }							\\
  }" 608523 . 608740)))
          ("ALLOCATE_HDC" (spp-arg-list ("hdc" "f") 574835 . 574843))
          ("FRAME_X_OUTPUT" (spp-arg-list ("f") 8891 . 8894) . ((semantic-list "((f)->output_data.x)" 8895 . 8915)))
          ("STOP_POLLING" . 
              ((DO "do" 329037 . 329039) (semantic-list "{ if (! polling_stopped_here) stop_polling ();	\\
       polling_stopped_here = 1; }" 329040 . 329123) (WHILE "while" 329124 . 329129) (semantic-list "(0)" 329130 . 329133)))
          ("SKIP_GLYPHS" (spp-arg-list ("glyph" "end" "x" "condition") 359863 . 359889) . 
              ((DO "do" 359894 . 359896) (semantic-list "{						\\
      (x) += (glyph)->pixel_width;		\\
      ++(glyph);				\\
    }" 359908 . 359982) (WHILE "while" 359992 . 359997) (semantic-list "((glyph) < (end) && (condition))" 359998 . 360030)))
          ("DECLARE_HDC" (spp-arg-list ("hdc") 574809 . 574814))
          ("TEXT_PROP_DISTANCE_LIMIT" . ((number "100" 23134 . 23137)))
          ("IT_POS_VALID_AFTER_MOVE_P" (spp-arg-list ("it") 197594 . 197598) . ((semantic-list "((it)->method == GET_FROM_STRING			\\
   ? IT_STRING_CHARPOS (*it) == 0			\\
   : 1)" 197605 . 197687)))
          ("MAX_SCRATCH_GLYPHS" . ((number "100" 22260 . 22263)))
          ("CLEAR_IMAGE_CACHE_COUNT" . ((number "101" 27395 . 27398)))
          ("NUMVAL" (spp-arg-list ("X") 568029 . 568032) . ((semantic-list "((INTEGERP (X) || FLOATP (X))		\\
      ? XFLOATINT (X)				\\
      : - 1)" 568043 . 568115)))
          ("INIT_GLYPH_STRING" (spp-arg-list ("s" "char2b" "w" "row" "area" "start" "hl") 592147 . 592183) . ((symbol "init_glyph_string" 592188 . 592205) (semantic-list "(s, char2b, w, row, area, start, hl)" 592206 . 592242)))
          ("RESUME_POLLING" . 
              ((DO "do" 329164 . 329166) (semantic-list "{ if (polling_stopped_here) start_polling ();	\\
       polling_stopped_here = 0; }" 329167 . 329249) (WHILE "while" 329250 . 329255) (semantic-list "(0)" 329256 . 329259)))
          ("BUILD_CHAR_GLYPH_STRINGS" (spp-arg-list ("START" "END" "HEAD" "TAIL" "HL" "X" "LAST_X") 594692 . 594731) . 
              ((DO "do" 594742 . 594744) (semantic-list "{								   \\
	 int face_id;							   \\
	 XChar2b *char2b;						   \\
									   \\
	 face_id = (row)->glyphs[area][START].face_id;			   \\
									   \\
	 s = (struct glyph_string *) alloca (sizeof *s);		   \\
	 char2b = (XChar2b *) alloca ((END - START) * sizeof *char2b);	   \\
	 INIT_GLYPH_STRING (s, char2b, w, row, area, START, HL);	   \\
	 append_glyph_string (&HEAD, &TAIL, s);				   \\
	 s->x = (X);							   \\
	 START = fill_glyph_string (s, face_id, START, END, overlaps);	   \\
       }" 594765 . 595256) (WHILE "while" 595274 . 595279) (semantic-list "(0)" 595280 . 595283)))
          ("face_after_it_pos" (spp-arg-list ("IT") 36161 . 36165) . ((symbol "face_before_or_after_it_pos" 36167 . 36194) (semantic-list "((IT), 0)" 36195 . 36204)))
          ("CHECK_WINDOW_END" (spp-arg-list ("W") 73406 . 73409) . ((symbol "check_window_end" 73410 . 73426) (semantic-list "((W))" 73427 . 73432)))
          ("TRACE_MOVE" (spp-arg-list ("x") 23628 . 23631) . ((semantic-list "(void)" 23632 . 23638) (number "0" 23639 . 23640)))
          ("DEFAULT_HOURGLASS_DELAY" . ((number "1" 28762 . 28763)))
          ("face_before_it_pos" (spp-arg-list ("IT") 36093 . 36097) . ((symbol "face_before_or_after_it_pos" 36098 . 36125) (semantic-list "((IT), 1)" 36126 . 36135)))
          ("MAX_FRAME_TOOL_BAR_HEIGHT" (spp-arg-list ("f") 299523 . 299526) . ((semantic-list "((FRAME_LINE_HEIGHT (f) * FRAME_LINES (f)))" 299531 . 299574)))
          ("OPTIONAL_HDC" (spp-arg-list ("hdc") 574784 . 574789))
          ("INFINITY" . ((number "10000000" 8941 . 8949)))
          ("GET_NEXT_DISPLAY_ELEMENT" (spp-arg-list ("it") 167642 . 167646) . ((semantic-list "(*get_next_element[(it)->method])" 167647 . 167680) (semantic-list "(it)" 167681 . 167685)))
          ("BUILD_STRETCH_GLYPH_STRING" (spp-arg-list ("START" "END" "HEAD" "TAIL" "HL" "X" "LAST_X") 592872 . 592911) . 
              ((DO "do" 592921 . 592923) (semantic-list "{								    \\
	 s = (struct glyph_string *) alloca (sizeof *s);		    \\
	 INIT_GLYPH_STRING (s, NULL, w, row, area, START, HL);		    \\
	 START = fill_stretch_glyph_string (s, row, area, START, END);	    \\
	 append_glyph_string (&HEAD, &TAIL, s);				    \\
         s->x = (X);							    \\
       }" 592945 . 593241) (WHILE "while" 593260 . 593265) (semantic-list "(0)" 593266 . 593269)))
          ("CHECK_IT" (spp-arg-list ("IT") 72833 . 72837) . ((semantic-list "(void)" 72838 . 72844) (number "0" 72845 . 72846)))
          ("RELEASE_HDC" (spp-arg-list ("hdc" "f") 574863 . 574871))
          ("BUILD_IMAGE_GLYPH_STRING" (spp-arg-list ("START" "END" "HEAD" "TAIL" "HL" "X" "LAST_X") 593776 . 593815) . 
              ((DO "do" 593823 . 593825) (semantic-list "{								\\
	 s = (struct glyph_string *) alloca (sizeof *s);		\\
	 INIT_GLYPH_STRING (s, NULL, w, row, area, START, HL);		\\
	 fill_image_glyph_string (s);					\\
	 append_glyph_string (&HEAD, &TAIL, s);				\\
	 ++START;							\\
         s->x = (X);							\\
       }" 593843 . 594105) (WHILE "while" 594120 . 594125) (semantic-list "(0)" 594126 . 594129)))
          ("IT_DISPLAYING_WHITESPACE" (spp-arg-list ("it") 13496 . 13500) . ((semantic-list "(it->what == IT_CHARACTER && (it->c == ' ' || it->c == '\\t'))" 13508 . 13569)))
          ("CHAR_COMPOSED_P" (spp-arg-list ("IT" "CHARPOS" "BYTEPOS" "END_CHARPOS") 167826 . 167858) . ((semantic-list "((IT)->cmp_it.id >= 0							\\
   || ((IT)->cmp_it.stop_pos == (CHARPOS)				\\
       && composition_reseat_it (&(IT)->cmp_it, CHARPOS, BYTEPOS,	\\
				 END_CHARPOS, (IT)->w,			\\
				 FACE_FROM_ID ((IT)->f, (IT)->face_id),	\\
				 (IT)->string)))" 167865 . 168107)))
          ("BUILD_GLYPH_STRINGS" (spp-arg-list ("START" "END" "HEAD" "TAIL" "HL" "X" "LAST_X") 598415 . 598454) . 
              ((DO "do" 598459 . 598461) (semantic-list "{									\\
      HEAD = TAIL = NULL;						\\
      while (START < END)						\\
	{								\\
	  struct glyph *first_glyph = (row)->glyphs[area] + START;	\\
	  switch (first_glyph->type)					\\
	    {								\\
	    case CHAR_GLYPH:						\\
	      BUILD_CHAR_GLYPH_STRINGS (START, END, HEAD, TAIL,		\\
					HL, X, LAST_X);			\\
	      break;							\\
	      								\\
	    case COMPOSITE_GLYPH:					\\
	      if (first_glyph->u.cmp.automatic)				\\
		BUILD_GSTRING_GLYPH_STRING (START, END, HEAD, TAIL,	\\
					    HL, X, LAST_X);		\\
	      else							\\
		BUILD_COMPOSITE_GLYPH_STRING (START, END, HEAD, TAIL,	\\
					      HL, X, LAST_X);		\\
	      break;							\\
	      								\\
	    case STRETCH_GLYPH:						\\
	      BUILD_STRETCH_GLYPH_STRING (START, END, HEAD, TAIL,	\\
					  HL, X, LAST_X);		\\
	      break;							\\
	      								\\
	    case IMAGE_GLYPH:						\\
	      BUILD_IMAGE_GLYPH_STRING (START, END, HEAD, TAIL,		\\
					HL, X, LAST_X);			\\
	      break;							\\
	      								\\
	    default:							\\
	      abort ();							\\
	    }								\\
	  								\\
	  if (s)							\\
	    {								\\
	      set_glyph_string_background_width (s, START, LAST_X);	\\
	      (X) += s->width;						\\
	    }								\\
	}								\\
    }" 598476 . 599692) (WHILE "while" 599693 . 599698) (semantic-list "(0)" 599699 . 599702)))
          )

    )
   (semanticdb-table "unexhp9k800.c"
    :major-mode 'c-mode
    :tags 
        '( ("stdio.h" include (:system-flag t) nil [1924 1942])
            ("fcntl.h" include (:system-flag t) nil [1943 1961])
            ("errno.h" include (:system-flag t) nil [1962 1980])
            ("a.out.h" include (:system-flag t) nil [1982 2000])
            ("dl.h" include (:system-flag t) nil [2002 2017])
            ("brk_on_dump" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "long")
                nil [2125 2153])
            ("run_time_remap" function
               (:arguments 
                  ( ("ignored" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [2208 2290])
            ("roundup" variable (:constant-flag t) nil [2315 2322])
            ("min" variable (:constant-flag t) nil [2392 2395])
            ("unexec" function
               (:arguments 
                  ( ("new_name" variable
                       (:dereference 1
                        :type "char")
                        nil nil)
                    ("old_name" variable
                       (:dereference 1
                        :type "char")
                        nil nil)
                    ("new_end_of_text" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("dummy2" variable (:type "int") nil nil)
                    ("dummy1" variable (:type "int") nil nil))                  
                :type "int")
                nil [2502 4475])
            ("save_data_space" function
               (:arguments 
                  ( ("file" variable (:type "int") nil nil)
                    ("hdr" variable
                       (:pointer 1
                        :type ("header" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("auxhdr" variable
                       (:pointer 1
                        :type ("som_exec_auxhdr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("size" variable (:type "int") nil nil))                  
                :type "int")
                nil [4537 4946])
            ("update_file_ptrs" function
               (:arguments 
                  ( ("file" variable (:type "int") nil nil)
                    ("hdr" variable
                       (:pointer 1
                        :type ("header" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("auxhdr" variable
                       (:pointer 1
                        :type ("som_exec_auxhdr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("location" variable (:type "unsigned int") nil nil)
                    ("offset" variable (:type "int") nil nil))                  
                :type "int")
                nil [5019 6594])
            ("read_header" function
               (:arguments 
                  ( ("file" variable (:type "int") nil nil)
                    ("hdr" variable
                       (:pointer 1
                        :type ("header" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("auxhdr" variable
                       (:pointer 1
                        :type ("som_exec_auxhdr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [6651 7345])
            ("write_header" function
               (:arguments 
                  ( ("file" variable (:type "int") nil nil)
                    ("hdr" variable
                       (:pointer 1
                        :type ("header" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("auxhdr" variable
                       (:pointer 1
                        :type ("som_exec_auxhdr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [7404 7972])
            ("calculate_checksum" function
               (:arguments 
                  ( ("hdr" variable
                       (:pointer 1
                        :type ("header" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [8028 8247])
            ("old" variable (:type "int") nil [8348 8352])
            ("size" variable (:type "int") nil [8358 8367])
            ("old" variable (:type "int") nil [8800 8804]))          
    :file "unexhp9k800.c"
    :pointmax 9940
    :fsize 9939
    :lastmodtime '(19352 21371)
    :unmatched-syntax '((semantic-list 8805 . 9075) (punctuation 8798 . 8799) (NEW 8795 . 8798) (INT 8791 . 8794) (semantic-list 8775 . 8785) (symbol 8765 . 8774) (NEW 8781 . 8784) (semantic-list 8368 . 8717) (punctuation 8346 . 8347) (NEW 8343 . 8346) (INT 8339 . 8342) (semantic-list 8317 . 8333) (symbol 8307 . 8316) (NEW 8323 . 8326))
    :lexical-table 
        '(("min" (spp-arg-list ("x" "y") 2395 . 2400) . ((semantic-list "(((x) < (y)) ? (x) : (y))" 2402 . 2427)))
          ("roundup" (spp-arg-list ("x" "n") 2322 . 2327) . ((semantic-list "(((x) + ((n) - 1)) & ~((n) - 1))" 2328 . 2360)))
          )

    )
   (semanticdb-table "buffer.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [922 941])
            ("sys/types.h" include (:system-flag t) nil [943 965])
            ("sys/stat.h" include (:system-flag t) nil [966 987])
            ("sys/param.h" include (:system-flag t) nil [988 1010])
            ("errno.h" include (:system-flag t) nil [1011 1029])
            ("stdio.h" include (:system-flag t) nil [1030 1048])
            ("setjmp.h" include (:system-flag t) nil [1049 1068])
            ("errno" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [1090 1107])
            ("unistd.h" include (:system-flag t) nil [1138 1157])
            ("lisp.h" include nil nil [1166 1183])
            ("intervals.h" include nil nil [1184 1206])
            ("window.h" include nil nil [1207 1226])
            ("commands.h" include nil nil [1227 1248])
            ("buffer.h" include nil nil [1249 1268])
            ("character.h" include nil nil [1269 1291])
            ("region-cache.h" include nil nil [1292 1317])
            ("indent.h" include nil nil [1318 1337])
            ("blockinput.h" include nil nil [1338 1361])
            ("keyboard.h" include nil nil [1362 1383])
            ("keymap.h" include nil nil [1384 1403])
            ("frame.h" include nil nil [1404 1422])
            ("current_buffer" variable
               (:pointer 1
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1424 1454])
            ("all_buffers" variable
               (:pointer 1
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1587 1614])
            ("buffer_defaults" variable (:type "int") nil [2030 2074])
            ("Vbuffer_defaults" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2138 2174])
            ("buffer_local_flags" variable (:type ("buffer" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [2983 3016])
            ("buffer_local_symbols" variable (:type "int") nil [3162 3211])
            ("Vbuffer_local_symbols" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3274 3315])
            ("buffer_permanent_local_flags" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [3404 3466])
            ("last_per_buffer_idx" variable (:type "int") nil [3513 3537])
            ("DEFUN_ARGS_" variable (:type ("Fset_buffer" type (:type "class") nil nil)) nil [3539 3562])
            ("set_buffer_internal" function
               (:prototype-flag t
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3563 3612])
            ("set_buffer_internal_1" function
               (:prototype-flag t
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3613 3664])
            ("call_overlay_mod_hooks" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("after" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3665 3820])
            ("swap_out_buffer_local_variables" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3821 3889])
            ("reset_buffer_local_variables" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("permanent_too" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3890 3974])
            ("Vbuffer_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4147 4173])
            ("Vbefore_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4234 4271])
            ("Vafter_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4272 4308])
            ("Vtransient_mark_mode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4310 4343])
            ("Vinhibit_read_only" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4527 4558])
            ("Vkill_buffer_query_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4692 4733])
            ("Qkill_buffer_query_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4734 4775])
            ("Qchange_major_mode_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4823 4884])
            ("Vchange_major_mode_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4823 4884])
            ("Vfirst_change_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4957 4988])
            ("Qfirst_change_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4990 5021])
            ("Qbefore_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5022 5059])
            ("Qafter_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5060 5096])
            ("Qucs_set_table_for_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5097 5134])
            ("inhibit_modification_hooks" variable (:type "int") nil [5194 5225])
            ("Qpermanent_local" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5227 5288])
            ("Qmode_class" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5227 5288])
            ("Qfundamental_mode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5227 5288])
            ("Qpermanent_local_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5289 5323])
            ("Qprotected_field" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5325 5354])
            ("QSFundamental" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5356 5382])
            ("Qkill_buffer_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5413 5443])
            ("Qget_file_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5445 5474])
            ("Qoverlayp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5476 5498])
            ("Qafter_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5500 5574])
            ("Qbefore_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5500 5574])
            ("Qevaporate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5500 5574])
            ("Qwindow" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5500 5574])
            ("Qpriority" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5500 5574])
            ("Qmodification_hooks" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5576 5608])
            ("Qinsert_in_front_hooks" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5609 5644])
            ("Qinsert_behind_hooks" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5645 5678])
            ("alloc_buffer_text" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [5680 5741])
            ("free_buffer_text" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [5742 5795])
            ("copy_overlays" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Overlay" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Overlay" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5796 5885])
            ("modify_overlay" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [5886 5958])
            ("buffer_lisp_local_variables" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [5959 6029])
            ("emacs_strerror" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [6031 6071])
            ("nsberror" function
               (:arguments 
                  ( ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [6178 6332])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_live_p" type (:type "class") nil nil)) nil [6335 6548])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-live-p\", Fbuffer_live_p, Sbuffer_live_p, 1, 1, 0,
       doc: /* Return non-nil if OBJECT is a buffer which has not been killed.
Value is nil if OBJECT is not a buffer or if it has been killed.  */)"
                :type "int")
                nil [6335 6548])
            ("Sbuffer_live_p" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6335 6672])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_list" type (:type "class") nil nil)) nil [6674 6998])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-list\", Fbuffer_list, Sbuffer_list, 0, 1, 0,
       doc: /* Return a list of all existing live buffers.
If the optional arg FRAME is a frame, we return the buffer list
in the proper order for that frame: the buffers in FRAME's `buffer-list'
frame parameter come first, followed by the rest of the buffers.  */)"
                :type "int")
                nil [6674 6998])
            ("Sbuffer_list" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6674 7861])
            ("assoc_ignore_text_properties" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7977 8347])
            ("DEFUN_ARGS_" variable (:type ("Sget_buffer" type (:type "class") nil nil)) nil [8349 8650])
            ("doc" variable
               (:default-value "DEFUN (\"get-buffer\", Fget_buffer, Sget_buffer, 1, 1, 0,
       doc: /* Return the buffer named BUFFER-OR-NAME.
BUFFER-OR-NAME must be either a string or a buffer.  If BUFFER-OR-NAME
is a string and there is no buffer with that name, return nil.  If
BUFFER-OR-NAME is a buffer, return it as given.  */)"
                :type "int")
                nil [8349 8650])
            ("Sget_buffer" function
               (:arguments 
                  ( ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8349 8889])
            ("DEFUN_ARGS_" variable (:type ("Sget_file_buffer" type (:type "class") nil nil)) nil [8891 9190])
            ("doc" variable
               (:default-value "DEFUN (\"get-file-buffer\", Fget_file_buffer, Sget_file_buffer, 1, 1, 0,
       doc: /* Return the buffer visiting file FILENAME (a string).
The buffer's `buffer-file-name' must match exactly the expansion of FILENAME.
If there is no such live buffer, return nil.
See also `find-buffer-visiting'.  */)"
                :type "int")
                nil [8891 9190])
            ("Sget_file_buffer" function
               (:arguments 
                  ( ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8891 9943])
            ("get_truename_buffer" function
               (:arguments 
                  ( ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9945 10390])
            ("buffer_count" variable (:type "int") nil [10464 10481])
            ("DEFUN_ARGS_" variable (:type ("Sget_buffer_create" type (:type "class") nil nil)) nil [10483 11035])
            ("doc" variable
               (:default-value "DEFUN (\"get-buffer-create\", Fget_buffer_create, Sget_buffer_create, 1, 1, 0,
       doc: /* Return the buffer specified by BUFFER-OR-NAME, creating a new one if needed.
If BUFFER-OR-NAME is a string and a live buffer with that name exists,
return that buffer.  If no such buffer exists, create a new buffer with
that name and return it.  If BUFFER-OR-NAME starts with a space, the new
buffer does not keep undo information.

If BUFFER-OR-NAME is a buffer instead of a string, return it as given,
even if it is dead.  The return value is never nil.  */)"
                :type "int")
                nil [10483 11035])
            ("Sget_buffer_create" function
               (:arguments 
                  ( ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [10483 13539])
            ("copy_overlays" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("list" variable
                       (:pointer 1
                        :type ("Lisp_Overlay" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Overlay" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [13639 14896])
            ("clone_per_buffer_values" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("to" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("from" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [15157 16388])
            ("DEFUN_ARGS_" variable (:type ("Smake_indirect_buffer" type (:type "class") nil nil)) nil [16390 16982])
            ("doc" variable
               (:default-value "DEFUN (\"make-indirect-buffer\", Fmake_indirect_buffer, Smake_indirect_buffer,
       2, 3,
       \"bMake indirect buffer (to buffer): \\nBName of indirect buffer: \",
       doc: /* Create and return an indirect buffer for buffer BASE-BUFFER, named NAME.
BASE-BUFFER should be a live buffer, or the name of an existing buffer.
NAME should be a string which is not the name of an existing buffer.
Optional argument CLONE non-nil means preserve BASE-BUFFER's state,
such as major and minor modes, in the indirect buffer.
CLONE nil means the indirect buffer's state is reset to default values.  */)"
                :type "int")
                nil [16390 16982])
            ("Smake_indirect_buffer" function
               (:arguments 
                  ( ("clone" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("base_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16390 20614])
            ("delete_all_overlays" function
               (:arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [20616 21247])
            ("reset_buffer" function
               (:arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [21590 22647])
            ("reset_buffer_local_variables" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("permanent_too" variable (:type "int") nil nil))                  
                :type "void")
                nil [22975 26138])
            ("DEFUN_ARGS_" variable (:type ("Sgenerate_new_buffer_name" type (:type "class") nil nil)) nil [26314 26855])
            ("doc" variable
               (:default-value "DEFUN (\"generate-new-buffer-name\", Fgenerate_new_buffer_name, Sgenerate_new_buffer_name,
       1, 2, 0,
       doc: /* Return a string that is the name of no existing buffer based on NAME.
If there is no live buffer named NAME, then return NAME.
Otherwise modify name by appending `<NUMBER>', incrementing NUMBER
\\(starting at 2) until an unused name is found, and then return that name.
Optional second argument IGNORE specifies a name that is okay to use (if
it is in the sequence to be tried) even if a buffer with that name exists.  */)"
                :type "int")
                nil [26314 26855])
            ("Sgenerate_new_buffer_name" function
               (:arguments 
                  ( ("ignore" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [26314 27443])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_name" type (:type "class") nil nil)) nil [27447 27642])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-name\", Fbuffer_name, Sbuffer_name, 0, 1, 0,
       doc: /* Return the name of BUFFER, as a string.
BUFFER defaults to the current buffer.
Return nil if BUFFER has been killed.  */)"
                :type "int")
                nil [27447 27642])
            ("Sbuffer_name" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27447 27806])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_file_name" type (:type "class") nil nil)) nil [27808 28018])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-file-name\", Fbuffer_file_name, Sbuffer_file_name, 0, 1, 0,
       doc: /* Return name of file BUFFER is visiting, or nil if none.
No argument or nil as argument means use the current buffer.  */)"
                :type "int")
                nil [27808 28018])
            ("Sbuffer_file_name" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27808 28190])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_base_buffer" type (:type "class") nil nil)) nil [28192 28426])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-base-buffer\", Fbuffer_base_buffer, Sbuffer_base_buffer,
       0, 1, 0,
       doc: /* Return the base buffer of indirect buffer BUFFER.
If BUFFER is not indirect, return nil.
BUFFER defaults to the current buffer.  */)"
                :type "int")
                nil [28192 28426])
            ("Sbuffer_base_buffer" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28192 28770])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_local_value" type (:type "class") nil nil)) nil [28772 29027])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-local-value\", Fbuffer_local_value,
       Sbuffer_local_value, 2, 2, 0,
       doc: /* Return the value of VARIABLE in BUFFER.
If VARIABLE does not have a buffer-local binding in BUFFER, the value
is the default binding of the variable. */)"
                :type "int")
                nil [28772 29027])
            ("Sbuffer_local_value" function
               (:arguments 
                  ( ("variable" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28772 30970])
            ("buffer_lisp_local_variables" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [31145 32185])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_local_variables" type (:type "class") nil nil)) nil [32187 32654])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-local-variables\", Fbuffer_local_variables,
       Sbuffer_local_variables, 0, 1, 0,
       doc: /* Return an alist of variables that are buffer-local in BUFFER.
Most elements look like (SYMBOL . VALUE), describing one variable.
For a symbol that is locally unbound, just the symbol appears in the value.
Note that storing new VALUEs in these elements doesn't change the variables.
No argument or nil as argument means use current buffer as BUFFER.  */)"
                :type "int")
                nil [32187 32654])
            ("Sbuffer_local_variables" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [32187 33588])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_modified_p" type (:type "class") nil nil)) nil [33591 33832])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-modified-p\", Fbuffer_modified_p, Sbuffer_modified_p,
       0, 1, 0,
       doc: /* Return t if BUFFER was modified since its file was last read or saved.
No argument or nil as argument means use current buffer as BUFFER.  */)"
                :type "int")
                nil [33591 33832])
            ("Sbuffer_modified_p" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [33591 34104])
            ("DEFUN_ARGS_" variable (:type ("Sset_buffer_modified_p" type (:type "class") nil nil)) nil [34106 34333])
            ("doc" variable
               (:default-value "DEFUN (\"set-buffer-modified-p\", Fset_buffer_modified_p, Sset_buffer_modified_p,
       1, 1, 0,
       doc: /* Mark current buffer as modified or unmodified according to FLAG.
A non-nil FLAG means mark the buffer modified.  */)"
                :type "int")
                nil [34106 34333])
            ("Sset_buffer_modified_p" function
               (:arguments 
                  ( ("flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [34106 36754])
            ("DEFUN_ARGS_" variable (:type ("Srestore_buffer_modified_p" type (:type "class") nil nil)) nil [36756 37069])
            ("doc" variable
               (:default-value "DEFUN (\"restore-buffer-modified-p\", Frestore_buffer_modified_p,
       Srestore_buffer_modified_p, 1, 1, 0,
       doc: /* Like `set-buffer-modified-p', with a difference concerning redisplay.
It is not ensured that mode lines will be updated to show the modified
state of the current buffer.  Use with care.  */)"
                :type "int")
                nil [36756 37069])
            ("Srestore_buffer_modified_p" function
               (:arguments 
                  ( ("flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [36756 37673])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_modified_tick" type (:type "class") nil nil)) nil [37675 38050])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-modified-tick\", Fbuffer_modified_tick, Sbuffer_modified_tick,
       0, 1, 0,
       doc: /* Return BUFFER's tick counter, incremented for each change in text.
Each buffer has a tick counter which is incremented each time the
text in that buffer is changed.  It wraps around occasionally.
No argument or nil as argument means use current buffer as BUFFER.  */)"
                :type "int")
                nil [37675 38050])
            ("Sbuffer_modified_tick" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [37675 38300])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_chars_modified_tick" type (:type "class") nil nil)) nil [38302 38915])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-chars-modified-tick\", Fbuffer_chars_modified_tick,
       Sbuffer_chars_modified_tick, 0, 1, 0,
       doc: /* Return BUFFER's character-change tick counter.
Each buffer has a character-change tick counter, which is set to the
value of the buffer's tick counter \\(see `buffer-modified-tick'), each
time text in that buffer is inserted or deleted.  By comparing the
values returned by two individual calls of `buffer-chars-modified-tick',
you can tell whether a character change occurred in that buffer in
between these calls.  No argument or nil as argument means use current
buffer as BUFFER.  */)"
                :type "int")
                nil [38302 38915])
            ("Sbuffer_chars_modified_tick" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [38302 39171])
            ("DEFUN_ARGS_" variable (:type ("Srename_buffer" type (:type "class") nil nil)) nil [39174 39808])
            ("doc" variable
               (:default-value "DEFUN (\"rename-buffer\", Frename_buffer, Srename_buffer, 1, 2,
       \"(list (read-string \\\"Rename buffer (to new name): \\\" \\
	      nil 'buffer-name-history (buffer-name (current-buffer))) \\
	      current-prefix-arg)\",
       doc: /* Change current buffer's name to NEWNAME (a string).
If second arg UNIQUE is nil or omitted, it is an error if a
buffer named NEWNAME already exists.
If UNIQUE is non-nil, come up with a new name using
`generate-new-buffer-name'.
Interactively, you can set UNIQUE with a prefix argument.
We return the name we actually gave the buffer.
This does not change the name of the visited file (if any).  */)"
                :type "int")
                nil [39174 39808])
            ("Srename_buffer" function
               (:arguments 
                  ( ("unique" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("newname" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [39174 41097])
            ("DEFUN_ARGS_" variable (:type ("Sother_buffer" type (:type "class") nil nil)) nil [41099 41608])
            ("doc" variable
               (:default-value "DEFUN (\"other-buffer\", Fother_buffer, Sother_buffer, 0, 3, 0,
       doc: /* Return most recently selected buffer other than BUFFER.
Buffers not visible in windows are preferred to visible buffers,
unless optional second argument VISIBLE-OK is non-nil.
If the optional third argument FRAME is non-nil, use that frame's
buffer list instead of the selected frame's buffer list.
If no other buffer exists, the buffer `*scratch*' is returned.
If BUFFER is omitted or nil, some interesting buffer is returned.  */)"
                :type "int")
                nil [41099 41608])
            ("Sother_buffer" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("visible_ok" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [41099 43163])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_enable_undo" type (:type "class") nil nil)) nil [43166 43392])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-enable-undo\", Fbuffer_enable_undo, Sbuffer_enable_undo,
       0, 1, \"\",
       doc: /* Start keeping undo information for buffer BUFFER.
No argument or nil as argument means do this for the current buffer.  */)"
                :type "int")
                nil [43166 43392])
            ("Sbuffer_enable_undo" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43166 43761])
            ("DEFUN_ARGS_" variable (:type ("Skill_buffer" type (:type "class") nil nil)) nil [43978 44793])
            ("doc" variable
               (:default-value "DEFUN (\"kill-buffer\", Fkill_buffer, Skill_buffer, 0, 1, \"bKill buffer: \",
       doc: /* Kill buffer BUFFER-OR-NAME.
The argument may be a buffer or the name of an existing buffer.
Argument nil or omitted means kill the current buffer.  Return t if the
buffer is actually killed, nil otherwise.

This function calls `replace-buffer-in-windows' for cleaning up all
windows currently displaying the buffer to be killed.  The functions in
`kill-buffer-query-functions' are called with the buffer to be killed as
the current buffer.  If any of them returns nil, the buffer is not
killed.  The hook `kill-buffer-hook' is run before the buffer is
actually killed.  The buffer being killed will be current while the hook
is running.

Any processes that have this buffer as the `process-buffer' are killed
with SIGHUP.  */)"
                :type "int")
                nil [43978 44793])
            ("Skill_buffer" function
               (:arguments 
                  ( ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43978 50325])
            ("record_buffer" function
               (:arguments 
                  ( ("buf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [50611 52245])
            ("DEFUN_ARGS_" variable (:type ("Sset_buffer_major_mode" type (:type "class") nil nil)) nil [52247 52617])
            ("doc" variable
               (:default-value "DEFUN (\"set-buffer-major-mode\", Fset_buffer_major_mode, Sset_buffer_major_mode, 1, 1, 0,
       doc: /* Set an appropriate major mode for BUFFER.
For the *scratch* buffer, use `initial-major-mode', otherwise choose a mode
according to `default-major-mode'.
Use this function before selecting the buffer, since it may need to inspect
the current buffer's major mode.  */)"
                :type "int")
                nil [52247 52617])
            ("Sset_buffer_major_mode" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [52247 53459])
            ("switch_to_buffer_1" function
               (:arguments 
                  ( ("norecord" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [53570 54231])
            ("DEFUN_ARGS_" variable (:type ("Sswitch_to_buffer" type (:type "class") nil nil)) nil [54233 55338])
            ("doc" variable
               (:default-value "DEFUN (\"switch-to-buffer\", Fswitch_to_buffer, Sswitch_to_buffer, 1, 2,
       \"(list (read-buffer-to-switch \\\"Switch to buffer: \\\"))\",
       doc: /* Make BUFFER-OR-NAME current and display it in selected window.
BUFFER-OR-NAME may be a buffer, a string \\(a buffer name), or
nil.  Return the buffer switched to.

If BUFFER-OR-NAME is a string and does not identify an existing
buffer, create a new buffer with that name.  Interactively, if
`confirm-nonexistent-file-or-buffer' is non-nil, request
confirmation before creating a new buffer.  If BUFFER-OR-NAME is
nil, switch to buffer returned by `other-buffer'.

Optional second arg NORECORD non-nil means do not put this buffer
at the front of the list of recently selected ones.  This
function returns the buffer it switched to as a Lisp object.

If the selected window is the minibuffer window or dedicated to
its buffer, use `pop-to-buffer' for displaying the buffer.

WARNING: This is NOT the way to work on another buffer temporarily
within a Lisp program!  Use `set-buffer' instead.  That avoids
messing with the window-buffer correspondences.  */)"
                :type "int")
                nil [54233 55338])
            ("Sswitch_to_buffer" function
               (:arguments 
                  ( ("norecord" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [54233 56500])
            ("DEFUN_ARGS_" variable (:type ("Scurrent_buffer" type (:type "class") nil nil)) nil [56502 56633])
            ("doc" variable
               (:default-value "DEFUN (\"current-buffer\", Fcurrent_buffer, Scurrent_buffer, 0, 0, 0,
       doc: /* Return the current buffer as a Lisp object.  */)"
                :type "int")
                nil [56502 56633])
            ("Scurrent_buffer" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [56502 56723])
            ("set_buffer_internal" function
               (:arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [57150 57272])
            ("set_buffer_internal_1" function
               (:arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [57384 60748])
            ("set_buffer_temp" function
               (:arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [60888 62382])
            ("DEFUN_ARGS_" variable (:type ("Sset_buffer" type (:type "class") nil nil)) nil [62384 62837])
            ("doc" variable
               (:default-value "DEFUN (\"set-buffer\", Fset_buffer, Sset_buffer, 1, 1, 0,
       doc: /* Make buffer BUFFER-OR-NAME current for editing operations.
BUFFER-OR-NAME may be a buffer or the name of an existing buffer.  See
also `save-excursion' when you want to make a buffer current
temporarily.  This function does not display the buffer, so its effect
ends when the current command terminates.  Use `switch-to-buffer' or
`pop-to-buffer' to switch buffers permanently.  */)"
                :type "int")
                nil [62384 62837])
            ("Sset_buffer" function
               (:arguments 
                  ( ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [62384 63165])
            ("set_buffer_if_live" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [63230 63378])
            ("DEFUN_ARGS_" variable (:type ("Sbarf_if_buffer_read_only" type (:type "class") nil nil)) nil [63381 63575])
            ("doc" variable
               (:default-value "DEFUN (\"barf-if-buffer-read-only\", Fbarf_if_buffer_read_only,
				   Sbarf_if_buffer_read_only, 0, 0, 0,
       doc: /* Signal a `buffer-read-only' error if the current buffer is read-only.  */)"
                :type "int")
                nil [63381 63575])
            ("Sbarf_if_buffer_read_only" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [63381 63732])
            ("DEFUN_ARGS_" variable (:type ("Sbury_buffer" type (:type "class") nil nil)) nil [63734 64401])
            ("doc" variable
               (:default-value "DEFUN (\"bury-buffer\", Fbury_buffer, Sbury_buffer, 0, 1, \"\",
       doc: /* Put BUFFER-OR-NAME at the end of the list of all buffers.
There it is the least likely candidate for `other-buffer' to return;
thus, the least likely buffer for \\\\[switch-to-buffer] to select by
default.

The argument may be a buffer name or an actual buffer object.  If
BUFFER-OR-NAME is nil or omitted, bury the current buffer and remove it
from the selected window if it is displayed there.  If the selected
window is dedicated to its buffer, delete that window if there are other
windows on the same frame.  If the selected window is the only window on
its frame, iconify that frame.  */)"
                :type "int")
                nil [63734 64401])
            ("Sbury_buffer" function
               (:arguments 
                  ( ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [63734 65842])
            ("DEFUN_ARGS_" variable (:type ("Serase_buffer" type (:type "class") nil nil)) nil [65845 66092])
            ("doc" variable
               (:default-value "DEFUN (\"erase-buffer\", Ferase_buffer, Serase_buffer, 0, 0, \"*\",
       doc: /* Delete the entire contents of the current buffer.
Any narrowing restriction in effect (see `narrow-to-region') is removed,
so the buffer is truly empty after this.  */)"
                :type "int")
                nil [65845 66092])
            ("Serase_buffer" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [65845 66459])
            ("validate_region" function
               (:arguments 
                  ( ("e" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("b" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [66461 66812])
            ("advance_to_char_boundary" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("byte_pos" variable (:type "int") nil nil))                  
                :type "int")
                nil [66904 67691])
            ("r_alloc_reset_variable" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [67710 67783])
            ("DEFUN_ARGS_" variable (:type ("Sbuffer_swap_text" type (:type "class") nil nil)) nil [67808 67957])
            ("doc" variable
               (:default-value "DEFUN (\"buffer-swap-text\", Fbuffer_swap_text, Sbuffer_swap_text,
       1, 1, 0,
       doc: /* Swap the text between current buffer and BUFFER.  */)"
                :type "int")
                nil [67808 67957])
            ("Sbuffer_swap_text" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [67808 72832])
            ("DEFUN_ARGS_" variable (:type ("Sset_buffer_multibyte" type (:type "class") nil nil)) nil [72834 73449])
            ("doc" variable
               (:default-value "DEFUN (\"set-buffer-multibyte\", Fset_buffer_multibyte, Sset_buffer_multibyte,
       1, 1, 0,
       doc: /* Set the multibyte flag of the current buffer to FLAG.
If FLAG is t, this makes the buffer a multibyte buffer.
If FLAG is nil, this makes the buffer a single-byte buffer.
In these cases, the buffer contents remain unchanged as a sequence of
bytes but the contents viewed as characters do change.
If FLAG is `to', this makes the buffer a multibyte buffer by changing
all eight-bit bytes to eight-bit characters.
If the multibyte flag was really changed, undo information of the
current buffer is cleared.  */)"
                :type "int")
                nil [72834 73449])
            ("Sset_buffer_multibyte" function
               (:arguments 
                  ( ("flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [72834 80754])
            ("DEFUN_ARGS_" variable (:type ("Skill_all_local_variables" type (:type "class") nil nil)) nil [80757 81551])
            ("doc" variable
               (:default-value "DEFUN (\"kill-all-local-variables\", Fkill_all_local_variables, Skill_all_local_variables,
       0, 0, 0,
       doc: /* Switch to Fundamental mode by killing current buffer's local variables.
Most local variable bindings are eliminated so that the default values
become effective once more.  Also, the syntax table is set from
`standard-syntax-table', the local keymap is set to nil,
and the abbrev table from `fundamental-mode-abbrev-table'.
This function also forces redisplay of the mode line.

Every function to select a new major mode starts by
calling this function.

As a special exception, local variables whose names have
a non-nil `permanent-local' property are not eliminated by this function.

The first thing this function does is run
the normal hook `change-major-mode-hook'.  */)"
                :type "int")
                nil [80757 81551])
            ("Skill_all_local_variables" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [80757 82056])
            ("swap_out_buffer_local_variables" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [82152 82756])
            ("overlays_at" function
               (:arguments 
                  ( ("pos" variable (:type "int") nil nil)
                    ("extend" variable (:type "int") nil nil)
                    ("vec_ptr" variable
                       (:pointer 2
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("len_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("next_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("prev_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("change_req" variable (:type "int") nil nil))                  
                :type "int")
                nil [83849 86590])
            ("overlays_in" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("end" variable (:type "int") nil nil)
                    ("beg" variable (:type "int") nil nil)
                    ("extend" variable (:type "int") nil nil)
                    ("vec_ptr" variable
                       (:pointer 2
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("len_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("next_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("prev_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [87548 90445])
            ("mouse_face_overlay_overlaps" function
               (:arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [90560 91190])
            ("overlay_touches_p" function
               (:arguments 
                  ( ("pos" variable (:type "int") nil nil))                  
                :type "int")
                nil [91262 92092])
            ("sortvec" type
               (:members 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [92114 92134])
                    ("end" variable (:type "int") (reparse-symbol classsubparts) [92137 92150])
                    ("beg" variable (:type "int") (reparse-symbol classsubparts) [92137 92150])
                    ("priority" variable (:type "int") (reparse-symbol classsubparts) [92153 92166]))                  
                :type "struct")
                nil [92095 92169])
            ("compare_overlays" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("v2" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("v1" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [92171 92553])
            ("sort_overlays" function
               (:arguments 
                  ( ("overlay_vec" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("noverlays" variable (:type "int") nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [92779 94305])
            ("sortstr" type
               (:members 
                  ( ("string2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [94327 94355])
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [94327 94355])
                    ("size" variable (:type "int") (reparse-symbol classsubparts) [94358 94367])
                    ("priority" variable (:type "int") (reparse-symbol classsubparts) [94370 94383]))                  
                :type "struct")
                nil [94308 94386])
            ("sortstrlist" type
               (:members 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("sortstr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [94411 94431])
                    ("size" variable (:type "int") (reparse-symbol classsubparts) [94487 94496])
                    ("used" variable (:type "int") (reparse-symbol classsubparts) [94539 94548])
                    ("bytes" variable (:type "int") (reparse-symbol classsubparts) [94602 94612]))                  
                :type "struct")
                nil [94388 94659])
            ("overlay_tails" variable
               (:typemodifiers ("static")
                :type ("sortstrlist" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [94908 94963])
            ("overlay_heads" variable
               (:typemodifiers ("static")
                :type ("sortstrlist" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [94908 94963])
            ("overlay_str_buf" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "unsigned char")
                nil [94964 95002])
            ("overlay_str_len" variable
               (:typemodifiers ("static")
                :type "int")
                nil [95048 95075])
            ("cmp_for_strings" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("as2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("as1" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [95137 95440])
            ("record_overlay_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ssl" variable
                       (:pointer 1
                        :type ("sortstrlist" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pri" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("str2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("str" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("size" variable (:type "int") nil nil))                  
                :type "void")
                nil [95442 96557])
            ("overlay_strings" function
               (:arguments 
                  ( ("pos" variable (:type "int") nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pstr" variable
                       (:pointer 2
                        :type "unsigned char")
                        nil nil))                  
                :type "int")
                nil [97225 100967])
            ("recenter_overlay_lists" function
               (:arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pos" variable (:type "int") nil nil))                  
                :type "void")
                nil [101045 104762])
            ("adjust_overlays_for_insert" function
               (:arguments 
                  ( ("pos" variable (:type "int") nil nil)
                    ("length" variable (:type "int") nil nil))                  
                :type "void")
                nil [104764 105077])
            ("adjust_overlays_for_delete" function
               (:arguments 
                  ( ("pos" variable (:type "int") nil nil)
                    ("length" variable (:type "int") nil nil))                  
                :type "void")
                nil [105079 105872])
            ("fix_start_end_in_overlays" function
               (:arguments 
                  ( ("end" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil))                  
                :type "void")
                nil [106229 109885])
            ("fix_overlays_before" function
               (:arguments 
                  ( ("bp" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pos" variable (:type "int") nil nil)
                    ("prev" variable (:type "int") nil nil))                  
                :type "void")
                nil [110513 112906])
            ("DEFUN_ARGS_" variable (:type ("Soverlayp" type (:type "class") nil nil)) nil [112909 113012])
            ("doc" variable
               (:default-value "DEFUN (\"overlayp\", Foverlayp, Soverlayp, 1, 1, 0,
       doc: /* Return t if OBJECT is an overlay.  */)"
                :type "int")
                nil [112909 113012])
            ("Soverlayp" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112909 113097])
            ("DEFUN_ARGS_" variable (:type ("Smake_overlay" type (:type "class") nil nil)) nil [113099 113682])
            ("doc" variable
               (:default-value "DEFUN (\"make-overlay\", Fmake_overlay, Smake_overlay, 2, 5, 0,
       doc: /* Create a new overlay with range BEG to END in BUFFER.
If omitted, BUFFER defaults to the current buffer.
BEG and END may be integers or markers.
The fourth arg FRONT-ADVANCE, if non-nil, makes the marker
for the front of the overlay advance when text is inserted there
\\(which means the text *is not* included in the overlay).
The fifth arg REAR-ADVANCE, if non-nil, makes the marker
for the rear of the overlay advance when text is inserted there
\\(which means the text *is* included in the overlay).  */)"
                :type "int")
                nil [113099 113682])
            ("Smake_overlay" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("beg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("rear_advance" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("front_advance" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113099 115519])
            ("modify_overlay" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("end" variable (:type "int") nil nil)
                    ("start" variable (:type "int") nil nil))                  
                :type "void")
                nil [115602 116378])
            ("Fdelete_overlay" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116382 116413])
            ("unchain_overlay" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("overlay" variable
                       (:pointer 1
                        :type ("Lisp_Overlay" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("list" variable
                       (:pointer 1
                        :type ("Lisp_Overlay" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Overlay" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [116415 116773])
            ("DEFUN_ARGS_" variable (:type ("Smove_overlay" type (:type "class") nil nil)) nil [116775 117064])
            ("doc" variable
               (:default-value "DEFUN (\"move-overlay\", Fmove_overlay, Smove_overlay, 3, 4, 0,
       doc: /* Set the endpoints of OVERLAY to BEG and END in BUFFER.
If BUFFER is omitted, leave OVERLAY in the same buffer it inhabits now.
If BUFFER is omitted, and OVERLAY is in no buffer, put it in the current
buffer.  */)"
                :type "int")
                nil [116775 117064])
            ("Smove_overlay" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("beg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [116775 120004])
            ("DEFUN_ARGS_" variable (:type ("Sdelete_overlay" type (:type "class") nil nil)) nil [120006 120137])
            ("doc" variable
               (:default-value "DEFUN (\"delete-overlay\", Fdelete_overlay, Sdelete_overlay, 1, 1, 0,
       doc: /* Delete the overlay OVERLAY from its buffer.  */)"
                :type "int")
                nil [120006 120137])
            ("Sdelete_overlay" function
               (:arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [120006 121351])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_start" type (:type "class") nil nil)) nil [121392 121521])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-start\", Foverlay_start, Soverlay_start, 1, 1, 0,
       doc: /* Return the position at which OVERLAY starts.  */)"
                :type "int")
                nil [121392 121521])
            ("Soverlay_start" function
               (:arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [121392 121649])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_end" type (:type "class") nil nil)) nil [121651 121772])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-end\", Foverlay_end, Soverlay_end, 1, 1, 0,
       doc: /* Return the position at which OVERLAY ends.  */)"
                :type "int")
                nil [121651 121772])
            ("Soverlay_end" function
               (:arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [121651 121898])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_buffer" type (:type "class") nil nil)) nil [121900 122065])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-buffer\", Foverlay_buffer, Soverlay_buffer, 1, 1, 0,
       doc: /* Return the buffer OVERLAY belongs to.
Return nil if OVERLAY has been deleted.  */)"
                :type "int")
                nil [121900 122065])
            ("Soverlay_buffer" function
               (:arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [121900 122191])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_properties" type (:type "class") nil nil)) nil [122193 122418])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-properties\", Foverlay_properties, Soverlay_properties, 1, 1, 0,
       doc: /* Return a list of the properties on OVERLAY.
This is a copy of OVERLAY's plist; modifying its conses has no effect on
OVERLAY.  */)"
                :type "int")
                nil [122193 122418])
            ("Soverlay_properties" function
               (:arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [122193 122543])
            ("DEFUN_ARGS_" variable (:type ("Soverlays_at" type (:type "class") nil nil)) nil [122547 122690])
            ("doc" variable
               (:default-value "DEFUN (\"overlays-at\", Foverlays_at, Soverlays_at, 1, 1, 0,
       doc: /* Return a list of the overlays that contain the character at POS.  */)"
                :type "int")
                nil [122547 122690])
            ("Soverlays_at" function
               (:arguments 
                  ( ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [122547 123320])
            ("DEFUN_ARGS_" variable (:type ("Soverlays_in" type (:type "class") nil nil)) nil [123322 123750])
            ("doc" variable
               (:default-value "DEFUN (\"overlays-in\", Foverlays_in, Soverlays_in, 2, 2, 0,
       doc: /* Return a list of the overlays that overlap the region BEG ... END.
Overlap means that at least one character is contained within the overlay
and also contained within the specified region.
Empty overlays are included in the result if they are located at BEG,
between BEG and END, or at END provided END denotes the position at the
end of the buffer.  */)"
                :type "int")
                nil [123322 123750])
            ("Soverlays_in" function
               (:arguments 
                  ( ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("beg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [123322 124350])
            ("DEFUN_ARGS_" variable (:type ("Snext_overlay_change" type (:type "class") nil nil)) nil [124352 124615])
            ("doc" variable
               (:default-value "DEFUN (\"next-overlay-change\", Fnext_overlay_change, Snext_overlay_change,
       1, 1, 0,
       doc: /* Return the next position after POS where an overlay starts or ends.
If there are no overlay boundaries from POS to (point-max),
the value is (point-max).  */)"
                :type "int")
                nil [124352 124615])
            ("Snext_overlay_change" function
               (:arguments 
                  ( ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [124352 125485])
            ("DEFUN_ARGS_" variable (:type ("Sprevious_overlay_change" type (:type "class") nil nil)) nil [125487 125767])
            ("doc" variable
               (:default-value "DEFUN (\"previous-overlay-change\", Fprevious_overlay_change,
       Sprevious_overlay_change, 1, 1, 0,
       doc: /* Return the previous position before POS where an overlay starts or ends.
If there are no overlay boundaries from (point-min) to POS,
the value is (point-min).  */)"
                :type "int")
                nil [125487 125767])
            ("Sprevious_overlay_change" function
               (:arguments 
                  ( ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [125487 126440])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_lists" type (:type "class") nil nil)) nil [126495 126957])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-lists\", Foverlay_lists, Soverlay_lists, 0, 0, 0,
       doc: /* Return a pair of lists giving all the overlays of the current buffer.
The car has all the overlays before the overlay center;
the cdr has all the overlays after the overlay center.
Recentering overlays moves overlays between these lists.
The lists you get are copies, so that changing them has no effect.
However, the overlays you get are the real objects that the buffer uses.  */)"
                :type "int")
                nil [126495 126957])
            ("Soverlay_lists" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [126495 127373])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_recenter" type (:type "class") nil nil)) nil [127375 127643])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-recenter\", Foverlay_recenter, Soverlay_recenter, 1, 1, 0,
       doc: /* Recenter the overlays of the current buffer around position POS.
That makes overlay lookup faster for positions near POS (but perhaps slower
for positions far away from POS).  */)"
                :type "int")
                nil [127375 127643])
            ("Soverlay_recenter" function
               (:arguments 
                  ( ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [127375 127787])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_get" type (:type "class") nil nil)) nil [127790 127929])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-get\", Foverlay_get, Soverlay_get, 2, 2, 0,
       doc: /* Get the property of overlay OVERLAY with property name PROP.  */)"
                :type "int")
                nil [127790 127929])
            ("Soverlay_get" function
               (:arguments 
                  ( ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [127790 128081])
            ("DEFUN_ARGS_" variable (:type ("Soverlay_put" type (:type "class") nil nil)) nil [128083 128230])
            ("doc" variable
               (:default-value "DEFUN (\"overlay-put\", Foverlay_put, Soverlay_put, 3, 3, 0,
       doc: /* Set one property of overlay OVERLAY: give property PROP value VALUE.  */)"
                :type "int")
                nil [128083 128230])
            ("Soverlay_put" function
               (:arguments 
                  ( ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [128083 129243])
            ("last_overlay_modification_hooks" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [129753 129804])
            ("last_overlay_modification_hooks_used" variable
               (:typemodifiers ("static")
                :type "int")
                nil [129882 129930])
            ("add_overlay_mod_hooklist" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("functionlist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [130024 130632])
            ("report_overlay_modification" function
               (:arguments 
                  ( ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("after" variable (:type "int") nil nil)
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [131226 135330])
            ("call_overlay_mod_hooks" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("overlay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("after" variable (:type "int") nil nil)
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [135332 135814])
            ("evaporate_overlays" function
               (:arguments 
                  ( ("pos" variable (:type "int") nil nil))                  
                :type "void")
                nil [135910 136952])
            ("buffer_slot_type_mismatch" function
               (:arguments 
                  ( ("newval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("type" variable (:type "int") nil nil))                  
                :type "void")
                nil [137060 137426])
            ("r_alloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [148771 148831])
            ("r_re_alloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [148832 148895])
            ("r_alloc_free" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 2
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [148896 148947])
            ("alloc_buffer_text" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("nbytes" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [149031 149494])
            ("enlarge_buffer_text" function
               (:arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [149608 149625])
                    ("delta" variable (:type "int") (reparse-symbol arg-sub-list) [149626 149642]))                  
                :type "void")
                nil [149582 150135])
            ("free_buffer_text" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("b" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [150175 150486])
            ("init_buffer_once" function (:type "void") nil [150661 158921])
            ("init_buffer" function (:type "void") nil [158923 161085])
            ("DEFVAR_PER_BUFFER" variable (:constant-flag t) nil [161602 161619])
            ("defvar_per_buffer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("namestring" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("address" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("doc" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [161692 162347])
            ("syms_of_buffer" function (:type "void") nil [162387 204865])
            ("keys_of_buffer" function (:type "void") nil [204867 205192]))          
    :file "buffer.c"
    :pointmax 205279
    :fsize 205278
    :lastmodtime '(19383 49284)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 128083 . 128230) (symbol "__attribute__" 128083 . 128230) (symbol "Lisp_Subr" 128083 . 128230) (symbol "Lisp_Object" 128083 . 128230) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 127790 . 127929) (symbol "__attribute__" 127790 . 127929) (symbol "Lisp_Subr" 127790 . 127929) (symbol "Lisp_Object" 127790 . 127929) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 127375 . 127643) (symbol "__attribute__" 127375 . 127643) (symbol "Lisp_Subr" 127375 . 127643) (symbol "Lisp_Object" 127375 . 127643) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 126495 . 126957) (symbol "__attribute__" 126495 . 126957) (symbol "Lisp_Subr" 126495 . 126957) (symbol "Lisp_Object" 126495 . 126957) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 125487 . 125767) (symbol "__attribute__" 125487 . 125767) (symbol "Lisp_Subr" 125487 . 125767) (symbol "Lisp_Object" 125487 . 125767) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 124352 . 124615) (symbol "__attribute__" 124352 . 124615) (symbol "Lisp_Subr" 124352 . 124615) (symbol "Lisp_Object" 124352 . 124615) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 123322 . 123750) (symbol "__attribute__" 123322 . 123750) (symbol "Lisp_Subr" 123322 . 123750) (symbol "Lisp_Object" 123322 . 123750) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 122547 . 122690) (symbol "__attribute__" 122547 . 122690) (symbol "Lisp_Subr" 122547 . 122690) (symbol "Lisp_Object" 122547 . 122690) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 122193 . 122418) (symbol "__attribute__" 122193 . 122418) (symbol "Lisp_Subr" 122193 . 122418) (symbol "Lisp_Object" 122193 . 122418) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 121900 . 122065) (symbol "__attribute__" 121900 . 122065) (symbol "Lisp_Subr" 121900 . 122065) (symbol "Lisp_Object" 121900 . 122065) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 121651 . 121772) (symbol "__attribute__" 121651 . 121772) (symbol "Lisp_Subr" 121651 . 121772) (symbol "Lisp_Object" 121651 . 121772) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 121392 . 121521) (symbol "__attribute__" 121392 . 121521) (symbol "Lisp_Subr" 121392 . 121521) (symbol "Lisp_Object" 121392 . 121521) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 120006 . 120137) (symbol "__attribute__" 120006 . 120137) (symbol "Lisp_Subr" 120006 . 120137) (symbol "Lisp_Object" 120006 . 120137) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 116775 . 117064) (symbol "__attribute__" 116775 . 117064) (symbol "Lisp_Subr" 116775 . 117064) (symbol "Lisp_Object" 116775 . 117064) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 113099 . 113682) (symbol "__attribute__" 113099 . 113682) (symbol "Lisp_Subr" 113099 . 113682) (symbol "Lisp_Object" 113099 . 113682) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 112909 . 113012) (symbol "__attribute__" 112909 . 113012) (symbol "Lisp_Subr" 112909 . 113012) (symbol "Lisp_Object" 112909 . 113012) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 80757 . 81551) (symbol "__attribute__" 80757 . 81551) (symbol "Lisp_Subr" 80757 . 81551) (symbol "Lisp_Object" 80757 . 81551) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 72834 . 73449) (symbol "__attribute__" 72834 . 73449) (symbol "Lisp_Subr" 72834 . 73449) (symbol "Lisp_Object" 72834 . 73449) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 67808 . 67957) (symbol "__attribute__" 67808 . 67957) (symbol "Lisp_Subr" 67808 . 67957) (symbol "Lisp_Object" 67808 . 67957) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 65845 . 66092) (symbol "__attribute__" 65845 . 66092) (symbol "Lisp_Subr" 65845 . 66092) (symbol "Lisp_Object" 65845 . 66092) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 63734 . 64401) (symbol "__attribute__" 63734 . 64401) (symbol "Lisp_Subr" 63734 . 64401) (symbol "Lisp_Object" 63734 . 64401) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 63381 . 63575) (symbol "__attribute__" 63381 . 63575) (symbol "Lisp_Subr" 63381 . 63575) (symbol "Lisp_Object" 63381 . 63575) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 62384 . 62837) (symbol "__attribute__" 62384 . 62837) (symbol "Lisp_Subr" 62384 . 62837) (symbol "Lisp_Object" 62384 . 62837) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 56502 . 56633) (symbol "__attribute__" 56502 . 56633) (symbol "Lisp_Subr" 56502 . 56633) (symbol "Lisp_Object" 56502 . 56633) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 54233 . 55338) (symbol "__attribute__" 54233 . 55338) (symbol "Lisp_Subr" 54233 . 55338) (symbol "Lisp_Object" 54233 . 55338) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 52247 . 52617) (symbol "__attribute__" 52247 . 52617) (symbol "Lisp_Subr" 52247 . 52617) (symbol "Lisp_Object" 52247 . 52617) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 43978 . 44793) (symbol "__attribute__" 43978 . 44793) (symbol "Lisp_Subr" 43978 . 44793) (symbol "Lisp_Object" 43978 . 44793) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 43166 . 43392) (symbol "__attribute__" 43166 . 43392) (symbol "Lisp_Subr" 43166 . 43392) (symbol "Lisp_Object" 43166 . 43392) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 41099 . 41608) (symbol "__attribute__" 41099 . 41608) (symbol "Lisp_Subr" 41099 . 41608) (symbol "Lisp_Object" 41099 . 41608) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 39174 . 39808) (symbol "__attribute__" 39174 . 39808) (symbol "Lisp_Subr" 39174 . 39808) (symbol "Lisp_Object" 39174 . 39808) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 38302 . 38915) (symbol "__attribute__" 38302 . 38915) (symbol "Lisp_Subr" 38302 . 38915) (symbol "Lisp_Object" 38302 . 38915) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 37675 . 38050) (symbol "__attribute__" 37675 . 38050) (symbol "Lisp_Subr" 37675 . 38050) (symbol "Lisp_Object" 37675 . 38050) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 36756 . 37069) (symbol "__attribute__" 36756 . 37069) (symbol "Lisp_Subr" 36756 . 37069) (symbol "Lisp_Object" 36756 . 37069) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 34106 . 34333) (symbol "__attribute__" 34106 . 34333) (symbol "Lisp_Subr" 34106 . 34333) (symbol "Lisp_Object" 34106 . 34333) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 33591 . 33832) (symbol "__attribute__" 33591 . 33832) (symbol "Lisp_Subr" 33591 . 33832) (symbol "Lisp_Object" 33591 . 33832) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 32187 . 32654) (symbol "__attribute__" 32187 . 32654) (symbol "Lisp_Subr" 32187 . 32654) (symbol "Lisp_Object" 32187 . 32654) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 28772 . 29027) (symbol "__attribute__" 28772 . 29027) (symbol "Lisp_Subr" 28772 . 29027) (symbol "Lisp_Object" 28772 . 29027) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 28192 . 28426) (symbol "__attribute__" 28192 . 28426) (symbol "Lisp_Subr" 28192 . 28426) (symbol "Lisp_Object" 28192 . 28426) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 27808 . 28018) (symbol "__attribute__" 27808 . 28018) (symbol "Lisp_Subr" 27808 . 28018) (symbol "Lisp_Object" 27808 . 28018) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 27447 . 27642) (symbol "__attribute__" 27447 . 27642) (symbol "Lisp_Subr" 27447 . 27642) (symbol "Lisp_Object" 27447 . 27642) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 26314 . 26855) (symbol "__attribute__" 26314 . 26855) (symbol "Lisp_Subr" 26314 . 26855) (symbol "Lisp_Object" 26314 . 26855) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 16390 . 16982) (symbol "__attribute__" 16390 . 16982) (symbol "Lisp_Subr" 16390 . 16982) (symbol "Lisp_Object" 16390 . 16982) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 10483 . 11035) (symbol "__attribute__" 10483 . 11035) (symbol "Lisp_Subr" 10483 . 11035) (symbol "Lisp_Object" 10483 . 11035) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 8891 . 9190) (symbol "__attribute__" 8891 . 9190) (symbol "Lisp_Subr" 8891 . 9190) (symbol "Lisp_Object" 8891 . 9190) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 8349 . 8650) (symbol "__attribute__" 8349 . 8650) (symbol "Lisp_Subr" 8349 . 8650) (symbol "Lisp_Object" 8349 . 8650) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 6674 . 6998) (symbol "__attribute__" 6674 . 6998) (symbol "Lisp_Subr" 6674 . 6998) (symbol "Lisp_Object" 6674 . 6998) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 6335 . 6548) (symbol "__attribute__" 6335 . 6548) (symbol "Lisp_Subr" 6335 . 6548) (symbol "Lisp_Object" 6335 . 6548) (symbol "Lisp_Object" 3539 . 3561) (EXTERN "extern" 3539 . 3561) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "buffer_local_symbols" 3189 . 3209) ("type" symbol "buffer" 3181 . 3187)))) 3162 . 3210) (symbol "__attribute__" 3162 . 3210) (symbol "buffer" 3162 . 3210) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "buffer_defaults" 2057 . 2072) ("type" symbol "buffer" 2049 . 2055)))) 2030 . 2073) (symbol "__attribute__" 2030 . 2073) (symbol "buffer" 2030 . 2073))
    :lexical-table 
        '(("DEFVAR_PER_BUFFER" (spp-arg-list ("lname" "vname" "type" "doc") 161619 . 161644) . ((symbol "defvar_per_buffer" 161649 . 161666) (semantic-list "(lname, vname, type, 0)" 161667 . 161690)))
          )

    )
   (semanticdb-table "systty.h"
    :major-mode 'c-mode
    :tags 
        '( ("sgtty.h" include (:system-flag t) nil [1297 1315])
            ("sys/ptyio.h" include (:system-flag t) nil [1568 1590])
            ("unistd.h" include (:system-flag t) nil [1725 1744])
            ("HAVE_LTCHARS" variable (:constant-flag t) nil [2252 2264])
            ("HAVE_TCHARS" variable (:constant-flag t) nil [2331 2342])
            ("CDISABLE" variable (:constant-flag t) nil [2690 2698])
            ("EMACS_GET_TTY_PGRP" variable (:constant-flag t) nil [4479 4497])
            ("EMACS_SET_TTY_PGRP" variable (:constant-flag t) nil [4518 4536])
            ("EMACS_GETPGRP" variable (:constant-flag t) nil [4694 4707])
            ("emacs_tty" type
               (:members 
                  ( ("main" variable (:type ("sgttyb" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [6424 6443])
                    ("ltchars" variable (:type ("ltchars" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [6671 6694])
                    ("tchars" variable (:type ("tchars" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [6743 6764])
                    ("lmode" variable (:type "int") (reparse-symbol classsubparts) [6767 6777]))                  
                :type "struct")
                nil [6101 6843])
            ("EMACS_GET_TTY" variable (:constant-flag t) nil [7176 7189])
            ("EMACS_SET_TTY" variable (:constant-flag t) nil [7240 7253])
            ("emacs_get_tty" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("emacs_tty" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [7382 7438])
            ("emacs_set_tty" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("emacs_tty" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [7439 7500])
            ("EMACS_TTY_TABS_OK" variable (:constant-flag t) nil [7975 7992]))          
    :file "systty.h"
    :pointmax 8214
    :fsize 8213
    :lastmodtime '(19383 49282)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("EMACS_GETPGRP" (spp-arg-list ("x") 4707 . 4710) . ((symbol "getpgrp" 4711 . 4718) (semantic-list "()" 4718 . 4720)))
          ("EMACS_SET_TTY_PGRP" (spp-arg-list ("fd" "pgif") 4536 . 4546) . ((number "0" 4547 . 4548)))
          ("EMACS_TTY_TABS_OK" (spp-arg-list ("p") 7992 . 7995) . ((semantic-list "(((p)->main.sg_flags & XTABS) != XTABS)" 7996 . 8035)))
          ("HAVE_LTCHARS")
          ("HAVE_TCHARS")
          ("EMACS_GET_TTY_PGRP" (spp-arg-list ("fd" "pgid") 4497 . 4507) . ((number "0" 4508 . 4509)))
          ("EMACS_GET_TTY" (spp-arg-list ("fd" "p") 7189 . 7196) . ((semantic-list "(emacs_get_tty ((fd), (p)))" 7204 . 7231)))
          ("CDISABLE" . ((number "255" 2699 . 2702)))
          ("EMACS_SET_TTY" (spp-arg-list ("fd" "p" "waitp") 7253 . 7267) . ((semantic-list "(emacs_set_tty ((fd), (p), (waitp)))" 7268 . 7304)))
          )

    )
   (semanticdb-table "syntax.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [911 930])
            ("ctype.h" include (:system-flag t) nil [931 949])
            ("setjmp.h" include (:system-flag t) nil [950 969])
            ("lisp.h" include nil nil [970 987])
            ("commands.h" include nil nil [988 1009])
            ("buffer.h" include nil nil [1010 1029])
            ("character.h" include nil nil [1030 1052])
            ("keymap.h" include nil nil [1053 1072])
            ("regex.h" include nil nil [1073 1091])
            ("SYNTAX_ENTRY_VIA_PROPERTY" variable (:constant-flag t) nil [1157 1182])
            ("syntax.h" include nil nil [1184 1203])
            ("intervals.h" include nil nil [1204 1226])
            ("ST_COMMENT_STYLE" variable (:constant-flag t) nil [1404 1420])
            ("ST_STRING_STYLE" variable (:constant-flag t) nil [1439 1454])
            ("category.h" include nil nil [1465 1486])
            ("Qscan_error" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1488 1544])
            ("Qsyntax_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1488 1544])
            ("Qsyntax_table_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1488 1544])
            ("words_include_escapes" variable (:type "int") nil [1546 1572])
            ("parse_sexp_lookup_properties" variable (:type "int") nil [1573 1606])
            ("multibyte_syntax_as_symbol" variable (:type "int") nil [1684 1715])
            ("syntax_temp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1883 1907])
            ("open_paren_in_column_0_is_defun_start" variable (:type "int") nil [2087 2129])
            ("lisp_parse_state" type
               (:members 
                  ( ("depth" variable (:type "int") (reparse-symbol classsubparts) [2244 2254])
                    ("instring" variable (:type "int") (reparse-symbol classsubparts) [2294 2307])
                    ("incomment" variable (:type "int") (reparse-symbol classsubparts) [2370 2384])
                    ("comstyle" variable (:type "int") (reparse-symbol classsubparts) [2444 2457])
                    ("quoted" variable (:type "int") (reparse-symbol classsubparts) [2518 2529])
                    ("mindepth" variable (:type "int") (reparse-symbol classsubparts) [2598 2611])
                    ("thislevelstart" variable (:type "int") (reparse-symbol classsubparts) [2733 2758])
                    ("prevlevelstart" variable (:type "int") (reparse-symbol classsubparts) [2819 2844])
                    ("location" variable (:type "int") (reparse-symbol classsubparts) [2849 2868])
                    ("comstr_start" variable (:type "int") (reparse-symbol classsubparts) [2923 2946])
                    ("levelstarts" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3000 3024]))                  
                :type "struct")
                nil [2212 3114])
            ("find_start_pos" variable
               (:typemodifiers ("static")
                :type "int")
                nil [3549 3581])
            ("find_start_value" variable
               (:typemodifiers ("static")
                :type "int")
                nil [3582 3616])
            ("find_start_value_byte" variable
               (:typemodifiers ("static")
                :type "int")
                nil [3617 3656])
            ("find_start_buffer" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3657 3697])
            ("find_start_begv" variable
               (:typemodifiers ("static")
                :type "int")
                nil [3698 3731])
            ("find_start_modiff" variable
               (:typemodifiers ("static")
                :type "int")
                nil [3732 3761])
            ("skip_chars" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3764 3836])
            ("skip_syntaxes" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3837 3907])
            ("scan_lists" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3908 3982])
            ("scan_sexps_forward" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("lisp_parse_state" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3983 4124])
            ("in_classes" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [4125 4171])
            ("gl_state" variable (:type ("gl_state_s" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [4175 4202])
            ("interval_of" function
               (:prototype-flag t
                :type ("INTERVAL" type (:type "class") nil nil))
                nil [4243 4267])
            ("INTERVALS_AT_ONCE" variable (:constant-flag t) nil [4276 4293])
            ("update_syntax_table" function
               (:arguments 
                  ( ("init" variable (:type "int") nil nil)
                    ("count" variable (:type "int") nil nil)
                    ("charpos" variable (:type "int") nil nil)
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [5085 9429])
            ("char_quoted" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("charpos" variable (:type "int") (reparse-symbol arg-sub-list) [9655 9673])
                    ("bytepos" variable (:type "int") (reparse-symbol arg-sub-list) [9674 9692]))                  
                :type "int")
                nil [9631 10153])
            ("inc_bytepos" function
               (:arguments 
                  ( ("bytepos" variable (:type "int") nil nil))                  
                :type "int")
                nil [10277 10458])
            ("dec_bytepos" function
               (:arguments 
                  ( ("bytepos" variable (:type "int") nil nil))                  
                :type "int")
                nil [10585 10766])
            ("find_defun_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos_byte" variable (:type "int") nil nil)
                    ("pos" variable (:type "int") nil nil))                  
                :type "int")
                nil [11362 13322])
            ("prev_char_comend_first" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos_byte" variable (:type "int") nil nil)
                    ("pos" variable (:type "int") nil nil))                  
                :type "int")
                nil [13403 13678])
            ("back_comment" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("stop" variable (:type "int") nil nil)
                    ("from_byte" variable (:type "int") nil nil)
                    ("from" variable (:type "int") nil nil)
                    ("comstyle" variable (:type "int") nil nil)
                    ("comnested" variable (:type "int") nil nil)
                    ("bytepos_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("charpos_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [14589 23564])
            ("DEFUN_ARGS_" variable (:type ("Ssyntax_table_p" type (:type "class") nil nil)) nil [23567 23744])
            ("doc" variable
               (:default-value "DEFUN (\"syntax-table-p\", Fsyntax_table_p, Ssyntax_table_p, 1, 1, 0,
       doc: /* Return t if OBJECT is a syntax table.
Currently, any char-table counts as a syntax table.  */)"
                :type "int")
                nil [23567 23744])
            ("Ssyntax_table_p" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [23567 23905])
            ("check_syntax_table" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [23907 24083])
            ("DEFUN_ARGS_" variable (:type ("Ssyntax_table" type (:type "class") nil nil)) nil [24085 24248])
            ("doc" variable
               (:default-value "DEFUN (\"syntax-table\", Fsyntax_table, Ssyntax_table, 0, 0, 0,
       doc: /* Return the current syntax table.
This is the one specified by the current buffer.  */)"
                :type "int")
                nil [24085 24248])
            ("Ssyntax_table" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [24085 24299])
            ("DEFUN_ARGS_" variable (:type ("Sstandard_syntax_table" type (:type "class") nil nil)) nil [24301 24484])
            ("doc" variable
               (:default-value "DEFUN (\"standard-syntax-table\", Fstandard_syntax_table,
   Sstandard_syntax_table, 0, 0, 0,
       doc: /* Return the standard syntax table.
This is the one used for new buffers.  */)"
                :type "int")
                nil [24301 24484])
            ("Sstandard_syntax_table" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [24301 24529])
            ("DEFUN_ARGS_" variable (:type ("Scopy_syntax_table" type (:type "class") nil nil)) nil [24531 24743])
            ("doc" variable
               (:default-value "DEFUN (\"copy-syntax-table\", Fcopy_syntax_table, Scopy_syntax_table, 0, 1, 0,
       doc: /* Construct a new syntax table and return it.
It is a copy of the TABLE, which defaults to the standard syntax table.  */)"
                :type "int")
                nil [24531 24743])
            ("Scopy_syntax_table" function
               (:arguments 
                  ( ("table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [24531 25407])
            ("DEFUN_ARGS_" variable (:type ("Sset_syntax_table" type (:type "class") nil nil)) nil [25409 25582])
            ("doc" variable
               (:default-value "DEFUN (\"set-syntax-table\", Fset_syntax_table, Sset_syntax_table, 1, 1, 0,
       doc: /* Select a new syntax table for the current buffer.
One argument, a syntax table.  */)"
                :type "int")
                nil [25409 25582])
            ("Sset_syntax_table" function
               (:arguments 
                  ( ("table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [25409 25883])
            ("syntax_spec_code" variable
               (:dereference 1
                :default-value "{ 0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,
    0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,
    0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,
    0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,
    (char) Swhitespace, (char) Scomment_fence, (char) Sstring, 0377,
        (char) Smath, 0377, 0377, (char) Squote,
    (char) Sopen, (char) Sclose, 0377, 0377,
	0377, (char) Swhitespace, (char) Spunct, (char) Scharquote,
    0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,
    0377, 0377, 0377, 0377,
	(char) Scomment, 0377, (char) Sendcomment, 0377,
    (char) Sinherit, 0377, 0377, 0377, 0377, 0377, 0377, 0377,   /* @, A ... */
    0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,
    0377, 0377, 0377, 0377, 0377, 0377, 0377, (char) Sword,
    0377, 0377, 0377, 0377, (char) Sescape, 0377, 0377, (char) Ssymbol,
    0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,   /* `, a, ... */
    0377, 0377, 0377, 0377, 0377, 0377, 0377, 0377,
    0377, 0377, 0377, 0377, 0377, 0377, 0377, (char) Sword,
    0377, 0377, 0377, 0377, (char) Sstring_fence, 0377, 0377, 0377
  }"
                :type "unsigned char")
                nil [26026 27144])
            ("syntax_code_spec" variable
               (:dereference 1
                :default-value "{
    ' ', '.', 'w', '_', '(', ')', '\\'', '\\\"', '$', '\\\\', '/', '<', '>', '@',
    '!', '|'
  }"
                :type "char")
                nil [27213 27339])
            ("Vsyntax_code_object" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27630 27669])
            ("DEFUN_ARGS_" variable (:type ("Schar_syntax" type (:type "class") nil nil)) nil [27673 28013])
            ("doc" variable
               (:default-value "DEFUN (\"char-syntax\", Fchar_syntax, Schar_syntax, 1, 1, 0,
       doc: /* Return the syntax code of CHARACTER, described by a character.
For example, if CHARACTER is a word constituent, the
character `w' (119) is returned.
The characters that correspond to various syntax codes
are listed in the documentation of `modify-syntax-entry'.  */)"
                :type "int")
                nil [27673 28013])
            ("Schar_syntax" function
               (:arguments 
                  ( ("character" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27673 28295])
            ("DEFUN_ARGS_" variable (:type ("Smatching_paren" type (:type "class") nil nil)) nil [28297 28446])
            ("doc" variable
               (:default-value "DEFUN (\"matching-paren\", Fmatching_paren, Smatching_paren, 1, 1, 0,
       doc: /* Return the matching parenthesis of CHARACTER, or nil if none.  */)"
                :type "int")
                nil [28297 28446])
            ("Smatching_paren" function
               (:arguments 
                  ( ("character" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28297 28785])
            ("DEFUN_ARGS_" variable (:type ("Sstring_to_syntax" type (:type "class") nil nil)) nil [28787 29142])
            ("doc" variable
               (:default-value "DEFUN (\"string-to-syntax\", Fstring_to_syntax, Sstring_to_syntax, 1, 1, 0,
       doc: /* Convert a syntax specification STRING into syntax cell form.
STRING should be a string as it is allowed as argument of
`modify-syntax-entry'.  Value is the equivalent cons cell
\\(CODE . MATCHING-CHAR) that can be used as value of a `syntax-table'
text property.  */)"
                :type "int")
                nil [28787 29142])
            ("Sstring_to_syntax" function
               (:arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28787 30345])
            ("DEFUN_ARGS_" variable (:type ("Smodify_syntax_entry" type (:type "class") nil nil)) nil [30473 32678])
            ("doc" variable
               (:default-value "DEFUN (\"modify-syntax-entry\", Fmodify_syntax_entry, Smodify_syntax_entry, 2, 3,
  \"cSet syntax for character: \\nsSet syntax for %s to: \",
       doc: /* Set syntax for character CHAR according to string NEWENTRY.
The syntax is changed only for table SYNTAX-TABLE, which defaults to
 the current buffer's syntax table.
CHAR may be a cons (MIN . MAX), in which case, syntaxes of all characters
in the range MIN to MAX are changed.
The first character of NEWENTRY should be one of the following:
  Space or -  whitespace syntax.    w   word constituent.
  _           symbol constituent.   .   punctuation.
  (           open-parenthesis.     )   close-parenthesis.
  \"           string quote.         \\\\   escape.
  $           paired delimiter.     '   expression quote or prefix operator.
  <           comment starter.      >   comment ender.
  /           character-quote.      @   inherit from `standard-syntax-table'.
  |           generic string fence. !   generic comment fence.

Only single-character comment start and end sequences are represented thus.
Two-character sequences are represented as described below.
The second character of NEWENTRY is the matching parenthesis,
 used only if the first character is `(' or `)'.
Any additional characters are flags.
Defined flags are the characters 1, 2, 3, 4, b, p, and n.
 1 means CHAR is the start of a two-char comment start sequence.
 2 means CHAR is the second character of such a sequence.
 3 means CHAR is the start of a two-char comment end sequence.
 4 means CHAR is the second character of such a sequence.

There can be up to two orthogonal comment sequences.  This is to support
language modes such as C++.  By default, all comment sequences are of style
a, but you can set the comment sequence style to b (on the second character
of a comment-start, or the first character of a comment-end sequence) using
this flag:
 b means CHAR is part of comment sequence b.
 n means CHAR is part of a nestable comment sequence.

 p means CHAR is a prefix character for `backward-prefix-chars';
   such characters are treated as whitespace when they occur
   between expressions.
usage: (modify-syntax-entry CHAR NEWENTRY &optional SYNTAX-TABLE)  */)"
                :type "int")
                nil [30473 32678])
            ("Smodify_syntax_entry" function
               (:arguments 
                  ( ("syntax_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("newentry" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("c" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30473 33365])
            ("DEFUN_ARGS_" variable (:type ("Sinternal_describe_syntax_value" type (:type "class") nil nil)) nil [33428 33643])
            ("doc" variable
               (:default-value "DEFUN (\"internal-describe-syntax-value\", Finternal_describe_syntax_value,
       Sinternal_describe_syntax_value, 1, 1, 0,
       doc: /* Insert a description of the internal syntax description SYNTAX at point.  */)"
                :type "int")
                nil [33428 33643])
            ("Sinternal_describe_syntax_value" function
               (:arguments 
                  ( ("syntax" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [33428 37008])
            ("parse_sexp_ignore_comments" variable (:type "int") nil [37011 37042])
            ("Vfind_word_boundary_function_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [37124 37171])
            ("scan_words" function
               (:arguments 
                  ( ("count" variable (:type "int") nil nil)
                    ("from" variable (:type "int") nil nil))                  
                :type "int")
                nil [37375 40331])
            ("DEFUN_ARGS_" variable (:type ("Sforward_word" type (:type "class") nil nil)) nil [40333 40681])
            ("doc" variable
               (:default-value "DEFUN (\"forward-word\", Fforward_word, Sforward_word, 0, 1, \"^p\",
       doc: /* Move point forward ARG words (backward if ARG is negative).
Normally returns t.
If an edge of the buffer or a field boundary is reached, point is left there
and the function returns nil.  Field boundaries are not noticed if
`inhibit-field-text-motion' is non-nil.  */)"
                :type "int")
                nil [40333 40681])
            ("Sforward_word" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [40333 41156])
            ("skip_chars" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [41159 41185])
            ("DEFUN_ARGS_" variable (:type ("Sskip_chars_forward" type (:type "class") nil nil)) nil [41187 41801])
            ("doc" variable
               (:default-value "DEFUN (\"skip-chars-forward\", Fskip_chars_forward, Sskip_chars_forward, 1, 2, 0,
       doc: /* Move point forward, stopping before a char not in STRING, or at pos LIM.
STRING is like the inside of a `[...]' in a regular expression
except that `]' is never special and `\\\\' quotes `^', `-' or `\\\\'
 (but not at the end of a range; quoting is never needed there).
Thus, with arg \"a-zA-Z\", this skips letters stopping before first nonletter.
With arg \"^a-zA-Z\", skips nonletters stopping before first letter.
Char classes, e.g. `[:alpha:]', are supported.

Returns the distance traveled, either zero or positive.  */)"
                :type "int")
                nil [41187 41801])
            ("Sskip_chars_forward" function
               (:arguments 
                  ( ("lim" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [41187 41895])
            ("DEFUN_ARGS_" variable (:type ("Sskip_chars_backward" type (:type "class") nil nil)) nil [41897 42166])
            ("doc" variable
               (:default-value "DEFUN (\"skip-chars-backward\", Fskip_chars_backward, Sskip_chars_backward, 1, 2, 0,
       doc: /* Move point backward, stopping after a char not in STRING, or at pos LIM.
See `skip-chars-forward' for details.
Returns the distance traveled, either zero or negative.  */)"
                :type "int")
                nil [41897 42166])
            ("Sskip_chars_backward" function
               (:arguments 
                  ( ("lim" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [41897 42260])
            ("DEFUN_ARGS_" variable (:type ("Sskip_syntax_forward" type (:type "class") nil nil)) nil [42262 42683])
            ("doc" variable
               (:default-value "DEFUN (\"skip-syntax-forward\", Fskip_syntax_forward, Sskip_syntax_forward, 1, 2, 0,
       doc: /* Move point forward across chars in specified syntax classes.
SYNTAX is a string of syntax code characters.
Stop before a char whose syntax is not in SYNTAX, or at position LIM.
If SYNTAX starts with ^, skip characters whose syntax is NOT in SYNTAX.
This function returns the distance traveled, either zero or positive.  */)"
                :type "int")
                nil [42262 42683])
            ("Sskip_syntax_forward" function
               (:arguments 
                  ( ("lim" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("syntax" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42262 42777])
            ("DEFUN_ARGS_" variable (:type ("Sskip_syntax_backward" type (:type "class") nil nil)) nil [42779 43209])
            ("doc" variable
               (:default-value "DEFUN (\"skip-syntax-backward\", Fskip_syntax_backward, Sskip_syntax_backward, 1, 2, 0,
       doc: /* Move point backward across chars in specified syntax classes.
SYNTAX is a string of syntax code characters.
Stop on reaching a char whose syntax is not in SYNTAX, or at position LIM.
If SYNTAX starts with ^, skip characters whose syntax is NOT in SYNTAX.
This function returns the distance traveled, either zero or negative.  */)"
                :type "int")
                nil [42779 43209])
            ("Sskip_syntax_backward" function
               (:arguments 
                  ( ("lim" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("syntax" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42779 43303])
            ("skip_chars" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("forwardp" variable (:type "int") nil nil)
                    ("lim" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("handle_iso_classes" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43305 54992])
            ("skip_syntaxes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("forwardp" variable (:type "int") nil nil)
                    ("lim" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [54995 58438])
            ("in_classes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type "int") nil nil)
                    ("iso_classes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [58620 58947])
            ("forw_comment" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("stop" variable (:type "int") nil nil)
                    ("from_byte" variable (:type "int") nil nil)
                    ("from" variable (:type "int") nil nil)
                    ("prev_syntax" variable (:type "int") nil nil)
                    ("style" variable (:type "int") nil nil)
                    ("nesting" variable (:type "int") nil nil)
                    ("bytepos_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("charpos_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("incomment_ptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [60157 63032])
            ("DEFUN_ARGS_" variable (:type ("Sforward_comment" type (:type "class") nil nil)) nil [63034 63428])
            ("doc" variable
               (:default-value "DEFUN (\"forward-comment\", Fforward_comment, Sforward_comment, 1, 1, 0,
       doc: /*
Move forward across up to COUNT comments.  If COUNT is negative, move backward.
Stop scanning if we find something other than a comment or whitespace.
Set point to where scanning stops.
If COUNT comments are found as expected, with nothing except whitespace
between them, return t; otherwise return nil.  */)"
                :type "int")
                nil [63034 63428])
            ("Sforward_comment" function
               (:arguments 
                  ( ("count" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [63034 68618])
            ("SYNTAX_WITH_MULTIBYTE_CHECK" variable (:constant-flag t) nil [68762 68789])
            ("scan_lists" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("from" variable (:type "int") nil nil)
                    ("depth" variable (:type "int") nil nil)
                    ("count" variable (:type "int") nil nil)
                    ("sexpflag" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [68871 79221])
            ("DEFUN_ARGS_" variable (:type ("Sscan_lists" type (:type "class") nil nil)) nil [79223 79896])
            ("doc" variable
               (:default-value "DEFUN (\"scan-lists\", Fscan_lists, Sscan_lists, 3, 3, 0,
       doc: /* Scan from character number FROM by COUNT lists.
Returns the character number of the position thus found.

If DEPTH is nonzero, paren depth begins counting from that value,
only places where the depth in parentheses becomes zero
are candidates for stopping; COUNT such places are counted.
Thus, a positive value for DEPTH means go out levels.

Comments are ignored if `parse-sexp-ignore-comments' is non-nil.

If the beginning or end of (the accessible part of) the buffer is reached
and the depth is wrong, an error is signaled.
If the depth is right but the count is not used up, nil is returned.  */)"
                :type "int")
                nil [79223 79896])
            ("Sscan_lists" function
               (:arguments 
                  ( ("depth" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("count" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("from" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79223 80101])
            ("DEFUN_ARGS_" variable (:type ("Sscan_sexps" type (:type "class") nil nil)) nil [80103 80641])
            ("doc" variable
               (:default-value "DEFUN (\"scan-sexps\", Fscan_sexps, Sscan_sexps, 2, 2, 0,
       doc: /* Scan from character number FROM by COUNT balanced expressions.
If COUNT is negative, scan backwards.
Returns the character number of the position thus found.

Comments are ignored if `parse-sexp-ignore-comments' is non-nil.

If the beginning or end of (the accessible part of) the buffer is reached
in the middle of a parenthetical grouping, an error is signaled.
If the beginning or end is reached between groupings
but before count is used up, nil is returned.  */)"
                :type "int")
                nil [80103 80641])
            ("Sscan_sexps" function
               (:arguments 
                  ( ("count" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("from" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80103 80797])
            ("DEFUN_ARGS_" variable (:type ("Sbackward_prefix_chars" type (:type "class") nil nil)) nil [80799 81041])
            ("doc" variable
               (:default-value "DEFUN (\"backward-prefix-chars\", Fbackward_prefix_chars, Sbackward_prefix_chars,
       0, 0, 0,
       doc: /* Move point backward over any number of chars with prefix syntax.
This includes chars with \"quote\" or \"prefix\" syntax (' or p).  */)"
                :type "int")
                nil [80799 81041])
            ("Sbackward_prefix_chars" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [80799 81680])
            ("scan_sexps_forward" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("stateptr" variable
                       (:pointer 1
                        :type ("lisp_parse_state" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("from" variable (:type "int") nil nil)
                    ("end" variable (:type "int") nil nil)
                    ("from_byte" variable (:type "int") nil nil)
                    ("stopbefore" variable (:type "int") nil nil)
                    ("targetdepth" variable (:type "int") nil nil)
                    ("oldstate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("commentstop" variable (:type "int") nil nil))                  
                :type "void")
                nil [82122 91907])
            ("DEFUN_ARGS_" variable (:type ("Sparse_partial_sexp" type (:type "class") nil nil)) nil [91909 93691])
            ("doc" variable
               (:default-value "DEFUN (\"parse-partial-sexp\", Fparse_partial_sexp, Sparse_partial_sexp, 2, 6, 0,
       doc: /* Parse Lisp syntax starting at FROM until TO; return status of parse at TO.
Parsing stops at TO or when certain criteria are met;
 point is set to where parsing stops.
If fifth arg OLDSTATE is omitted or nil,
 parsing assumes that FROM is the beginning of a function.
Value is a list of elements describing final state of parsing:
 0. depth in parens.
 1. character address of start of innermost containing list; nil if none.
 2. character address of start of last complete sexp terminated.
 3. non-nil if inside a string.
    (it is the character that will terminate the string,
     or t if the string should be terminated by a generic string delimiter.)
 4. nil if outside a comment, t if inside a non-nestable comment,
    else an integer (the current comment nesting).
 5. t if following a quote character.
 6. the minimum paren-depth encountered during this scan.
 7. t if in a comment of style b; symbol `syntax-table' if the comment
    should be terminated by a generic comment delimiter.
 8. character address of start of comment or string; nil if not in one.
 9. Intermediate data for continuation of parsing (subject to change).
If third arg TARGETDEPTH is non-nil, parsing stops if the depth
in parentheses becomes equal to TARGETDEPTH.
Fourth arg STOPBEFORE non-nil means stop when come to
 any character that starts a sexp.
Fifth arg OLDSTATE is a list like what this function returns.
 It is used to initialize the state of the parse.  Elements number 1, 2, 6
 and 8 are ignored.
Sixth arg COMMENTSTOP non-nil means stop at the start of a comment.
 If it is symbol `syntax-table', stop after the start of a comment or a
 string, or after end of a comment or a string.  */)"
                :type "int")
                nil [91909 93691])
            ("Sparse_partial_sexp" function
               (:arguments 
                  ( ("commentstop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("oldstate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("stopbefore" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("targetdepth" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("to" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("from" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [91909 95177])
            ("init_syntax_once" function (:type "void") nil [95180 98790])
            ("syms_of_syntax" function (:type "void") nil [98792 101894]))          
    :file "syntax.c"
    :pointmax 101981
    :fsize 101980
    :lastmodtime '(19383 49278)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 91909 . 93691) (symbol "__attribute__" 91909 . 93691) (symbol "Lisp_Subr" 91909 . 93691) (symbol "Lisp_Object" 91909 . 93691) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 80799 . 81041) (symbol "__attribute__" 80799 . 81041) (symbol "Lisp_Subr" 80799 . 81041) (symbol "Lisp_Object" 80799 . 81041) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 80103 . 80641) (symbol "__attribute__" 80103 . 80641) (symbol "Lisp_Subr" 80103 . 80641) (symbol "Lisp_Object" 80103 . 80641) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 79223 . 79896) (symbol "__attribute__" 79223 . 79896) (symbol "Lisp_Subr" 79223 . 79896) (symbol "Lisp_Object" 79223 . 79896) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 63034 . 63428) (symbol "__attribute__" 63034 . 63428) (symbol "Lisp_Subr" 63034 . 63428) (symbol "Lisp_Object" 63034 . 63428) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 42779 . 43209) (symbol "__attribute__" 42779 . 43209) (symbol "Lisp_Subr" 42779 . 43209) (symbol "Lisp_Object" 42779 . 43209) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 42262 . 42683) (symbol "__attribute__" 42262 . 42683) (symbol "Lisp_Subr" 42262 . 42683) (symbol "Lisp_Object" 42262 . 42683) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 41897 . 42166) (symbol "__attribute__" 41897 . 42166) (symbol "Lisp_Subr" 41897 . 42166) (symbol "Lisp_Object" 41897 . 42166) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 41187 . 41801) (symbol "__attribute__" 41187 . 41801) (symbol "Lisp_Subr" 41187 . 41801) (symbol "Lisp_Object" 41187 . 41801) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 40333 . 40681) (symbol "__attribute__" 40333 . 40681) (symbol "Lisp_Subr" 40333 . 40681) (symbol "Lisp_Object" 40333 . 40681) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 33428 . 33643) (symbol "__attribute__" 33428 . 33643) (symbol "Lisp_Subr" 33428 . 33643) (symbol "Lisp_Object" 33428 . 33643) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 30473 . 32678) (symbol "__attribute__" 30473 . 32678) (symbol "Lisp_Subr" 30473 . 32678) (symbol "Lisp_Object" 30473 . 32678) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 28787 . 29142) (symbol "__attribute__" 28787 . 29142) (symbol "Lisp_Subr" 28787 . 29142) (symbol "Lisp_Object" 28787 . 29142) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 28297 . 28446) (symbol "__attribute__" 28297 . 28446) (symbol "Lisp_Subr" 28297 . 28446) (symbol "Lisp_Object" 28297 . 28446) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 27673 . 28013) (symbol "__attribute__" 27673 . 28013) (symbol "Lisp_Subr" 27673 . 28013) (symbol "Lisp_Object" 27673 . 28013) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 25409 . 25582) (symbol "__attribute__" 25409 . 25582) (symbol "Lisp_Subr" 25409 . 25582) (symbol "Lisp_Object" 25409 . 25582) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 24531 . 24743) (symbol "__attribute__" 24531 . 24743) (symbol "Lisp_Subr" 24531 . 24743) (symbol "Lisp_Object" 24531 . 24743) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 24301 . 24484) (symbol "__attribute__" 24301 . 24484) (symbol "Lisp_Subr" 24301 . 24484) (symbol "Lisp_Object" 24301 . 24484) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 24085 . 24248) (symbol "__attribute__" 24085 . 24248) (symbol "Lisp_Subr" 24085 . 24248) (symbol "Lisp_Object" 24085 . 24248) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 23567 . 23744) (symbol "__attribute__" 23567 . 23744) (symbol "Lisp_Subr" 23567 . 23744) (symbol "Lisp_Object" 23567 . 23744) (symbol "__inline__" 10578 . 10584) (symbol "__inline__" 10270 . 10276) (punctuation 4367 . 4368) (punctuation 4366 . 4367) (punctuation 4363 . 4364) (symbol 4357 . 4363) (punctuation 4356 . 4357) (symbol 4348 . 4356) (symbol 4345 . 4347) (symbol 4340 . 4344) (symbol 4337 . 4339))
    :lexical-table 
        '(("ST_COMMENT_STYLE" . ((semantic-list "(256 + 1)" 1421 . 1430)))
          ("SYNTAX_ENTRY_VIA_PROPERTY")
          ("INTERVALS_AT_ONCE" . ((number "10" 4294 . 4296)))
          ("ST_STRING_STYLE" . ((semantic-list "(256 + 2)" 1455 . 1464)))
          ("SYNTAX_WITH_MULTIBYTE_CHECK" (spp-arg-list ("c") 68789 . 68792) . ((semantic-list "((ASCII_CHAR_P (c) || !multibyte_symbol_p)	\\
   ? SYNTAX (c) : Ssymbol)" 68798 . 68869)))
          )

    )
   (semanticdb-table "getloadavg.c"
    :major-mode 'c-mode
    :tags 
        '( ("sys/types.h" include (:system-flag t) nil [3455 3477])
            ("sys/param.h" include (:system-flag t) nil [3701 3724])
            ("errno.h" include (:system-flag t) nil [3965 3983])
            ("errno" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [3999 4016])
            ("locale.h" include (:system-flag t) nil [4046 4066]))          
    :file "getloadavg.c"
    :pointmax 26814
    :fsize 26813
    :lastmodtime '(19352 21354)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "nsterm.h"
    :major-mode 'c-mode
    :tags 
        '( ("dispextern.h" include nil nil [800 823])
            ("frame.h" include nil nil [824 842])
            ("character.h" include nil nil [843 865])
            ("font.h" include nil nil [866 883]))          
    :file "nsterm.h"
    :pointmax 24963
    :fsize 24962
    :lastmodtime '(19383 49276)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "termcap.c"
    :major-mode 'c-mode
    :tags 
        '( ("stdlib.h" include (:system-flag t) nil [1298 1317])
            ("string.h" include (:system-flag t) nil [1318 1337])
            ("bcopy" variable (:constant-flag t) nil [1554 1559])
            ("unistd.h" include (:system-flag t) nil [1621 1640])
            ("fcntl.h" include (:system-flag t) nil [1668 1686])
            ("NULL" variable (:constant-flag t) nil [1740 1744])
            ("O_RDONLY" variable (:constant-flag t) nil [1789 1797])
            ("BUFSIZE" variable (:constant-flag t) nil [2137 2144])
            ("TERMCAP_FILE" variable (:constant-flag t) nil [2194 2206])
            ("memory_out" function
               (:typemodifiers ("static")
                :type "void")
                nil [2244 2332])
            ("xmalloc" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("size" variable (:type "unsigned int") nil nil))                  
                :type "char")
                nil [2334 2470])
            ("xrealloc" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("size" variable (:type "unsigned int") nil nil))                  
                :type "char")
                nil [2472 2636])
            ("term_entry" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [2828 2852])
            ("tgetst1" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [2854 2878])
            ("find_capability" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("cap" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("bp" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [2999 3190])
            ("tgetnum" function
               (:arguments 
                  ( ("cap" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [3192 3353])
            ("tgetflag" function
               (:arguments 
                  ( ("cap" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [3355 3483])
            ("tgetstr" function
               (:pointer 1
                :arguments 
                  ( ("cap" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("area" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [3725 3944])
            ("esctab" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "\" \\007\\010  \\033\\014 \\
      \\012 \\
  \\015 \\011 \\013 \\
        \""
                :type "char")
                nil [4519 4615])
            ("tgetst1" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("area" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [4908 7614])
            ("ospeed" variable (:type "short") nil [7673 7686])
            ("tputs_baud_rate" variable (:type "int") nil [7747 7767])
            ("PC" variable (:type "char") nil [7776 7784])
            ("speeds" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
    0, 50, 75, 110, 135, 150, -2, -3, -6, -12,
    -18, -24, -48, -96, -192, -288, -384, -576, -1152
  }"
                :type "int")
                nil [7872 8009])
            ("str" variable
               (:pointer 1
                :typemodifiers ("register")
                :type "char")
                nil [8073 8092])
            ("nlines" variable (:type "int") nil [8098 8109])
            ("outfun" variable
               (:functionpointer-flag t
                :type "int")
                nil [8115 8141])
            ("termcap_buffer" type
               (:members 
                  ( ("beg" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [9335 9345])
                    ("size" variable (:type "int") (reparse-symbol classsubparts) [9350 9359])
                    ("ptr" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [9364 9374])
                    ("ateof" variable (:type "int") (reparse-symbol classsubparts) [9379 9389])
                    ("full" variable (:type "int") (reparse-symbol classsubparts) [9394 9403]))                  
                :type "struct")
                nil [9305 9408])
            ("scan_file" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "int")
                nil [9460 9484])
            ("gobble_line" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [9485 9513])
            ("compare_contin" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "int")
                nil [9514 9543])
            ("name_match" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "int")
                nil [9544 9569])
            ("valid_filename_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fn" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [9603 9691])
            ("tgetent" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("bp" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [10145 14184])
            ("scan_file" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("fd" variable (:type "int") nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("termcap_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [14432 15121])
            ("name_match" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("line" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [15210 15551])
            ("compare_contin" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("str2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("str1" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [15553 16050])
            ("gobble_line" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("fd" variable (:type "int") nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("termcap_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("append_end" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [16652 17743]))          
    :file "termcap.c"
    :pointmax 18609
    :fsize 18608
    :lastmodtime '(19383 49282)
    :unmatched-syntax '((semantic-list 8142 . 9242) (semantic-list 8046 . 8067) (symbol 8040 . 8045) (VOID 8035 . 8039))
    :lexical-table 
        '(("NULL" . ((semantic-list "(char *)" 1745 . 1753) (number "0" 1754 . 1755)))
          ("bcopy" (spp-arg-list ("s" "d" "n") 1559 . 1568) . ((symbol "memcpy" 1569 . 1575) (semantic-list "((d), (s), (n))" 1576 . 1591)))
          ("TERMCAP_FILE" . ((string "\"/etc/termcap\"" 2207 . 2221)))
          ("BUFSIZE" . ((number "2048" 2145 . 2149)))
          ("O_RDONLY" . ((number "0" 1798 . 1799)))
          )

    )
   (semanticdb-table "gmalloc.c"
    :major-mode 'c-mode
    :tags 
        '( ("_MALLOC_INTERNAL" variable (:constant-flag t) nil [75 91])
            ("_MALLOC_H" variable (:constant-flag t) nil [1260 1269])
            ("USE_PTHREAD" variable (:constant-flag t) nil [1383 1394])
            ("PP" variable (:constant-flag t) nil [1579 1581])
            ("__ptr_t" variable (:constant-flag t) nil [1616 1623])
            ("string.h" include (:system-flag t) nil [1823 1842])
            ("limits.h" include (:system-flag t) nil [2013 2032])
            ("CHAR_BIT" variable (:constant-flag t) nil [2065 2073])
            ("unistd.h" include (:system-flag t) nil [2105 2124])
            ("pthread.h" include (:system-flag t) nil [2152 2172])
            ("stddef.h" include (:system-flag t) nil [2275 2294])
            ("__malloc_size_t" variable (:constant-flag t) nil [2303 2318])
            ("__malloc_ptrdiff_t" variable (:constant-flag t) nil [2335 2353])
            ("NULL" variable (:constant-flag t) nil [2609 2613])
            ("malloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2663 2715])
            ("realloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2819 2887])
            ("calloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__nmemb" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2961 3038])
            ("free" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3105 3143])
            ("memalign" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__alignment" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3282 3373])
            ("posix_memalign" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [3374 3466])
            ("valloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3593 3645])
            ("malloc_enable_thread" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [3729 3774])
            ("INT_BIT" variable (:constant-flag t) nil [4154 4161])
            ("BLOCKLOG" variable (:constant-flag t) nil [4196 4204])
            ("BLOCKSIZE" variable (:constant-flag t) nil [4237 4246])
            ("BLOCKIFY" variable (:constant-flag t) nil [4271 4279])
            ("HEAP" variable (:constant-flag t) nil [4434 4438])
            ("FINAL_FREE_BLOCKS" variable (:constant-flag t) nil [4610 4627])
            ("malloc_info" type
               (:typedef ("" type
                     (:members 
                        ( ("busy" variable (:type ("" type
                               (:members 
                                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [4888 4897])
                                    ("info" variable (:type ("" type
                                         (:members 
                                            ( ("frag" variable (:type ("" type
                                                   (:members 
                                                      ( ("nfree" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4933 4955])
                                                        ("first" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4999 5021]))                                                      
                                                    :type "struct")
                                                    nil nil)) (reparse-symbol classsubparts) [4915 5077])
                                              ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5289 5313]))                                            
                                          :type "union")
                                          nil nil)) (reparse-symbol classsubparts) [4899 5324]))                                  
                                :type "struct")
                                nil nil)) (reparse-symbol classsubparts) [4751 5338])
                          ("free" variable (:type ("" type
                               (:members 
                                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5454 5475])
                                    ("next" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5520 5541])
                                    ("prev" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5578 5599]))                                  
                                :type "struct")
                                nil nil)) (reparse-symbol classsubparts) [5438 5652]))                        
                      :type "union")
                      nil nil)
                :type "typedef")
                nil [4683 5669])
            ("_heapbase" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [5714 5737])
            ("_heapinfo" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("malloc_info" type (:type "class") nil nil))
                nil [5806 5836])
            ("BLOCK" variable (:constant-flag t) nil [5893 5898])
            ("ADDRESS" variable (:constant-flag t) nil [5955 5962])
            ("_heapindex" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [6063 6097])
            ("_heaplimit" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [6141 6175])
            ("list" type
               (:members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [6243 6261])
                    ("prev" variable
                       (:pointer 1
                        :type ("list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [6266 6284]))                  
                :type "struct")
                nil [6223 6289])
            ("_fraghead" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type ("list" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [6340 6371])
            ("alignlist" type
               (:members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("alignlist" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [6461 6484])
                    ("aligned" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [6489 6505])
                    ("exact" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [6556 6570]))                  
                :type "struct")
                nil [6436 6617])
            ("_aligned_blocks" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("alignlist" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [6618 6659])
            ("_chunks_used" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [6685 6721])
            ("_bytes_used" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [6722 6757])
            ("_chunks_free" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [6758 6794])
            ("_bytes_free" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [6795 6830])
            ("_malloc_internal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [6993 7055])
            ("_realloc_internal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7056 7134])
            ("_free_internal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7135 7183])
            ("_malloc_internal_nolock" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7184 7253])
            ("_realloc_internal_nolock" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7254 7339])
            ("_free_internal_nolock" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7340 7395])
            ("_aligned_blocks_mutex" variable
               (:typemodifiers ("extern")
                :type ("pthread_mutex_t" type (:type "class") nil nil))
                nil [7416 7476])
            ("_malloc_mutex" variable
               (:typemodifiers ("extern")
                :type ("pthread_mutex_t" type (:type "class") nil nil))
                nil [7416 7476])
            ("_malloc_thread_enabled_p" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [7477 7513])
            ("LOCK" variable (:constant-flag t) nil [7522 7526])
            ("UNLOCK" variable (:constant-flag t) nil [7653 7659])
            ("LOCK_ALIGNED_BLOCKS" variable (:constant-flag t) nil [7787 7806])
            ("UNLOCK_ALIGNED_BLOCKS" variable (:constant-flag t) nil [7942 7963])
            ("malloc_find_object_address" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8348 8411])
            ("__morecore" variable
               (:functionpointer-flag t
                :type "void")
                nil [8515 8577])
            ("__default_morecore" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8617 8684])
            ("__after_morecore_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [8799 8848])
            ("__malloc_extra_blocks" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [8977 9022])
            ("__malloc_initialized" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9096 9128])
            ("__malloc_initialize" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [9190 9233])
            ("__malloc_initialize_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [9272 9324])
            ("__free_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [9325 9373])
            ("__malloc_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [9374 9436])
            ("__realloc_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [9437 9515])
            ("__memalign_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [9516 9620])
            ("mcheck_status" type
               (:members 
                  ( ("MCHECK_DISABLED" variable
                       (:constant-flag t
                        :default-value (9780 9782)
                        :type "int")
                        (reparse-symbol enumsubparts) [9762 9782])
                    ("MCHECK_OK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9834 9844])
                    ("MCHECK_FREE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9873 9885])
                    ("MCHECK_HEAD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9917 9929])
                    ("MCHECK_TAIL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9981 10043]))                  
                :type "enum")
                nil [9735 10044])
            ("mcheck" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [10344 10415])
            ("mprobe" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("mcheck_status" type (:type "enum") nil nil))
                nil [10607 10661])
            ("mtrace" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10719 10750])
            ("muntrace" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10751 10784])
            ("mstats" type
               (:members 
                  ( ("bytes_total" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10849 10877])
                    ("chunks_used" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10912 10940])
                    ("bytes_used" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10981 11008])
                    ("chunks_free" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11056 11084])
                    ("bytes_free" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11120 11147]))                  
                :type "struct")
                nil [10827 11197])
            ("mstats" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("mstats" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [11237 11277])
            ("memory_warnings" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__start" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11349 11444])
            ("r_alloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__handleptr" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11542 11617])
            ("r_alloc_free" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__handleptr" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11667 11720])
            ("r_re_alloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("__handleptr" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("__size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11782 11860])
            ("errno.h" include (:system-flag t) nil [12981 12999])
            ("__default_morecore" variable (:type "int") nil [13204 13223])
            ("__malloc_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [13261 13316])
            ("_heapbase" variable
               (:pointer 1
                :type "char")
                nil [13365 13381])
            ("_heapinfo" variable
               (:pointer 1
                :type ("malloc_info" type (:type "class") nil nil))
                nil [13463 13486])
            ("heapsize" variable
               (:typemodifiers ("static")
                :type ("size_t" type (:type "class") nil nil))
                nil [13519 13551])
            ("_heapindex" variable (:type ("size_t" type (:type "class") nil nil)) nil [13592 13619])
            ("_heaplimit" variable (:type ("size_t" type (:type "class") nil nil)) nil [13663 13690])
            ("_fraghead" variable
               (:dereference 1
                :type ("list" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [13734 13766])
            ("_chunks_used" variable (:type ("size_t" type (:type "class") nil nil)) nil [13792 13821])
            ("_bytes_used" variable (:type ("size_t" type (:type "class") nil nil)) nil [13822 13850])
            ("_chunks_free" variable (:type ("size_t" type (:type "class") nil nil)) nil [13851 13880])
            ("_bytes_free" variable (:type ("size_t" type (:type "class") nil nil)) nil [13881 13909])
            ("__malloc_initialized" variable (:type "int") nil [13939 13964])
            ("__malloc_extra_blocks" variable (:type ("size_t" type (:type "class") nil nil)) nil [13966 14004])
            ("__malloc_initialize_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [14006 14051])
            ("__after_morecore_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [14052 14094])
            ("sys/types.h" include (:system-flag t) nil [14484 14506])
            ("sys/mman.h" include (:system-flag t) nil [14507 14528])
            ("state_protected_p" variable
               (:typemodifiers ("static")
                :type "int")
                nil [14530 14559])
            ("last_state_size" variable
               (:typemodifiers ("static")
                :type ("size_t" type (:type "class") nil nil))
                nil [14560 14599])
            ("last_heapinfo" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("malloc_info" type (:type "class") nil nil))
                nil [14600 14634])
            ("protect_malloc_state" function
               (:arguments 
                  ( ("protect_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [14636 15268])
            ("PROTECT_MALLOC_STATE" variable (:constant-flag t) nil [15278 15298])
            ("align" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [15422 15466])
            ("align" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [15467 16262])
            ("get_contiguous_space" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [16419 16490])
            ("get_contiguous_space" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil nil)
                    ("position" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [16491 17057])
            ("register_heapinfo" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [17244 17286])
            ("register_heapinfo" function
               (:typemodifiers ("static")
                :type "void")
                nil [17321 17871])
            ("_malloc_mutex" variable
               (:default-value "PTHREAD_MUTEX_INITIALIZER;"
                :type ("pthread_mutex_t" type (:type "class") nil nil))
                nil [17892 17950])
            ("_aligned_blocks_mutex" variable
               (:default-value "PTHREAD_MUTEX_INITIALIZER;"
                :type ("pthread_mutex_t" type (:type "class") nil nil))
                nil [17951 18017])
            ("_malloc_thread_enabled_p" variable (:type "int") nil [18018 18047])
            ("malloc_atfork_handler_prepare" function
               (:typemodifiers ("static")
                :type "void")
                nil [18049 18134])
            ("malloc_atfork_handler_parent" function
               (:typemodifiers ("static")
                :type "void")
                nil [18136 18224])
            ("malloc_atfork_handler_child" function
               (:typemodifiers ("static")
                :type "void")
                nil [18226 18313])
            ("malloc_enable_thread" function (:type "void") nil [18371 18919])
            ("malloc_initialize_1" function
               (:typemodifiers ("static")
                :type "void")
                nil [18928 19571])
            ("__malloc_initialize" function (:type "int") nil [19780 19911])
            ("morecore_recursing" variable
               (:typemodifiers ("static")
                :type "int")
                nil [19913 19943])
            ("morecore_nolock" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [20039 20093])
            ("morecore_nolock" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [20094 23667])
            ("_malloc_internal_nolock" function
               (:pointer 1
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [23707 30366])
            ("_malloc_internal" function
               (:pointer 1
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [30368 30534])
            ("malloc" function
               (:pointer 1
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [30536 31220])
            ("_malloc" function
               (:pointer 1
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [31361 31438])
            ("_free" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [31440 31492])
            ("_realloc" function
               (:pointer 1
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [31494 31601])
            ("__malloc_safe_bcopy" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [32951 33024])
            ("memmove" variable (:constant-flag t) nil [33033 33040])
            ("__free_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [33148 33189])
            ("_aligned_blocks" variable
               (:pointer 1
                :default-value "NULL"
                :type ("alignlist" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [33236 33277])
            ("_free_internal_nolock" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [33360 41507])
            ("_free_internal" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [41604 41706])
            ("free" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [41743 41893])
            ("cfree" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [41988 42040])
            ("__malloc_safe_bcopy" function
               (:arguments 
                  ( ("afrom" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("ato" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [43505 44929])
            ("min" variable (:constant-flag t) nil [45140 45143])
            ("__realloc_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [45210 45281])
            ("_realloc_internal_nolock" function
               (:pointer 1
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [45636 48961])
            ("_realloc_internal" function
               (:pointer 1
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [48963 49158])
            ("realloc" function
               (:pointer 1
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [49160 49447])
            ("calloc" function
               (:pointer 1
                :arguments 
                  ( ("nmemb" variable (:type ("size_t" type (:type "class") nil nil)) nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [50543 50785])
            ("__sbrk" variable (:constant-flag t) nil [51825 51831])
            ("__default_morecore" function
               (:pointer 1
                :arguments 
                  ( ("increment" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [52342 52644])
            ("ELIDE_VALLOC" variable (:constant-flag t) nil [57472 57484]))          
    :file "gmalloc.c"
    :pointmax 63963
    :fsize 63962
    :lastmodtime '(19352 21354)
    :unmatched-syntax '((punctuation 13202 . 13203) (semantic-list "(__malloc_ptrdiff_t __size)" 13169 . 13201) (semantic-list 13155 . 13168) (punctuation "*" 13147 . 13154) (VOID "void" 13147 . 13154))
    :lexical-table 
        '(("USE_PTHREAD")
          ("NULL" . ((number "0" 2614 . 2615)))
          ("min" (spp-arg-list ("A" "B") 45143 . 45149) . ((semantic-list "((A) < (B) ? (A) : (B))" 45150 . 45173)))
          ("FINAL_FREE_BLOCKS" . ((number "8" 4628 . 4629)))
          ("LOCK" (spp-arg-list nil 7526 . 7528) . 
              ((DO "do" 7537 . 7539) (semantic-list "{						\\
    if (_malloc_thread_enabled_p)		\\
      pthread_mutex_lock (&_malloc_mutex);	\\
  }" 7540 . 7634) (WHILE "while" 7635 . 7640) (semantic-list "(0)" 7641 . 7644)))
          ("LOCK_ALIGNED_BLOCKS" (spp-arg-list nil 7806 . 7808) . 
              ((DO "do" 7816 . 7818) (semantic-list "{							\\
    if (_malloc_thread_enabled_p)			\\
      pthread_mutex_lock (&_aligned_blocks_mutex);	\\
  }" 7819 . 7923) (WHILE "while" 7924 . 7929) (semantic-list "(0)" 7930 . 7933)))
          ("UNLOCK_ALIGNED_BLOCKS" (spp-arg-list nil 7963 . 7965) . 
              ((DO "do" 7973 . 7975) (semantic-list "{							\\
    if (_malloc_thread_enabled_p)			\\
      pthread_mutex_unlock (&_aligned_blocks_mutex);	\\
  }" 7976 . 8082) (WHILE "while" 8083 . 8088) (semantic-list "(0)" 8089 . 8092)))
          ("ELIDE_VALLOC")
          ("BLOCK" (spp-arg-list ("A") 5898 . 5901) . ((semantic-list "(((char *) (A) - _heapbase) / BLOCKSIZE + 1)" 5902 . 5946)))
          ("PROTECT_MALLOC_STATE" (spp-arg-list ("PROT") 15298 . 15304) . ((symbol "protect_malloc_state" 15305 . 15325) (semantic-list "(PROT)" 15325 . 15331)))
          ("_MALLOC_INTERNAL")
          ("__malloc_size_t" . ((symbol "size_t" 2320 . 2326)))
          ("BLOCKSIZE" . ((semantic-list "(1 << BLOCKLOG)" 4247 . 4262)))
          ("memmove" (spp-arg-list ("to" "from" "size") 33040 . 33056) . ((symbol "__malloc_safe_bcopy" 33057 . 33076) (semantic-list "((from), (to), (size))" 33077 . 33099)))
          ("PP" (spp-arg-list ("args") 1581 . 1587) . ((symbol "args" 1588 . 1592)))
          ("CHAR_BIT" . ((number "8" 2074 . 2075)))
          ("BLOCKLOG" . ((semantic-list "(INT_BIT > 16 ? 12 : 9)" 4205 . 4228)))
          ("__malloc_ptrdiff_t" . ((symbol "ptrdiff_t" 2354 . 2363)))
          ("BLOCKIFY" (spp-arg-list ("SIZE") 4279 . 4285) . ((semantic-list "(((SIZE) + BLOCKSIZE - 1) / BLOCKSIZE)" 4286 . 4324)))
          ("UNLOCK" (spp-arg-list nil 7659 . 7661) . 
              ((DO "do" 7669 . 7671) (semantic-list "{						\\
    if (_malloc_thread_enabled_p)		\\
      pthread_mutex_unlock (&_malloc_mutex);	\\
  }" 7672 . 7768) (WHILE "while" 7769 . 7774) (semantic-list "(0)" 7775 . 7778)))
          ("__ptr_t" . ((VOID "void" 1625 . 1629) (punctuation "*" 1630 . 1631)))
          ("HEAP" . ((semantic-list "(INT_BIT > 16 ? 4194304 : 65536)" 4440 . 4472)))
          ("INT_BIT" . ((semantic-list "(CHAR_BIT * sizeof(int))" 4163 . 4187)))
          ("ADDRESS" (spp-arg-list ("B") 5962 . 5965) . ((semantic-list "((__ptr_t) (((B) - 1) * BLOCKSIZE + _heapbase))" 5966 . 6013)))
          ("_MALLOC_H" . ((number "1" 1270 . 1271)))
          ("__sbrk" . ((symbol "sbrk" 51832 . 51836)))
          )

    )
   (semanticdb-table "w32fns.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [937 956])
            ("signal.h" include (:system-flag t) nil [958 977])
            ("stdio.h" include (:system-flag t) nil [978 996])
            ("limits.h" include (:system-flag t) nil [997 1016])
            ("errno.h" include (:system-flag t) nil [1017 1035])
            ("math.h" include (:system-flag t) nil [1036 1053])
            ("setjmp.h" include (:system-flag t) nil [1054 1073])
            ("lisp.h" include nil nil [1075 1092])
            ("w32term.h" include nil nil [1093 1113])
            ("frame.h" include nil nil [1114 1132])
            ("window.h" include nil nil [1133 1152])
            ("buffer.h" include nil nil [1153 1172])
            ("intervals.h" include nil nil [1173 1195])
            ("dispextern.h" include nil nil [1196 1219])
            ("keyboard.h" include nil nil [1220 1241])
            ("blockinput.h" include nil nil [1242 1265])
            ("epaths.h" include nil nil [1266 1285])
            ("character.h" include nil nil [1286 1308])
            ("charset.h" include nil nil [1309 1329])
            ("coding.h" include nil nil [1330 1349])
            ("ccl.h" include nil nil [1350 1366])
            ("fontset.h" include nil nil [1367 1387])
            ("systime.h" include nil nil [1388 1408])
            ("termhooks.h" include nil nil [1409 1431])
            ("w32heap.h" include nil nil [1432 1452])
            ("bitmaps/gray.xbm" include nil nil [1454 1481])
            ("commctrl.h" include (:system-flag t) nil [1483 1504])
            ("commdlg.h" include (:system-flag t) nil [1505 1525])
            ("shellapi.h" include (:system-flag t) nil [1526 1547])
            ("ctype.h" include (:system-flag t) nil [1548 1566])
            ("winspool.h" include (:system-flag t) nil [1567 1588])
            ("objbase.h" include (:system-flag t) nil [1589 1609])
            ("dlgs.h" include (:system-flag t) nil [1611 1628])
            ("imm.h" include (:system-flag t) nil [1629 1645])
            ("FILE_NAME_TEXT_FIELD" variable (:constant-flag t) nil [1654 1674])
            ("font.h" include nil nil [1681 1698])
            ("w32font.h" include nil nil [1699 1719])
            ("FOF_NO_CONNECTED_ELEMENTS" variable (:constant-flag t) nil [1763 1788])
            ("syms_of_w32fns" function
               (:prototype-flag t
                :type "void")
                nil [1804 1827])
            ("globals_of_w32fns" function
               (:prototype-flag t
                :type "void")
                nil [1828 1854])
            ("free_frame_menubar" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :type "void")
                nil [1856 1890])
            ("atof" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :type "double")
                nil [1891 1913])
            ("w32_console_toggle_lock_key" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [1914 1977])
            ("w32_menu_display_help" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("HMENU" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [1978 2043])
            ("w32_free_menu_strings" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2044 2090])
            ("map_w32_filename" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :constant-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [2091 2162])
            ("quit_char" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [2164 2185])
            ("lispy_function_keys" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("extern")
                :type "char")
                nil [2187 2222])
            ("Vw32_color_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2284 2311])
            ("Vw32_pass_alt_to_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2373 2409])
            ("Vw32_alt_is_meta" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2513 2542])
            ("w32_quit_key" variable (:type "int") nil [2621 2638])
            ("Vw32_pass_lwindow_to_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2777 2817])
            ("Vw32_pass_rwindow_to_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2957 2997])
            ("Vw32_phantom_key_code" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3124 3158])
            ("Vw32_lwindow_modifier" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3250 3284])
            ("Vw32_rwindow_modifier" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3377 3411])
            ("Vw32_apps_modifier" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3495 3526])
            ("Vw32_enable_num_lock" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3584 3617])
            ("Vw32_enable_caps_lock" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3676 3710])
            ("Vw32_scroll_lock_modifier" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3788 3826])
            ("w32_enable_synthesized_fonts" variable (:type "int") nil [3935 3968])
            ("Vw32_enable_palette" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4003 4035])
            ("w32_mouse_button_tolerance" variable (:type "int") nil [4149 4180])
            ("w32_mouse_move_interval" variable (:type "int") nil [4298 4326])
            ("w32_pass_extra_mouse_buttons_to_system" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4402 4452])
            ("w32_pass_multimedia_buttons_to_system" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4524 4573])
            ("Vx_no_window_manager" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4622 4655])
            ("hourglass_timer" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "unsigned int")
                nil [4759 4795])
            ("hourglass_hwnd" variable
               (:typemodifiers ("static")
                :default-value "NULL;"
                :type ("HWND" type (:type "class") nil nil))
                nil [4796 4830])
            ("Vx_mode_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4985 5063])
            ("Vx_nontext_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4985 5063])
            ("Vx_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4985 5063])
            ("Vx_window_horizontal_drag_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5064 5136])
            ("Vx_hourglass_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5064 5136])
            ("Vx_sensitive_text_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5188 5232])
            ("IDC_HAND" variable (:constant-flag t) nil [5266 5274])
            ("Vx_cursor_fore_pixel" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5353 5386])
            ("w32_in_use" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5422 5444])
            ("Vx_pixel_size_width_font_regexp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5523 5567])
            ("Vw32_bdf_filename_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5627 5663])
            ("w32_strict_fontnames" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5733 5765])
            ("w32_strict_painting" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5880 5911])
            ("Qnone" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5913 5931])
            ("Qsuppress_icon" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5932 5959])
            ("Qundefined_color" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5960 5989])
            ("Qcancel_timer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5990 6016])
            ("Qfont_param" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6017 6041])
            ("Qhyper" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6042 6061])
            ("Qsuper" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6062 6081])
            ("Qmeta" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6082 6100])
            ("Qalt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6101 6118])
            ("Qctrl" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6119 6137])
            ("Qcontrol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6138 6159])
            ("Qshift" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6160 6179])
            ("w32_ansi_code_page" variable (:type "int") nil [6208 6231])
            ("SYSTEM_COLOR_PREFIX" variable (:constant-flag t) nil [6274 6293])
            ("SYSTEM_COLOR_PREFIX_LEN" variable (:constant-flag t) nil [6311 6334])
            ("LMOUSE" variable (:constant-flag t) nil [6437 6443])
            ("MMOUSE" variable (:constant-flag t) nil [6454 6460])
            ("RMOUSE" variable (:constant-flag t) nil [6471 6477])
            ("button_state" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [6481 6509])
            ("saved_mouse_button_msg" variable
               (:typemodifiers ("static")
                :type ("W32Msg" type (:type "class") nil nil))
                nil [6510 6547])
            ("mouse_button_timer" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "unsigned int")
                nil [6548 6587])
            ("saved_mouse_move_msg" variable
               (:typemodifiers ("static")
                :type ("W32Msg" type (:type "class") nil nil))
                nil [6624 6659])
            ("mouse_move_timer" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "unsigned int")
                nil [6660 6697])
            ("track_mouse_window" variable
               (:typemodifiers ("static")
                :type ("HWND" type (:type "class") nil nil))
                nil [6741 6772])
            ("MONITOR_DEFAULT_TO_NEAREST" variable (:constant-flag t) nil [6927 6953])
            ("MONITOR_INFO" type
               (:members 
                  ( ("cbSize" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7142 7157])
                    ("rcMonitor" variable (:type ("RECT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7162 7180])
                    ("rcWork" variable (:type ("RECT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7185 7200])
                    ("dwFlags" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7205 7221]))                  
                :type "struct")
                nil [7116 7224])
            ("DECLARE_HANDLE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("HMONITOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7341 7350]))                  
                :type "int")
                nil [7326 7351])
            ("BOOL" function
               (:arguments 
                  ( ("TrackMouseEvent_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7374 7404]))                  
                :type "int")
                nil [7368 7446])
            ("LONG" function
               (:arguments 
                  ( ("ImmGetCompositionString_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7462 7500]))                  
                :type "int")
                nil [7456 7572])
            ("HIMC" function
               (:arguments 
                  ( ("ImmGetContext_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7588 7616]))                  
                :type "int")
                nil [7582 7633])
            ("HWND" function
               (:arguments 
                  ( ("ImmReleaseContext_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7649 7681]))                  
                :type "int")
                nil [7643 7712])
            ("HWND" function
               (:arguments 
                  ( ("ImmSetCompositionWindow_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7728 7766]))                  
                :type "int")
                nil [7722 7822])
            ("HMONITOR" function
               (:arguments 
                  ( ("MonitorFromPoint_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7842 7873]))                  
                :type "int")
                nil [7832 7903])
            ("BOOL" function
               (:arguments 
                  ( ("GetMonitorInfo_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7919 7948]))                  
                :type "int")
                nil [7913 8003])
            ("track_mouse_event_fn" variable
               (:default-value "NULL;"
                :type ("TrackMouseEvent_Proc" type (:type "class") nil nil))
                nil [8006 8055])
            ("clipboard_sequence_fn" variable
               (:default-value "NULL;"
                :type ("ClipboardSequence_Proc" type (:type "class") nil nil))
                nil [8056 8108])
            ("get_composition_string_fn" variable
               (:default-value "NULL;"
                :type ("ImmGetCompositionString_Proc" type (:type "class") nil nil))
                nil [8109 8171])
            ("get_ime_context_fn" variable
               (:default-value "NULL;"
                :type ("ImmGetContext_Proc" type (:type "class") nil nil))
                nil [8172 8217])
            ("release_ime_context_fn" variable
               (:default-value "NULL;"
                :type ("ImmReleaseContext_Proc" type (:type "class") nil nil))
                nil [8218 8271])
            ("set_ime_composition_window_fn" variable
               (:default-value "NULL;"
                :type ("ImmSetCompositionWindow_Proc" type (:type "class") nil nil))
                nil [8272 8338])
            ("monitor_from_point_fn" variable
               (:default-value "NULL;"
                :type ("MonitorFromPoint_Proc" type (:type "class") nil nil))
                nil [8339 8390])
            ("get_monitor_info_fn" variable
               (:default-value "NULL;"
                :type ("GetMonitorInfo_Proc" type (:type "class") nil nil))
                nil [8391 8438])
            ("unicode_append_menu" variable
               (:typemodifiers ("extern")
                :type ("AppendMenuW_Proc" type (:type "class") nil nil))
                nil [8440 8484])
            ("ignore_ime_char" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [8542 8573])
            ("msh_mousewheel" variable
               (:default-value "0"
                :type "unsigned int")
                nil [8604 8636])
            ("MOUSE_BUTTON_ID" variable (:constant-flag t) nil [8659 8674])
            ("MOUSE_MOVE_ID" variable (:constant-flag t) nil [8685 8698])
            ("MENU_FREE_ID" variable (:constant-flag t) nil [8709 8721])
            ("HOURGLASS_ID" variable (:constant-flag t) nil [8732 8744])
            ("MENU_FREE_DELAY" variable (:constant-flag t) nil [8848 8863])
            ("menu_free_timer" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "unsigned int")
                nil [8869 8905])
            ("Vwindow_system_version" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8949 8991])
            ("w32_num_mouse_buttons" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9087 9120])
            ("Vw32_recognize_altgr" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9121 9161])
            ("w32_system_caret_hwnd" variable
               (:typemodifiers ("extern")
                :type ("HWND" type (:type "class") nil nil))
                nil [9163 9197])
            ("w32_system_caret_height" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9199 9234])
            ("w32_system_caret_x" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9235 9265])
            ("w32_system_caret_y" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9266 9296])
            ("w32_use_visible_system_caret" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9297 9337])
            ("w32_visible_system_caret_hwnd" variable
               (:typemodifiers ("static")
                :type ("HWND" type (:type "class") nil nil))
                nil [9339 9381])
            ("current_popup_menu" variable
               (:typemodifiers ("extern")
                :type ("HMENU" type (:type "class") nil nil))
                nil [9405 9437])
            ("menubar_in_use" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [9438 9468])
            ("syms_of_w32uniscribe" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :type "void")
                nil [9497 9533])
            ("uniscribe_available" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9534 9565])
            ("w32_show_hourglass" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [9617 9670])
            ("w32_hide_hourglass" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [9671 9714])
            ("check_w32" function (:type "void") nil [9771 9868])
            ("have_menus_p" function (:type "int") nil [9971 10015])
            ("check_x_frame" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("FRAME_PTR" type (:type "class") nil nil))
                nil [10124 10368])
            ("check_x_display_info" function
               (:pointer 1
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("w32_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [10527 11090])
            ("x_window_to_frame" function
               (:pointer 1
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("wdesc" variable (:type ("HWND" type (:type "class") nil nil)) nil nil))                  
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [11300 11779])
            ("unwind_create_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [11783 11841])
            ("unwind_create_tip_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [11842 11904])
            ("my_create_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11905 11956])
            ("my_create_tip_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11957 12012])
            ("x_set_foreground_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12073 12149])
            ("x_set_background_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12150 12226])
            ("x_set_mouse_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12227 12298])
            ("x_set_cursor_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12299 12371])
            ("x_set_border_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12372 12444])
            ("x_set_cursor_type" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12445 12516])
            ("x_set_icon_type" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12517 12586])
            ("x_set_icon_name" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12587 12656])
            ("x_explicitly_set_name" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12657 12732])
            ("x_set_menu_bar_lines" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12733 12807])
            ("x_set_title" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12808 12873])
            ("x_set_tool_bar_lines" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12874 12948])
            ("x_edge_detection" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("image" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12949 13048])
            ("x_real_positions" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("yptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("xptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [13215 13722])
            ("DEFUN_ARGS_" variable (:type ("Sw32_define_rgb_color" type (:type "class") nil nil)) nil [13727 14068])
            ("doc" variable
               (:default-value "DEFUN (\"w32-define-rgb-color\", Fw32_define_rgb_color,
       Sw32_define_rgb_color, 4, 4, 0,
       doc: /* Convert RGB numbers to a Windows color reference and associate with NAME.
This adds or updates a named color to `w32-color-map', making it
available for use.  The original entry's RGB ref is returned, or nil
if the entry is new.  */)"
                :type "int")
                nil [13727 14068])
            ("Sw32_define_rgb_color" function
               (:arguments 
                  ( ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("blue" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("green" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("red" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [13727 14726])
            ("colormap_t" type
               (:typedef ("colormap_t" type
                     (:members 
                        ( ("name" variable
                             (:pointer 1
                              :type "char")
                              (reparse-symbol classsubparts) [14805 14816])
                          ("colorref" variable (:type ("COLORREF" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14819 14837]))                        
                      :type "struct")
                      nil nil)
                :superclasses "colormap_t"
                :type "typedef")
                nil [14775 14851])
            ("w32_color_map" variable
               (:dereference 1
                :default-value "{
  {\"snow\"                      , PALETTERGB (255,250,250)},
  {\"ghost white\"               , PALETTERGB (248,248,255)},
  {\"GhostWhite\"                , PALETTERGB (248,248,255)},
  {\"white smoke\"               , PALETTERGB (245,245,245)},
  {\"WhiteSmoke\"                , PALETTERGB (245,245,245)},
  {\"gainsboro\"                 , PALETTERGB (220,220,220)},
  {\"floral white\"              , PALETTERGB (255,250,240)},
  {\"FloralWhite\"               , PALETTERGB (255,250,240)},
  {\"old lace\"                  , PALETTERGB (253,245,230)},
  {\"OldLace\"                   , PALETTERGB (253,245,230)},
  {\"linen\"                     , PALETTERGB (250,240,230)},
  {\"antique white\"             , PALETTERGB (250,235,215)},
  {\"AntiqueWhite\"              , PALETTERGB (250,235,215)},
  {\"papaya whip\"               , PALETTERGB (255,239,213)},
  {\"PapayaWhip\"                , PALETTERGB (255,239,213)},
  {\"blanched almond\"           , PALETTERGB (255,235,205)},
  {\"BlanchedAlmond\"            , PALETTERGB (255,235,205)},
  {\"bisque\"                    , PALETTERGB (255,228,196)},
  {\"peach puff\"                , PALETTERGB (255,218,185)},
  {\"PeachPuff\"                 , PALETTERGB (255,218,185)},
  {\"navajo white\"              , PALETTERGB (255,222,173)},
  {\"NavajoWhite\"               , PALETTERGB (255,222,173)},
  {\"moccasin\"                  , PALETTERGB (255,228,181)},
  {\"cornsilk\"                  , PALETTERGB (255,248,220)},
  {\"ivory\"                     , PALETTERGB (255,255,240)},
  {\"lemon chiffon\"             , PALETTERGB (255,250,205)},
  {\"LemonChiffon\"              , PALETTERGB (255,250,205)},
  {\"seashell\"                  , PALETTERGB (255,245,238)},
  {\"honeydew\"                  , PALETTERGB (240,255,240)},
  {\"mint cream\"                , PALETTERGB (245,255,250)},
  {\"MintCream\"                 , PALETTERGB (245,255,250)},
  {\"azure\"                     , PALETTERGB (240,255,255)},
  {\"alice blue\"                , PALETTERGB (240,248,255)},
  {\"AliceBlue\"                 , PALETTERGB (240,248,255)},
  {\"lavender\"                  , PALETTERGB (230,230,250)},
  {\"lavender blush\"            , PALETTERGB (255,240,245)},
  {\"LavenderBlush\"             , PALETTERGB (255,240,245)},
  {\"misty rose\"                , PALETTERGB (255,228,225)},
  {\"MistyRose\"                 , PALETTERGB (255,228,225)},
  {\"white\"                     , PALETTERGB (255,255,255)},
  {\"black\"                     , PALETTERGB (  0,  0,  0)},
  {\"dark slate gray\"           , PALETTERGB ( 47, 79, 79)},
  {\"DarkSlateGray\"             , PALETTERGB ( 47, 79, 79)},
  {\"dark slate grey\"           , PALETTERGB ( 47, 79, 79)},
  {\"DarkSlateGrey\"             , PALETTERGB ( 47, 79, 79)},
  {\"dim gray\"                  , PALETTERGB (105,105,105)},
  {\"DimGray\"                   , PALETTERGB (105,105,105)},
  {\"dim grey\"                  , PALETTERGB (105,105,105)},
  {\"DimGrey\"                   , PALETTERGB (105,105,105)},
  {\"slate gray\"                , PALETTERGB (112,128,144)},
  {\"SlateGray\"                 , PALETTERGB (112,128,144)},
  {\"slate grey\"                , PALETTERGB (112,128,144)},
  {\"SlateGrey\"                 , PALETTERGB (112,128,144)},
  {\"light slate gray\"          , PALETTERGB (119,136,153)},
  {\"LightSlateGray\"            , PALETTERGB (119,136,153)},
  {\"light slate grey\"          , PALETTERGB (119,136,153)},
  {\"LightSlateGrey\"            , PALETTERGB (119,136,153)},
  {\"gray\"                      , PALETTERGB (190,190,190)},
  {\"grey\"                      , PALETTERGB (190,190,190)},
  {\"light grey\"                , PALETTERGB (211,211,211)},
  {\"LightGrey\"                 , PALETTERGB (211,211,211)},
  {\"light gray\"                , PALETTERGB (211,211,211)},
  {\"LightGray\"                 , PALETTERGB (211,211,211)},
  {\"midnight blue\"             , PALETTERGB ( 25, 25,112)},
  {\"MidnightBlue\"              , PALETTERGB ( 25, 25,112)},
  {\"navy\"                      , PALETTERGB (  0,  0,128)},
  {\"navy blue\"                 , PALETTERGB (  0,  0,128)},
  {\"NavyBlue\"                  , PALETTERGB (  0,  0,128)},
  {\"cornflower blue\"           , PALETTERGB (100,149,237)},
  {\"CornflowerBlue\"            , PALETTERGB (100,149,237)},
  {\"dark slate blue\"           , PALETTERGB ( 72, 61,139)},
  {\"DarkSlateBlue\"             , PALETTERGB ( 72, 61,139)},
  {\"slate blue\"                , PALETTERGB (106, 90,205)},
  {\"SlateBlue\"                 , PALETTERGB (106, 90,205)},
  {\"medium slate blue\"         , PALETTERGB (123,104,238)},
  {\"MediumSlateBlue\"           , PALETTERGB (123,104,238)},
  {\"light slate blue\"          , PALETTERGB (132,112,255)},
  {\"LightSlateBlue\"            , PALETTERGB (132,112,255)},
  {\"medium blue\"               , PALETTERGB (  0,  0,205)},
  {\"MediumBlue\"                , PALETTERGB (  0,  0,205)},
  {\"royal blue\"                , PALETTERGB ( 65,105,225)},
  {\"RoyalBlue\"                 , PALETTERGB ( 65,105,225)},
  {\"blue\"                      , PALETTERGB (  0,  0,255)},
  {\"dodger blue\"               , PALETTERGB ( 30,144,255)},
  {\"DodgerBlue\"                , PALETTERGB ( 30,144,255)},
  {\"deep sky blue\"             , PALETTERGB (  0,191,255)},
  {\"DeepSkyBlue\"               , PALETTERGB (  0,191,255)},
  {\"sky blue\"                  , PALETTERGB (135,206,235)},
  {\"SkyBlue\"                   , PALETTERGB (135,206,235)},
  {\"light sky blue\"            , PALETTERGB (135,206,250)},
  {\"LightSkyBlue\"              , PALETTERGB (135,206,250)},
  {\"steel blue\"                , PALETTERGB ( 70,130,180)},
  {\"SteelBlue\"                 , PALETTERGB ( 70,130,180)},
  {\"light steel blue\"          , PALETTERGB (176,196,222)},
  {\"LightSteelBlue\"            , PALETTERGB (176,196,222)},
  {\"light blue\"                , PALETTERGB (173,216,230)},
  {\"LightBlue\"                 , PALETTERGB (173,216,230)},
  {\"powder blue\"               , PALETTERGB (176,224,230)},
  {\"PowderBlue\"                , PALETTERGB (176,224,230)},
  {\"pale turquoise\"            , PALETTERGB (175,238,238)},
  {\"PaleTurquoise\"             , PALETTERGB (175,238,238)},
  {\"dark turquoise\"            , PALETTERGB (  0,206,209)},
  {\"DarkTurquoise\"             , PALETTERGB (  0,206,209)},
  {\"medium turquoise\"          , PALETTERGB ( 72,209,204)},
  {\"MediumTurquoise\"           , PALETTERGB ( 72,209,204)},
  {\"turquoise\"                 , PALETTERGB ( 64,224,208)},
  {\"cyan\"                      , PALETTERGB (  0,255,255)},
  {\"light cyan\"                , PALETTERGB (224,255,255)},
  {\"LightCyan\"                 , PALETTERGB (224,255,255)},
  {\"cadet blue\"                , PALETTERGB ( 95,158,160)},
  {\"CadetBlue\"                 , PALETTERGB ( 95,158,160)},
  {\"medium aquamarine\"         , PALETTERGB (102,205,170)},
  {\"MediumAquamarine\"          , PALETTERGB (102,205,170)},
  {\"aquamarine\"                , PALETTERGB (127,255,212)},
  {\"dark green\"                , PALETTERGB (  0,100,  0)},
  {\"DarkGreen\"                 , PALETTERGB (  0,100,  0)},
  {\"dark olive green\"          , PALETTERGB ( 85,107, 47)},
  {\"DarkOliveGreen\"            , PALETTERGB ( 85,107, 47)},
  {\"dark sea green\"            , PALETTERGB (143,188,143)},
  {\"DarkSeaGreen\"              , PALETTERGB (143,188,143)},
  {\"sea green\"                 , PALETTERGB ( 46,139, 87)},
  {\"SeaGreen\"                  , PALETTERGB ( 46,139, 87)},
  {\"medium sea green\"          , PALETTERGB ( 60,179,113)},
  {\"MediumSeaGreen\"            , PALETTERGB ( 60,179,113)},
  {\"light sea green\"           , PALETTERGB ( 32,178,170)},
  {\"LightSeaGreen\"             , PALETTERGB ( 32,178,170)},
  {\"pale green\"                , PALETTERGB (152,251,152)},
  {\"PaleGreen\"                 , PALETTERGB (152,251,152)},
  {\"spring green\"              , PALETTERGB (  0,255,127)},
  {\"SpringGreen\"               , PALETTERGB (  0,255,127)},
  {\"lawn green\"                , PALETTERGB (124,252,  0)},
  {\"LawnGreen\"                 , PALETTERGB (124,252,  0)},
  {\"green\"                     , PALETTERGB (  0,255,  0)},
  {\"chartreuse\"                , PALETTERGB (127,255,  0)},
  {\"medium spring green\"       , PALETTERGB (  0,250,154)},
  {\"MediumSpringGreen\"         , PALETTERGB (  0,250,154)},
  {\"green yellow\"              , PALETTERGB (173,255, 47)},
  {\"GreenYellow\"               , PALETTERGB (173,255, 47)},
  {\"lime green\"                , PALETTERGB ( 50,205, 50)},
  {\"LimeGreen\"                 , PALETTERGB ( 50,205, 50)},
  {\"yellow green\"              , PALETTERGB (154,205, 50)},
  {\"YellowGreen\"               , PALETTERGB (154,205, 50)},
  {\"forest green\"              , PALETTERGB ( 34,139, 34)},
  {\"ForestGreen\"               , PALETTERGB ( 34,139, 34)},
  {\"olive drab\"                , PALETTERGB (107,142, 35)},
  {\"OliveDrab\"                 , PALETTERGB (107,142, 35)},
  {\"dark khaki\"                , PALETTERGB (189,183,107)},
  {\"DarkKhaki\"                 , PALETTERGB (189,183,107)},
  {\"khaki\"                     , PALETTERGB (240,230,140)},
  {\"pale goldenrod\"            , PALETTERGB (238,232,170)},
  {\"PaleGoldenrod\"             , PALETTERGB (238,232,170)},
  {\"light goldenrod yellow\"    , PALETTERGB (250,250,210)},
  {\"LightGoldenrodYellow\"      , PALETTERGB (250,250,210)},
  {\"light yellow\"              , PALETTERGB (255,255,224)},
  {\"LightYellow\"               , PALETTERGB (255,255,224)},
  {\"yellow\"                    , PALETTERGB (255,255,  0)},
  {\"gold\"                      , PALETTERGB (255,215,  0)},
  {\"light goldenrod\"           , PALETTERGB (238,221,130)},
  {\"LightGoldenrod\"            , PALETTERGB (238,221,130)},
  {\"goldenrod\"                 , PALETTERGB (218,165, 32)},
  {\"dark goldenrod\"            , PALETTERGB (184,134, 11)},
  {\"DarkGoldenrod\"             , PALETTERGB (184,134, 11)},
  {\"rosy brown\"                , PALETTERGB (188,143,143)},
  {\"RosyBrown\"                 , PALETTERGB (188,143,143)},
  {\"indian red\"                , PALETTERGB (205, 92, 92)},
  {\"IndianRed\"                 , PALETTERGB (205, 92, 92)},
  {\"saddle brown\"              , PALETTERGB (139, 69, 19)},
  {\"SaddleBrown\"               , PALETTERGB (139, 69, 19)},
  {\"sienna\"                    , PALETTERGB (160, 82, 45)},
  {\"peru\"                      , PALETTERGB (205,133, 63)},
  {\"burlywood\"                 , PALETTERGB (222,184,135)},
  {\"beige\"                     , PALETTERGB (245,245,220)},
  {\"wheat\"                     , PALETTERGB (245,222,179)},
  {\"sandy brown\"               , PALETTERGB (244,164, 96)},
  {\"SandyBrown\"                , PALETTERGB (244,164, 96)},
  {\"tan\"                       , PALETTERGB (210,180,140)},
  {\"chocolate\"                 , PALETTERGB (210,105, 30)},
  {\"firebrick\"                 , PALETTERGB (178,34, 34)},
  {\"brown\"                     , PALETTERGB (165,42, 42)},
  {\"dark salmon\"               , PALETTERGB (233,150,122)},
  {\"DarkSalmon\"                , PALETTERGB (233,150,122)},
  {\"salmon\"                    , PALETTERGB (250,128,114)},
  {\"light salmon\"              , PALETTERGB (255,160,122)},
  {\"LightSalmon\"               , PALETTERGB (255,160,122)},
  {\"orange\"                    , PALETTERGB (255,165,  0)},
  {\"dark orange\"               , PALETTERGB (255,140,  0)},
  {\"DarkOrange\"                , PALETTERGB (255,140,  0)},
  {\"coral\"                     , PALETTERGB (255,127, 80)},
  {\"light coral\"               , PALETTERGB (240,128,128)},
  {\"LightCoral\"                , PALETTERGB (240,128,128)},
  {\"tomato\"                    , PALETTERGB (255, 99, 71)},
  {\"orange red\"                , PALETTERGB (255, 69,  0)},
  {\"OrangeRed\"                 , PALETTERGB (255, 69,  0)},
  {\"red\"                       , PALETTERGB (255,  0,  0)},
  {\"hot pink\"                  , PALETTERGB (255,105,180)},
  {\"HotPink\"                   , PALETTERGB (255,105,180)},
  {\"deep pink\"                 , PALETTERGB (255, 20,147)},
  {\"DeepPink\"                  , PALETTERGB (255, 20,147)},
  {\"pink\"                      , PALETTERGB (255,192,203)},
  {\"light pink\"                , PALETTERGB (255,182,193)},
  {\"LightPink\"                 , PALETTERGB (255,182,193)},
  {\"pale violet red\"           , PALETTERGB (219,112,147)},
  {\"PaleVioletRed\"             , PALETTERGB (219,112,147)},
  {\"maroon\"                    , PALETTERGB (176, 48, 96)},
  {\"medium violet red\"         , PALETTERGB (199, 21,133)},
  {\"MediumVioletRed\"           , PALETTERGB (199, 21,133)},
  {\"violet red\"                , PALETTERGB (208, 32,144)},
  {\"VioletRed\"                 , PALETTERGB (208, 32,144)},
  {\"magenta\"                   , PALETTERGB (255,  0,255)},
  {\"violet\"                    , PALETTERGB (238,130,238)},
  {\"plum\"                      , PALETTERGB (221,160,221)},
  {\"orchid\"                    , PALETTERGB (218,112,214)},
  {\"medium orchid\"             , PALETTERGB (186, 85,211)},
  {\"MediumOrchid\"              , PALETTERGB (186, 85,211)},
  {\"dark orchid\"               , PALETTERGB (153, 50,204)},
  {\"DarkOrchid\"                , PALETTERGB (153, 50,204)},
  {\"dark violet\"               , PALETTERGB (148,  0,211)},
  {\"DarkViolet\"                , PALETTERGB (148,  0,211)},
  {\"blue violet\"               , PALETTERGB (138, 43,226)},
  {\"BlueViolet\"                , PALETTERGB (138, 43,226)},
  {\"purple\"                    , PALETTERGB (160, 32,240)},
  {\"medium purple\"             , PALETTERGB (147,112,219)},
  {\"MediumPurple\"              , PALETTERGB (147,112,219)},
  {\"thistle\"                   , PALETTERGB (216,191,216)},
  {\"gray0\"                     , PALETTERGB (  0,  0,  0)},
  {\"grey0\"                     , PALETTERGB (  0,  0,  0)},
  {\"dark grey\"                 , PALETTERGB (169,169,169)},
  {\"DarkGrey\"                  , PALETTERGB (169,169,169)},
  {\"dark gray\"                 , PALETTERGB (169,169,169)},
  {\"DarkGray\"                  , PALETTERGB (169,169,169)},
  {\"dark blue\"                 , PALETTERGB (  0,  0,139)},
  {\"DarkBlue\"                  , PALETTERGB (  0,  0,139)},
  {\"dark cyan\"                 , PALETTERGB (  0,139,139)},
  {\"DarkCyan\"                  , PALETTERGB (  0,139,139)},
  {\"dark magenta\"              , PALETTERGB (139,  0,139)},
  {\"DarkMagenta\"               , PALETTERGB (139,  0,139)},
  {\"dark red\"                  , PALETTERGB (139,  0,  0)},
  {\"DarkRed\"                   , PALETTERGB (139,  0,  0)},
  {\"light green\"               , PALETTERGB (144,238,144)},
  {\"LightGreen\"                , PALETTERGB (144,238,144)},
}"
                :type ("colormap_t" type (:type "class") nil nil))
                nil [14853 29284])
            ("DEFUN_ARGS_" variable (:type ("Sw32_default_color_map" type (:type "class") nil nil)) nil [29286 29424])
            ("doc" variable
               (:default-value "DEFUN (\"w32-default-color-map\", Fw32_default_color_map, Sw32_default_color_map,
       0, 0, 0, doc: /* Return the default color map.  */)"
                :type "int")
                nil [29286 29424])
            ("Sw32_default_color_map" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [29286 29750])
            ("w32_to_x_color" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("rgb" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29752 30009])
            ("w32_color_map_lookup" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("colorname" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30011 30470])
            ("add_system_logical_colors_to_map" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("system_colors" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [30473 31948])
            ("x_to_w32_color" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("colorname" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [31951 36076])
            ("w32_regenerate_palette" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36107 36119]))                  
                :type "void")
                nil [36078 37154])
            ("W32_COLOR" variable (:constant-flag t) nil [37164 37173])
            ("SET_W32_COLOR" variable (:constant-flag t) nil [37225 37238])
            ("gamma_correct" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("COLORREF" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [39089 39421])
            ("w32_defined_color" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("color" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("color_def" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil)
                    ("alloc" variable (:type "int") nil nil))                  
                :type "int")
                nil [39621 41445])
            ("x_decode_color" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("def" variable (:type "int") nil nil))                  
                :type "int")
                nil [41630 42272])
            ("x_set_foreground_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [42582 43112])
            ("x_set_background_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [43114 43585])
            ("x_set_mouse_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [43587 48958])
            ("x_set_cursor_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [48960 50109])
            ("x_set_border_pixel" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pix" variable (:type "int") nil nil))                  
                :type "void")
                nil [50250 50491])
            ("x_set_border_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [50796 51073])
            ("x_set_cursor_type" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [51076 51274])
            ("x_set_icon_type" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [51277 51765])
            ("x_set_icon_name" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [51767 52742])
            ("x_set_menu_bar_lines" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [52746 53763])
            ("x_set_tool_bar_lines" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [54085 56169])
            ("x_set_name" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("explicit" variable (:type "int") nil nil))                  
                :type "void")
                nil [56684 58047])
            ("x_explicitly_set_name" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [58209 58330])
            ("x_implicitly_set_name" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [58491 58612])
            ("x_set_title" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("old_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [58712 59191])
            ("x_set_scroll_bar_default_width" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [59194 59467])
            ("w32_load_cursor" function
               (:arguments 
                  ( ("name" variable (:type ("LPCTSTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59537 59550]))                  
                :type ("Cursor" type (:type "class") nil nil))
                nil [59513 59981])
            ("w32_wnd_proc" function
               (:prototype-flag t
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [59998 60023])
            ("w32_init_class" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hinst" variable (:type ("HINSTANCE" type (:type "class") nil nil)) nil nil))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [60025 60507])
            ("w32_createscrollbar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("HWND" type (:type "class") nil nil))
                nil [60509 60976])
            ("w32_createwindow" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [60978 63060])
            ("my_post_msg" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("wmsg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil)
                    ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil)
                    ("msg" variable (:type ("UINT" type (:type "class") nil nil)) nil nil)
                    ("wParam" variable (:type ("WPARAM" type (:type "class") nil nil)) nil nil)
                    ("lParam" variable (:type ("LPARAM" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [63062 63382])
            ("EMACS_LCONTROL" variable (:constant-flag t) nil [64051 64065])
            ("EMACS_RCONTROL" variable (:constant-flag t) nil [64076 64090])
            ("EMACS_LMENU" variable (:constant-flag t) nil [64101 64112])
            ("EMACS_RMENU" variable (:constant-flag t) nil [64126 64137])
            ("modifiers" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "int")
                nil [64144 64168])
            ("modifiers_recorded" variable
               (:typemodifiers ("static")
                :type "int")
                nil [64169 64199])
            ("modifier_key_support_tested" variable
               (:typemodifiers ("static")
                :type "int")
                nil [64200 64239])
            ("test_modifier_support" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("wparam" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64276 64296]))                  
                :type "void")
                nil [64241 64692])
            ("record_keydown" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("wparam" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64722 64742])
                    ("lparam" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [64743 64763]))                  
                :type "void")
                nil [64694 65115])
            ("record_keyup" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("wparam" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65143 65163])
                    ("lparam" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [65164 65184]))                  
                :type "void")
                nil [65117 65463])
            ("reset_modifiers" function
               (:typemodifiers ("static")
                :type "void")
                nil [65665 67039])
            ("sync_modifiers" function
               (:typemodifiers ("static")
                :type "void")
                nil [67297 67576])
            ("modifier_set" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vkey" variable (:type "int") (reparse-symbol arg-sub-list) [67603 67612]))                  
                :type "int")
                nil [67578 68076])
            ("w32_key_to_modifier" function
               (:arguments 
                  ( ("key" variable (:type "int") (reparse-symbol arg-sub-list) [68200 68208]))                  
                :type "unsigned int")
                nil [68166 69486])
            ("w32_get_modifiers" function
               (:typemodifiers ("static")
                :type "unsigned int")
                nil [69488 70034])
            ("construct_console_modifiers" function
               (:typemodifiers ("static")
                :type "int")
                nil [70186 70924])
            ("w32_get_key_modifiers" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("wparam" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [70960 70980])
                    ("lparam" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [70981 71001]))                  
                :type "int")
                nil [70926 71144])
            ("map_keypad_keys" function
               (:arguments 
                  ( ("virt_key" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [71176 71198])
                    ("extended" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [71199 71221]))                  
                :type "unsigned int")
                nil [71146 71749])
            ("w32_grabbed_keys" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [72015 72051])
            ("HOTKEY" variable (:constant-flag t) nil [72061 72067])
            ("HOTKEY_ID" variable (:constant-flag t) nil [72134 72143])
            ("HOTKEY_VK_CODE" variable (:constant-flag t) nil [72188 72202])
            ("HOTKEY_MODIFIERS" variable (:constant-flag t) nil [72239 72255])
            ("RAW_HOTKEY_ID" variable (:constant-flag t) nil [72290 72303])
            ("RAW_HOTKEY_VK_CODE" variable (:constant-flag t) nil [72337 72355])
            ("RAW_HOTKEY_MODIFIERS" variable (:constant-flag t) nil [72381 72401])
            ("register_hot_keys" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [72615 73066])
            ("unregister_hot_keys" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [73068 73368])
            ("w32_msg_pump" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("msg_buf" variable
                       (:pointer 1
                        :type ("deferred_msg" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73431 73454]))                  
                :type "void")
                nil [73405 77218])
            ("deferred_msg_head" variable
               (:pointer 1
                :type ("deferred_msg" type (:type "class") nil nil))
                nil [77220 77253])
            ("find_deferred_msg" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77296 77306])
                    ("msg" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77307 77316]))                  
                :type ("deferred_msg" type (:type "class") nil nil))
                nil [77255 77684])
            ("send_deferred_msg" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("msg_buf" variable
                       (:pointer 1
                        :type ("deferred_msg" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77720 77743])
                    ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77749 77759])
                    ("msg" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77765 77774])
                    ("wParam" variable (:type ("WPARAM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77780 77794])
                    ("lParam" variable (:type ("LPARAM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77800 77814]))                  
                :type ("LRESULT" type (:type "class") nil nil))
                nil [77686 78713])
            ("complete_deferred_msg" function
               (:arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78743 78753])
                    ("msg" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78754 78763])
                    ("result" variable (:type ("LRESULT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78764 78779]))                  
                :type "void")
                nil [78715 79117])
            ("cancel_all_deferred_msgs" function
               (:typemodifiers ("static")
                :type "void")
                nil [79119 79610])
            ("w32_msg_worker" function
               (:arguments 
                  ( ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [79641 79651]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [79618 80130])
            ("signal_user_input" function
               (:typemodifiers ("static")
                :type "void")
                nil [80132 80483])
            ("post_character_message" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil)
                    ("msg" variable (:type ("UINT" type (:type "class") nil nil)) nil nil)
                    ("wParam" variable (:type ("WPARAM" type (:type "class") nil nil)) nil nil)
                    ("lParam" variable (:type ("LPARAM" type (:type "class") nil nil)) nil nil)
                    ("modifiers" variable (:type ("DWORD" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [80486 82833])
            ("w32_wnd_proc" function
               (:arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil)
                    ("msg" variable (:type ("UINT" type (:type "class") nil nil)) nil nil)
                    ("wParam" variable (:type ("WPARAM" type (:type "class") nil nil)) nil nil)
                    ("lParam" variable (:type ("LPARAM" type (:type "class") nil nil)) nil nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [82872 120677])
            ("my_create_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [120679 120904])
            ("my_create_tip_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [121182 122349])
            ("w32_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("window_prompting" variable (:type "long") nil nil)
                    ("minibuffer_only" variable (:type "int") nil nil))                  
                :type "void")
                nil [122406 123600])
            ("x_icon" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [123750 124857])
            ("x_make_gc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [124860 125539])
            ("unwind_create_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [125681 126299])
            ("x_default_font_parameter" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [126301 127573])
            ("DEFUN_ARGS_" variable (:type ("Sx_create_frame" type (:type "class") nil nil)) nil [127575 128097])
            ("doc" variable
               (:default-value "DEFUN (\"x-create-frame\", Fx_create_frame, Sx_create_frame,
       1, 1, 0,
       doc: /* Make a new window, which is called a \\\"frame\\\" in Emacs terms.
Return an Emacs frame object.
PARAMETERS is an alist of frame parameters.
If the parameters specify that the frame should not have a minibuffer,
and do not specify a specific minibuffer window to use,
then `default-minibuffer-frame' must be a frame whose minibuffer can
be shared by the new frame.

This function is an internal primitive--use `make-frame' instead.  */)"
                :type "int")
                nil [127575 128097])
            ("Sx_create_frame" function
               (:arguments 
                  ( ("parameters" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [127575 139617])
            ("x_get_focus_frame" function
               (:arguments 
                  ( ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [139802 140077])
            ("DEFUN_ARGS_" variable (:type ("Sx_focus_frame" type (:type "class") nil nil)) nil [140079 140223])
            ("doc" variable
               (:default-value "DEFUN (\"x-focus-frame\", Fx_focus_frame, Sx_focus_frame, 1, 1, 0,
       doc: /* Give FRAME input focus, raising to foreground if necessary.  */)"
                :type "int")
                nil [140079 140223])
            ("Sx_focus_frame" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [140079 140320])
            ("DEFUN_ARGS_" variable (:type ("Sxw_color_defined_p" type (:type "class") nil nil)) nil [140324 140481])
            ("doc" variable
               (:default-value "DEFUN (\"xw-color-defined-p\", Fxw_color_defined_p, Sxw_color_defined_p, 1, 2, 0,
       doc: /* Internal function called by `color-defined-p', which see.  */)"
                :type "int")
                nil [140324 140481])
            ("Sxw_color_defined_p" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("color" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [140324 140704])
            ("DEFUN_ARGS_" variable (:type ("Sxw_color_values" type (:type "class") nil nil)) nil [140706 140851])
            ("doc" variable
               (:default-value "DEFUN (\"xw-color-values\", Fxw_color_values, Sxw_color_values, 1, 2, 0,
       doc: /* Internal function called by `color-values', which see.  */)"
                :type "int")
                nil [140706 140851])
            ("Sxw_color_values" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("color" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [140706 141320])
            ("DEFUN_ARGS_" variable (:type ("Sxw_display_color_p" type (:type "class") nil nil)) nil [141322 141479])
            ("doc" variable
               (:default-value "DEFUN (\"xw-display-color-p\", Fxw_display_color_p, Sxw_display_color_p, 0, 1, 0,
       doc: /* Internal function called by `display-color-p', which see.  */)"
                :type "int")
                nil [141322 141479])
            ("Sxw_display_color_p" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141322 141673])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_grayscale_p" type (:type "class") nil nil)) nil [141675 142083])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-grayscale-p\", Fx_display_grayscale_p,
       Sx_display_grayscale_p, 0, 1, 0,
       doc: /* Return t if DISPLAY supports shades of gray.
Note that color displays do support shades of gray.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [141675 142083])
            ("Sx_display_grayscale_p" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141675 142277])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_pixel_width" type (:type "class") nil nil)) nil [142279 142629])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-pixel-width\", Fx_display_pixel_width,
       Sx_display_pixel_width, 0, 1, 0,
       doc: /* Return the width in pixels of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [142279 142629])
            ("Sx_display_pixel_width" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [142279 142797])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_pixel_height" type (:type "class") nil nil)) nil [142799 143153])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-pixel-height\", Fx_display_pixel_height,
       Sx_display_pixel_height, 0, 1, 0,
       doc: /* Return the height in pixels of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [142799 143153])
            ("Sx_display_pixel_height" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [142799 143322])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_planes" type (:type "class") nil nil)) nil [143324 143663])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-planes\", Fx_display_planes, Sx_display_planes,
       0, 1, 0,
       doc: /* Return the number of bitplanes of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [143324 143663])
            ("Sx_display_planes" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [143324 143836])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_color_cells" type (:type "class") nil nil)) nil [143838 144194])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-color-cells\", Fx_display_color_cells, Sx_display_color_cells,
       0, 1, 0,
       doc: /* Return the number of color cells of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [143838 144194])
            ("Sx_display_color_cells" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [143838 144771])
            ("DEFUN_ARGS_" variable (:type ("Sx_server_max_request_size" type (:type "class") nil nil)) nil [144773 145161])
            ("doc" variable
               (:default-value "DEFUN (\"x-server-max-request-size\", Fx_server_max_request_size,
       Sx_server_max_request_size,
       0, 1, 0,
       doc: /* Return the maximum request size of the server of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [144773 145161])
            ("Sx_server_max_request_size" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [144773 145299])
            ("DEFUN_ARGS_" variable (:type ("Sx_server_vendor" type (:type "class") nil nil)) nil [145301 145648])
            ("doc" variable
               (:default-value "DEFUN (\"x-server-vendor\", Fx_server_vendor, Sx_server_vendor, 0, 1, 0,
       doc: /* Return the \"vendor ID\" string of the W32 system (Microsoft).
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [145301 145648])
            ("Sx_server_vendor" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [145301 145733])
            ("DEFUN_ARGS_" variable (:type ("Sx_server_version" type (:type "class") nil nil)) nil [145735 146266])
            ("doc" variable
               (:default-value "DEFUN (\"x-server-version\", Fx_server_version, Sx_server_version, 0, 1, 0,
       doc: /* Return the version numbers of the server of DISPLAY.
The value is a list of three integers: the major and minor
version numbers of the X Protocol in use, and the distributor-specific
release number.  See also the function `x-server-vendor'.

The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [145735 146266])
            ("Sx_server_version" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [145735 146456])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_screens" type (:type "class") nil nil)) nil [146458 146805])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-screens\", Fx_display_screens, Sx_display_screens, 0, 1, 0,
       doc: /* Return the number of screens on the server of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [146458 146805])
            ("Sx_display_screens" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [146458 146873])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_mm_height" type (:type "class") nil nil)) nil [146875 147225])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-mm-height\", Fx_display_mm_height,
       Sx_display_mm_height, 0, 1, 0,
       doc: /* Return the height in millimeters of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [146875 147225])
            ("Sx_display_mm_height" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [146875 147508])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_mm_width" type (:type "class") nil nil)) nil [147510 147849])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-mm-width\", Fx_display_mm_width, Sx_display_mm_width, 0, 1, 0,
       doc: /* Return the width in millimeters of DISPLAY.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [147510 147849])
            ("Sx_display_mm_width" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [147510 148133])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_backing_store" type (:type "class") nil nil)) nil [148135 148571])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-backing-store\", Fx_display_backing_store,
       Sx_display_backing_store, 0, 1, 0,
       doc: /* Return an indication of whether DISPLAY does backing store.
The value may be `always', `when-mapped', or `not-useful'.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [148135 148571])
            ("Sx_display_backing_store" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [148135 148645])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_visual_class" type (:type "class") nil nil)) nil [148647 149124])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-visual-class\", Fx_display_visual_class,
       Sx_display_visual_class, 0, 1, 0,
       doc: /* Return the visual class of DISPLAY.
The value is one of the symbols `static-gray', `gray-scale',
`static-color', `pseudo-color', `true-color', or `direct-color'.

The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [148647 149124])
            ("Sx_display_visual_class" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [148647 149628])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_save_under" type (:type "class") nil nil)) nil [149630 149991])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-save-under\", Fx_display_save_under,
       Sx_display_save_under, 0, 1, 0,
       doc: /* Return t if DISPLAY supports the save-under feature.
The optional argument DISPLAY specifies which display to ask about.
DISPLAY should be either a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [149630 149991])
            ("Sx_display_save_under" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [149630 150048])
            ("x_pixel_width" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [150051 150139])
            ("x_pixel_height" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [150141 150231])
            ("x_char_width" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [150233 150321])
            ("x_char_height" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [150323 150411])
            ("x_screen_planes" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [150413 150518])
            ("x_display_info_for_name" function
               (:pointer 1
                :arguments 
                  ( ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("w32_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [150625 151461])
            ("DEFUN_ARGS_" variable (:type ("Sx_open_connection" type (:type "class") nil nil)) nil [151463 151812])
            ("doc" variable
               (:default-value "DEFUN (\"x-open-connection\", Fx_open_connection, Sx_open_connection,
       1, 3, 0, doc: /* Open a connection to a server.
DISPLAY is the name of the display to connect to.
Optional second arg XRM-STRING is a string of resources in xrdb format.
If the optional third arg MUST-SUCCEED is non-nil,
terminate Emacs if we can't open the connection.  */)"
                :type "int")
                nil [151463 151812])
            ("Sx_open_connection" function
               (:arguments 
                  ( ("must_succeed" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("xrm_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [151463 154061])
            ("DEFUN_ARGS_" variable (:type ("Sx_close_connection" type (:type "class") nil nil)) nil [154063 154342])
            ("doc" variable
               (:default-value "DEFUN (\"x-close-connection\", Fx_close_connection,
       Sx_close_connection, 1, 1, 0,
       doc: /* Close the connection to DISPLAY's server.
For DISPLAY, specify either a frame or a display name (a string).
If DISPLAY is nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [154063 154342])
            ("Sx_close_connection" function
               (:arguments 
                  ( ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [154063 154657])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_list" type (:type "class") nil nil)) nil [154659 154810])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-list\", Fx_display_list, Sx_display_list, 0, 0, 0,
       doc: /* Return the list of display names that Emacs has connections to.  */)"
                :type "int")
                nil [154659 154810])
            ("Sx_display_list" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [154659 155003])
            ("DEFUN_ARGS_" variable (:type ("Sx_synchronize" type (:type "class") nil nil)) nil [155005 155120])
            ("doc" variable
               (:default-value "DEFUN (\"x-synchronize\", Fx_synchronize, Sx_synchronize, 1, 2, 0,
       doc: /* This is a noop on W32 systems.  */)"
                :type "int")
                nil [155005 155120])
            ("Sx_synchronize" function
               (:arguments 
                  ( ("on" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [155005 155188])
            ("DEFUN_ARGS_" variable (:type ("Sx_change_window_property" type (:type "class") nil nil)) nil [155386 156348])
            ("doc" variable
               (:default-value "DEFUN (\"x-change-window-property\", Fx_change_window_property,
       Sx_change_window_property, 2, 6, 0,
       doc: /* Change window property PROP to VALUE on the X window of FRAME.
VALUE may be a string or a list of conses, numbers and/or strings.
If an element in the list is a string, it is converted to
an Atom and the value of the Atom is used.  If an element is a cons,
it is converted to a 32 bit number where the car is the 16 top bits and the
cdr is the lower 16 bits.
FRAME nil or omitted means use the selected frame.
If TYPE is given and non-nil, it is the name of the type of VALUE.
If TYPE is not given or nil, the type is STRING.
FORMAT gives the size in bits of each element if VALUE is a list.
It must be one of 8, 16 or 32.
If VALUE is a string or FORMAT is nil or not given, FORMAT defaults to 8.
If OUTER_P is non-nil, the property is changed for the outer X window of
FRAME.  Default is to change on the edit X window.

Value is VALUE.  */)"
                :type "int")
                nil [155386 156348])
            ("Sx_change_window_property" function
               (:arguments 
                  ( ("outer_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [155386 156998])
            ("DEFUN_ARGS_" variable (:type ("Sx_delete_window_property" type (:type "class") nil nil)) nil [157001 157244])
            ("doc" variable
               (:default-value "DEFUN (\"x-delete-window-property\", Fx_delete_window_property,
       Sx_delete_window_property, 1, 2, 0,
       doc: /* Remove window property PROP from X window of FRAME.
FRAME nil or omitted means use the selected frame.  Value is PROP.  */)"
                :type "int")
                nil [157001 157244])
            ("Sx_delete_window_property" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [157001 157738])
            ("DEFUN_ARGS_" variable (:type ("Sx_window_property" type (:type "class") nil nil)) nil [157741 158037])
            ("doc" variable
               (:default-value "DEFUN (\"x-window-property\", Fx_window_property, Sx_window_property,
       1, 2, 0,
       doc: /* Value is the value of window property PROP on FRAME.
If FRAME is nil or omitted, use the selected frame.  Value is nil
if FRAME hasn't a property with name PROP or if PROP has no string
value.  */)"
                :type "int")
                nil [157741 158037])
            ("Sx_window_property" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [157741 159234])
            ("DEFAULT_HOURGLASS_DELAY" variable (:constant-flag t) nil [159587 159610])
            ("Vhourglass_delay" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [159613 159649])
            ("hourglass_started" function (:type "int") nil [159840 159915])
            ("start_hourglass" function (:type "void") nil [159989 160751])
            ("cancel_hourglass" function (:type "void") nil [160845 161039])
            ("w32_show_hourglass" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [161210 161481])
            ("w32_hide_hourglass" function
               (:typemodifiers ("static")
                :type "void")
                nil [161559 162106])
            ("x_create_tip_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [162273 162378])
            ("compute_tip_xy" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [162379 162495])
            ("tip_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [162547 162569])
            ("tip_timer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [162653 162675])
            ("tip_window" variable (:type ("Window" type (:type "class") nil nil)) nil [162676 162694])
            ("last_show_tip_args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [162813 162844])
            ("Vx_max_tooltip_size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [162906 162938])
            ("unwind_create_tip_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [162941 163188])
            ("x_create_tip_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("text" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [163597 172052])
            ("compute_tip_xy" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("dy" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dx" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("root_y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("root_x" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [172379 174948])
            ("DEFUN_ARGS_" variable (:type ("Sx_show_tip" type (:type "class") nil nil)) nil [174951 176013])
            ("doc" variable
               (:default-value "DEFUN (\"x-show-tip\", Fx_show_tip, Sx_show_tip, 1, 6, 0,
       doc: /* Show STRING in a \\\"tooltip\\\" window on frame FRAME.
A tooltip window is a small window displaying a string.

This is an internal function; Lisp code should call `tooltip-show'.

FRAME nil or omitted means use the selected frame.

PARMS is an optional list of frame parameters which can be
used to change the tooltip's appearance.

Automatically hide the tooltip after TIMEOUT seconds.  TIMEOUT nil
means use the default timeout of 5 seconds.

If the list of frame parameters PARMS contains a `left' parameter,
the tooltip is displayed at that x-position.  Otherwise it is
displayed at the mouse position, with offset DX added (default is 5 if
DX isn't specified).  Likewise for the y-position; if a `top' frame
parameter is specified, it determines the y-position of the tooltip
window, otherwise it is displayed at the mouse position, with offset
DY added (default is -10).

A tooltip's maximum size is specified by `x-max-tooltip-size'.
Text larger than the specified size is clipped.  */)"
                :type "int")
                nil [174951 176013])
            ("Sx_show_tip" function
               (:arguments 
                  ( ("dy" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dx" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("timeout" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [174951 182965])
            ("DEFUN_ARGS_" variable (:type ("Sx_hide_tip" type (:type "class") nil nil)) nil [182968 183140])
            ("doc" variable
               (:default-value "DEFUN (\"x-hide-tip\", Fx_hide_tip, Sx_hide_tip, 0, 0, 0,
       doc: /* Hide the current tooltip window, if there is any.
Value is t if tooltip was open, nil otherwise.  */)"
                :type "int")
                nil [182968 183140])
            ("Sx_hide_tip" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [182968 183736])
            ("Qfile_name_history" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [183913 183951])
            ("file_dialog_callback" function
               (:arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil)
                    ("msg" variable (:type ("UINT" type (:type "class") nil nil)) nil nil)
                    ("wParam" variable (:type ("WPARAM" type (:type "class") nil nil)) nil nil)
                    ("lParam" variable (:type ("LPARAM" type (:type "class") nil nil)) nil nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [184263 185226])
            ("NEWOPENFILENAME" type
               (:typedef ("" type
                     (:members 
                        ( ("real_details" variable (:type ("OPENFILENAME" type (:type "class") nil nil)) (reparse-symbol classsubparts) [185499 185525])
                          ("pReserved" variable
                             (:pointer 1
                              :type "void")
                              (reparse-symbol classsubparts) [185528 185545])
                          ("dwReserved" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [185548 185565])
                          ("FlagsEx" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [185568 185582]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [185480 185601])
            ("DEFUN_ARGS_" variable (:type ("Sx_file_dialog" type (:type "class") nil nil)) nil [185604 185961])
            ("doc" variable
               (:default-value "DEFUN (\"x-file-dialog\", Fx_file_dialog, Sx_file_dialog, 2, 5, 0,
       doc: /* Read file name, prompting with PROMPT in directory DIR.
Use a file selection dialog.
Select DEFAULT-FILENAME in the dialog's file selection box, if
specified.  Ensure that file exists if MUSTMATCH is non-nil.
If ONLY-DIR-P is non-nil, the user can only select directories.  */)"
                :type "int")
                nil [185604 185961])
            ("Sx_file_dialog" function
               (:arguments 
                  ( ("only_dir_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("mustmatch" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("default_filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dir" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [185604 189731])
            ("DEFUN_ARGS_" variable (:type ("Ssystem_move_file_to_trash" type (:type "class") nil nil)) nil [189855 190040])
            ("doc" variable
               (:default-value "DEFUN (\"system-move-file-to-trash\", Fsystem_move_file_to_trash,
       Ssystem_move_file_to_trash, 1, 1, 0,
       doc: /* Move file or directory named FILENAME to the recycle bin.  */)"
                :type "int")
                nil [189855 190040])
            ("Ssystem_move_file_to_trash" function
               (:arguments 
                  ( ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [189855 191354])
            ("DEFUN_ARGS_" variable (:type ("Sw32_send_sys_command" type (:type "class") nil nil)) nil [191557 192023])
            ("doc" variable
               (:default-value "DEFUN (\"w32-send-sys-command\", Fw32_send_sys_command,
       Sw32_send_sys_command, 1, 2, 0,
       doc: /* Send frame a Windows WM_SYSCOMMAND message of type COMMAND.
Some useful values for COMMAND are #xf030 to maximize frame (#xf020
to minimize), #xf120 to restore frame to original size, and #xf100
to activate the menubar for keyboard access.  #xf140 activates the
screen saver if defined.

If optional parameter FRAME is not specified, use selected frame.  */)"
                :type "int")
                nil [191557 192023])
            ("Sw32_send_sys_command" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [191557 192234])
            ("DEFUN_ARGS_" variable (:type ("Sw32_shell_execute" type (:type "class") nil nil)) nil [192236 194277])
            ("doc" variable
               (:default-value "DEFUN (\"w32-shell-execute\", Fw32_shell_execute, Sw32_shell_execute, 2, 4, 0,
       doc: /* Get Windows to perform OPERATION on DOCUMENT.
This is a wrapper around the ShellExecute system function, which
invokes the application registered to handle OPERATION for DOCUMENT.

OPERATION is either nil or a string that names a supported operation.
What operations can be used depends on the particular DOCUMENT and its
handler application, but typically it is one of the following common
operations:

 \\\"open\\\"    - open DOCUMENT, which could be a file, a directory, or an
               executable program.  If it is an application, that
               application is launched in the current buffer's default
               directory.  Otherwise, the application associated with
               DOCUMENT is launched in the buffer's default directory.
 \\\"print\\\"   - print DOCUMENT, which must be a file
 \\\"explore\\\" - start the Windows Explorer on DOCUMENT
 \\\"edit\\\"    - launch an editor and open DOCUMENT for editing; which
               editor is launched depends on the association for the
               specified DOCUMENT
 \\\"find\\\"    - initiate search starting from DOCUMENT which must specify
               a directory
 nil       - invoke the default OPERATION, or \\\"open\\\" if default is
               not defined or unavailable

DOCUMENT is typically the name of a document file or a URL, but can
also be a program executable to run, or a directory to open in the
Windows Explorer.

If DOCUMENT is a program executable, the optional third arg PARAMETERS
can be a string containing command line parameters that will be passed
to the program; otherwise, PARAMETERS should be nil or unspecified.

Optional fourth argument SHOW-FLAG can be used to control how the
application will be displayed when it is invoked.  If SHOW-FLAG is nil
or unspecified, the application is displayed normally, otherwise it is
an integer representing a ShowWindow flag:

  0 - start hidden
  1 - start normally
  3 - start maximized
  6 - start minimized  */)"
                :type "int")
                nil [192236 194277])
            ("Sw32_shell_execute" function
               (:arguments 
                  ( ("show_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parameters" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("document" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("operation" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [192236 195031])
            ("lookup_vk_code" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("key" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [195218 195228]))                  
                :type "int")
                nil [195191 195378])
            ("w32_parse_hot_key" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [195463 197220])
            ("DEFUN_ARGS_" variable (:type ("Sw32_register_hot_key" type (:type "class") nil nil)) nil [197222 197950])
            ("doc" variable
               (:default-value "DEFUN (\"w32-register-hot-key\", Fw32_register_hot_key,
       Sw32_register_hot_key, 1, 1, 0,
       doc: /* Register KEY as a hot-key combination.
Certain key combinations like Alt-Tab are reserved for system use on
Windows, and therefore are normally intercepted by the system.  However,
most of these key combinations can be received by registering them as
hot-keys, overriding their special meaning.

KEY must be a one element key definition in vector form that would be
acceptable to `define-key' (e.g. [A-tab] for Alt-Tab).  The meta
modifier is interpreted as Alt if `w32-alt-is-meta' is t, and hyper
is always interpreted as the Windows modifier keys.

The return value is the hotkey-id if registered, otherwise nil.  */)"
                :type "int")
                nil [197222 197950])
            ("Sw32_register_hot_key" function
               (:arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [197222 198731])
            ("DEFUN_ARGS_" variable (:type ("Sw32_unregister_hot_key" type (:type "class") nil nil)) nil [198733 198892])
            ("doc" variable
               (:default-value "DEFUN (\"w32-unregister-hot-key\", Fw32_unregister_hot_key,
       Sw32_unregister_hot_key, 1, 1, 0,
       doc: /* Unregister KEY as a hot-key combination.  */)"
                :type "int")
                nil [198733 198892])
            ("Sw32_unregister_hot_key" function
               (:arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [198733 199618])
            ("DEFUN_ARGS_" variable (:type ("Sw32_registered_hot_keys" type (:type "class") nil nil)) nil [199620 199780])
            ("doc" variable
               (:default-value "DEFUN (\"w32-registered-hot-keys\", Fw32_registered_hot_keys,
       Sw32_registered_hot_keys, 0, 0, 0,
       doc: /* Return list of registered hot-key IDs.  */)"
                :type "int")
                nil [199620 199780])
            ("Sw32_registered_hot_keys" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [199620 199847])
            ("DEFUN_ARGS_" variable (:type ("Sw32_reconstruct_hot_key" type (:type "class") nil nil)) nil [199849 200052])
            ("doc" variable
               (:default-value "DEFUN (\"w32-reconstruct-hot-key\", Fw32_reconstruct_hot_key,
       Sw32_reconstruct_hot_key, 1, 1, 0,
       doc: /* Convert hot-key ID to a lisp key combination.
usage: (w32-reconstruct-hot-key ID)  */)"
                :type "int")
                nil [199849 200052])
            ("Sw32_reconstruct_hot_key" function
               (:arguments 
                  ( ("hotkeyid" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [199849 200731])
            ("DEFUN_ARGS_" variable (:type ("Sw32_toggle_lock_key" type (:type "class") nil nil)) nil [200733 201066])
            ("doc" variable
               (:default-value "DEFUN (\"w32-toggle-lock-key\", Fw32_toggle_lock_key,
       Sw32_toggle_lock_key, 1, 2, 0,
       doc: /* Toggle the state of the lock key KEY.
KEY can be `capslock', `kp-numlock', or `scroll'.
If the optional parameter NEW-STATE is a number, then the state of KEY
is set to off if the low bit of NEW-STATE is zero, otherwise on.  */)"
                :type "int")
                nil [200733 201066])
            ("Sw32_toggle_lock_key" function
               (:arguments 
                  ( ("new_state" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [200733 201873])
            ("DEFUN_ARGS_" variable (:type ("Sw32_window_exists_p" type (:type "class") nil nil)) nil [201875 202121])
            ("doc" variable
               (:default-value "DEFUN (\"w32-window-exists-p\", Fw32_window_exists_p, Sw32_window_exists_p,
       2, 2, 0,
       doc: /* Return non-nil if a window exists with the specified CLASS and NAME.

This is a direct interface to the Windows API FindWindow function.  */)"
                :type "int")
                nil [201875 202121])
            ("name" variable (:type "int") nil [202157 202162])
            ("DEFUN_ARGS_" variable (:type ("Sw32_battery_status" type (:type "class") nil nil)) nil [202447 203041])
            ("doc" variable
               (:default-value "DEFUN (\"w32-battery-status\", Fw32_battery_status, Sw32_battery_status, 0, 0, 0,
       doc: /* Get power status information from Windows system.

The following %-sequences are provided:
%L AC line status (verbose)
%B Battery status (verbose)
%b Battery status, empty means high, `-' means low,
   `!' means critical, and `+' means charging
%p Battery load percentage
%s Remaining time (to charge or discharge) in seconds
%m Remaining time (to charge or discharge) in minutes
%h Remaining time (to charge or discharge) in hours
%t Remaining time (to charge or discharge) in the form `h:min'  */)"
                :type "int")
                nil [202447 203041])
            ("Sw32_battery_status" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [202447 205890])
            ("DEFUN_ARGS_" variable (:type ("Sfile_system_info" type (:type "class") nil nil)) nil [205894 206312])
            ("doc" variable
               (:default-value "DEFUN (\"file-system-info\", Ffile_system_info, Sfile_system_info, 1, 1, 0,
       doc: /* Return storage information about the file system FILENAME is on.
Value is a list of floats (TOTAL FREE AVAIL), where TOTAL is the total
storage of the file system, FREE is the free storage, and AVAIL is the
storage available to a non-superuser.  All 3 numbers are in bytes.
If the underlying system call fails, value is nil.  */)"
                :type "int")
                nil [205894 206312])
            ("Sfile_system_info" function
               (:arguments 
                  ( ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [205894 208805])
            ("DEFUN_ARGS_" variable (:type ("Sdefault_printer_name" type (:type "class") nil nil)) nil [208808 208964])
            ("doc" variable
               (:default-value "DEFUN (\"default-printer-name\", Fdefault_printer_name, Sdefault_printer_name,
       0, 0, 0, doc: /* Return the name of Windows default printer device.  */)"
                :type "int")
                nil [208808 208964])
            ("Sdefault_printer_name" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [208808 210873])
            ("w32_frame_parm_handlers" variable
               (:dereference 1
                :default-value "{
  x_set_autoraise,
  x_set_autolower,
  x_set_background_color,
  x_set_border_color,
  x_set_border_width,
  x_set_cursor_color,
  x_set_cursor_type,
  x_set_font,
  x_set_foreground_color,
  x_set_icon_name,
  x_set_icon_type,
  x_set_internal_border_width,
  x_set_menu_bar_lines,
  x_set_mouse_color,
  x_explicitly_set_name,
  x_set_scroll_bar_width,
  x_set_title,
  x_set_unsplittable,
  x_set_vertical_scroll_bars,
  x_set_visibility,
  x_set_tool_bar_lines,
  0, /* x_set_scroll_bar_foreground, */
  0, /* x_set_scroll_bar_background, */
  x_set_screen_gamma,
  x_set_line_spacing,
  x_set_fringe_width,
  x_set_fringe_width,
  0, /* x_set_wait_for_wm, */
  x_set_fullscreen,
  x_set_font_backend,
  x_set_alpha,
  0, /* x_set_sticky */
}"
                :type ("frame_parm_handler" type (:type "class") nil nil))
                nil [211157 211954])
            ("syms_of_w32fns" function (:type "void") nil [211956 225990])
            ("globals_of_w32fns" function (:type "void") nil [226345 227865])
            ("w32_abort" function (:type "void") nil [227881 228519])
            ("w32_last_error" function (:type "int") nil [228560 228611]))          
    :file "w32fns.c"
    :pointmax 228698
    :fsize 228697
    :lastmodtime '(19383 49276)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 208808 . 208964) (symbol "__attribute__" 208808 . 208964) (symbol "Lisp_Subr" 208808 . 208964) (symbol "Lisp_Object" 208808 . 208964) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 205894 . 206312) (symbol "__attribute__" 205894 . 206312) (symbol "Lisp_Subr" 205894 . 206312) (symbol "Lisp_Object" 205894 . 206312) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 202447 . 203041) (symbol "__attribute__" 202447 . 203041) (symbol "Lisp_Subr" 202447 . 203041) (symbol "Lisp_Object" 202447 . 203041) (semantic-list 202163 . 202445) (punctuation 202155 . 202156) (CLASS 202150 . 202155) (symbol 202138 . 202149) (semantic-list 202124 . 202137) (symbol "Sw32_window_exists_p" 201875 . 202121) (symbol "Lisp_Object" 201875 . 202121) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 201875 . 202121) (symbol "__attribute__" 201875 . 202121) (symbol "Lisp_Subr" 201875 . 202121) (symbol "Lisp_Object" 201875 . 202121) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 200733 . 201066) (symbol "__attribute__" 200733 . 201066) (symbol "Lisp_Subr" 200733 . 201066) (symbol "Lisp_Object" 200733 . 201066) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 199849 . 200052) (symbol "__attribute__" 199849 . 200052) (symbol "Lisp_Subr" 199849 . 200052) (symbol "Lisp_Object" 199849 . 200052) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 199620 . 199780) (symbol "__attribute__" 199620 . 199780) (symbol "Lisp_Subr" 199620 . 199780) (symbol "Lisp_Object" 199620 . 199780) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 198733 . 198892) (symbol "__attribute__" 198733 . 198892) (symbol "Lisp_Subr" 198733 . 198892) (symbol "Lisp_Object" 198733 . 198892) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 197222 . 197950) (symbol "__attribute__" 197222 . 197950) (symbol "Lisp_Subr" 197222 . 197950) (symbol "Lisp_Object" 197222 . 197950) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 192236 . 194277) (symbol "__attribute__" 192236 . 194277) (symbol "Lisp_Subr" 192236 . 194277) (symbol "Lisp_Object" 192236 . 194277) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 191557 . 192023) (symbol "__attribute__" 191557 . 192023) (symbol "Lisp_Subr" 191557 . 192023) (symbol "Lisp_Object" 191557 . 192023) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 189855 . 190040) (symbol "__attribute__" 189855 . 190040) (symbol "Lisp_Subr" 189855 . 190040) (symbol "Lisp_Object" 189855 . 190040) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 185604 . 185961) (symbol "__attribute__" 185604 . 185961) (symbol "Lisp_Subr" 185604 . 185961) (symbol "Lisp_Object" 185604 . 185961) (symbol 184258 . 184262) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 182968 . 183140) (symbol "__attribute__" 182968 . 183140) (symbol "Lisp_Subr" 182968 . 183140) (symbol "Lisp_Object" 182968 . 183140) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 174951 . 176013) (symbol "__attribute__" 174951 . 176013) (symbol "Lisp_Subr" 174951 . 176013) (symbol "Lisp_Object" 174951 . 176013) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 157741 . 158037) (symbol "__attribute__" 157741 . 158037) (symbol "Lisp_Subr" 157741 . 158037) (symbol "Lisp_Object" 157741 . 158037) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 157001 . 157244) (symbol "__attribute__" 157001 . 157244) (symbol "Lisp_Subr" 157001 . 157244) (symbol "Lisp_Object" 157001 . 157244) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 155386 . 156348) (symbol "__attribute__" 155386 . 156348) (symbol "Lisp_Subr" 155386 . 156348) (symbol "Lisp_Object" 155386 . 156348) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 155005 . 155120) (symbol "__attribute__" 155005 . 155120) (symbol "Lisp_Subr" 155005 . 155120) (symbol "Lisp_Object" 155005 . 155120) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 154659 . 154810) (symbol "__attribute__" 154659 . 154810) (symbol "Lisp_Subr" 154659 . 154810) (symbol "Lisp_Object" 154659 . 154810) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 154063 . 154342) (symbol "__attribute__" 154063 . 154342) (symbol "Lisp_Subr" 154063 . 154342) (symbol "Lisp_Object" 154063 . 154342) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 151463 . 151812) (symbol "__attribute__" 151463 . 151812) (symbol "Lisp_Subr" 151463 . 151812) (symbol "Lisp_Object" 151463 . 151812) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 149630 . 149991) (symbol "__attribute__" 149630 . 149991) (symbol "Lisp_Subr" 149630 . 149991) (symbol "Lisp_Object" 149630 . 149991) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 148647 . 149124) (symbol "__attribute__" 148647 . 149124) (symbol "Lisp_Subr" 148647 . 149124) (symbol "Lisp_Object" 148647 . 149124) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 148135 . 148571) (symbol "__attribute__" 148135 . 148571) (symbol "Lisp_Subr" 148135 . 148571) (symbol "Lisp_Object" 148135 . 148571) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 147510 . 147849) (symbol "__attribute__" 147510 . 147849) (symbol "Lisp_Subr" 147510 . 147849) (symbol "Lisp_Object" 147510 . 147849) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 146875 . 147225) (symbol "__attribute__" 146875 . 147225) (symbol "Lisp_Subr" 146875 . 147225) (symbol "Lisp_Object" 146875 . 147225) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 146458 . 146805) (symbol "__attribute__" 146458 . 146805) (symbol "Lisp_Subr" 146458 . 146805) (symbol "Lisp_Object" 146458 . 146805) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 145735 . 146266) (symbol "__attribute__" 145735 . 146266) (symbol "Lisp_Subr" 145735 . 146266) (symbol "Lisp_Object" 145735 . 146266) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 145301 . 145648) (symbol "__attribute__" 145301 . 145648) (symbol "Lisp_Subr" 145301 . 145648) (symbol "Lisp_Object" 145301 . 145648) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 144773 . 145161) (symbol "__attribute__" 144773 . 145161) (symbol "Lisp_Subr" 144773 . 145161) (symbol "Lisp_Object" 144773 . 145161) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 143838 . 144194) (symbol "__attribute__" 143838 . 144194) (symbol "Lisp_Subr" 143838 . 144194) (symbol "Lisp_Object" 143838 . 144194) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 143324 . 143663) (symbol "__attribute__" 143324 . 143663) (symbol "Lisp_Subr" 143324 . 143663) (symbol "Lisp_Object" 143324 . 143663) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 142799 . 143153) (symbol "__attribute__" 142799 . 143153) (symbol "Lisp_Subr" 142799 . 143153) (symbol "Lisp_Object" 142799 . 143153) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 142279 . 142629) (symbol "__attribute__" 142279 . 142629) (symbol "Lisp_Subr" 142279 . 142629) (symbol "Lisp_Object" 142279 . 142629) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 141675 . 142083) (symbol "__attribute__" 141675 . 142083) (symbol "Lisp_Subr" 141675 . 142083) (symbol "Lisp_Object" 141675 . 142083) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 141322 . 141479) (symbol "__attribute__" 141322 . 141479) (symbol "Lisp_Subr" 141322 . 141479) (symbol "Lisp_Object" 141322 . 141479) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 140706 . 140851) (symbol "__attribute__" 140706 . 140851) (symbol "Lisp_Subr" 140706 . 140851) (symbol "Lisp_Object" 140706 . 140851) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 140324 . 140481) (symbol "__attribute__" 140324 . 140481) (symbol "Lisp_Subr" 140324 . 140481) (symbol "Lisp_Object" 140324 . 140481) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 140079 . 140223) (symbol "__attribute__" 140079 . 140223) (symbol "Lisp_Subr" 140079 . 140223) (symbol "Lisp_Object" 140079 . 140223) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 127575 . 128097) (symbol "__attribute__" 127575 . 128097) (symbol "Lisp_Subr" 127575 . 128097) (symbol "Lisp_Object" 127575 . 128097) (symbol 82864 . 82871) (symbol 79612 . 79617) (symbol 59990 . 59997) (EXTERN 59983 . 59989) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 29286 . 29424) (symbol "__attribute__" 29286 . 29424) (symbol "Lisp_Subr" 29286 . 29424) (symbol "Lisp_Object" 29286 . 29424) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 13727 . 14068) (symbol "__attribute__" 13727 . 14068) (symbol "Lisp_Subr" 13727 . 14068) (symbol "Lisp_Object" 13727 . 14068) (punctuation 8003 . 8004) (TYPEDEF 7905 . 7912) (punctuation 7903 . 7904) (TYPEDEF 7824 . 7831) (punctuation 7822 . 7823) (TYPEDEF 7714 . 7721) (punctuation 7712 . 7713) (TYPEDEF 7635 . 7642) (punctuation 7633 . 7634) (TYPEDEF 7574 . 7581) (punctuation 7572 . 7573) (TYPEDEF 7448 . 7455) (punctuation 7446 . 7447) (TYPEDEF 7360 . 7367))
    :lexical-table 
        '(("MOUSE_MOVE_ID" . ((number "2" 8699 . 8700)))
          ("RAW_HOTKEY_VK_CODE" (spp-arg-list ("k") 72355 . 72358) . ((semantic-list "((k) & 255)" 72361 . 72372)))
          ("HOTKEY_ID" (spp-arg-list ("k") 72143 . 72146) . ((semantic-list "(XFASTINT (k) & 0xbfff)" 72156 . 72179)))
          ("HOTKEY_MODIFIERS" (spp-arg-list ("k") 72255 . 72258) . ((semantic-list "(XFASTINT (k) >> 8)" 72261 . 72280)))
          ("EMACS_RCONTROL" . ((number "1" 64091 . 64092)))
          ("EMACS_RMENU" . ((number "3" 64141 . 64142)))
          ("HOURGLASS_ID" . ((number "4" 8745 . 8746)))
          ("HOTKEY" (spp-arg-list ("vk" "mods") 72067 . 72077) . ((symbol "make_number" 72083 . 72094) (semantic-list "(((vk) & 255) | ((mods) << 8))" 72095 . 72125)))
          ("FOF_NO_CONNECTED_ELEMENTS" . ((number "0x2000" 1789 . 1795)))
          ("IDC_HAND" . ((symbol "MAKEINTRESOURCE" 5275 . 5290) (semantic-list "(32649)" 5290 . 5297)))
          ("FILE_NAME_TEXT_FIELD" . ((symbol "edt1" 1675 . 1679)))
          ("MOUSE_BUTTON_ID" . ((number "1" 8675 . 8676)))
          ("MMOUSE" . ((number "2" 6461 . 6462)))
          ("RMOUSE" . ((number "4" 6478 . 6479)))
          ("W32_COLOR" (spp-arg-list ("pe") 37173 . 37177) . ((symbol "RGB" 37179 . 37182) (semantic-list "(pe.peRed, pe.peGreen, pe.peBlue)" 37183 . 37216)))
          ("RAW_HOTKEY_MODIFIERS" (spp-arg-list ("k") 72401 . 72404) . ((semantic-list "((k) >> 8)" 72405 . 72415)))
          ("DEFAULT_HOURGLASS_DELAY" . ((number "1" 159611 . 159612)))
          ("EMACS_LMENU" . ((number "2" 64116 . 64117)))
          ("HOTKEY_VK_CODE" (spp-arg-list ("k") 72202 . 72205) . ((semantic-list "(XFASTINT (k) & 255)" 72210 . 72230)))
          ("SYSTEM_COLOR_PREFIX_LEN" . ((semantic-list "(sizeof (SYSTEM_COLOR_PREFIX) - 1)" 6335 . 6369)))
          ("MONITOR_DEFAULT_TO_NEAREST" . ((number "2" 6954 . 6955)))
          ("MENU_FREE_DELAY" . ((number "1000" 8864 . 8868)))
          ("SET_W32_COLOR" (spp-arg-list ("pe" "color") 37238 . 37249) . 
              ((DO "do" 37254 . 37256) (semantic-list "{ \\
      pe.peRed = GetRValue (color); \\
      pe.peGreen = GetGValue (color); \\
      pe.peBlue = GetBValue (color); \\
      pe.peFlags = 0; \\
    }" 37263 . 37413) (WHILE "while" 37414 . 37419) (semantic-list "(0)" 37420 . 37423)))
          ("EMACS_LCONTROL" . ((number "0" 64066 . 64067)))
          ("RAW_HOTKEY_ID" (spp-arg-list ("k") 72303 . 72306) . ((semantic-list "((k) & 0xbfff)" 72314 . 72328)))
          ("SYSTEM_COLOR_PREFIX" . ((string "\"System\"" 6294 . 6302)))
          ("LMOUSE" . ((number "1" 6444 . 6445)))
          ("MENU_FREE_ID" . ((number "3" 8722 . 8723)))
          )

    )
   (semanticdb-table "sysdep.c"
    :major-mode 'c-mode
    :tags 
        '( ("ctype.h" include (:system-flag t) nil [949 967])
            ("signal.h" include (:system-flag t) nil [968 987])
            ("stdio.h" include (:system-flag t) nil [988 1006])
            ("setjmp.h" include (:system-flag t) nil [1007 1026])
            ("pwd.h" include (:system-flag t) nil [1045 1061])
            ("grp.h" include (:system-flag t) nil [1062 1078])
            ("limits.h" include (:system-flag t) nil [1124 1143])
            ("unistd.h" include (:system-flag t) nil [1192 1211])
            ("alloca.h" include (:system-flag t) nil [1240 1259])
            ("lisp.h" include nil nil [1288 1305])
            ("sysselect.h" include nil nil [1560 1582])
            ("blockinput.h" include nil nil [1591 1614])
            ("sys_fwrite" variable (:constant-flag t) nil [1830 1840])
            ("sys/types.h" include (:system-flag t) nil [1876 1898])
            ("sys/stat.h" include (:system-flag t) nil [1899 1920])
            ("errno.h" include (:system-flag t) nil [1921 1939])
            ("setpgrp" variable (:constant-flag t) nil [2026 2033])
            ("dos.h" include (:system-flag t) nil [2240 2256])
            ("dosfns.h" include nil nil [2257 2276])
            ("msdos.h" include nil nil [2277 2295])
            ("sys/param.h" include (:system-flag t) nil [2296 2318])
            ("etext" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [2338 2355])
            ("__asm__" function
               (:prototype-flag t
                :type ("start" type (:type "class") nil nil))
                nil [2372 2396])
            ("errno" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [2446 2463])
            ("sys/file.h" include (:system-flag t) nil [2479 2500])
            ("fcntl.h" include (:system-flag t) nil [2522 2540])
            ("sys/ioctl.h" include (:system-flag t) nil [2563 2585])
            ("systty.h" include nil nil [2594 2613])
            ("syswait.h" include nil nil [2614 2634])
            ("sys/utsname.h" include (:system-flag t) nil [2654 2678])
            ("memory.h" include (:system-flag t) nil [2679 2698])
            ("quit_char" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [2717 2738])
            ("keyboard.h" include nil nil [2740 2761])
            ("frame.h" include nil nil [2762 2780])
            ("window.h" include nil nil [2781 2800])
            ("termhooks.h" include nil nil [2801 2823])
            ("termchar.h" include nil nil [2824 2845])
            ("termopts.h" include nil nil [2846 2867])
            ("dispextern.h" include nil nil [2868 2891])
            ("process.h" include nil nil [2892 2912])
            ("cm.h" include nil nil [2913 2928])
            ("QCprocess" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3002 3048])
            ("QCspeed" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3002 3048])
            ("QCport" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3002 3048])
            ("Qeven" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3049 3114])
            ("Qodd" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3049 3114])
            ("QCparity" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3049 3114])
            ("QCstopbits" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3049 3114])
            ("QCbytesize" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3049 3114])
            ("QCsummary" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3115 3169])
            ("Qsw" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3115 3169])
            ("Qhw" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3115 3169])
            ("QCflowcontrol" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3115 3169])
            ("syssignal.h" include nil nil [3407 3429])
            ("systime.h" include nil nil [3430 3450])
            ("utime.h" include (:system-flag t) nil [3471 3489])
            ("LPASS8" variable (:constant-flag t) nil [3837 3843])
            ("baud_convert" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
    0, 50, 75, 110, 135, 150, 200, 300, 600, 1200,
    1800, 2400, 4800, 9600, 19200, 38400
  }"
                :type "int")
                nil [3854 3988])
            ("termios.h" include (:system-flag t) nil [4010 4030])
            ("emacs_ospeed" variable (:type "int") nil [4200 4217])
            ("__attribute__" function
               (:prototype-flag t
                :type "int")
                nil [4244 4254])
            ("sigprocmask_set" variable (:type ("SIGMASKTYPE" type (:type "class") nil nil)) nil [4332 4360])
            ("get_current_dir_name" function
               (:pointer 1
                :type "char")
                nil [4646 6254])
            ("discard_tty_input" function (:type "void") nil [6321 6901])
            ("init_baud_rate" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [7404 7411]))                  
                :type "void")
                nil [7383 8331])
            ("set_exclusive_use" function
               (:arguments 
                  ( ("fd" variable (:type "int") nil nil))                  
                :type "void")
                nil [8348 8496])
            ("wait_debugging" variable (:type "int") nil [8712 8731])
            ("wait_for_termination_signal" function (:type "void") nil [8820 8861])
            ("wait_for_termination" function
               (:arguments 
                  ( ("pid" variable (:type "int") nil nil))                  
                :type "void")
                nil [8998 10943])
            ("flush_pending_output" function
               (:arguments 
                  ( ("channel" variable (:type "int") nil nil))                  
                :type "void")
                nil [11074 11546])
            ("child_setup_tty" function
               (:arguments 
                  ( ("out" variable (:type "int") nil nil))                  
                :type "void")
                nil [11800 14632])
            ("save_signal" type
               (:members 
                  ( ("code" variable (:type "int") (reparse-symbol classsubparts) [14737 14746])
                    ("handler" variable
                       (:functionpointer-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [14749 14779]))                  
                :type "struct")
                nil [14714 14782])
            ("save_signal_handlers" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("save_signal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14784 14845])
            ("restore_signal_handlers" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("save_signal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14846 14910])
            ("sys_suspend" function (:type "void") nil [14978 15330])
            ("sys_subshell" function (:type "void") nil [15357 18328])
            ("save_signal_handlers" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("saved_handlers" variable
                       (:pointer 1
                        :type ("save_signal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [18330 18589])
            ("restore_signal_handlers" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("saved_handlers" variable
                       (:pointer 1
                        :type ("save_signal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [18591 18817])
            ("init_sigio" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [18896 18903]))                  
                :type "void")
                nil [18879 18907])
            ("reset_sigio" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [18927 18934]))                  
                :type "void")
                nil [18909 18938])
            ("request_sigio" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [18960 18965]))                  
                :type "void")
                nil [18940 18969])
            ("unrequest_sigio" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [18993 18998]))                  
                :type "void")
                nil [18971 19002])
            ("emacs_get_tty" function
               (:arguments 
                  ( ("fd" variable (:type "int") nil nil)
                    ("settings" variable
                       (:pointer 1
                        :type ("emacs_tty" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [22598 23662])
            ("emacs_set_tty" function
               (:arguments 
                  ( ("fd" variable (:type "int") nil nil)
                    ("settings" variable
                       (:pointer 1
                        :type ("emacs_tty" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("flushp" variable (:type "int") nil nil))                  
                :type "int")
                nil [23851 26079])
            ("_sobuf" variable
               (:dereference 1
                :type "unsigned char")
                nil [26312 26343])
            ("init_all_sys_modes" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [26653 26658]))                  
                :type "void")
                nil [26628 26765])
            ("init_sys_modes" function
               (:arguments 
                  ( ("tty_out" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [26828 36019])
            ("tabs_safe_p" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [36161 36168]))                  
                :type "int")
                nil [36144 36263])
            ("get_tty_size" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [36434 36441])
                    ("widthp" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [36442 36454])
                    ("heightp" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [36455 36468]))                  
                :type "void")
                nil [36415 37115])
            ("set_window_size" function
               (:arguments 
                  ( ("width" variable (:type "int") nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("fd" variable (:type "int") nil nil))                  
                :type "int")
                nil [37239 37785])
            ("reset_all_sys_modes" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [37871 37876]))                  
                :type "void")
                nil [37845 37984])
            ("reset_sys_modes" function
               (:arguments 
                  ( ("tty_out" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [38114 39977])
            ("start_of_text" function
               (:pointer 1
                :type "char")
                nil [41636 41795])
            ("start_of_data" function
               (:pointer 1
                :type "char")
                nil [43078 43629])
            ("Vsystem_name" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43814 43846])
            ("init_system_name" function (:type "void") nil [44027 47230])
            ("sysselect.h" include nil nil [47275 47297])
            ("x" variable
               (:pointer 1
                :default-value "&x_windows_lose_if_no_select_system_call;"
                :type "int")
                nil [47480 47530])
            ("SELECT_PAUSE" variable (:constant-flag t) nil [47716 47728])
            ("select_alarmed" variable (:type "int") nil [47731 47750])
            ("read_alarm_throw" variable (:type ("jmp_buf" type (:type "class") nil nil)) nil [47804 47829])
            ("read_alarm_should_throw" variable (:type "int") nil [47977 48005])
            ("select_alarm" function (:type "void") nil [48007 48184])
            ("sys_select" function
               (:arguments 
                  ( ("nfds" variable (:type "int") nil nil)
                    ("efds" variable
                       (:pointer 1
                        :type ("SELECT_TYPE" type (:type "class") nil nil))
                        nil nil)
                    ("wfds" variable
                       (:pointer 1
                        :type ("SELECT_TYPE" type (:type "class") nil nil))
                        nil nil)
                    ("rfds" variable
                       (:pointer 1
                        :type ("SELECT_TYPE" type (:type "class") nil nil))
                        nil nil)
                    ("timeout" variable
                       (:pointer 1
                        :type ("EMACS_TIME" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [48234 51570])
            ("read_input_waiting" function (:type "void") nil [51692 53170])
            ("select" variable (:constant-flag t) nil [53207 53213])
            ("my_sys_siglist" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [55633 55667])
            ("sys_siglist" variable (:constant-flag t) nil [55726 55737])
            ("init_signals" function (:type "void") nil [55761 59855])
            ("RAND_BITS" variable (:constant-flag t) nil [60251 60260])
            ("seed_random" function
               (:arguments 
                  ( ("arg" variable (:type "long") nil nil))                  
                :type "void")
                nil [60874 61060])
            ("get_random" function (:type "long") nil [61197 61659])
            ("emacs_open" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("mode" variable (:type "int") nil nil)
                    ("oflag" variable (:type "int") nil nil))                  
                :type "int")
                nil [61966 62176])
            ("emacs_close" function
               (:arguments 
                  ( ("fd" variable (:type "int") nil nil))                  
                :type "int")
                nil [62178 62613])
            ("emacs_read" function
               (:arguments 
                  ( ("fildes" variable (:type "int") nil nil)
                    ("buf" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbyte" variable (:type "unsigned int") nil nil))                  
                :type "int")
                nil [62615 62840])
            ("emacs_write" function
               (:arguments 
                  ( ("fildes" variable (:type "int") nil nil)
                    ("buf" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbyte" variable (:type "unsigned int") nil nil))                  
                :type "int")
                nil [62842 63517])
            ("set_file_times" function
               (:arguments 
                  ( ("filename" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("mtime" variable (:type ("EMACS_TIME" type (:type "class") nil nil)) nil nil)
                    ("atime" variable (:type ("EMACS_TIME" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [67641 68037])
            ("bcopy" function
               (:arguments 
                  ( ("b1" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("b2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("length" variable (:type "int") nil nil))                  
                :type "int")
                nil [71464 71606])
            ("list_system_processes" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [79303 79358])
            ("PROCFS_FILE_OFFSET_BITS_HACK" variable (:constant-flag t) nil [90518 90546])
            ("procfs.h" include (:system-flag t) nil [90627 90646])
            ("_FILE_OFFSET_BITS" variable (:constant-flag t) nil [90695 90712])
            ("system_process_attributes" function
               (:arguments 
                  ( ("pid" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [90804 90820]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [90765 94682])
            ("system_process_attributes" function
               (:arguments 
                  ( ("pid" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94864 94880]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [94825 94899]))          
    :file "sysdep.c"
    :pointmax 95022
    :fsize 95021
    :lastmodtime '(19383 49282)
    :unmatched-syntax '((semantic-list "(char *)" 4230 . 4243) (symbol 4224 . 4229) (VOID 4219 . 4223) (string 2387 . 2394) (UNSIGNED 2363 . 2371) (EXTERN 2356 . 2362))
    :lexical-table 
        '(("sys_fwrite" . ((symbol "fwrite" 1841 . 1847)))
          ("SELECT_PAUSE" . ((number "1" 47729 . 47730)))
          ("RAND_BITS" . ((number "31" 60261 . 60263)))
          ("select" . ((symbol "sys_select" 53214 . 53224)))
          ("_FILE_OFFSET_BITS" . ((number "64" 90713 . 90715)))
          ("setpgrp" . ((symbol "setpgid" 2034 . 2041)))
          ("PROCFS_FILE_OFFSET_BITS_HACK" . ((number "1" 90547 . 90548)))
          ("LPASS8" . ((number "0" 3844 . 3845)))
          ("sys_siglist" . ((symbol "my_sys_siglist" 55738 . 55752)))
          )

    )
   (semanticdb-table "Makefile.c"
    :major-mode 'c-mode
    :tags 
        '( ("WARRANTY" variable (:type ("ANY" type (:type "class") nil nil)) nil [572 585])
            ("THIS_IS_MAKEFILE" variable (:constant-flag t) nil [2859 2875])
            ("NOT_C_CODE" variable (:constant-flag t) nil [2884 2894])
            ("config.h" include nil nil [2895 2914])
            ("LIB_STANDARD" variable (:constant-flag t) nil [3750 3762])
            ("LIBS_DEBUG" variable (:constant-flag t) nil [4071 4081])
            ("LIBS_SYSTEM" variable (:constant-flag t) nil [4193 4204])
            ("LIBS_MACHINE" variable (:constant-flag t) nil [4314 4326])
            ("LIB_MATH" variable (:constant-flag t) nil [4362 4370])
            ("LD_SWITCH_SYSTEM" variable (:constant-flag t) nil [4578 4594])
            ("LD_SWITCH_SYSTEM_TEMACS" variable (:constant-flag t) nil [4906 4929])
            ("C_SWITCH_SYSTEM_TEMACS" variable (:constant-flag t) nil [5071 5093])
            ("LD_SWITCH_MACHINE" variable (:constant-flag t) nil [5213 5230])
            ("LD_SWITCH_MACHINE_TEMACS" variable (:constant-flag t) nil [5383 5407])
            ("C_SWITCH_MACHINE" variable (:constant-flag t) nil [5526 5542])
            ("C_SWITCH_SYSTEM" variable (:constant-flag t) nil [5659 5674])
            ("C_SWITCH_X_MACHINE" variable (:constant-flag t) nil [5790 5808])
            ("C_SWITCH_X_SYSTEM" variable (:constant-flag t) nil [5851 5868])
            ("LD_SWITCH_X_DEFAULT" variable (:constant-flag t) nil [6027 6046])
            ("CRT0_COMPILE" variable (:constant-flag t) nil [6107 6119])
            ("START_FILES" variable (:constant-flag t) nil [6271 6282])
            ("LIBX11_SYSTEM" variable (:constant-flag t) nil [8299 8312])
            ("LIB_X11_LIB" variable (:constant-flag t) nil [8349 8360])
            ("LIBXPM" variable (:constant-flag t) nil [10195 10201])
            ("LIBJPEG" variable (:constant-flag t) nil [10345 10352])
            ("LIBPNG" variable (:constant-flag t) nil [10499 10505])
            ("LIBTIFF" variable (:constant-flag t) nil [10657 10664])
            ("LIBGIF" variable (:constant-flag t) nil [10811 10817])
            ("LIBGPM" variable (:constant-flag t) nil [11402 11408])
            ("LIBRESOLV" variable (:constant-flag t) nil [11559 11568])
            ("YMF_PASS_LDFLAGS" variable (:constant-flag t) nil [13959 13975])
            ("UNEXEC" variable (:constant-flag t) nil [14086 14092])
            ("LIBS_TERMCAP" variable (:constant-flag t) nil [16548 16560])
            ("MOUSE_SUPPORT" variable (:constant-flag t) nil [17384 17397])
            ("MSDOS_SUPPORT" variable (:constant-flag t) nil [17832 17845])
            ("WINDOW_SUPPORT" variable (:constant-flag t) nil [17910 17924])
            ("WINNT_SUPPORT" variable (:constant-flag t) nil [18701 18714])
            ("TOOLTIP_SUPPORT" variable (:constant-flag t) nil [18757 18772])
            ("NS_SUPPORT" variable (:constant-flag t) nil [18954 18964])
            ("gdbinit" variable (:type "int") nil [47268 47276])
            ("save" variable (:type "int") nil [47312 47317])
            ("save" variable (:type "int") nil [47378 47383])
            ("gdbinit" variable (:type "int") nil [47416 47424])
            ("fi" variable (:type "int") nil [47425 47428])
            ("lisp" variable (:type "int") nil [50131 50136])
            ("lisp" variable (:type "int") nil [50411 50416])
            ("lisp" variable (:type "int") nil [50628 50633])
            ("lisp" variable (:type "int") nil [50942 50947]))          
    :file "Makefile.c"
    :pointmax 51118
    :fsize 51117
    :lastmodtime '(19571 14272)
    :unmatched-syntax '((semantic-list 51088 . 51110) (symbol 51087 . 51088) (punctuation 51107 . 51108) (punctuation 51106 . 51107) (punctuation 51105 . 51106) (punctuation 51100 . 51101) (punctuation 51098 . 51099) (punctuation 51097 . 51098) (punctuation 51096 . 51097) (symbol 51079 . 51086) (punctuation 51107 . 51108) (punctuation 51106 . 51107) (punctuation 51105 . 51106) (punctuation 51100 . 51101) (punctuation 51098 . 51099) (punctuation 51097 . 51098) (punctuation 51096 . 51097) (punctuation 51078 . 51079) (symbol 51076 . 51077) (punctuation 51075 . 51076) (symbol 51071 . 51075) (punctuation 51070 . 51071) (symbol 51064 . 51070) (semantic-list 51053 . 51063) (symbol 51052 . 51053) (semantic-list 51046 . 51051) (symbol 51045 . 51046) (semantic-list 51032 . 51044) (symbol 51031 . 51032) (punctuation 51030 . 51031) (symbol 51023 . 51030) (semantic-list 50987 . 51002) (symbol 50986 . 50987) (punctuation 50985 . 50986) (symbol 50980 . 50985) (symbol 50974 . 50979) (punctuation 50973 . 50974) (symbol 50966 . 50973) (semantic-list 50957 . 50965) (symbol 50956 . 50957) (semantic-list 50949 . 50955) (symbol 50948 . 50949) (punctuation 50941 . 50942) (punctuation 50940 . 50941) (punctuation 50939 . 50940) (symbol 50936 . 50938) (punctuation 50933 . 50934) (symbol 50922 . 50933) (symbol 50914 . 50921) (symbol 50911 . 50913) (symbol 50905 . 50910) (symbol 50902 . 50904) (symbol 50894 . 50901) (symbol 50888 . 50893) (symbol 50883 . 50887) (symbol 50875 . 50882) (punctuation 50873 . 50874) (punctuation 50872 . 50873) (semantic-list 50825 . 50833) (symbol 50819 . 50825) (punctuation 50818 . 50819) (symbol 50809 . 50818) (semantic-list 50800 . 50808) (symbol 50794 . 50800) (symbol 50792 . 50793) (punctuation 50791 . 50792) (symbol 50788 . 50790) (symbol 50777 . 50786) (symbol 50770 . 50776) (symbol 50765 . 50769) (punctuation 50764 . 50765) (punctuation 50763 . 50764) (symbol 50757 . 50762) (punctuation 50756 . 50757) (punctuation 50755 . 50756) (semantic-list 50742 . 50754) (symbol 50741 . 50742) (symbol 50659 . 50666) (punctuation 50658 . 50659) (symbol 50652 . 50658) (semantic-list 50643 . 50651) (symbol 50642 . 50643) (semantic-list 50635 . 50641) (symbol 50634 . 50635) (punctuation 50627 . 50628) (punctuation 50626 . 50627) (punctuation 50625 . 50626) (symbol 50622 . 50624) (semantic-list 50612 . 50620) (symbol 50605 . 50612) (punctuation 50603 . 50604) (semantic-list 50595 . 50603) (symbol 50589 . 50595) (punctuation 50588 . 50589) (symbol 50579 . 50588) (semantic-list 50452 . 50467) (symbol 50451 . 50452) (punctuation 50450 . 50451) (symbol 50445 . 50450) (symbol 50435 . 50444) (semantic-list 50426 . 50434) (symbol 50425 . 50426) (semantic-list 50418 . 50424) (symbol 50417 . 50418) (punctuation 50410 . 50411) (punctuation 50409 . 50410) (punctuation 50408 . 50409) (symbol 50405 . 50407) (semantic-list 50387 . 50403) (symbol 50386 . 50387) (punctuation 50384 . 50385) (symbol 50382 . 50384) (punctuation 50381 . 50382) (symbol 50373 . 50381) (semantic-list 50361 . 50373) (symbol 50360 . 50361) (semantic-list 50342 . 50358) (symbol 50341 . 50342) (punctuation 50339 . 50340) (semantic-list 50320 . 50339) (symbol 50319 . 50320) (semantic-list 50312 . 50318) (symbol 50311 . 50312) (semantic-list 50213 . 50228) (symbol 50212 . 50213) (punctuation 50211 . 50212) (symbol 50206 . 50211) (punctuation 50204 . 50205) (symbol 50203 . 50204) (punctuation 50202 . 50203) (symbol 50195 . 50202) (symbol 50163 . 50170) (punctuation 50162 . 50163) (symbol 50155 . 50162) (semantic-list 50146 . 50154) (symbol 50145 . 50146) (semantic-list 50138 . 50144) (symbol 50137 . 50138) (punctuation 50130 . 50131) (punctuation 50129 . 50130) (punctuation 50128 . 50129) (symbol 50125 . 50127) (punctuation 50124 . 50125) (punctuation 50121 . 50122) (symbol 50118 . 50121) (punctuation 50117 . 50118) (symbol 50115 . 50117) (punctuation 50114 . 50115) (symbol 49878 . 49880) (punctuation 49877 . 49878) (symbol 49873 . 49876) (punctuation 49872 . 49873) (punctuation 49870 . 49871) (symbol 49862 . 49870) (punctuation 49861 . 49862) (symbol 48504 . 48508) (punctuation 48502 . 48503) (symbol 48497 . 48502) (punctuation 48496 . 48497) (symbol 48491 . 48495) (semantic-list 48481 . 48491) (symbol 48480 . 48481) (symbol 48475 . 48479) (punctuation 48474 . 48475) (symbol 48470 . 48474) (symbol 48465 . 48469) (punctuation 48463 . 48464) (symbol 48459 . 48463) (semantic-list 48381 . 48457) (punctuation 48378 . 48379) (symbol 48374 . 48378) (semantic-list 48364 . 48374) (symbol 48363 . 48364) (symbol 48356 . 48361) (punctuation 48355 . 48356) (symbol 48352 . 48355) (punctuation 48351 . 48352) (symbol 48348 . 48351) (punctuation 48347 . 48348) (punctuation 48346 . 48347) (punctuation 48345 . 48346) (punctuation 48344 . 48345) (symbol 48339 . 48344) (symbol 48334 . 48338) (punctuation 48333 . 48334) (symbol 48329 . 48333) (symbol 48320 . 48328) (semantic-list 48311 . 48320) (symbol 48310 . 48311) (symbol 48308 . 48309) (punctuation 48307 . 48308) (semantic-list 48300 . 48306) (symbol 48299 . 48300) (symbol 48294 . 48297) (punctuation 48292 . 48293) (symbol 48288 . 48292) (punctuation 48287 . 48288) (symbol 48283 . 48287) (punctuation 48281 . 48282) (symbol 48278 . 48281) (semantic-list 48264 . 48277) (symbol 48263 . 48264) (punctuation 48262 . 48263) (semantic-list 48254 . 48262) (symbol 48253 . 48254) (semantic-list 48239 . 48252) (symbol 48238 . 48239) (punctuation 48237 . 48238) (semantic-list 48229 . 48237) (symbol 48228 . 48229) (string 48185 . 48222) (punctuation 48184 . 48185) (symbol 48179 . 48184) (punctuation 48178 . 48179) (punctuation 48177 . 48178) (symbol 48167 . 48171) (punctuation 48166 . 48167) (semantic-list 48156 . 48166) (symbol 48155 . 48156) (punctuation 48154 . 48155) (symbol 48147 . 48154) (punctuation 48146 . 48147) (punctuation 48145 . 48146) (symbol 48140 . 48144) (punctuation 48139 . 48140) (symbol 48135 . 48139) (punctuation 48134 . 48135) (symbol 48127 . 48134) (punctuation 48126 . 48127) (punctuation 48125 . 48126) (symbol 48119 . 48124) (punctuation 48118 . 48119) (symbol 48115 . 48118) (punctuation 48114 . 48115) (symbol 48111 . 48114) (punctuation 48110 . 48111) (punctuation 48109 . 48110) (punctuation 48108 . 48109) (semantic-list 48093 . 48106) (symbol 48092 . 48093) (punctuation 48091 . 48092) (semantic-list 48083 . 48091) (symbol 48082 . 48083) (semantic-list 48068 . 48081) (symbol 48067 . 48068) (punctuation 48066 . 48067) (semantic-list 48058 . 48066) (symbol 48057 . 48058) (punctuation 48055 . 48056) (symbol 48051 . 48055) (semantic-list 48044 . 48049) (punctuation 48043 . 48044) (punctuation 48042 . 48043) (semantic-list 48034 . 48042) (punctuation 48032 . 48033) (symbol 48020 . 48031) (semantic-list 48014 . 48019) (punctuation 48013 . 48014) (punctuation 48012 . 48013) (semantic-list 48004 . 48012) (punctuation 48002 . 48003) (symbol 47990 . 48001) (punctuation 47855 . 47856) (punctuation 47854 . 47855) (punctuation 47853 . 47854) (punctuation 47852 . 47853) (symbol 47851 . 47852) (punctuation 47849 . 47850) (punctuation 47848 . 47849) (punctuation 47847 . 47848) (punctuation 47846 . 47847) (symbol 47845 . 47846) (punctuation 47843 . 47844) (punctuation 47842 . 47843) (charquote 47841 . 47842) (punctuation 47839 . 47840) (punctuation 47838 . 47839) (symbol 47836 . 47837) (punctuation 47835 . 47836) (symbol 47832 . 47834) (punctuation 47831 . 47832) (symbol 47820 . 47829) (punctuation 47818 . 47819) (symbol 47808 . 47818) (punctuation 47806 . 47807) (symbol 47803 . 47806) (punctuation 47802 . 47803) (symbol 47799 . 47802) (punctuation 47798 . 47799) (punctuation 47797 . 47798) (punctuation 47796 . 47797) (semantic-list 47787 . 47795) (symbol 47786 . 47787) (punctuation 47785 . 47786) (punctuation 47784 . 47785) (punctuation 47783 . 47784) (punctuation 47782 . 47783) (punctuation 47781 . 47782) (punctuation 47780 . 47781) (symbol 47775 . 47780) (semantic-list 47766 . 47774) (symbol 47760 . 47766) (symbol 47758 . 47759) (punctuation 47757 . 47758) (symbol 47754 . 47756) (punctuation 47753 . 47754) (punctuation 47750 . 47751) (symbol 47738 . 47750) (symbol 47733 . 47737) (symbol 47731 . 47732) (punctuation 47730 . 47731) (symbol 47727 . 47729) (string 47664 . 47725) (symbol 47659 . 47663) (punctuation 47658 . 47659) (string 47606 . 47656) (symbol 47601 . 47605) (punctuation 47600 . 47601) (symbol 47589 . 47598) (punctuation 47587 . 47588) (symbol 47582 . 47587) (punctuation 47581 . 47582) (symbol 47571 . 47581) (symbol 47562 . 47570) (symbol 47560 . 47561) (punctuation 47559 . 47560) (symbol 47556 . 47558) (symbol 47549 . 47554) (punctuation 47548 . 47549) (symbol 47539 . 47548) (punctuation 47537 . 47538) (symbol 47528 . 47537) (punctuation 47526 . 47527) (symbol 47515 . 47526) (symbol 47503 . 47514) (symbol 47500 . 47502) (symbol 47497 . 47499) (symbol 47493 . 47496) (symbol 47489 . 47492) (symbol 47486 . 47488) (punctuation 47484 . 47485) (punctuation 47478 . 47479) (symbol 47466 . 47478) (symbol 47464 . 47465) (symbol 47457 . 47463) (symbol 47454 . 47456) (symbol 47449 . 47453) (symbol 47446 . 47448) (symbol 47441 . 47445) (punctuation 47439 . 47440) (symbol 47432 . 47434) (punctuation 47415 . 47416) (punctuation 47414 . 47415) (punctuation 47413 . 47414) (symbol 47408 . 47412) (punctuation 47407 . 47408) (symbol 47400 . 47407) (punctuation 47399 . 47400) (punctuation 47398 . 47399) (punctuation 47397 . 47398) (symbol 47394 . 47396) (ELSE 47389 . 47393) (punctuation 47377 . 47378) (symbol 47370 . 47377) (punctuation 47369 . 47370) (punctuation 47368 . 47369) (punctuation 47367 . 47368) (symbol 47365 . 47366) (punctuation 47364 . 47365) (symbol 47361 . 47363) (symbol 47356 . 47360) (punctuation 47354 . 47355) (string 47334 . 47354) (symbol 47332 . 47333) (punctuation 47331 . 47332) (symbol 47326 . 47330) (IF 47323 . 47325) (punctuation 47311 . 47312) (symbol 47304 . 47311) (punctuation 47303 . 47304) (punctuation 47302 . 47303) (punctuation 47301 . 47302) (symbol 47293 . 47300) (punctuation 47292 . 47293) (punctuation 47291 . 47292) (punctuation 47290 . 47291) (symbol 47287 . 47289) (symbol 47277 . 47281) (punctuation 47267 . 47268) (punctuation 47266 . 47267) (punctuation 47265 . 47266) (symbol 47263 . 47264) (punctuation 47262 . 47263) (symbol 47257 . 47261) (IF 47254 . 47256) (punctuation 47251 . 47252) (punctuation 47250 . 47251) (symbol 47247 . 47250) (punctuation 47246 . 47247) (symbol 47243 . 47246) (punctuation 47242 . 47243) (punctuation 47241 . 47242) (punctuation 47240 . 47241) (symbol 47231 . 47239) (punctuation 47230 . 47231) (symbol 47225 . 47230) (symbol 47219 . 47224) (punctuation 47218 . 47219) (symbol 47212 . 47218) (symbol 47210 . 47211) (punctuation 47209 . 47210) (symbol 47201 . 47209) (symbol 47199 . 47200) (punctuation 47198 . 47199) (symbol 47192 . 47198) (symbol 47190 . 47191) (punctuation 47189 . 47190) (symbol 47183 . 47189) (symbol 47181 . 47182) (punctuation 47180 . 47181) (symbol 47177 . 47179) (symbol 47170 . 47175) (punctuation 47168 . 47169) (symbol 47163 . 47168) (punctuation 47162 . 47163) (symbol 47153 . 47162) (symbol 46919 . 46923) (symbol 46916 . 46918) (punctuation 46915 . 46916) (symbol 46912 . 46914) (punctuation 46911 . 46912) (semantic-list 46901 . 46909) (symbol 46895 . 46901) (semantic-list 46886 . 46894) (symbol 46885 . 46886) (punctuation 46884 . 46885) (punctuation 46883 . 46884) (punctuation 46882 . 46883) (punctuation 46881 . 46882) (punctuation 46880 . 46881) (punctuation 46879 . 46880) (symbol 46874 . 46879) (symbol 46872 . 46873) (punctuation 46871 . 46872) (symbol 46868 . 46870) (symbol 46855 . 46866) (punctuation 46853 . 46854) (symbol 46848 . 46853) (symbol 46846 . 46847) (punctuation 46845 . 46846) (symbol 46837 . 46845) (symbol 46835 . 46836) (punctuation 46834 . 46835) (symbol 46831 . 46833) (semantic-list 46821 . 46829) (symbol 46820 . 46821) (semantic-list 46811 . 46820) (symbol 46810 . 46811) (punctuation 46809 . 46810) (symbol 46804 . 46809) (semantic-list 46795 . 46803) (symbol 46789 . 46795) (punctuation 46788 . 46789) (symbol 46779 . 46788) (symbol 46777 . 46778) (punctuation 46776 . 46777) (symbol 46773 . 46775) (symbol 46768 . 46771) (punctuation 46767 . 46768) (symbol 46764 . 46767) (punctuation 46763 . 46764) (punctuation 46762 . 46763) (punctuation 46761 . 46762) (symbol 46759 . 46760) (punctuation 46758 . 46759) (symbol 46755 . 46757) (symbol 46752 . 46753) (punctuation 46751 . 46752) (symbol 46746 . 46751) (symbol 46744 . 46745) (punctuation 46743 . 46744) (symbol 46733 . 46743) (symbol 46731 . 46732) (punctuation 46730 . 46731) (punctuation 46729 . 46730) (punctuation 46727 . 46728) (punctuation 46726 . 46727) (charquote 46725 . 46726) (symbol 46720 . 46724) (punctuation 46719 . 46720) (punctuation 46718 . 46719) (symbol 46713 . 46717) (semantic-list 46704 . 46712) (symbol 46699 . 46704) (punctuation 46698 . 46699) (symbol 46692 . 46698) (semantic-list 46683 . 46691) (symbol 46676 . 46683) (symbol 46674 . 46675) (punctuation 46673 . 46674) (symbol 46670 . 46672) (punctuation 46667 . 46668) (symbol 46656 . 46667) (symbol 31476 . 31477) (punctuation 31475 . 31476) (symbol 31467 . 31475) (punctuation 31465 . 31466) (symbol 31464 . 31465) (punctuation 31463 . 31464) (symbol 31460 . 31463) (symbol 31458 . 31459) (punctuation 31457 . 31458) (symbol 31452 . 31457) (punctuation 31451 . 31452) (semantic-list 31443 . 31451) (symbol 31442 . 31443) (semantic-list "(ALL_CFLAGS)" 31429 . 31441) (symbol "$" 31429 . 31441) (symbol "c" 31429 . 31441) (punctuation "-" 31429 . 31441) (semantic-list "(CC)" 31429 . 31441) (symbol "$" 31429 . 31441) (symbol 31416 . 31420) (symbol 31410 . 31415) (punctuation 31408 . 31409) (punctuation 31407 . 31408) (symbol 31402 . 31406) (symbol 31400 . 31401) (punctuation 31399 . 31400) (symbol 31394 . 31398) (punctuation 31393 . 31394) (punctuation 31392 . 31393) (semantic-list 31361 . 31371) (symbol 31360 . 31361) (symbol 31358 . 31359) (punctuation 31357 . 31358) (symbol 31352 . 31357) (punctuation 31350 . 31351) (symbol 31349 . 31350) (punctuation 31348 . 31349) (symbol 31343 . 31348) (number 31340 . 31341) (symbol 31335 . 31339) (string 31291 . 31333) (symbol 31286 . 31290) (punctuation 31285 . 31286) (string 31229 . 31283) (symbol 31224 . 31228) (punctuation 31223 . 31224) (symbol 31219 . 31221) (punctuation 31218 . 31219) (symbol 31212 . 31218) (punctuation 31210 . 31211) (punctuation 31209 . 31210) (symbol 31203 . 31209) (punctuation 31202 . 31203) (symbol 31196 . 31202) (punctuation 31195 . 31196) (punctuation 31194 . 31195) (punctuation 31193 . 31194) (number 31190 . 31191) (symbol 31185 . 31189) (string 31141 . 31183) (symbol 31136 . 31140) (punctuation 31135 . 31136) (string 31079 . 31133) (symbol 31074 . 31078) (punctuation 31073 . 31074) (symbol 31069 . 31071) (punctuation 31068 . 31069) (symbol 31062 . 31068) (punctuation 31060 . 31061) (punctuation 31059 . 31060) (symbol 31053 . 31059) (punctuation 31052 . 31053) (symbol 31046 . 31052) (punctuation 31045 . 31046) (punctuation 31044 . 31045) (punctuation 31043 . 31044) (symbol 30755 . 30763) (punctuation 30754 . 30755) (symbol 30748 . 30754) (punctuation 30746 . 30747) (symbol 30741 . 30746) (punctuation 30740 . 30741) (symbol 30684 . 30688) (punctuation 30683 . 30684) (string 30643 . 30681) (string 30596 . 30636) (string 30547 . 30589) (string 30496 . 30540) (string 30451 . 30489) (string 30435 . 30444) (punctuation 30434 . 30435) (symbol 30430 . 30434) (string 30418 . 30429) (punctuation 30417 . 30418) (symbol 30411 . 30417) (string 30403 . 30410) (punctuation 30402 . 30403) (symbol 30400 . 30402) (semantic-list 30385 . 30393) (symbol 30384 . 30385) (semantic-list 30377 . 30383) (symbol 30376 . 30377) (punctuation 30374 . 30375) (semantic-list 30361 . 30374) (symbol 30360 . 30361) (symbol 30357 . 30359) (punctuation 30354 . 30355) (symbol 30346 . 30354) (punctuation 30345 . 30346) (symbol 30339 . 30345) (symbol 30329 . 30337) (punctuation 30328 . 30329) (symbol 30322 . 30328) (punctuation 30320 . 30321) (semantic-list 30310 . 30320) (symbol 30309 . 30310) (punctuation 29797 . 29798) (symbol 29777 . 29796) (punctuation 29756 . 29757) (symbol 29735 . 29755) (symbol "freetype2" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "libpng12" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "freetype2" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (number "2.0" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "glib" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "lib" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (number "2.0" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "glib" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (number "1.0" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "pango" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "cairo" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (number "1.0" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "atk" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (number "2.0" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "gtk" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "lib" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (number "2.0" 29719 . 29734) (punctuation "-" 29719 . 29734) (symbol "gtk" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "include" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "usr" 29719 . 29734) (punctuation "/" 29719 . 29734) (symbol "I" 29719 . 29734) (punctuation "-" 29719 . 29734) (punctuation 29717 . 29718) (symbol 29699 . 29716) (punctuation 29681 . 29682) (symbol 29663 . 29680) (punctuation 29644 . 29645) (symbol 29625 . 29643) (semantic-list 29484 . 29494) (symbol 29483 . 29484) (punctuation 29481 . 29482) (semantic-list 29471 . 29481) (symbol 29470 . 29471) (punctuation 29469 . 29470) (symbol 29466 . 29469) (punctuation 29465 . 29466) (punctuation 29464 . 29465) (punctuation 29463 . 29464) (symbol 29409 . 29417) (punctuation 29408 . 29409) (symbol 29403 . 29408) (symbol 29397 . 29402) (semantic-list 29385 . 29395) (symbol 29384 . 29385) (punctuation 29383 . 29384) (symbol 29380 . 29383) (punctuation 29379 . 29380) (punctuation 29378 . 29379) (punctuation 29377 . 29378) (semantic-list 29366 . 29376) (symbol 29365 . 29366) (punctuation 29363 . 29364) (symbol 29355 . 29363) (punctuation 29354 . 29355) (symbol 29349 . 29354) (symbol 29055 . 29059) (punctuation 29054 . 29055) (symbol 29048 . 29054) (symbol 29046 . 29047) (punctuation 29045 . 29046) (symbol 29043 . 29044) (punctuation 29042 . 29043) (symbol 29038 . 29042) (punctuation 29037 . 29038) (symbol 29031 . 29037) (semantic-list 29021 . 29030) (symbol 29020 . 29021) (semantic-list 29015 . 29019) (symbol 29014 . 29015) (semantic-list 29002 . 29012) (symbol 29001 . 29002) (symbol 28999 . 29000) (punctuation 28998 . 28999) (symbol 28994 . 28998) (punctuation 28993 . 28994) (symbol 28987 . 28993) (punctuation 28985 . 28986) (semantic-list 28977 . 28985) (symbol 28972 . 28977) (punctuation 28971 . 28972) (symbol 28965 . 28971) (semantic-list 28766 . 28773) (symbol 28765 . 28766) (semantic-list 28747 . 28757) (symbol 28746 . 28747) (semantic-list 28740 . 28745) (symbol 28739 . 28740) (semantic-list 28726 . 28738) (symbol 28725 . 28726) (symbol 28718 . 28724) (symbol 28716 . 28717) (punctuation 28715 . 28716) (semantic-list 28699 . 28708) (symbol 28698 . 28699) (symbol "$" 28647 . 28697) (semantic-list 28642 . 28646) (symbol 28641 . 28642) (semantic-list 28428 . 28436) (symbol 28423 . 28428) (punctuation 28422 . 28423) (symbol 28416 . 28422) (semantic-list 28405 . 28415) (symbol 28404 . 28405) (semantic-list 28398 . 28403) (symbol 28397 . 28398) (symbol 28388 . 28396) (punctuation 28387 . 28388) (symbol 28382 . 28387) (semantic-list 28369 . 28381) (symbol 28368 . 28369) (semantic-list 28357 . 28367) (symbol 28356 . 28357) (punctuation 28354 . 28355) (semantic-list 28346 . 28354) (symbol 28339 . 28346) (symbol 28336 . 28337) (punctuation 28335 . 28336) (symbol 28327 . 28335) (punctuation 28325 . 28326) (string 28320 . 28324) (string 28279 . 28319) (symbol 28274 . 28278) (symbol 28264 . 28272) (punctuation 28262 . 28263) (symbol 28261 . 28262) (punctuation 28260 . 28261) (symbol 28252 . 28260) (semantic-list 28242 . 28250) (symbol 28234 . 28242) (punctuation 28233 . 28234) (symbol 28229 . 28233) (semantic-list 28220 . 28228) (symbol 28219 . 28220) (semantic-list 28212 . 28218) (symbol 28211 . 28212) (punctuation 28209 . 28210) (semantic-list 28201 . 28209) (symbol 28200 . 28201) (symbol 28197 . 28199) (punctuation 28194 . 28195) (semantic-list 28186 . 28194) (symbol 28178 . 28186) (punctuation 28177 . 28178) (symbol 28173 . 28177) (semantic-list 28165 . 28173) (symbol 28164 . 28165) (semantic-list 28151 . 28162) (symbol 28150 . 28151) (semantic-list 28130 . 28149) (symbol 28129 . 28130) (semantic-list 28120 . 28128) (symbol 28119 . 28120) (symbol 28117 . 28118) (punctuation 28116 . 28117) (symbol 28112 . 28115) (semantic-list 28107 . 28112) (symbol 28106 . 28107) (symbol 28104 . 28105) (punctuation 28103 . 28104) (symbol 28095 . 28102) (punctuation 28094 . 28095) (symbol 28090 . 28094) (semantic-list 28082 . 28090) (symbol 28081 . 28082) (symbol 28076 . 28079) (semantic-list 28071 . 28076) (symbol 28070 . 28071) (punctuation 28068 . 28069) (semantic-list 28062 . 28067) (symbol 28061 . 28062) (semantic-list 28038 . 28060) (symbol 28037 . 28038) (semantic-list 28028 . 28036) (symbol 28027 . 28028) (symbol 28025 . 28026) (punctuation 28024 . 28025) (symbol 28016 . 28023) (punctuation 28015 . 28016) (symbol 28011 . 28015) (semantic-list 28003 . 28011) (symbol 28002 . 28003) (symbol 27997 . 28000) (semantic-list 27992 . 27997) (symbol 27991 . 27992) (symbol 27989 . 27990) (punctuation 27988 . 27989) (symbol 27985 . 27987) (punctuation 27984 . 27985) (semantic-list 27963 . 27982) (symbol 27962 . 27963) (semantic-list 27955 . 27961) (symbol 27954 . 27955) (semantic-list 27948 . 27953) (symbol 27947 . 27948) (semantic-list 27938 . 27946) (symbol 27930 . 27938) (punctuation 27929 . 27930) (symbol 27925 . 27929) (semantic-list 27917 . 27925) (symbol 27916 . 27917) (punctuation 27914 . 27915) (symbol 27911 . 27914) (semantic-list 27906 . 27911) (symbol 27905 . 27906) (symbol 27037 . 27044) (punctuation 27036 . 27037) (symbol 27032 . 27036) (punctuation 27031 . 27032) (symbol 27027 . 27031) (punctuation 27026 . 27027) (symbol 27022 . 27026) (symbol 27020 . 27021) (punctuation 27019 . 27020) (symbol 27013 . 27018) (punctuation 27012 . 27013) (symbol 27010 . 27011) (punctuation 27009 . 27010) (symbol 27003 . 27008) (punctuation 27002 . 27003) (punctuation 27001 . 27002) (punctuation 27000 . 27001) (semantic-list 26990 . 26998) (symbol 26984 . 26990) (punctuation 26983 . 26984) (symbol 26974 . 26983) (semantic-list 26965 . 26973) (symbol 26959 . 26965) (symbol 26957 . 26958) (punctuation 26956 . 26957) (symbol 26953 . 26955) (punctuation 26952 . 26953) (punctuation 26949 . 26950) (symbol 26947 . 26949) (symbol 26939 . 26946) (symbol 26936 . 26938) (symbol 26932 . 26935) (symbol 26929 . 26931) (punctuation 26927 . 26928) (symbol 26922 . 26927) (punctuation 26921 . 26922) (symbol 26912 . 26921) (punctuation 26910 . 26911) (punctuation 26909 . 26910) (symbol 26903 . 26907) (symbol 26893 . 26902) (symbol 26888 . 26892) (symbol 26884 . 26887) (symbol 26873 . 26883) (symbol 26870 . 26872) (symbol 26867 . 26869) (symbol 26861 . 26866) (NEW 26857 . 26860) (symbol 26852 . 26856) (punctuation 26850 . 26851) (punctuation 26849 . 26850) (symbol 26843 . 26847) (symbol 26836 . 26842) (symbol 26834 . 26835) (punctuation 26833 . 26834) (symbol 26827 . 26832) (punctuation 26826 . 26827) (semantic-list 26813 . 26825) (symbol 26812 . 26813) (symbol 26810 . 26811) (punctuation 26809 . 26810) (symbol 26803 . 26809) (semantic-list 26639 . 26645) (symbol 26638 . 26639) (symbol 26634 . 26637) (semantic-list 26629 . 26634) (symbol 26628 . 26629) (semantic-list 26619 . 26627) (symbol 26612 . 26619) (punctuation 26610 . 26611) (semantic-list 26602 . 26610) (symbol 26596 . 26602) (semantic-list 26581 . 26594) (symbol 26580 . 26581) (semantic-list 26571 . 26579) (symbol 26565 . 26571) (punctuation 26563 . 26564) (symbol 26560 . 26563) (symbol 26545 . 26551) (punctuation 26544 . 26545) (punctuation 26543 . 26544) (symbol 26540 . 26543) (punctuation 26539 . 26540) (symbol 26536 . 26539) (punctuation 26535 . 26536) (punctuation 26534 . 26535) (punctuation 26532 . 26533) (symbol 26521 . 26531) (semantic-list 26450 . 26462) (symbol 26449 . 26450) (symbol "lc" 26436 . 26448) (punctuation "-" 26436 . 26448) (symbol "lm" 26427 . 26435) (punctuation "-" 26427 . 26435) (semantic-list 26414 . 26426) (symbol 26413 . 26414) (semantic-list 26386 . 26398) (symbol 26385 . 26386) (semantic-list 26367 . 26384) (symbol 26366 . 26367) (symbol "lg" 26355 . 26365) (punctuation "-" 26355 . 26365) (symbol "lresolv" 26302 . 26311) (punctuation "-" 26302 . 26311) (symbol "lgpm" 26295 . 26301) (punctuation "-" 26295 . 26301) (semantic-list 26278 . 26289) (symbol 26277 . 26278) (semantic-list 26265 . 26276) (symbol 26264 . 26265) (semantic-list 26253 . 26263) (symbol 26252 . 26253) (semantic-list 26245 . 26251) (symbol 26244 . 26245) (semantic-list 26237 . 26243) (symbol 26236 . 26237) (semantic-list 26224 . 26235) (symbol 26223 . 26224) (punctuation 26221 . 26222) (symbol 26215 . 26220) (symbol 25972 . 25975) (punctuation 25971 . 25972) (symbol 25963 . 25971) (punctuation 25962 . 25963) (symbol 25958 . 25962) (punctuation 25957 . 25958) (symbol 25952 . 25957) (punctuation 25951 . 25952) (symbol 25947 . 25951) (punctuation 25946 . 25947) (punctuation 25945 . 25946) (punctuation 25944 . 25945) (symbol 25936 . 25939) (punctuation 25935 . 25936) (symbol 25932 . 25935) (punctuation 25931 . 25932) (symbol 25928 . 25931) (punctuation 25927 . 25928) (symbol 25923 . 25927) (punctuation 25922 . 25923) (symbol 25918 . 25922) (punctuation 25917 . 25918) (punctuation 25916 . 25917) (punctuation 25915 . 25916) (symbol 25911 . 25914) (punctuation 25910 . 25911) (symbol 25907 . 25910) (punctuation 25906 . 25907) (symbol 25904 . 25906) (punctuation 25903 . 25904) (symbol 25899 . 25903) (punctuation 25898 . 25899) (symbol 25894 . 25898) (punctuation 25893 . 25894) (punctuation 25892 . 25893) (punctuation 25891 . 25892) (symbol 25883 . 25886) (punctuation 25882 . 25883) (symbol 25874 . 25882) (punctuation 25873 . 25874) (symbol 25869 . 25873) (punctuation 25868 . 25869) (symbol 25864 . 25868) (punctuation 25863 . 25864) (punctuation 25862 . 25863) (punctuation 25861 . 25862) (symbol 25857 . 25860) (punctuation 25856 . 25857) (symbol 25853 . 25856) (punctuation 25852 . 25853) (symbol 25850 . 25852) (punctuation 25849 . 25850) (symbol 25845 . 25849) (punctuation 25844 . 25845) (symbol 25840 . 25844) (punctuation 25839 . 25840) (punctuation 25838 . 25839) (punctuation 25837 . 25838) (symbol 25829 . 25832) (punctuation 25828 . 25829) (symbol 25825 . 25828) (punctuation 25824 . 25825) (symbol 25823 . 25824) (punctuation 25822 . 25823) (symbol 25818 . 25822) (punctuation 25817 . 25818) (symbol 25813 . 25817) (punctuation 25812 . 25813) (punctuation 25811 . 25812) (punctuation 25810 . 25811) (symbol 25802 . 25805) (punctuation 25801 . 25802) (symbol 25798 . 25801) (punctuation 25797 . 25798) (symbol 25791 . 25797) (punctuation 25790 . 25791) (symbol 25786 . 25790) (punctuation 25785 . 25786) (symbol 25781 . 25785) (punctuation 25780 . 25781) (punctuation 25779 . 25780) (punctuation 25778 . 25779) (symbol 25770 . 25773) (punctuation 25769 . 25770) (symbol 25764 . 25769) (punctuation 25763 . 25764) (symbol 25759 . 25763) (punctuation 25758 . 25759) (punctuation 25757 . 25758) (punctuation 25756 . 25757) (symbol 25748 . 25751) (punctuation 25747 . 25748) (symbol 25740 . 25747) (punctuation 25739 . 25740) (symbol 25726 . 25739) (punctuation 25725 . 25726) (symbol 25721 . 25725) (punctuation 25720 . 25721) (punctuation 25719 . 25720) (punctuation 25718 . 25719) (symbol 25710 . 25713) (punctuation 25709 . 25710) (symbol 25706 . 25709) (punctuation 25705 . 25706) (symbol 25692 . 25705) (punctuation 25691 . 25692) (symbol 25687 . 25691) (punctuation 25686 . 25687) (punctuation 25685 . 25686) (punctuation 25684 . 25685) (symbol 25676 . 25679) (punctuation 25675 . 25676) (symbol 25668 . 25675) (punctuation 25667 . 25668) (symbol 25663 . 25667) (punctuation 25662 . 25663) (symbol 25658 . 25662) (punctuation 25657 . 25658) (punctuation 25656 . 25657) (punctuation 25655 . 25656) (symbol 25651 . 25654) (punctuation 25650 . 25651) (symbol 25647 . 25650) (punctuation 25646 . 25647) (symbol 25645 . 25646) (punctuation 25644 . 25645) (symbol 25640 . 25644) (punctuation 25639 . 25640) (punctuation 25638 . 25639) (punctuation 25637 . 25638) (symbol 25629 . 25632) (punctuation 25628 . 25629) (symbol 25625 . 25628) (punctuation 25624 . 25625) (symbol 25620 . 25624) (punctuation 25619 . 25620) (symbol 25615 . 25619) (punctuation 25614 . 25615) (punctuation 25613 . 25614) (punctuation 25612 . 25613) (symbol 25608 . 25611) (punctuation 25607 . 25608) (symbol 25601 . 25607) (punctuation 25600 . 25601) (symbol 25596 . 25600) (punctuation 25595 . 25596) (punctuation 25594 . 25595) (punctuation 25593 . 25594) (symbol 25585 . 25588) (punctuation 25584 . 25585) (symbol 25581 . 25584) (punctuation 25580 . 25581) (symbol 25576 . 25580) (punctuation 25575 . 25576) (punctuation 25574 . 25575) (punctuation 25573 . 25574) (symbol 25569 . 25572) (punctuation 25568 . 25569) (symbol 25562 . 25568) (punctuation 25561 . 25562) (symbol 25557 . 25561) (punctuation 25556 . 25557) (punctuation 25555 . 25556) (punctuation 25554 . 25555) (symbol 25546 . 25549) (punctuation 25545 . 25546) (symbol 25540 . 25545) (punctuation 25539 . 25540) (symbol 25535 . 25539) (punctuation 25534 . 25535) (punctuation 25533 . 25534) (punctuation 25532 . 25533) (symbol 25528 . 25531) (punctuation 25527 . 25528) (symbol 25520 . 25527) (punctuation 25519 . 25520) (symbol 25515 . 25519) (punctuation 25514 . 25515) (punctuation 25513 . 25514) (punctuation 25512 . 25513) (symbol 25504 . 25507) (punctuation 25503 . 25504) (symbol 25499 . 25503) (punctuation 25498 . 25499) (symbol 25495 . 25498) (punctuation 25494 . 25495) (symbol 25490 . 25494) (punctuation 25489 . 25490) (punctuation 25488 . 25489) (punctuation 25487 . 25488) (symbol 25483 . 25486) (punctuation 25482 . 25483) (symbol 25477 . 25482) (punctuation 25476 . 25477) (symbol 25472 . 25476) (punctuation 25471 . 25472) (symbol 25467 . 25471) (punctuation 25466 . 25467) (punctuation 25465 . 25466) (punctuation 25464 . 25465) (symbol 25456 . 25459) (punctuation 25455 . 25456) (symbol 25452 . 25455) (punctuation 25451 . 25452) (symbol 25448 . 25451) (punctuation 25447 . 25448) (symbol 25443 . 25447) (punctuation 25442 . 25443) (punctuation 25441 . 25442) (punctuation 25440 . 25441) (symbol 25436 . 25439) (punctuation 25435 . 25436) (symbol 25432 . 25435) (punctuation 25431 . 25432) (symbol 25428 . 25431) (punctuation 25427 . 25428) (symbol 25423 . 25427) (punctuation 25422 . 25423) (punctuation 25421 . 25422) (punctuation 25420 . 25421) (symbol 25412 . 25415) (punctuation 25411 . 25412) (symbol 25408 . 25411) (punctuation 25407 . 25408) (symbol 25404 . 25407) (punctuation 25403 . 25404) (symbol 25399 . 25403) (punctuation 25398 . 25399) (punctuation 25397 . 25398) (punctuation 25396 . 25397) (symbol 25392 . 25395) (punctuation 25391 . 25392) (symbol 25387 . 25391) (punctuation 25386 . 25387) (symbol 25384 . 25386) (punctuation 25383 . 25384) (symbol 25379 . 25383) (punctuation 25378 . 25379) (punctuation 25377 . 25378) (punctuation 25376 . 25377) (symbol 25368 . 25371) (punctuation 25367 . 25368) (symbol 25364 . 25367) (punctuation 25363 . 25364) (symbol 25357 . 25363) (punctuation 25356 . 25357) (symbol 25352 . 25356) (punctuation 25351 . 25352) (punctuation 25350 . 25351) (punctuation 25349 . 25350) (symbol 25345 . 25348) (punctuation 25344 . 25345) (symbol 25338 . 25344) (punctuation 25337 . 25338) (symbol 25333 . 25337) (punctuation 25332 . 25333) (punctuation 25331 . 25332) (punctuation 25330 . 25331) (symbol 25322 . 25325) (punctuation 25321 . 25322) (symbol 25316 . 25321) (punctuation 25315 . 25316) (symbol 25311 . 25315) (punctuation 25310 . 25311) (punctuation 25309 . 25310) (punctuation 25308 . 25309) (punctuation 25306 . 25307) (symbol 25288 . 25305) (symbol 25154 . 25156) (punctuation 25153 . 25154) (symbol 25146 . 25153) (punctuation 25145 . 25146) (symbol 25141 . 25145) (punctuation 25140 . 25141) (punctuation 25139 . 25140) (punctuation 25138 . 25139) (symbol 25131 . 25134) (punctuation 25130 . 25131) (symbol 25124 . 25130) (punctuation 25123 . 25124) (symbol 25119 . 25123) (punctuation 25118 . 25119) (punctuation 25117 . 25118) (punctuation 25116 . 25117) (symbol 25109 . 25112) (punctuation 25108 . 25109) (symbol 25102 . 25108) (punctuation 25101 . 25102) (symbol 25097 . 25101) (punctuation 25096 . 25097) (punctuation 25095 . 25096) (punctuation 25094 . 25095) (symbol 25087 . 25090) (punctuation 25086 . 25087) (symbol 25082 . 25086) (punctuation 25081 . 25082) (symbol 25078 . 25081) (punctuation 25077 . 25078) (symbol 25073 . 25077) (punctuation 25072 . 25073) (punctuation 25071 . 25072) (punctuation 25070 . 25071) (symbol 25063 . 25066) (punctuation 25062 . 25063) (symbol 25058 . 25062) (punctuation 25057 . 25058) (symbol 25052 . 25057) (punctuation 25051 . 25052) (symbol 25047 . 25051) (punctuation 25046 . 25047) (punctuation 25045 . 25046) (punctuation 25044 . 25045) (symbol 25037 . 25040) (punctuation 25036 . 25037) (symbol 25032 . 25036) (punctuation 25031 . 25032) (symbol 25027 . 25031) (punctuation 25026 . 25027) (symbol 25023 . 25026) (punctuation 25022 . 25023) (symbol 25018 . 25022) (punctuation 25017 . 25018) (punctuation 25016 . 25017) (punctuation 25015 . 25016) (symbol 25008 . 25011) (punctuation 25007 . 25008) (symbol 25002 . 25007) (punctuation 25001 . 25002) (symbol 24999 . 25001) (punctuation 24998 . 24999) (symbol 24994 . 24998) (punctuation 24993 . 24994) (punctuation 24992 . 24993) (punctuation 24991 . 24992) (symbol 24984 . 24987) (punctuation 24983 . 24984) (symbol 24978 . 24983) (punctuation 24977 . 24978) (symbol 24973 . 24977) (punctuation 24972 . 24973) (symbol 24967 . 24972) (punctuation 24966 . 24967) (symbol 24962 . 24966) (punctuation 24961 . 24962) (punctuation 24960 . 24961) (punctuation 24959 . 24960) (symbol 24952 . 24955) (punctuation 24951 . 24952) (symbol 24947 . 24951) (punctuation 24946 . 24947) (symbol 24942 . 24946) (punctuation 24941 . 24942) (symbol 24932 . 24941) (punctuation 24931 . 24932) (symbol 24927 . 24931) (punctuation 24926 . 24927) (punctuation 24925 . 24926) (punctuation 24924 . 24925) (symbol 24917 . 24920) (punctuation 24916 . 24917) (symbol 24906 . 24916) (punctuation 24905 . 24906) (symbol 24896 . 24905) (punctuation 24895 . 24896) (symbol 24891 . 24895) (punctuation 24890 . 24891) (punctuation 24889 . 24890) (punctuation 24888 . 24889) (symbol 24881 . 24884) (punctuation 24880 . 24881) (symbol 24876 . 24880) (punctuation 24875 . 24876) (symbol 24866 . 24875) (punctuation 24865 . 24866) (symbol 24861 . 24865) (punctuation 24860 . 24861) (punctuation 24859 . 24860) (punctuation 24858 . 24859) (symbol 24851 . 24854) (punctuation 24850 . 24851) (symbol 24846 . 24850) (punctuation 24845 . 24846) (symbol 24836 . 24845) (punctuation 24835 . 24836) (symbol 24831 . 24835) (punctuation 24830 . 24831) (punctuation 24829 . 24830) (punctuation 24828 . 24829) (symbol 24821 . 24824) (punctuation 24820 . 24821) (symbol 24816 . 24820) (punctuation 24815 . 24816) (symbol 24812 . 24815) (punctuation 24811 . 24812) (symbol 24807 . 24811) (punctuation 24806 . 24807) (punctuation 24805 . 24806) (punctuation 24804 . 24805) (symbol 24797 . 24800) (punctuation 24796 . 24797) (symbol 24792 . 24796) (punctuation 24791 . 24792) (symbol 24787 . 24791) (punctuation 24786 . 24787) (symbol 24782 . 24786) (punctuation 24781 . 24782) (punctuation 24780 . 24781) (punctuation 24779 . 24780) (symbol 24772 . 24775) (punctuation 24771 . 24772) (symbol 24765 . 24771) (punctuation 24764 . 24765) (symbol 24760 . 24764) (punctuation 24759 . 24760) (symbol 24754 . 24759) (punctuation 24753 . 24754) (symbol 24749 . 24753) (punctuation 24748 . 24749) (punctuation 24747 . 24748) (punctuation 24746 . 24747) (symbol 24739 . 24742) (punctuation 24738 . 24739) (symbol 24734 . 24738) (punctuation 24733 . 24734) (symbol 24729 . 24733) (punctuation 24728 . 24729) (symbol 24724 . 24728) (punctuation 24723 . 24724) (punctuation 24722 . 24723) (punctuation 24721 . 24722) (symbol 24714 . 24717) (punctuation 24713 . 24714) (symbol 24707 . 24713) (punctuation 24706 . 24707) (symbol 24703 . 24706) (punctuation 24702 . 24703) (symbol 24698 . 24702) (punctuation 24697 . 24698) (symbol 24693 . 24697) (punctuation 24692 . 24693) (punctuation 24691 . 24692) (punctuation 24690 . 24691) (symbol 24683 . 24686) (punctuation 24682 . 24683) (symbol 24678 . 24682) (punctuation 24677 . 24678) (symbol 24673 . 24677) (punctuation 24672 . 24673) (punctuation 24671 . 24672) (punctuation 24670 . 24671) (symbol 24663 . 24666) (punctuation 24662 . 24663) (symbol 24655 . 24662) (punctuation 24654 . 24655) (symbol 24650 . 24654) (punctuation 24649 . 24650) (punctuation 24648 . 24649) (punctuation 24647 . 24648) (symbol 24640 . 24643) (punctuation 24639 . 24640) (symbol 24629 . 24639) (punctuation 24628 . 24629) (symbol 24624 . 24628) (punctuation 24623 . 24624) (punctuation 24622 . 24623) (punctuation 24621 . 24622) (symbol 24614 . 24617) (punctuation 24613 . 24614) (symbol 24607 . 24613) (punctuation 24606 . 24607) (symbol 24602 . 24606) (punctuation 24601 . 24602) (punctuation 24600 . 24601) (punctuation 24599 . 24600) (symbol 24592 . 24595) (punctuation 24591 . 24592) (symbol 24584 . 24591) (punctuation 24583 . 24584) (symbol 24579 . 24583) (punctuation 24578 . 24579) (punctuation 24577 . 24578) (punctuation 24576 . 24577) (symbol 24569 . 24572) (punctuation 24568 . 24569) (REGISTER 24560 . 24568) (punctuation 24559 . 24560) (symbol 24555 . 24559) (punctuation 24554 . 24555) (punctuation 24553 . 24554) (punctuation 24552 . 24553) (symbol 24546 . 24548) (punctuation 24545 . 24546) (symbol 24540 . 24545) (punctuation 24539 . 24540) (symbol 24535 . 24539) (punctuation 24534 . 24535) (punctuation 24533 . 24534) (punctuation 24532 . 24533) (symbol 24525 . 24528) (punctuation 24524 . 24525) (symbol 24521 . 24524) (punctuation 24520 . 24521) (symbol 24516 . 24520) (punctuation 24515 . 24516) (symbol 24511 . 24515) (punctuation 24510 . 24511) (punctuation 24509 . 24510) (punctuation 24508 . 24509) (symbol 24502 . 24504) (punctuation 24501 . 24502) (symbol 24494 . 24501) (punctuation 24493 . 24494) (symbol 24485 . 24493) (punctuation 24484 . 24485) (symbol 24480 . 24484) (punctuation 24479 . 24480) (punctuation 24478 . 24479) (punctuation 24477 . 24478) (symbol 24471 . 24473) (punctuation 24470 . 24471) (symbol 24465 . 24470) (punctuation 24464 . 24465) (symbol 24456 . 24464) (punctuation 24455 . 24456) (symbol 24451 . 24455) (punctuation 24450 . 24451) (punctuation 24449 . 24450) (punctuation 24448 . 24449) (symbol 24442 . 24444) (punctuation 24441 . 24442) (symbol 24433 . 24441) (punctuation 24432 . 24433) (symbol 24424 . 24432) (punctuation 24423 . 24424) (symbol 24419 . 24423) (punctuation 24418 . 24419) (punctuation 24417 . 24418) (punctuation 24416 . 24417) (symbol 24410 . 24412) (punctuation 24409 . 24410) (symbol 24405 . 24409) (punctuation 24404 . 24405) (number 24403 . 24404) (punctuation 24402 . 24403) (symbol 24399 . 24402) (punctuation 24398 . 24399) (symbol 24390 . 24398) (punctuation 24389 . 24390) (symbol 24385 . 24389) (punctuation 24384 . 24385) (punctuation 24383 . 24384) (punctuation 24382 . 24383) (symbol 24376 . 24378) (punctuation 24375 . 24376) (symbol 24371 . 24375) (punctuation 24370 . 24371) (symbol 24366 . 24370) (punctuation 24365 . 24366) (symbol 24357 . 24365) (punctuation 24356 . 24357) (symbol 24352 . 24356) (punctuation 24351 . 24352) (punctuation 24350 . 24351) (punctuation 24349 . 24350) (symbol 24342 . 24345) (punctuation 24341 . 24342) (symbol 24331 . 24341) (punctuation 24330 . 24331) (symbol 24322 . 24330) (punctuation 24321 . 24322) (symbol 24317 . 24321) (punctuation 24316 . 24317) (punctuation 24315 . 24316) (punctuation 24314 . 24315) (symbol 24307 . 24310) (punctuation 24306 . 24307) (symbol 24299 . 24306) (punctuation 24298 . 24299) (symbol 24290 . 24298) (punctuation 24289 . 24290) (symbol 24285 . 24289) (punctuation 24284 . 24285) (punctuation 24283 . 24284) (punctuation 24282 . 24283) (symbol 24276 . 24278) (punctuation 24275 . 24276) (symbol 24271 . 24275) (punctuation 24270 . 24271) (symbol 24262 . 24270) (punctuation 24261 . 24262) (symbol 24257 . 24261) (punctuation 24256 . 24257) (punctuation 24255 . 24256) (punctuation 24254 . 24255) (symbol 24248 . 24250) (punctuation 24247 . 24248) (symbol 24243 . 24247) (punctuation 24242 . 24243) (symbol 24239 . 24242) (punctuation 24238 . 24239) (symbol 24230 . 24238) (punctuation 24229 . 24230) (symbol 24225 . 24229) (punctuation 24224 . 24225) (punctuation 24223 . 24224) (punctuation 24222 . 24223) (symbol 24216 . 24218) (punctuation 24215 . 24216) (symbol 24211 . 24215) (punctuation 24210 . 24211) (symbol 24202 . 24210) (punctuation 24201 . 24202) (symbol 24197 . 24201) (punctuation 24196 . 24197) (punctuation 24195 . 24196) (punctuation 24194 . 24195) (symbol 24188 . 24190) (punctuation 24187 . 24188) (symbol 24184 . 24187) (punctuation 24183 . 24184) (symbol 24175 . 24183) (punctuation 24174 . 24175) (symbol 24170 . 24174) (punctuation 24169 . 24170) (punctuation 24168 . 24169) (punctuation 24167 . 24168) (symbol 24161 . 24163) (punctuation 24160 . 24161) (symbol 24154 . 24160) (punctuation 24153 . 24154) (symbol 24145 . 24153) (punctuation 24144 . 24145) (symbol 24140 . 24144) (punctuation 24139 . 24140) (punctuation 24138 . 24139) (punctuation 24137 . 24138) (symbol 24131 . 24133) (punctuation 24130 . 24131) (symbol 24122 . 24130) (punctuation 24121 . 24122) (symbol 24113 . 24121) (punctuation 24112 . 24113) (symbol 24108 . 24112) (punctuation 24107 . 24108) (punctuation 24106 . 24107) (punctuation 24105 . 24106) (symbol 24099 . 24101) (punctuation 24098 . 24099) (symbol 24092 . 24098) (punctuation 24091 . 24092) (symbol 24083 . 24091) (punctuation 24082 . 24083) (symbol 24078 . 24082) (punctuation 24077 . 24078) (punctuation 24076 . 24077) (punctuation 24075 . 24076) (symbol 24069 . 24071) (punctuation 24068 . 24069) (symbol 24063 . 24068) (punctuation 24062 . 24063) (symbol 24054 . 24062) (punctuation 24053 . 24054) (symbol 24049 . 24053) (punctuation 24048 . 24049) (punctuation 24047 . 24048) (punctuation 24046 . 24047) (symbol 24040 . 24042) (punctuation 24039 . 24040) (symbol 24031 . 24039) (punctuation 24030 . 24031) (symbol 24022 . 24030) (punctuation 24021 . 24022) (symbol 24017 . 24021) (punctuation 24016 . 24017) (punctuation 24015 . 24016) (punctuation 24014 . 24015) (symbol 24008 . 24010) (punctuation 24007 . 24008) (symbol 24001 . 24007) (punctuation 24000 . 24001) (symbol 23992 . 24000) (punctuation 23991 . 23992) (symbol 23987 . 23991) (punctuation 23986 . 23987) (punctuation 23985 . 23986) (punctuation 23984 . 23985) (symbol 23978 . 23980) (punctuation 23977 . 23978) (symbol 23972 . 23977) (punctuation 23971 . 23972) (symbol 23963 . 23971) (punctuation 23962 . 23963) (symbol 23958 . 23962) (punctuation 23957 . 23958) (punctuation 23956 . 23957) (punctuation 23955 . 23956) (symbol 23948 . 23951) (punctuation 23947 . 23948) (symbol 23939 . 23947) (punctuation 23938 . 23939) (symbol 23930 . 23938) (punctuation 23929 . 23930) (symbol 23925 . 23929) (punctuation 23924 . 23925) (punctuation 23923 . 23924) (punctuation 23922 . 23923) (symbol 23915 . 23918) (punctuation 23914 . 23915) (symbol 23906 . 23914) (punctuation 23905 . 23906) (symbol 23897 . 23905) (punctuation 23896 . 23897) (symbol 23892 . 23896) (punctuation 23891 . 23892) (punctuation 23890 . 23891) (punctuation 23889 . 23890) (symbol 23883 . 23885) (punctuation 23882 . 23883) (symbol 23875 . 23882) (punctuation 23874 . 23875) (symbol 23866 . 23874) (punctuation 23865 . 23866) (symbol 23861 . 23865) (punctuation 23860 . 23861) (punctuation 23859 . 23860) (punctuation 23858 . 23859) (symbol 23852 . 23854) (punctuation 23851 . 23852) (symbol 23844 . 23851) (punctuation 23843 . 23844) (symbol 23835 . 23843) (punctuation 23834 . 23835) (symbol 23830 . 23834) (punctuation 23829 . 23830) (punctuation 23828 . 23829) (punctuation 23827 . 23828) (symbol 23820 . 23823) (punctuation 23819 . 23820) (symbol 23813 . 23819) (punctuation 23812 . 23813) (symbol 23804 . 23812) (punctuation 23803 . 23804) (symbol 23799 . 23803) (punctuation 23798 . 23799) (punctuation 23797 . 23798) (punctuation 23796 . 23797) (symbol 23789 . 23792) (punctuation 23788 . 23789) (symbol 23780 . 23788) (punctuation 23779 . 23780) (symbol 23771 . 23779) (punctuation 23770 . 23771) (symbol 23766 . 23770) (punctuation 23765 . 23766) (punctuation 23764 . 23765) (punctuation 23763 . 23764) (symbol 23756 . 23759) (punctuation 23755 . 23756) (symbol 23748 . 23755) (punctuation 23747 . 23748) (symbol 23739 . 23747) (punctuation 23738 . 23739) (symbol 23734 . 23738) (punctuation 23733 . 23734) (punctuation 23732 . 23733) (punctuation 23731 . 23732) (symbol 23724 . 23727) (punctuation 23723 . 23724) (symbol 23718 . 23723) (punctuation 23717 . 23718) (CASE 23713 . 23717) (punctuation 23712 . 23713) (symbol 23708 . 23712) (punctuation 23707 . 23708) (punctuation 23706 . 23707) (punctuation 23705 . 23706) (symbol 23698 . 23701) (punctuation 23697 . 23698) (symbol 23687 . 23697) (punctuation 23686 . 23687) (symbol 23673 . 23686) (punctuation 23672 . 23673) (symbol 23668 . 23672) (punctuation 23667 . 23668) (punctuation 23666 . 23667) (punctuation 23665 . 23666) (symbol 23658 . 23661) (punctuation 23657 . 23658) (symbol 23653 . 23657) (punctuation 23652 . 23653) (symbol 23648 . 23652) (punctuation 23647 . 23648) (symbol 23634 . 23647) (punctuation 23633 . 23634) (symbol 23629 . 23633) (punctuation 23628 . 23629) (punctuation 23627 . 23628) (punctuation 23626 . 23627) (symbol 23619 . 23622) (punctuation 23618 . 23619) (symbol 23614 . 23618) (punctuation 23613 . 23614) (symbol 23609 . 23613) (punctuation 23608 . 23609) (symbol 23595 . 23608) (punctuation 23594 . 23595) (symbol 23590 . 23594) (punctuation 23589 . 23590) (punctuation 23588 . 23589) (punctuation 23587 . 23588) (symbol 23580 . 23583) (punctuation 23579 . 23580) (symbol 23575 . 23579) (punctuation 23574 . 23575) (symbol 23561 . 23574) (punctuation 23560 . 23561) (symbol 23556 . 23560) (punctuation 23555 . 23556) (punctuation 23554 . 23555) (punctuation 23553 . 23554) (symbol 23546 . 23549) (punctuation 23545 . 23546) (symbol 23542 . 23545) (punctuation 23541 . 23542) (symbol 23537 . 23541) (punctuation 23536 . 23537) (punctuation 23535 . 23536) (punctuation 23534 . 23535) (symbol 23527 . 23530) (punctuation 23526 . 23527) (symbol 23523 . 23526) (punctuation 23522 . 23523) (symbol 23519 . 23522) (punctuation 23518 . 23519) (symbol 23514 . 23518) (punctuation 23513 . 23514) (symbol 23508 . 23513) (punctuation 23507 . 23508) (symbol 23503 . 23507) (punctuation 23502 . 23503) (punctuation 23501 . 23502) (punctuation 23500 . 23501) (symbol 23493 . 23496) (punctuation 23492 . 23493) (symbol 23484 . 23492) (punctuation 23483 . 23484) (symbol 23479 . 23483) (punctuation 23478 . 23479) (punctuation 23477 . 23478) (punctuation 23476 . 23477) (symbol 23470 . 23472) (punctuation 23469 . 23470) (symbol 23463 . 23469) (punctuation 23462 . 23463) (symbol 23458 . 23462) (punctuation 23457 . 23458) (punctuation 23456 . 23457) (punctuation 23455 . 23456) (symbol 23448 . 23451) (punctuation 23447 . 23448) (symbol 23440 . 23447) (punctuation 23439 . 23440) (symbol 23436 . 23439) (punctuation 23435 . 23436) (symbol 23431 . 23435) (punctuation 23430 . 23431) (punctuation 23429 . 23430) (punctuation 23428 . 23429) (symbol 23421 . 23424) (punctuation 23420 . 23421) (symbol 23413 . 23420) (punctuation 23412 . 23413) (symbol 23408 . 23412) (punctuation 23407 . 23408) (punctuation 23406 . 23407) (punctuation 23405 . 23406) (symbol 23398 . 23401) (punctuation 23397 . 23398) (symbol 23391 . 23397) (punctuation 23390 . 23391) (symbol 23386 . 23390) (punctuation 23385 . 23386) (punctuation 23384 . 23385) (punctuation 23383 . 23384) (symbol 23376 . 23379) (punctuation 23375 . 23376) (symbol 23371 . 23375) (punctuation 23370 . 23371) (symbol 23366 . 23370) (punctuation 23365 . 23366) (punctuation 23364 . 23365) (punctuation 23363 . 23364) (symbol 23356 . 23359) (punctuation 23355 . 23356) (symbol 23350 . 23355) (punctuation 23349 . 23350) (symbol 23345 . 23349) (punctuation 23344 . 23345) (punctuation 23343 . 23344) (punctuation 23342 . 23343) (symbol 23335 . 23338) (punctuation 23334 . 23335) (symbol 23328 . 23334) (punctuation 23327 . 23328) (symbol 23323 . 23327) (punctuation 23322 . 23323) (punctuation 23321 . 23322) (punctuation 23320 . 23321) (symbol 23313 . 23316) (punctuation 23312 . 23313) (symbol 23309 . 23312) (punctuation 23308 . 23309) (FLOAT 23303 . 23308) (punctuation 23302 . 23303) (symbol 23298 . 23302) (punctuation 23297 . 23298) (symbol 23292 . 23297) (punctuation 23291 . 23292) (symbol 23287 . 23291) (punctuation 23286 . 23287) (punctuation 23285 . 23286) (punctuation 23284 . 23285) (symbol 23277 . 23280) (punctuation 23276 . 23277) (symbol 23271 . 23276) (punctuation 23270 . 23271) (symbol 23266 . 23270) (punctuation 23265 . 23266) (punctuation 23264 . 23265) (punctuation 23263 . 23264) (symbol 23256 . 23259) (punctuation 23255 . 23256) (symbol 23250 . 23255) (punctuation 23249 . 23250) (symbol 23245 . 23249) (punctuation 23244 . 23245) (punctuation 23243 . 23244) (punctuation 23242 . 23243) (symbol 23235 . 23238) (punctuation 23234 . 23235) (symbol 23226 . 23234) (punctuation 23225 . 23226) (symbol 23221 . 23225) (punctuation 23220 . 23221) (punctuation 23219 . 23220) (punctuation 23218 . 23219) (symbol 23211 . 23214) (punctuation 23210 . 23211) (symbol 23206 . 23210) (punctuation 23205 . 23206) (symbol 23201 . 23205) (punctuation 23200 . 23201) (symbol 23195 . 23200) (punctuation 23194 . 23195) (symbol 23190 . 23194) (punctuation 23189 . 23190) (punctuation 23188 . 23189) (punctuation 23187 . 23188) (symbol 23180 . 23183) (punctuation 23179 . 23180) (symbol 23175 . 23179) (punctuation 23174 . 23175) (symbol 23170 . 23174) (punctuation 23169 . 23170) (symbol 23165 . 23169) (punctuation 23164 . 23165) (symbol 23159 . 23164) (punctuation 23158 . 23159) (symbol 23154 . 23158) (punctuation 23153 . 23154) (punctuation 23152 . 23153) (punctuation 23151 . 23152) (symbol 23144 . 23147) (punctuation 23143 . 23144) (symbol 23134 . 23143) (punctuation 23133 . 23134) (symbol 23129 . 23133) (punctuation 23128 . 23129) (symbol 23123 . 23128) (punctuation 23122 . 23123) (symbol 23118 . 23122) (punctuation 23117 . 23118) (punctuation 23116 . 23117) (punctuation 23115 . 23116) (symbol 23108 . 23111) (punctuation 23107 . 23108) (symbol 23101 . 23107) (punctuation 23100 . 23101) (symbol 23096 . 23100) (punctuation 23095 . 23096) (punctuation 23094 . 23095) (punctuation 23093 . 23094) (symbol 23086 . 23089) (punctuation 23085 . 23086) (symbol 23080 . 23085) (punctuation 23079 . 23080) (symbol 23076 . 23079) (punctuation 23075 . 23076) (symbol 23071 . 23075) (punctuation 23070 . 23071) (punctuation 23069 . 23070) (punctuation 23068 . 23069) (symbol 23061 . 23064) (punctuation 23060 . 23061) (symbol 23056 . 23060) (punctuation 23055 . 23056) (symbol 23052 . 23055) (punctuation 23051 . 23052) (symbol 23047 . 23051) (punctuation 23046 . 23047) (punctuation 23045 . 23046) (punctuation 23044 . 23045) (symbol 23037 . 23040) (punctuation 23036 . 23037) (symbol 23027 . 23036) (punctuation 23026 . 23027) (symbol 23022 . 23026) (punctuation 23021 . 23022) (punctuation 23020 . 23021) (punctuation 23019 . 23020) (symbol 23012 . 23015) (punctuation 23011 . 23012) (symbol 23008 . 23011) (punctuation 23007 . 23008) (symbol 23003 . 23007) (punctuation 23002 . 23003) (symbol 22998 . 23002) (punctuation 22997 . 22998) (symbol 22992 . 22997) (punctuation 22991 . 22992) (symbol 22987 . 22991) (punctuation 22986 . 22987) (punctuation 22985 . 22986) (punctuation 22984 . 22985) (symbol 22977 . 22980) (punctuation 22976 . 22977) (symbol 22970 . 22976) (punctuation 22969 . 22970) (symbol 22965 . 22969) (punctuation 22964 . 22965) (punctuation 22963 . 22964) (punctuation 22962 . 22963) (symbol 22955 . 22958) (punctuation 22954 . 22955) (symbol 22950 . 22954) (punctuation 22949 . 22950) (symbol 22945 . 22949) (punctuation 22944 . 22945) (symbol 22940 . 22944) (punctuation 22939 . 22940) (punctuation 22938 . 22939) (punctuation 22937 . 22938) (symbol 22930 . 22933) (punctuation 22929 . 22930) (symbol 22923 . 22929) (punctuation 22922 . 22923) (symbol 22918 . 22922) (punctuation 22917 . 22918) (punctuation 22916 . 22917) (punctuation 22915 . 22916) (symbol 22909 . 22911) (punctuation 22908 . 22909) (symbol 22900 . 22908) (punctuation 22899 . 22900) (symbol 22895 . 22899) (punctuation 22894 . 22895) (punctuation 22893 . 22894) (punctuation 22892 . 22893) (punctuation 22887 . 22888) (symbol 22878 . 22887) (symbol 22527 . 22529) (punctuation 22526 . 22527) (symbol 22519 . 22526) (semantic-list 22507 . 22519) (symbol 22506 . 22507) (symbol 22499 . 22502) (punctuation 22498 . 22499) (symbol 22492 . 22498) (semantic-list 22480 . 22492) (symbol 22479 . 22480) (symbol 22472 . 22475) (punctuation 22471 . 22472) (symbol 22465 . 22471) (semantic-list 22453 . 22465) (symbol 22452 . 22453) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "setting" 22420 . 22434) (punctuation "-" 22420 . 22434) (symbol "font" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "win" 22420 . 22434) (punctuation "-" 22420 . 22434) (symbol "x" 22420 . 22434) (punctuation "/" 22420 . 22434) (symbol "term" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "win" 22420 . 22434) (punctuation "-" 22420 . 22434) (symbol "common" 22420 . 22434) (punctuation "/" 22420 . 22434) (symbol "term" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "dnd" 22420 . 22434) (punctuation "-" 22420 . 22434) (symbol "x" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "mwheel" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "bar" 22420 . 22434) (punctuation "-" 22420 . 22434) (symbol "tool" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "dnd" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "fontset" 22420 . 22434) (punctuation "/" 22420 . 22434) (symbol "international" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "image" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22420 . 22434) (punctuation "." 22420 . 22434) (symbol "fringe" 22420 . 22434) (semantic-list "{lispsource}" 22420 . 22434) (symbol "$" 22420 . 22434) (symbol "elc" 22367 . 22382) (punctuation "." 22367 . 22382) (symbol "tooltip" 22367 . 22382) (semantic-list "{lispsource}" 22367 . 22382) (symbol "$" 22367 . 22382) (symbol 22360 . 22363) (punctuation 22359 . 22360) (symbol 22355 . 22359) (punctuation 22354 . 22355) (symbol 22351 . 22354) (semantic-list 22339 . 22351) (symbol 22338 . 22339) (symbol 22331 . 22334) (punctuation 22330 . 22331) (symbol 22326 . 22330) (punctuation 22325 . 22326) (symbol 22320 . 22325) (semantic-list 22308 . 22320) (symbol 22307 . 22308) (symbol 22300 . 22303) (punctuation 22299 . 22300) (symbol 22294 . 22299) (punctuation 22293 . 22294) (symbol 22291 . 22293) (semantic-list 22279 . 22291) (symbol 22278 . 22279) (symbol 22271 . 22274) (punctuation 22270 . 22271) (symbol 22266 . 22270) (punctuation 22265 . 22266) (symbol 22261 . 22265) (punctuation 22260 . 22261) (symbol 22257 . 22260) (semantic-list 22245 . 22257) (symbol 22244 . 22245) (symbol 22237 . 22240) (punctuation 22236 . 22237) (symbol 22231 . 22236) (punctuation 22230 . 22231) (symbol 22226 . 22230) (punctuation 22225 . 22226) (symbol 22220 . 22225) (semantic-list 22208 . 22220) (symbol 22207 . 22208) (symbol 22200 . 22203) (punctuation 22199 . 22200) (symbol 22195 . 22199) (punctuation 22194 . 22195) (symbol 22190 . 22194) (punctuation 22189 . 22190) (symbol 22180 . 22189) (semantic-list 22168 . 22180) (symbol 22167 . 22168) (symbol 22160 . 22163) (punctuation 22159 . 22160) (symbol 22149 . 22159) (punctuation 22148 . 22149) (symbol 22139 . 22148) (semantic-list 22127 . 22139) (symbol 22126 . 22127) (symbol 22119 . 22122) (punctuation 22118 . 22119) (symbol 22114 . 22118) (punctuation 22113 . 22114) (symbol 22104 . 22113) (semantic-list 22092 . 22104) (symbol 22091 . 22092) (symbol 22084 . 22087) (punctuation 22083 . 22084) (symbol 22079 . 22083) (punctuation 22078 . 22079) (symbol 22069 . 22078) (semantic-list 22057 . 22069) (symbol 22056 . 22057) (symbol 22049 . 22052) (punctuation 22048 . 22049) (symbol 22044 . 22048) (punctuation 22043 . 22044) (symbol 22040 . 22043) (semantic-list 22028 . 22040) (symbol 22027 . 22028) (symbol 22020 . 22023) (punctuation 22019 . 22020) (symbol 22015 . 22019) (punctuation 22014 . 22015) (symbol 22010 . 22014) (semantic-list 21998 . 22010) (symbol 21997 . 21998) (symbol 21990 . 21993) (punctuation 21989 . 21990) (symbol 21983 . 21989) (punctuation 21982 . 21983) (symbol 21978 . 21982) (punctuation 21977 . 21978) (symbol 21972 . 21977) (semantic-list 21960 . 21972) (symbol 21959 . 21960) (symbol 21952 . 21955) (punctuation 21951 . 21952) (symbol 21947 . 21951) (punctuation 21946 . 21947) (symbol 21942 . 21946) (semantic-list 21930 . 21942) (symbol 21929 . 21930) (symbol 21922 . 21925) (punctuation 21921 . 21922) (symbol 21915 . 21921) (punctuation 21914 . 21915) (symbol 21911 . 21914) (punctuation 21910 . 21911) (symbol 21906 . 21910) (semantic-list 21894 . 21906) (symbol 21893 . 21894) (symbol 21886 . 21889) (punctuation 21885 . 21886) (symbol 21881 . 21885) (semantic-list 21869 . 21881) (symbol 21868 . 21869) (symbol 21861 . 21864) (punctuation 21860 . 21861) (symbol 21853 . 21860) (semantic-list 21841 . 21853) (symbol 21840 . 21841) (symbol 21833 . 21836) (punctuation 21832 . 21833) (symbol 21822 . 21832) (semantic-list 21810 . 21822) (symbol 21809 . 21810) (symbol 21802 . 21805) (punctuation 21801 . 21802) (symbol 21795 . 21801) (semantic-list 21783 . 21795) (symbol 21782 . 21783) (symbol 21775 . 21778) (punctuation 21774 . 21775) (symbol 21767 . 21774) (semantic-list 21755 . 21767) (symbol 21754 . 21755) (symbol 21747 . 21750) (punctuation 21746 . 21747) (REGISTER 21738 . 21746) (semantic-list 21726 . 21738) (symbol 21725 . 21726) (symbol 21719 . 21721) (punctuation 21718 . 21719) (symbol 21713 . 21718) (semantic-list 21701 . 21713) (symbol 21700 . 21701) (symbol 21694 . 21696) (punctuation 21693 . 21694) (symbol 21686 . 21693) (punctuation 21685 . 21686) (symbol 21677 . 21685) (semantic-list 21665 . 21677) (symbol 21664 . 21665) (symbol 21658 . 21660) (punctuation 21657 . 21658) (symbol 21652 . 21657) (punctuation 21651 . 21652) (symbol 21643 . 21651) (semantic-list 21631 . 21643) (symbol 21630 . 21631) (symbol 21624 . 21626) (punctuation 21623 . 21624) (symbol 21615 . 21623) (punctuation 21614 . 21615) (symbol 21606 . 21614) (semantic-list 21594 . 21606) (symbol 21593 . 21594) (symbol 21587 . 21589) (punctuation 21586 . 21587) (symbol 21582 . 21586) (punctuation 21581 . 21582) (number 21580 . 21581) (punctuation 21579 . 21580) (symbol 21576 . 21579) (punctuation 21575 . 21576) (symbol 21567 . 21575) (semantic-list 21555 . 21567) (symbol 21554 . 21555) (symbol 21548 . 21550) (punctuation 21547 . 21548) (symbol 21543 . 21547) (punctuation 21542 . 21543) (symbol 21538 . 21542) (punctuation 21537 . 21538) (symbol 21529 . 21537) (semantic-list 21517 . 21529) (symbol 21516 . 21517) (symbol 21509 . 21512) (punctuation 21508 . 21509) (symbol 21498 . 21508) (punctuation 21497 . 21498) (symbol 21489 . 21497) (semantic-list 21477 . 21489) (symbol 21476 . 21477) (symbol 21469 . 21472) (punctuation 21468 . 21469) (symbol 21461 . 21468) (punctuation 21460 . 21461) (symbol 21452 . 21460) (semantic-list 21440 . 21452) (symbol 21439 . 21440) (symbol 21433 . 21435) (punctuation 21432 . 21433) (symbol 21428 . 21432) (punctuation 21427 . 21428) (symbol 21419 . 21427) (semantic-list 21407 . 21419) (symbol 21406 . 21407) (symbol 21400 . 21402) (punctuation 21399 . 21400) (symbol 21395 . 21399) (punctuation 21394 . 21395) (symbol 21391 . 21394) (punctuation 21390 . 21391) (symbol 21382 . 21390) (semantic-list 21370 . 21382) (symbol 21369 . 21370) (symbol 21363 . 21365) (punctuation 21362 . 21363) (symbol 21358 . 21362) (punctuation 21357 . 21358) (symbol 21349 . 21357) (semantic-list 21337 . 21349) (symbol 21336 . 21337) (symbol 21330 . 21332) (punctuation 21329 . 21330) (symbol 21326 . 21329) (punctuation 21325 . 21326) (symbol 21317 . 21325) (semantic-list 21305 . 21317) (symbol 21304 . 21305) (symbol 21298 . 21300) (punctuation 21297 . 21298) (symbol 21291 . 21297) (punctuation 21290 . 21291) (symbol 21282 . 21290) (semantic-list 21270 . 21282) (symbol 21269 . 21270) (symbol 21263 . 21265) (punctuation 21262 . 21263) (symbol 21254 . 21262) (punctuation 21253 . 21254) (symbol 21245 . 21253) (semantic-list 21233 . 21245) (symbol 21232 . 21233) (symbol 21226 . 21228) (punctuation 21225 . 21226) (symbol 21219 . 21225) (punctuation 21218 . 21219) (symbol 21210 . 21218) (semantic-list 21198 . 21210) (symbol 21197 . 21198) (symbol 21191 . 21193) (punctuation 21190 . 21191) (symbol 21185 . 21190) (punctuation 21184 . 21185) (symbol 21176 . 21184) (semantic-list 21164 . 21176) (symbol 21163 . 21164) (symbol 21157 . 21159) (punctuation 21156 . 21157) (symbol 21148 . 21156) (punctuation 21147 . 21148) (symbol 21139 . 21147) (semantic-list 21127 . 21139) (symbol 21126 . 21127) (symbol 21120 . 21122) (punctuation 21119 . 21120) (symbol 21113 . 21119) (punctuation 21112 . 21113) (symbol 21104 . 21112) (semantic-list 21092 . 21104) (symbol 21091 . 21092) (symbol 21085 . 21087) (punctuation 21084 . 21085) (symbol 21079 . 21084) (punctuation 21078 . 21079) (symbol 21070 . 21078) (semantic-list 21058 . 21070) (symbol 21057 . 21058) (symbol 21050 . 21053) (punctuation 21049 . 21050) (symbol 21041 . 21049) (punctuation 21040 . 21041) (symbol 21032 . 21040) (semantic-list 21020 . 21032) (symbol 21019 . 21020) (symbol 21012 . 21015) (punctuation 21011 . 21012) (symbol 21003 . 21011) (punctuation 21002 . 21003) (symbol 20994 . 21002) (semantic-list 20982 . 20994) (symbol 20981 . 20982) (symbol 20975 . 20977) (punctuation 20974 . 20975) (symbol 20967 . 20974) (punctuation 20966 . 20967) (symbol 20958 . 20966) (semantic-list 20946 . 20958) (symbol 20945 . 20946) (symbol 20939 . 20941) (punctuation 20938 . 20939) (symbol 20931 . 20938) (punctuation 20930 . 20931) (symbol 20922 . 20930) (semantic-list 20910 . 20922) (symbol 20909 . 20910) (symbol 20902 . 20905) (punctuation 20901 . 20902) (symbol 20895 . 20901) (punctuation 20894 . 20895) (symbol 20886 . 20894) (semantic-list 20874 . 20886) (symbol 20873 . 20874) (symbol 20866 . 20869) (punctuation 20865 . 20866) (symbol 20857 . 20865) (punctuation 20856 . 20857) (symbol 20848 . 20856) (semantic-list 20836 . 20848) (symbol 20835 . 20836) (symbol 20828 . 20831) (punctuation 20827 . 20828) (symbol 20820 . 20827) (punctuation 20819 . 20820) (symbol 20811 . 20819) (semantic-list 20799 . 20811) (symbol 20798 . 20799) (symbol 20791 . 20794) (punctuation 20790 . 20791) (symbol 20785 . 20790) (punctuation 20784 . 20785) (CASE 20780 . 20784) (semantic-list 20768 . 20780) (symbol 20767 . 20768) (symbol 20761 . 20763) (punctuation 20760 . 20761) (symbol 20752 . 20760) (punctuation 20751 . 20752) (symbol 20738 . 20751) (semantic-list 20726 . 20738) (symbol 20725 . 20726) (symbol 20718 . 20721) (punctuation 20717 . 20718) (symbol 20707 . 20717) (punctuation 20706 . 20707) (symbol 20693 . 20706) (semantic-list 20681 . 20693) (symbol 20680 . 20681) (symbol 20673 . 20676) (punctuation 20672 . 20673) (symbol 20668 . 20672) (punctuation 20667 . 20668) (symbol 20663 . 20667) (punctuation 20662 . 20663) (symbol 20649 . 20662) (semantic-list 20637 . 20649) (symbol 20636 . 20637) (symbol 20629 . 20632) (punctuation 20628 . 20629) (symbol 20624 . 20628) (punctuation 20623 . 20624) (symbol 20619 . 20623) (punctuation 20618 . 20619) (symbol 20605 . 20618) (semantic-list 20593 . 20605) (symbol 20592 . 20593) (symbol 20585 . 20588) (punctuation 20584 . 20585) (symbol 20580 . 20584) (punctuation 20579 . 20580) (symbol 20566 . 20579) (semantic-list 20554 . 20566) (symbol 20553 . 20554) (symbol 20546 . 20549) (punctuation 20545 . 20546) (symbol 20542 . 20545) (punctuation 20541 . 20542) (symbol 20537 . 20541) (semantic-list 20525 . 20537) (symbol 20524 . 20525) (symbol 20517 . 20520) (punctuation 20516 . 20517) (symbol 20513 . 20516) (punctuation 20512 . 20513) (symbol 20509 . 20512) (punctuation 20508 . 20509) (symbol 20504 . 20508) (punctuation 20503 . 20504) (symbol 20498 . 20503) (semantic-list 20486 . 20498) (symbol 20485 . 20486) (symbol 20478 . 20481) (punctuation 20477 . 20478) (symbol 20469 . 20477) (semantic-list 20457 . 20469) (symbol 20456 . 20457) (symbol 20450 . 20452) (punctuation 20449 . 20450) (symbol 20443 . 20449) (semantic-list 20431 . 20443) (symbol 20430 . 20431) (symbol 20423 . 20426) (punctuation 20422 . 20423) (symbol 20415 . 20422) (punctuation 20414 . 20415) (symbol 20411 . 20414) (semantic-list 20399 . 20411) (symbol 20398 . 20399) (symbol 20391 . 20394) (punctuation 20390 . 20391) (symbol 20383 . 20390) (semantic-list 20371 . 20383) (symbol 20370 . 20371) (symbol 20363 . 20366) (punctuation 20362 . 20363) (symbol 20356 . 20362) (semantic-list 20344 . 20356) (symbol 20343 . 20344) (symbol 20336 . 20339) (punctuation 20335 . 20336) (symbol 20331 . 20335) (semantic-list 20319 . 20331) (symbol 20318 . 20319) (symbol 20311 . 20314) (punctuation 20310 . 20311) (symbol 20305 . 20310) (semantic-list 20293 . 20305) (symbol 20292 . 20293) (symbol 20285 . 20288) (punctuation 20284 . 20285) (symbol 20281 . 20284) (punctuation 20280 . 20281) (FLOAT 20275 . 20280) (punctuation 20274 . 20275) (symbol 20270 . 20274) (punctuation 20269 . 20270) (symbol 20264 . 20269) (semantic-list 20252 . 20264) (symbol 20251 . 20252) (symbol "elc" 20234 . 20247) (punctuation "." 20234 . 20247) (symbol "bar" 20234 . 20247) (punctuation "-" 20234 . 20247) (symbol "scroll" 20234 . 20247) (semantic-list "{lispsource}" 20234 . 20247) (symbol "$" 20234 . 20247) (symbol "elc" 20234 . 20247) (punctuation "." 20234 . 20247) (symbol "select" 20234 . 20247) (semantic-list "{lispsource}" 20234 . 20247) (symbol "$" 20234 . 20247) (symbol "elc" 20234 . 20247) (punctuation "." 20234 . 20247) (symbol "mouse" 20234 . 20247) (semantic-list "{lispsource}" 20234 . 20247) (symbol "$" 20234 . 20247) (symbol 20227 . 20230) (punctuation 20226 . 20227) (symbol 20218 . 20226) (semantic-list 20206 . 20218) (symbol 20205 . 20206) (symbol 20198 . 20201) (punctuation 20197 . 20198) (symbol 20191 . 20197) (semantic-list 20179 . 20191) (symbol 20178 . 20179) (symbol 20171 . 20174) (punctuation 20170 . 20171) (symbol 20165 . 20170) (semantic-list 20153 . 20165) (symbol 20152 . 20153) (symbol 20145 . 20148) (punctuation 20144 . 20145) (symbol 20139 . 20144) (semantic-list 20127 . 20139) (symbol 20126 . 20127) (symbol 20119 . 20122) (punctuation 20118 . 20119) (symbol 20115 . 20118) (semantic-list 20103 . 20115) (symbol 20102 . 20103) (symbol 20095 . 20098) (punctuation 20094 . 20095) (symbol 20090 . 20094) (punctuation 20089 . 20090) (symbol 20085 . 20089) (punctuation 20084 . 20085) (symbol 20079 . 20084) (semantic-list 20067 . 20079) (symbol 20066 . 20067) (symbol 20059 . 20062) (punctuation 20058 . 20059) (symbol 20054 . 20058) (punctuation 20053 . 20054) (symbol 20049 . 20053) (punctuation 20048 . 20049) (symbol 20044 . 20048) (punctuation 20043 . 20044) (symbol 20038 . 20043) (semantic-list 20026 . 20038) (symbol 20025 . 20026) (symbol 20018 . 20021) (punctuation 20017 . 20018) (symbol 20008 . 20017) (punctuation 20007 . 20008) (symbol 20003 . 20007) (punctuation 20002 . 20003) (symbol 19997 . 20002) (semantic-list 19985 . 19997) (symbol 19984 . 19985) (symbol 19977 . 19980) (punctuation 19976 . 19977) (symbol 19970 . 19976) (semantic-list 19958 . 19970) (symbol 19957 . 19958) (symbol 19950 . 19953) (punctuation 19949 . 19950) (symbol 19944 . 19949) (punctuation 19943 . 19944) (symbol 19940 . 19943) (semantic-list 19928 . 19940) (symbol 19927 . 19928) (symbol 19920 . 19923) (punctuation 19919 . 19920) (symbol 19915 . 19919) (punctuation 19914 . 19915) (symbol 19911 . 19914) (semantic-list 19899 . 19911) (symbol 19898 . 19899) (symbol 19891 . 19894) (punctuation 19890 . 19891) (symbol 19881 . 19890) (semantic-list 19869 . 19881) (symbol 19868 . 19869) (symbol 19861 . 19864) (punctuation 19860 . 19861) (symbol 19857 . 19860) (punctuation 19856 . 19857) (symbol 19852 . 19856) (punctuation 19851 . 19852) (symbol 19847 . 19851) (punctuation 19846 . 19847) (symbol 19841 . 19846) (semantic-list 19829 . 19841) (symbol 19828 . 19829) (symbol 19821 . 19824) (punctuation 19820 . 19821) (symbol 19814 . 19820) (semantic-list 19802 . 19814) (symbol 19801 . 19802) (symbol 19794 . 19797) (punctuation 19793 . 19794) (symbol 19789 . 19793) (punctuation 19788 . 19789) (symbol 19784 . 19788) (semantic-list 19772 . 19784) (symbol 19771 . 19772) (symbol 19764 . 19767) (punctuation 19763 . 19764) (symbol 19757 . 19763) (semantic-list 19745 . 19757) (symbol 19744 . 19745) (symbol 19738 . 19740) (punctuation 19737 . 19738) (symbol 19729 . 19737) (semantic-list 19717 . 19729) (symbol 19716 . 19717) (punctuation 19711 . 19712) (symbol 19707 . 19711) (semantic-list 17340 . 17349) (symbol 17339 . 17340) (semantic-list 17327 . 17338) (symbol 17326 . 17327) (semantic-list 17314 . 17325) (symbol 17313 . 17314) (symbol 17311 . 17312) (punctuation 17310 . 17311) (symbol 17302 . 17310) (semantic-list 17289 . 17301) (symbol 17288 . 17289) (punctuation 17286 . 17287) (symbol 17278 . 17286) (punctuation 16986 . 16987) (symbol 16977 . 16986) (symbol 16874 . 16875) (punctuation 16873 . 16874) (symbol 16868 . 16873) (punctuation 16867 . 16868) (symbol 16865 . 16867) (semantic-list 16853 . 16864) (symbol 16852 . 16853) (semantic-list 16839 . 16851) (symbol 16838 . 16839) (punctuation 16836 . 16837) (symbol 16826 . 16835) (symbol 16816 . 16817) (punctuation 16815 . 16816) (symbol 16809 . 16815) (punctuation 16807 . 16808) (symbol 16797 . 16806) (symbol 16591 . 16592) (punctuation 16590 . 16591) (symbol 16584 . 16590) (symbol 16582 . 16583) (punctuation 16581 . 16582) (symbol 16574 . 16581) (punctuation 16572 . 16573) (symbol 16561 . 16571) (semantic-list 16241 . 16255) (symbol 16240 . 16241) (symbol 16238 . 16239) (punctuation 16237 . 16238) (symbol 16230 . 16237) (symbol 16228 . 16229) (punctuation 16227 . 16228) (symbol 16220 . 16227) (symbol 16218 . 16219) (punctuation 16217 . 16218) (symbol 16208 . 16217) (symbol 16206 . 16207) (punctuation 16205 . 16206) (symbol 16199 . 16205) (symbol 16197 . 16198) (punctuation 16196 . 16197) (symbol 16189 . 16196) (symbol 16187 . 16188) (punctuation 16186 . 16187) (symbol 16179 . 16186) (symbol 16173 . 16174) (punctuation 16172 . 16173) (symbol 16164 . 16172) (symbol 16162 . 16163) (punctuation 16161 . 16162) (symbol 16154 . 16161) (symbol 16152 . 16153) (punctuation 16151 . 16152) (symbol 16145 . 16151) (symbol 16143 . 16144) (punctuation 16142 . 16143) (symbol 16132 . 16142) (symbol 16130 . 16131) (punctuation 16129 . 16130) (symbol 16126 . 16129) (symbol 16120 . 16121) (punctuation 16119 . 16120) (symbol 16113 . 16119) (symbol 16111 . 16112) (punctuation 16110 . 16111) (symbol 16103 . 16110) (symbol 16101 . 16102) (punctuation 16100 . 16101) (symbol 16092 . 16100) (symbol 16090 . 16091) (punctuation 16089 . 16090) (symbol 16083 . 16089) (symbol 16081 . 16082) (punctuation 16080 . 16081) (symbol 16075 . 16080) (symbol 16073 . 16074) (punctuation 16072 . 16073) (symbol 16066 . 16072) (symbol 16060 . 16061) (punctuation 16059 . 16060) (symbol 16051 . 16059) (symbol 16049 . 16050) (punctuation 16048 . 16049) (symbol 16041 . 16048) (symbol 16035 . 16036) (punctuation 16034 . 16035) (symbol 16029 . 16034) (symbol 16027 . 16028) (punctuation 16026 . 16027) (symbol 16020 . 16026) (symbol 16018 . 16019) (punctuation 16017 . 16018) (symbol 16011 . 16017) (symbol 16009 . 16010) (punctuation 16008 . 16009) (symbol 16004 . 16008) (symbol 16002 . 16003) (punctuation 16001 . 16002) (symbol 15994 . 16001) (symbol 15992 . 15993) (punctuation 15991 . 15992) (symbol 15986 . 15991) (symbol 15984 . 15985) (punctuation 15983 . 15984) (symbol 15979 . 15983) (symbol 15977 . 15978) (punctuation 15976 . 15977) (symbol 15971 . 15976) (symbol 15965 . 15966) (punctuation 15964 . 15965) (symbol 15959 . 15964) (symbol 15957 . 15958) (punctuation 15956 . 15957) (symbol 15950 . 15956) (punctuation 15948 . 15949) (symbol 15927 . 15947) (semantic-list 15782 . 15796) (symbol 15781 . 15782) (semantic-list 15768 . 15780) (symbol 15767 . 15768) (semantic-list 15758 . 15766) (symbol 15757 . 15758) (semantic-list 15745 . 15756) (symbol 15744 . 15745) (symbol 15739 . 15740) (punctuation 15738 . 15739) (symbol 15735 . 15738) (symbol 15733 . 15734) (punctuation 15732 . 15733) (symbol 15723 . 15732) (symbol 15721 . 15722) (punctuation 15720 . 15721) (symbol 15712 . 15720) (symbol 15710 . 15711) (punctuation 15709 . 15710) (symbol 15700 . 15709) (symbol 15698 . 15699) (punctuation 15697 . 15698) (symbol 15689 . 15697) (symbol 15687 . 15688) (punctuation 15686 . 15687) (symbol 15680 . 15686) (symbol 15675 . 15676) (punctuation 15674 . 15675) (symbol 15668 . 15674) (symbol 15666 . 15667) (punctuation 15665 . 15666) (symbol 15660 . 15665) (symbol 15658 . 15659) (punctuation 15657 . 15658) (symbol 15652 . 15657) (punctuation 15651 . 15652) (symbol 15645 . 15651) (symbol 15640 . 15641) (punctuation 15639 . 15640) (symbol 15631 . 15639) (symbol 15629 . 15630) (punctuation 15628 . 15629) (symbol 15621 . 15628) (symbol 15616 . 15617) (punctuation 15615 . 15616) (symbol 15607 . 15615) (symbol "o" 15600 . 15606) (punctuation "." 15600 . 15606) (symbol "unexec" 15600 . 15606) (symbol 15598 . 15599) (punctuation 15597 . 15598) (symbol 15591 . 15597) (symbol 15586 . 15587) (punctuation 15585 . 15586) (symbol 15580 . 15585) (symbol 15578 . 15579) (punctuation 15577 . 15578) (symbol 15572 . 15577) (symbol 15570 . 15571) (punctuation 15569 . 15570) (symbol 15565 . 15569) (symbol 15563 . 15564) (punctuation 15562 . 15563) (symbol 15559 . 15562) (symbol 15557 . 15558) (punctuation 15556 . 15557) (symbol 15548 . 15556) (symbol 15546 . 15547) (punctuation 15545 . 15546) (symbol 15541 . 15545) (symbol 15536 . 15537) (punctuation 15535 . 15536) (symbol 15528 . 15535) (symbol 15526 . 15527) (punctuation 15525 . 15526) (symbol 15518 . 15525) (symbol 15516 . 15517) (punctuation 15515 . 15516) (symbol 15512 . 15515) (symbol 15510 . 15511) (punctuation 15509 . 15510) (symbol 15505 . 15509) (symbol 15503 . 15504) (punctuation 15502 . 15503) (symbol 15497 . 15502) (symbol 15492 . 15493) (punctuation 15491 . 15492) (symbol 15487 . 15491) (symbol 15485 . 15486) (punctuation 15484 . 15485) (symbol 15479 . 15484) (symbol 15477 . 15478) (punctuation 15476 . 15477) (symbol 15470 . 15476) (symbol 15468 . 15469) (punctuation 15467 . 15468) (symbol 15461 . 15467) (symbol 15459 . 15460) (punctuation 15458 . 15459) (symbol 15448 . 15458) (symbol 15446 . 15447) (punctuation 15445 . 15446) (symbol 15438 . 15445) (symbol 15436 . 15437) (punctuation 15435 . 15436) (symbol 15431 . 15435) (symbol 15426 . 15427) (punctuation 15425 . 15426) (symbol 15417 . 15425) (symbol 15415 . 15416) (punctuation 15414 . 15415) (symbol 15409 . 15414) (symbol 15407 . 15408) (punctuation 15406 . 15407) (symbol 15400 . 15406) (symbol 15398 . 15399) (punctuation 15397 . 15398) (symbol 15390 . 15397) (symbol 15385 . 15386) (punctuation 15384 . 15385) (symbol 15378 . 15384) (symbol 15376 . 15377) (punctuation 15375 . 15376) (symbol 15369 . 15375) (symbol 15367 . 15368) (punctuation 15366 . 15367) (symbol 15358 . 15366) (symbol 15356 . 15357) (punctuation 15355 . 15356) (symbol 15349 . 15355) (symbol 15344 . 15345) (punctuation 15343 . 15344) (symbol 15337 . 15343) (symbol 15335 . 15336) (punctuation 15334 . 15335) (symbol 15328 . 15334) (symbol 15326 . 15327) (punctuation 15325 . 15326) (symbol 15319 . 15325) (symbol 15317 . 15318) (punctuation 15316 . 15317) (symbol 15308 . 15316) (symbol 15306 . 15307) (punctuation 15305 . 15306) (symbol 15300 . 15305) (semantic-list 15286 . 15296) (symbol 15285 . 15286) (semantic-list 15275 . 15284) (symbol 15274 . 15275) (semantic-list 15267 . 15273) (symbol 15266 . 15267) (symbol 15264 . 15265) (punctuation 15263 . 15264) (symbol 15257 . 15263) (symbol 15255 . 15256) (punctuation 15254 . 15255) (symbol 15246 . 15254) (symbol 15244 . 15245) (punctuation 15243 . 15244) (symbol 15239 . 15243) (symbol 15237 . 15238) (punctuation 15236 . 15237) (symbol 15234 . 15236) (symbol 15229 . 15230) (punctuation 15228 . 15229) (symbol 15221 . 15228) (symbol 15219 . 15220) (punctuation 15218 . 15219) (symbol 15209 . 15218) (symbol 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (symbol 15201 . 15202) (punctuation 15200 . 15201) (symbol 15192 . 15200) (symbol 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (symbol 15181 . 15182) (punctuation 15180 . 15181) (symbol 15173 . 15180) (symbol 15168 . 15169) (punctuation 15167 . 15168) (symbol 15161 . 15167) (semantic-list 15149 . 15160) (symbol 15148 . 15149) (symbol 15146 . 15147) (punctuation 15145 . 15146) (symbol 15141 . 15145) (symbol 15139 . 15140) (punctuation 15138 . 15139) (symbol 15133 . 15138) (symbol 15131 . 15132) (punctuation 15130 . 15131) (symbol 15124 . 15130) (symbol 15122 . 15123) (punctuation 15121 . 15122) (symbol 15116 . 15121) (symbol 15114 . 15115) (punctuation 15113 . 15114) (symbol 15106 . 15113) (punctuation 15101 . 15102) (symbol 15098 . 15101) (symbol 14777 . 14778) (punctuation 14776 . 14777) (symbol 14769 . 14776) (symbol 14767 . 14768) (punctuation 14766 . 14767) (symbol 14760 . 14766) (symbol 14758 . 14759) (punctuation 14757 . 14758) (symbol 14752 . 14757) (punctuation 14750 . 14751) (symbol 14737 . 14749) (symbol 14705 . 14706) (punctuation 14704 . 14705) (symbol 14697 . 14704) (symbol 14695 . 14696) (punctuation 14694 . 14695) (symbol 14687 . 14694) (symbol 14685 . 14686) (punctuation 14684 . 14685) (symbol 14678 . 14684) (symbol 14676 . 14677) (punctuation 14675 . 14676) (symbol 14670 . 14675) (punctuation 14668 . 14669) (symbol 14655 . 14667) (punctuation 14178 . 14179) (symbol 14162 . 14177) (symbol 14159 . 14160) (punctuation 14158 . 14159) (symbol 14149 . 14158) (symbol 14147 . 14148) (punctuation 14146 . 14147) (symbol 14137 . 14146) (symbol 14135 . 14136) (punctuation 14134 . 14135) (symbol 14124 . 14134) (punctuation 14122 . 14123) (symbol 14110 . 14121) (symbol "X" 13587 . 13603) (punctuation "-" 13587 . 13603) (punctuation 13585 . 13586) (symbol 13570 . 13584) (symbol 13376 . 13378) (punctuation 13375 . 13376) (symbol 13373 . 13375) (punctuation 13227 . 13228) (symbol 13216 . 13226) (number 11977 . 11980) (punctuation 11976 . 11977) (symbol 11973 . 11976) (punctuation 11972 . 11973) (symbol 11965 . 11972) (punctuation 11964 . 11965) (symbol 11961 . 11964) (punctuation 11960 . 11961) (symbol 11959 . 11960) (punctuation 11958 . 11959) (symbol 11950 . 11957) (punctuation 11949 . 11950) (number 11946 . 11949) (punctuation 11945 . 11946) (symbol 11941 . 11945) (punctuation 11940 . 11941) (symbol 11937 . 11940) (punctuation 11936 . 11937) (symbol 11933 . 11936) (punctuation 11932 . 11933) (symbol 11931 . 11932) (punctuation 11930 . 11931) (number 11926 . 11929) (punctuation 11925 . 11926) (symbol 11921 . 11925) (punctuation 11920 . 11921) (symbol 11913 . 11920) (punctuation 11912 . 11913) (symbol 11909 . 11912) (punctuation 11908 . 11909) (symbol 11907 . 11908) (punctuation 11906 . 11907) (number 11904 . 11905) (punctuation 11903 . 11904) (symbol 11896 . 11903) (punctuation 11895 . 11896) (symbol 11888 . 11895) (punctuation 11887 . 11888) (symbol 11884 . 11887) (punctuation 11883 . 11884) (symbol 11882 . 11883) (punctuation 11881 . 11882) (punctuation 11879 . 11880) (symbol 11868 . 11879) (number 11862 . 11865) (punctuation 11861 . 11862) (symbol 11856 . 11861) (punctuation 11855 . 11856) (symbol 11851 . 11854) (punctuation 11850 . 11851) (number 11846 . 11849) (punctuation 11845 . 11846) (symbol 11837 . 11845) (punctuation 11836 . 11837) (number 11832 . 11835) (punctuation 11831 . 11832) (symbol 11823 . 11831) (punctuation 11822 . 11823) (symbol 11819 . 11821) (punctuation 11818 . 11819) (number 11814 . 11817) (punctuation 11813 . 11814) (symbol 11802 . 11813) (punctuation 11801 . 11802) (number 11799 . 11800) (punctuation 11798 . 11799) (symbol 11793 . 11798) (punctuation 11792 . 11793) (symbol 11788 . 11791) (punctuation 11787 . 11788) (symbol 11786 . 11787) (punctuation 11785 . 11786) (punctuation 11783 . 11784) (symbol 11774 . 11783) (symbol 11766 . 11770) (punctuation 11765 . 11766) (symbol 11758 . 11765) (punctuation 11757 . 11758) (symbol 11754 . 11757) (punctuation 11753 . 11754) (symbol 11752 . 11753) (punctuation 11751 . 11752) (punctuation 11748 . 11749) (symbol 11736 . 11748) (symbol 11725 . 11733) (punctuation 11724 . 11725) (symbol 11720 . 11723) (punctuation 11719 . 11720) (symbol 11716 . 11718) (punctuation 11715 . 11716) (symbol 11707 . 11714) (punctuation 11706 . 11707) (punctuation 11703 . 11704) (symbol 11695 . 11703) (semantic-list 11236 . 11246) (symbol 11235 . 11236) (symbol "lX11" 11209 . 11220) (punctuation "-" 11209 . 11220) (symbol "lXpm" 11202 . 11208) (punctuation "-" 11202 . 11208) (symbol "lgif" 11195 . 11201) (punctuation "-" 11195 . 11201) (symbol "lm" 11188 . 11194) (punctuation "-" 11188 . 11194) (symbol "lz" 11188 . 11194) (punctuation "-" 11188 . 11194) (symbol "lpng" 11188 . 11194) (punctuation "-" 11188 . 11194) (symbol "ljpeg" 11180 . 11187) (punctuation "-" 11180 . 11187) (symbol "ltiff" 11172 . 11179) (punctuation "-" 11172 . 11179) (semantic-list 11164 . 11171) (symbol 11163 . 11164) (semantic-list 11149 . 11162) (symbol 11148 . 11149) (semantic-list 11137 . 11147) (symbol 11136 . 11137) (punctuation 11134 . 11135) (symbol 11130 . 11134) (punctuation 11091 . 11092) (symbol 11079 . 11090) (symbol 10129 . 10133) (punctuation 10128 . 10129) (symbol 10118 . 10127) (punctuation 10117 . 10118) (symbol 10105 . 10116) (punctuation 10104 . 10105) (symbol 10095 . 10103) (punctuation 10094 . 10095) (symbol 10089 . 10093) (punctuation 10088 . 10089) (symbol 10079 . 10087) (punctuation 10078 . 10079) (punctuation 10077 . 10078) (symbol 10069 . 10077) (symbol 9992 . 9996) (punctuation 9991 . 9992) (symbol 9987 . 9990) (punctuation 9986 . 9987) (semantic-list 9979 . 9985) (symbol 9978 . 9979) (punctuation 9977 . 9978) (symbol 9972 . 9977) (punctuation 9931 . 9932) (symbol 9923 . 9931) (punctuation 9921 . 9922) (symbol 9913 . 9921) (symbol 9904 . 9912) (punctuation 9903 . 9904) (number 9897 . 9900) (punctuation 9896 . 9897) (symbol 9891 . 9896) (punctuation 9890 . 9891) (symbol 9886 . 9889) (punctuation 9885 . 9886) (number 9881 . 9884) (punctuation 9880 . 9881) (symbol 9872 . 9880) (punctuation 9871 . 9872) (number 9867 . 9870) (punctuation 9866 . 9867) (symbol 9858 . 9866) (punctuation 9857 . 9858) (symbol 9850 . 9856) (punctuation 9849 . 9850) (number 9845 . 9848) (punctuation 9844 . 9845) (symbol 9838 . 9844) (punctuation 9837 . 9838) (number 9833 . 9836) (punctuation 9832 . 9833) (symbol 9821 . 9832) (punctuation 9820 . 9821) (symbol 9817 . 9819) (punctuation 9816 . 9817) (number 9812 . 9815) (punctuation 9811 . 9812) (symbol 9800 . 9811) (punctuation 9799 . 9800) (number 9795 . 9798) (punctuation 9794 . 9795) (symbol 9790 . 9794) (punctuation 9789 . 9790) (number 9785 . 9788) (punctuation 9784 . 9785) (symbol 9781 . 9784) (punctuation 9780 . 9781) (symbol 9776 . 9780) (punctuation 9775 . 9776) (number 9771 . 9774) (punctuation 9770 . 9771) (symbol 9767 . 9770) (punctuation 9766 . 9767) (symbol 9762 . 9766) (punctuation 9761 . 9762) (symbol 9757 . 9760) (punctuation 9756 . 9757) (symbol 9755 . 9756) (punctuation 9754 . 9755) (punctuation 9753 . 9754) (symbol 9749 . 9753) (semantic-list 8915 . 8925) (symbol 8914 . 8915) (punctuation 8912 . 8913) (symbol 8904 . 8912) (symbol 8902 . 8903) (punctuation 8901 . 8902) (symbol 8891 . 8901) (semantic-list 8878 . 8891) (symbol 8877 . 8878) (punctuation 8875 . 8876) (symbol 8867 . 8875) (symbol 8574 . 8575) (punctuation 8573 . 8574) (symbol 8566 . 8573) (punctuation 8564 . 8565) (symbol 8557 . 8564) (symbol 8520 . 8521) (punctuation 8519 . 8520) (symbol 8511 . 8519) (symbol 8509 . 8510) (punctuation 8508 . 8509) (symbol 8499 . 8508) (symbol 8489 . 8490) (punctuation 8488 . 8489) (symbol 8483 . 8488) (symbol 8481 . 8482) (punctuation 8480 . 8481) (symbol 8474 . 8480) (symbol 8472 . 8473) (punctuation 8471 . 8472) (symbol 8465 . 8471) (symbol 8463 . 8464) (punctuation 8462 . 8463) (symbol 8455 . 8462) (symbol 8453 . 8454) (punctuation 8452 . 8453) (symbol 8448 . 8452) (symbol 8446 . 8447) (punctuation 8445 . 8446) (symbol 8438 . 8445) (symbol 8436 . 8437) (punctuation 8435 . 8436) (symbol 8431 . 8435) (symbol 8429 . 8430) (punctuation 8428 . 8429) (symbol 8423 . 8428) (punctuation 8421 . 8422) (symbol 8417 . 8421) (symbol 8415 . 8416) (punctuation 8414 . 8415) (symbol 8409 . 8414) (punctuation 8407 . 8408) (symbol 8397 . 8406) (punctuation 8266 . 8267) (symbol 8265 . 8266) (semantic-list 8247 . 8264) (symbol 8246 . 8247) (semantic-list 8235 . 8245) (symbol 8234 . 8235) (symbol 8232 . 8233) (punctuation 8231 . 8232) (semantic-list 8226 . 8230) (symbol 8225 . 8226) (symbol 8212 . 8216) (symbol 8206 . 8211) (punctuation 8204 . 8205) (punctuation 8203 . 8204) (symbol 8198 . 8202) (symbol 8196 . 8197) (punctuation 8195 . 8196) (symbol 8190 . 8194) (punctuation 8189 . 8190) (punctuation 8188 . 8189) (punctuation 8166 . 8167) (symbol 8165 . 8166) (punctuation 8164 . 8165) (symbol 8163 . 8164) (punctuation 8162 . 8163) (punctuation 8160 . 8161) (symbol 8159 . 8160) (semantic-list 8146 . 8158) (symbol 8145 . 8146) (semantic-list 8134 . 8144) (symbol 8133 . 8134) (symbol 8131 . 8132) (punctuation 8130 . 8131) (semantic-list 8125 . 8129) (symbol 8124 . 8125) (symbol 8111 . 8115) (symbol 8105 . 8110) (punctuation 8103 . 8104) (punctuation 8102 . 8103) (symbol 8097 . 8101) (symbol 8095 . 8096) (punctuation 8094 . 8095) (symbol 8089 . 8093) (punctuation 8088 . 8089) (punctuation 8087 . 8088) (punctuation 8065 . 8066) (symbol 8064 . 8065) (punctuation 8063 . 8064) (symbol 8062 . 8063) (punctuation 8061 . 8062) (symbol 8059 . 8060) (punctuation 8058 . 8059) (punctuation 8056 . 8057) (symbol 8048 . 8056) (punctuation 8047 . 8048) (semantic-list 8032 . 8044) (symbol 8031 . 8032) (punctuation 8030 . 8031) (symbol 8015 . 8030) (semantic-list 8004 . 8014) (symbol 8003 . 8004) (semantic-list 7990 . 7998) (symbol 7989 . 7990) (semantic-list 7974 . 7988) (symbol 7973 . 7974) (semantic-list 7959 . 7972) (symbol 7958 . 7959) (semantic-list 7944 . 7957) (symbol 7943 . 7944) (semantic-list 7928 . 7942) (symbol 7927 . 7928) (symbol "freetype2" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "libpng12" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "freetype2" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (number "2.0" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "glib" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "lib" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (number "2.0" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "glib" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (number "1.0" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "pango" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "cairo" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (number "1.0" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "atk" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (number "2.0" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "gtk" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "lib" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (number "2.0" 7851 . 7866) (punctuation "-" 7851 . 7866) (symbol "gtk" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "include" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "usr" 7851 . 7866) (punctuation "/" 7851 . 7866) (symbol "I" 7851 . 7866) (punctuation "-" 7851 . 7866) (semantic-list 7809 . 7817) (symbol 7807 . 7809) (punctuation 7806 . 7807) (punctuation 7804 . 7805) (symbol 7803 . 7804) (punctuation 7802 . 7803) (semantic-list 7789 . 7801) (symbol 7788 . 7789) (symbol 7773 . 7787) (punctuation 7772 . 7773) (symbol 7765 . 7771) (punctuation 7764 . 7765) (punctuation 7763 . 7764) (symbol 7753 . 7763) (number 7123 . 7126) (punctuation 7122 . 7123) (symbol 7117 . 7122) (punctuation 7116 . 7117) (number 7112 . 7115) (punctuation 7111 . 7112) (symbol 7103 . 7111) (punctuation 7102 . 7103) (symbol 7098 . 7101) (punctuation 7097 . 7098) (number 7093 . 7096) (punctuation 7092 . 7093) (symbol 7084 . 7092) (punctuation 7083 . 7084) (symbol 7080 . 7082) (punctuation 7079 . 7080) (number 7077 . 7078) (punctuation 7076 . 7077) (symbol 7070 . 7076) (punctuation 7069 . 7070) (number 7067 . 7068) (punctuation 7066 . 7067) (symbol 7060 . 7066) (punctuation 7059 . 7060) (symbol 7055 . 7058) (punctuation 7054 . 7055) (symbol 7053 . 7054) (punctuation 7052 . 7053) (symbol 7044 . 7051) (punctuation 7043 . 7044) (punctuation 7041 . 7042) (symbol 7030 . 7040) (symbol 7020 . 7027) (punctuation 7019 . 7020) (number 7016 . 7019) (punctuation 7015 . 7016) (symbol 7011 . 7015) (punctuation 7010 . 7011) (symbol 7007 . 7010) (punctuation 7006 . 7007) (symbol 7003 . 7006) (punctuation 7002 . 7003) (symbol 7001 . 7002) (punctuation 7000 . 7001) (number 6996 . 6999) (punctuation 6995 . 6996) (symbol 6991 . 6995) (punctuation 6990 . 6991) (symbol 6983 . 6990) (punctuation 6982 . 6983) (symbol 6979 . 6982) (punctuation 6978 . 6979) (symbol 6977 . 6978) (punctuation 6976 . 6977) (number 6972 . 6975) (punctuation 6971 . 6972) (symbol 6966 . 6971) (punctuation 6965 . 6966) (symbol 6958 . 6965) (punctuation 6957 . 6958) (symbol 6954 . 6957) (punctuation 6953 . 6954) (symbol 6952 . 6953) (punctuation 6951 . 6952) (number 6949 . 6950) (punctuation 6948 . 6949) (symbol 6943 . 6948) (punctuation 6942 . 6943) (symbol 6935 . 6942) (punctuation 6934 . 6935) (symbol 6931 . 6934) (punctuation 6930 . 6931) (symbol 6929 . 6930) (punctuation 6928 . 6929) (symbol 6920 . 6927) (punctuation 6919 . 6920) (number 6917 . 6918) (punctuation 6916 . 6917) (symbol 6909 . 6916) (punctuation 6908 . 6909) (punctuation 6906 . 6907) (symbol 6893 . 6905) (symbol 6865 . 6866) (punctuation 6864 . 6865) (symbol 6856 . 6864) (punctuation 6854 . 6855) (symbol 6845 . 6853) (number 6841 . 6842) (punctuation 6840 . 6841) (symbol 6835 . 6840) (punctuation 6834 . 6835) (symbol 6830 . 6833) (punctuation 6829 . 6830) (symbol 6828 . 6829) (punctuation 6827 . 6828) (punctuation 6825 . 6826) (symbol 6815 . 6824) (symbol 6805 . 6812) (punctuation 6804 . 6805) (number 6801 . 6804) (punctuation 6800 . 6801) (symbol 6796 . 6800) (punctuation 6795 . 6796) (symbol 6792 . 6795) (punctuation 6791 . 6792) (symbol 6788 . 6791) (punctuation 6787 . 6788) (symbol 6786 . 6787) (punctuation 6785 . 6786) (number 6781 . 6784) (punctuation 6780 . 6781) (symbol 6776 . 6780) (punctuation 6775 . 6776) (symbol 6768 . 6775) (punctuation 6767 . 6768) (symbol 6764 . 6767) (punctuation 6763 . 6764) (symbol 6762 . 6763) (punctuation 6761 . 6762) (punctuation 6759 . 6760) (symbol 6747 . 6758) (symbol "o" 6363 . 6374) (punctuation "." 6363 . 6374) (symbol "ecrt0" 6363 . 6374) (punctuation 6361 . 6362) (symbol 6350 . 6360) (symbol 2963 . 2964) (punctuation 2962 . 2963) (punctuation 2961 . 2962) (symbol 2960 . 2961) (punctuation 2959 . 2960) (symbol 2955 . 2959) (symbol 2952 . 2954) (punctuation 2951 . 2952) (symbol 2947 . 2950) (punctuation 2946 . 2947) (punctuation 2944 . 2945) (symbol 2935 . 2943) (symbol 2847 . 2849) (punctuation 2846 . 2847) (symbol 2843 . 2846) (punctuation 2842 . 2843) (punctuation 2841 . 2842) (symbol 2836 . 2841) (punctuation 2796 . 2797) (symbol 2781 . 2796) (punctuation 2722 . 2723) (punctuation 2721 . 2722) (punctuation 2720 . 2721) (punctuation 2719 . 2720) (punctuation 2718 . 2719) (punctuation 2717 . 2718) (punctuation 2716 . 2717) (punctuation 2715 . 2716) (punctuation 2714 . 2715) (punctuation 2713 . 2714) (punctuation 2712 . 2713) (punctuation 2711 . 2712) (punctuation 2710 . 2711) (punctuation 2709 . 2710) (punctuation 2708 . 2709) (punctuation 2707 . 2708) (punctuation 2706 . 2707) (punctuation 2705 . 2706) (punctuation 2704 . 2705) (punctuation 2703 . 2704) (punctuation 2702 . 2703) (punctuation 2701 . 2702) (punctuation 2700 . 2701) (symbol 2694 . 2699) (symbol 2690 . 2693) (symbol 2687 . 2689) (symbol 2681 . 2686) (punctuation 2679 . 2680) (punctuation 2678 . 2679) (punctuation 2677 . 2678) (punctuation 2676 . 2677) (punctuation 2675 . 2676) (punctuation 2674 . 2675) (punctuation 2673 . 2674) (punctuation 2672 . 2673) (punctuation 2671 . 2672) (punctuation 2670 . 2671) (punctuation 2669 . 2670) (punctuation 2668 . 2669) (punctuation 2667 . 2668) (punctuation 2666 . 2667) (punctuation 2665 . 2666) (punctuation 2664 . 2665) (punctuation 2663 . 2664) (punctuation 2662 . 2663) (punctuation 2661 . 2662) (punctuation 2660 . 2661) (punctuation 2659 . 2660) (punctuation 2658 . 2659) (punctuation 2657 . 2658) (punctuation 2656 . 2657) (punctuation 2655 . 2656) (punctuation 2654 . 2655) (punctuation 2652 . 2653) (punctuation 2648 . 2649) (symbol 2636 . 2647) (semantic-list 2626 . 2634) (symbol 2620 . 2626) (punctuation 2619 . 2620) (symbol 2610 . 2619) (punctuation 2609 . 2610) (symbol 2606 . 2609) (punctuation 2605 . 2606) (punctuation 2604 . 2605) (punctuation 2603 . 2604) (punctuation 2601 . 2602) (symbol 2587 . 2600) (semantic-list 2577 . 2585) (symbol 2576 . 2577) (semantic-list 2567 . 2575) (symbol 2566 . 2567) (symbol 2564 . 2565) (punctuation 2563 . 2564) (symbol 2557 . 2563) (punctuation 2555 . 2556) (symbol 2546 . 2554) (symbol 2544 . 2545) (punctuation 2543 . 2544) (symbol 2538 . 2543) (punctuation 2537 . 2538) (symbol 2534 . 2537) (punctuation 2533 . 2534) (symbol 2532 . 2533) (punctuation 2531 . 2532) (semantic-list 2523 . 2531) (symbol 2522 . 2523) (punctuation 2520 . 2521) (symbol 2513 . 2519) (symbol 2511 . 2512) (punctuation 2510 . 2511) (symbol 2502 . 2510) (punctuation 2501 . 2502) (symbol 2500 . 2501) (punctuation 2499 . 2500) (semantic-list 2491 . 2499) (symbol 2490 . 2491) (punctuation 2488 . 2489) (symbol 2481 . 2487) (punctuation 2479 . 2480) (symbol 2477 . 2479) (symbol 2470 . 2476) (symbol 2467 . 2469) (symbol 2461 . 2466) (symbol 2459 . 2460) (punctuation 2458 . 2459) (FOR 2454 . 2457) (symbol 2448 . 2453) (symbol 2434 . 2447) (punctuation 2432 . 2433) (punctuation 2429 . 2430) (symbol 2425 . 2429) (punctuation 2424 . 2425) (punctuation 2423 . 2424) (punctuation 2422 . 2423) (punctuation 2420 . 2421) (symbol 2412 . 2419) (punctuation 2410 . 2411) (symbol 2405 . 2410) (punctuation 2404 . 2405) (punctuation 2403 . 2404) (punctuation 2402 . 2403) (punctuation 2400 . 2401) (symbol 2391 . 2399) (punctuation 2389 . 2390) (symbol 2381 . 2389) (punctuation 2380 . 2381) (punctuation 2379 . 2380) (punctuation 2378 . 2379) (punctuation 2376 . 2377) (symbol 2364 . 2375) (punctuation 2362 . 2363) (symbol 2359 . 2362) (punctuation 2358 . 2359) (punctuation 2357 . 2358) (punctuation 2356 . 2357) (punctuation 2354 . 2355) (symbol 2350 . 2353) (punctuation 2348 . 2349) (symbol 2345 . 2348) (punctuation 2344 . 2345) (symbol 2341 . 2344) (punctuation 2340 . 2341) (punctuation 2339 . 2340) (punctuation 2338 . 2339) (punctuation 2336 . 2337) (symbol 2329 . 2335) (punctuation 2327 . 2328) (symbol 2323 . 2327) (punctuation 2322 . 2323) (punctuation 2321 . 2322) (punctuation 2320 . 2321) (punctuation 2319 . 2320) (semantic-list 2311 . 2319) (symbol 2310 . 2311) (punctuation 2308 . 2309) (symbol 2297 . 2307) (punctuation 2293 . 2294) (symbol 2285 . 2292) (number 2281 . 2282) (punctuation 2280 . 2281) (symbol 2275 . 2280) (punctuation 2274 . 2275) (symbol 2270 . 2273) (punctuation 2269 . 2270) (symbol 2268 . 2269) (punctuation 2267 . 2268) (symbol 2260 . 2264) (punctuation 2259 . 2260) (number 2253 . 2256) (punctuation 2252 . 2253) (symbol 2247 . 2252) (punctuation 2246 . 2247) (symbol 2242 . 2245) (punctuation 2241 . 2242) (number 2237 . 2240) (punctuation 2236 . 2237) (symbol 2228 . 2236) (punctuation 2227 . 2228) (number 2223 . 2226) (punctuation 2222 . 2223) (symbol 2214 . 2222) (punctuation 2213 . 2214) (symbol 2210 . 2212) (punctuation 2209 . 2210) (number 2205 . 2208) (punctuation 2204 . 2205) (symbol 2193 . 2204) (punctuation 2192 . 2193) (number 2190 . 2191) (punctuation 2189 . 2190) (symbol 2184 . 2189) (punctuation 2183 . 2184) (symbol 2179 . 2182) (punctuation 2178 . 2179) (symbol 2177 . 2178) (punctuation 2176 . 2177) (number 2170 . 2173) (punctuation 2169 . 2170) (symbol 2164 . 2169) (punctuation 2163 . 2164) (symbol 2159 . 2162) (punctuation 2158 . 2159) (number 2154 . 2157) (punctuation 2153 . 2154) (symbol 2145 . 2153) (punctuation 2144 . 2145) (number 2140 . 2143) (punctuation 2139 . 2140) (symbol 2131 . 2139) (punctuation 2130 . 2131) (symbol 2123 . 2129) (punctuation 2122 . 2123) (number 2118 . 2121) (punctuation 2117 . 2118) (symbol 2111 . 2117) (punctuation 2110 . 2111) (number 2106 . 2109) (punctuation 2105 . 2106) (symbol 2094 . 2105) (punctuation 2093 . 2094) (symbol 2090 . 2092) (punctuation 2089 . 2090) (number 2085 . 2088) (punctuation 2084 . 2085) (symbol 2073 . 2084) (punctuation 2072 . 2073) (number 2068 . 2071) (punctuation 2067 . 2068) (symbol 2063 . 2067) (punctuation 2062 . 2063) (number 2058 . 2061) (punctuation 2057 . 2058) (symbol 2054 . 2057) (punctuation 2053 . 2054) (symbol 2049 . 2053) (punctuation 2048 . 2049) (number 2044 . 2047) (punctuation 2043 . 2044) (symbol 2040 . 2043) (punctuation 2039 . 2040) (symbol 2035 . 2039) (punctuation 2034 . 2035) (symbol 2030 . 2033) (punctuation 2029 . 2030) (symbol 2028 . 2029) (punctuation 2027 . 2028) (symbol 2020 . 2024) (punctuation 2019 . 2020) (symbol 2009 . 2018) (punctuation 2008 . 2009) (symbol 1996 . 2007) (punctuation 1995 . 1996) (symbol 1986 . 1994) (punctuation 1985 . 1986) (symbol 1980 . 1984) (punctuation 1979 . 1980) (symbol 1970 . 1978) (punctuation 1969 . 1970) (symbol 1964 . 1968) (punctuation 1963 . 1964) (symbol 1959 . 1962) (punctuation 1958 . 1959) (symbol 1955 . 1957) (punctuation 1954 . 1955) (symbol 1945 . 1953) (punctuation 1944 . 1945) (punctuation 1942 . 1943) (symbol 1937 . 1941) (punctuation 1935 . 1936) (punctuation 1933 . 1934) (symbol 1928 . 1933) (symbol 1922 . 1927) (symbol 1918 . 1921) (symbol 1914 . 1917) (symbol 1911 . 1913) (symbol 1900 . 1910) (symbol 1897 . 1899) (symbol 1894 . 1896) (symbol 1888 . 1893) (symbol 1883 . 1887) (symbol 1876 . 1882) (punctuation 1874 . 1875) (symbol 1871 . 1873) (symbol 1869 . 1870) (string 1808 . 1869) (symbol 1805 . 1808) (punctuation 1803 . 1804) (punctuation 1800 . 1801) (DEFAULT 1793 . 1800) (symbol 1791 . 1792) (symbol 1788 . 1790) (symbol 1785 . 1787) (symbol 1780 . 1784) (symbol 1778 . 1779) (string 1083 . 1778) (symbol 1080 . 1083) (punctuation 1078 . 1079) (punctuation 1075 . 1076) (symbol 1070 . 1075) (symbol 1066 . 1069) (symbol 1062 . 1065) (symbol 1058 . 1061) (symbol 1055 . 1057) (symbol 1051 . 1054) (symbol 1045 . 1050) (symbol 1041 . 1044) (symbol 1037 . 1040) (symbol 1029 . 1036) (symbol 1025 . 1028) (punctuation 1024 . 1025) (symbol 1019 . 1024) (symbol 1013 . 1018) (punctuation 1011 . 1012) (symbol 1008 . 1010) (symbol 1004 . 1007) (punctuation 1001 . 1002) (symbol 997 . 1001) (symbol 992 . 996) (symbol 984 . 991) (symbol 979 . 983) (symbol 974 . 978) (symbol 971 . 973) (symbol 961 . 970) (symbol 956 . 960) (symbol 952 . 955) (symbol 945 . 951) (punctuation 943 . 944) (symbol 938 . 942) (punctuation 935 . 936) (symbol 930 . 935) (FOR 926 . 929) (symbol 922 . 925) (punctuation 921 . 922) (symbol 915 . 921) (punctuation 914 . 915) (symbol 909 . 914) (symbol 906 . 908) (symbol 899 . 905) (symbol 896 . 898) (symbol 891 . 895) (symbol 886 . 890) (symbol 881 . 885) (symbol 876 . 880) (punctuation 874 . 875) (punctuation 845 . 846) (symbol 841 . 845) (punctuation 840 . 841) (symbol 836 . 839) (punctuation 834 . 835) (symbol 831 . 834) (symbol 828 . 830) (punctuation 825 . 826) (symbol 820 . 825) (symbol 816 . 819) (symbol 811 . 815) (symbol 805 . 810) (punctuation 803 . 804) (symbol 795 . 802) (symbol 788 . 794) (symbol 780 . 787) (symbol 776 . 779) (symbol 772 . 775) (symbol 769 . 771) (symbol 764 . 768) (symbol 762 . 763) (symbol 753 . 761) (symbol 748 . 752) (symbol 741 . 747) (symbol 737 . 740) (punctuation 735 . 736) (punctuation 732 . 733) (symbol 725 . 732) (symbol 720 . 724) (FOR 716 . 719) (symbol 708 . 715) (symbol 701 . 707) (symbol 693 . 700) (symbol 689 . 692) (punctuation 687 . 688) (symbol 683 . 686) (symbol 679 . 682) (punctuation 676 . 677) (symbol 669 . 676) (symbol 658 . 668) (symbol 656 . 657) (symbol 652 . 655) (symbol 644 . 651) (symbol 641 . 643) (symbol 625 . 640) (punctuation 623 . 624) (symbol 620 . 622) (symbol 611 . 619) (symbol 603 . 610) (symbol 599 . 602) (symbol 594 . 598) (symbol 586 . 593) (symbol 564 . 571) (symbol 560 . 563) (punctuation 558 . 559) (punctuation 556 . 557) (symbol 550 . 556) (symbol 547 . 549) (symbol 542 . 546) (symbol 539 . 541) (symbol 534 . 538) (symbol 529 . 533) (symbol 525 . 528) (symbol 522 . 524) (symbol 510 . 521) (symbol 507 . 509) (symbol 501 . 506) (symbol 497 . 500) (punctuation 495 . 496) (punctuation 492 . 493) (symbol 485 . 492) (symbol 479 . 484) (symbol 475 . 478) (semantic-list 458 . 474) (punctuation 456 . 457) (symbol 453 . 455) (punctuation 451 . 452) (symbol 444 . 451) (symbol 440 . 443) (symbol 437 . 439) (number 435 . 436) (symbol 427 . 434) (symbol 420 . 426) (punctuation 418 . 419) (symbol 408 . 418) (symbol 399 . 407) (symbol 394 . 398) (symbol 390 . 393) (punctuation 388 . 389) (symbol 385 . 387) (symbol 375 . 384) (symbol 372 . 374) (symbol 364 . 371) (symbol 357 . 363) (symbol 349 . 356) (symbol 345 . 348) (symbol 341 . 344) (symbol 338 . 340) (symbol 332 . 337) (symbol 328 . 331) (symbol 322 . 327) (symbol 319 . 321) (punctuation 317 . 318) (symbol 310 . 316) (symbol 307 . 309) (punctuation 306 . 307) (symbol 303 . 306) (symbol 300 . 302) (symbol 287 . 299) (symbol 283 . 286) (symbol 279 . 282) (punctuation 277 . 278) (symbol 269 . 277) (symbol 264 . 268) (symbol 261 . 263) (symbol 255 . 260) (symbol 251 . 254) (punctuation 249 . 250) (punctuation 246 . 247) (symbol 241 . 246) (symbol 237 . 240) (symbol 234 . 236) (symbol 229 . 233) (symbol 226 . 228) (symbol 221 . 225) (symbol 216 . 220) (punctuation 214 . 215) (punctuation 211 . 212) (symbol 208 . 211) (punctuation 206 . 207) (symbol 196 . 206) (symbol 187 . 195) (symbol 182 . 186) (punctuation 166 . 167) (number 161 . 165) (punctuation 159 . 160) (number 155 . 159) (punctuation 153 . 154) (number 149 . 153) (punctuation 147 . 148) (number 143 . 147) (punctuation 141 . 142) (number 137 . 141) (punctuation 135 . 136) (number 131 . 135) (punctuation 129 . 130) (number 125 . 129) (punctuation 123 . 124) (number 119 . 123) (punctuation 103 . 104) (punctuation 101 . 102) (number 97 . 101) (punctuation 95 . 96) (number 91 . 95) (punctuation 89 . 90) (number 85 . 89) (punctuation 83 . 84) (number 79 . 83) (punctuation 77 . 78) (number 73 . 77) (punctuation 71 . 72) (number 67 . 71) (punctuation 65 . 66) (number 61 . 65) (punctuation 59 . 60) (number 55 . 59) (punctuation 53 . 54) (number 49 . 53) (punctuation 47 . 48) (number 43 . 47) (semantic-list 39 . 42) (symbol 29 . 38) (punctuation 27 . 28) (punctuation 25 . 26) (symbol 20 . 25) (symbol 16 . 19) (FOR 12 . 15) (symbol 3 . 11) (punctuation 1 . 2))
    :lexical-table 
        '(("MOUSE_SUPPORT" . 
              ((symbol "$" 17398 . 17399) (semantic-list "{lispsource}" 17399 . 17411) (symbol "mouse" 17411 . 17416) (punctuation "." 17416 . 17417) (symbol "elc" 17417 . 17420) (symbol "$" 17425 . 17426) (semantic-list "{lispsource}" 17426 . 17438) (symbol "select" 17438 . 17444) (punctuation "." 17444 . 17445) (symbol "elc" 17445 . 17448) (symbol "$" 17449 . 17450) (semantic-list "{lispsource}" 17450 . 17462) (symbol "scroll" 17462 . 17468) (punctuation "-" 17468 . 17469) (symbol "bar" 17469 . 17472) (punctuation "." 17472 . 17473) (symbol "elc" 17473 . 17476)))
          ("THIS_IS_MAKEFILE")
          ("LD_SWITCH_SYSTEM" . ((punctuation "-" 4595 . 4596) (symbol "X" 4596 . 4597)))
          ("C_SWITCH_SYSTEM")
          ("LIBPNG" . 
              ((punctuation "-" 10506 . 10507) (symbol "lpng" 10507 . 10511) (punctuation "-" 10512 . 10513) (symbol "lz" 10513 . 10515) (punctuation "-" 10516 . 10517) (symbol "lm" 10517 . 10519)))
          ("C_SWITCH_X_SYSTEM")
          ("LIBXPM" . ((punctuation "-" 10202 . 10203) (symbol "lXpm" 10203 . 10207)))
          ("LIBS_TERMCAP")
          ("LD_SWITCH_X_DEFAULT")
          ("YMF_PASS_LDFLAGS" (spp-arg-list ("flags") 13975 . 13982) . ((symbol "flags" 13983 . 13988)))
          ("LIBTIFF" . ((punctuation "-" 10665 . 10666) (symbol "ltiff" 10666 . 10671)))
          ("LIB_MATH" . ((punctuation "-" 4371 . 4372) (symbol "lm" 4372 . 4374)))
          ("LD_SWITCH_SYSTEM_TEMACS")
          ("LIBJPEG" . ((punctuation "-" 10353 . 10354) (symbol "ljpeg" 10354 . 10359)))
          ("LIBS_DEBUG" . ((punctuation "-" 4082 . 4083) (symbol "lg" 4083 . 4085)))
          ("C_SWITCH_SYSTEM_TEMACS")
          ("LIBGPM" . ((punctuation "-" 11409 . 11410) (symbol "lgpm" 11410 . 11414)))
          ("LD_SWITCH_MACHINE_TEMACS")
          ("C_SWITCH_X_MACHINE")
          ("START_FILES" . 
              ((symbol "ecrt0" 6283 . 6288) (punctuation "." 6288 . 6289) (symbol "o" 6289 . 6290)))
          ("WINNT_SUPPORT")
          ("LD_SWITCH_MACHINE")
          ("C_SWITCH_MACHINE")
          ("LIBX11_SYSTEM")
          ("LIBGIF" . ((punctuation "-" 10818 . 10819) (symbol "lgif" 10819 . 10823)))
          ("NOT_C_CODE")
          ("UNEXEC" . 
              ((symbol "unexec" 14093 . 14099) (punctuation "." 14099 . 14100) (symbol "o" 14100 . 14101)))
          ("MSDOS_SUPPORT")
          ("WINDOW_SUPPORT" . 
              ((symbol "$" 17925 . 17926) (semantic-list "{lispsource}" 17926 . 17938) (symbol "fringe" 17938 . 17944) (punctuation "." 17944 . 17945) (symbol "elc" 17945 . 17948) (symbol "$" 17949 . 17950) (semantic-list "{lispsource}" 17950 . 17962) (symbol "image" 17962 . 17967) (punctuation "." 17967 . 17968) (symbol "elc" 17968 . 17971) (symbol "$" 17975 . 17976) (semantic-list "{lispsource}" 17976 . 17988) (symbol "international" 17988 . 18001) (punctuation "/" 18001 . 18002) (symbol "fontset" 18002 . 18009) (punctuation "." 18009 . 18010) (symbol "elc" 18010 . 18013) (symbol "$" 18014 . 18015) (semantic-list "{lispsource}" 18015 . 18027) (symbol "dnd" 18027 . 18030) (punctuation "." 18030 . 18031) (symbol "elc" 18031 . 18034) (symbol "$" 18038 . 18039) (semantic-list "{lispsource}" 18039 . 18051) (symbol "tool" 18051 . 18055) (punctuation "-" 18055 . 18056) (symbol "bar" 18056 . 18059) (punctuation "." 18059 . 18060) (symbol "elc" 18060 . 18063) (symbol "$" 18064 . 18065) (semantic-list "{lispsource}" 18065 . 18077) (symbol "mwheel" 18077 . 18083) (punctuation "." 18083 . 18084) (symbol "elc" 18084 . 18087) (symbol "$" 18088 . 18089) (semantic-list "{lispsource}" 18089 . 18101) (symbol "x" 18101 . 18102) (punctuation "-" 18102 . 18103) (symbol "dnd" 18103 . 18106) (punctuation "." 18106 . 18107) (symbol "elc" 18107 . 18110) (symbol "$" 18114 . 18115) (semantic-list "{lispsource}" 18115 . 18127) (symbol "term" 18127 . 18131) (punctuation "/" 18131 . 18132) (symbol "common" 18132 . 18138) (punctuation "-" 18138 . 18139) (symbol "win" 18139 . 18142) (punctuation "." 18142 . 18143) (symbol "elc" 18143 . 18146) (symbol "$" 18147 . 18148) (semantic-list "{lispsource}" 18148 . 18160) (symbol "term" 18160 . 18164) (punctuation "/" 18164 . 18165) (symbol "x" 18165 . 18166) (punctuation "-" 18166 . 18167) (symbol "win" 18167 . 18170) (punctuation "." 18170 . 18171) (symbol "elc" 18171 . 18174) (symbol "$" 18178 . 18179) (semantic-list "{lispsource}" 18179 . 18191) (symbol "font" 18191 . 18195) (punctuation "-" 18195 . 18196) (symbol "setting" 18196 . 18203) (punctuation "." 18203 . 18204) (symbol "elc" 18204 . 18207)))
          ("TOOLTIP_SUPPORT" . 
              ((symbol "$" 18773 . 18774) (semantic-list "{lispsource}" 18774 . 18786) (symbol "tooltip" 18786 . 18793) (punctuation "." 18793 . 18794) (symbol "elc" 18794 . 18797)))
          ("LIBS_SYSTEM")
          ("LIBS_MACHINE")
          ("LIB_X11_LIB" . ((punctuation "-" 8361 . 8362) (symbol "lX11" 8362 . 8366)))
          ("NS_SUPPORT")
          ("LIB_STANDARD" . ((punctuation "-" 3763 . 3764) (symbol "lc" 3764 . 3766)))
          ("CRT0_COMPILE" . 
              ((symbol "$" 6120 . 6121) (semantic-list "(CC)" 6121 . 6125) (punctuation "-" 6126 . 6127) (symbol "c" 6127 . 6128) (symbol "$" 6129 . 6130) (semantic-list "(ALL_CFLAGS)" 6130 . 6142)))
          ("LIBRESOLV" . ((punctuation "-" 11569 . 11570) (symbol "lresolv" 11570 . 11577)))
          )

    )
   (semanticdb-table "cm.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [890 909])
            ("stdio.h" include (:system-flag t) nil [910 928])
            ("setjmp.h" include (:system-flag t) nil [929 948])
            ("lisp.h" include nil nil [950 967])
            ("frame.h" include nil nil [968 986])
            ("cm.h" include nil nil [987 1002])
            ("termhooks.h" include nil nil [1003 1025])
            ("termchar.h" include nil nil [1026 1047])
            ("termcap.h" include (:system-flag t) nil [1228 1248])
            ("BIG" variable (:constant-flag t) nil [1379 1382])
            ("UP" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [1463 1484])
            ("BC" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [1463 1484])
            ("cost" variable (:type "int") nil [1486 1495])
            ("evalcost" function
               (:arguments 
                  ( ("c" variable (:type "char") nil nil))                  
                :type "int")
                nil [1533 1588])
            ("current_tty" variable
               (:pointer 1
                :type ("tty_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1638 1675])
            ("cmputc" function
               (:arguments 
                  ( ("c" variable (:type "char") nil nil))                  
                :type "int")
                nil [1677 1837])
            ("cmcheckmagic" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3537 3566]))                  
                :type "void")
                nil [3518 3917])
            ("cmcostinit" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4117 4146]))                  
                :type "void")
                nil [4100 5452])
            ("calccost" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5656 5685])
                    ("srcy" variable (:type "int") (reparse-symbol arg-sub-list) [5696 5705])
                    ("srcx" variable (:type "int") (reparse-symbol arg-sub-list) [5706 5715])
                    ("dsty" variable (:type "int") (reparse-symbol arg-sub-list) [5716 5725])
                    ("dstx" variable (:type "int") (reparse-symbol arg-sub-list) [5726 5735])
                    ("doit" variable (:type "int") (reparse-symbol arg-sub-list) [5736 5745]))                  
                :type "int")
                nil [5635 9013])
            ("USEREL" variable (:constant-flag t) nil [9068 9074])
            ("USEHOME" variable (:constant-flag t) nil [9085 9092])
            ("USELL" variable (:constant-flag t) nil [9103 9108])
            ("USECR" variable (:constant-flag t) nil [9119 9124])
            ("cmgoto" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("col" variable (:type "int") nil nil)
                    ("row" variable (:type "int") nil nil))                  
                :type "void")
                nil [9128 12081])
            ("Wcm_clear" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12200 12229]))                  
                :type "void")
                nil [12184 12293])
            ("Wcm_init" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12424 12453]))                  
                :type "int")
                nil [12410 12919]))          
    :file "cm.c"
    :pointmax 13006
    :fsize 13005
    :lastmodtime '(19383 49278)
    :unmatched-syntax '((punctuation 1460 . 1461) (punctuation 1459 . 1460) (punctuation 1457 . 1458) (punctuation 1456 . 1457) (punctuation 1455 . 1456) (number 1450 . 1455) (symbol 1444 . 1449) (symbol 1440 . 1443))
    :lexical-table 
        '(("USEHOME" . ((number "1" 9093 . 9094)))
          ("USEREL" . ((number "0" 9075 . 9076)))
          ("BIG" . ((number "9999" 1383 . 1387)))
          ("USECR" . ((number "3" 9125 . 9126)))
          ("USELL" . ((number "2" 9109 . 9110)))
          )

    )
   (semanticdb-table "w32font.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [757 776])
            ("windows.h" include (:system-flag t) nil [777 797])
            ("math.h" include (:system-flag t) nil [798 815])
            ("ctype.h" include (:system-flag t) nil [816 834])
            ("commdlg.h" include (:system-flag t) nil [835 855])
            ("setjmp.h" include (:system-flag t) nil [856 875])
            ("lisp.h" include nil nil [877 894])
            ("w32term.h" include nil nil [895 915])
            ("frame.h" include nil nil [916 934])
            ("dispextern.h" include nil nil [935 958])
            ("character.h" include nil nil [959 981])
            ("charset.h" include nil nil [982 1002])
            ("coding.h" include nil nil [1003 1022])
            ("fontset.h" include nil nil [1023 1043])
            ("font.h" include nil nil [1044 1061])
            ("w32font.h" include nil nil [1062 1082])
            ("CLEARTYPE_QUALITY" variable (:constant-flag t) nil [1324 1341])
            ("CLEARTYPE_NATURAL_QUALITY" variable (:constant-flag t) nil [1393 1418])
            ("VIETNAMESE_CHARSET" variable (:constant-flag t) nil [1561 1579])
            ("JOHAB_CHARSET" variable (:constant-flag t) nil [1621 1634])
            ("w32font_driver" variable
               (:typemodifiers ("extern")
                :type ("font_driver" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1647 1688])
            ("Qgdi" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1690 1707])
            ("Quniscribe" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1708 1731])
            ("QCformat" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1732 1760])
            ("Qsans_serif" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1761 1830])
            ("Qsans" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1761 1830])
            ("Qmono" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1761 1830])
            ("Qsansserif" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1761 1830])
            ("Qmonospace" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1761 1830])
            ("Qdecorative" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1831 1879])
            ("Qscript" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1831 1879])
            ("Qserif" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1831 1879])
            ("Qunknown" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1880 1927])
            ("Qoutline" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1880 1927])
            ("Qraster" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1880 1927])
            ("QClang" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1949 1995])
            ("QCotf" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1949 1995])
            ("QCantialias" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1949 1995])
            ("Qnone" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2021 2046])
            ("Qnatural" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2074 2124])
            ("Qsubpixel" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2074 2124])
            ("Qstandard" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2074 2124])
            ("Qzh" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2142 2165])
            ("Qhebrew" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2181 2255])
            ("Qarmenian" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2181 2255])
            ("Qcyrillic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2181 2255])
            ("Qcoptic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2181 2255])
            ("Qgreek" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2181 2255])
            ("Qlatin" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2181 2255])
            ("Qbengali" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2256 2330])
            ("Qdevanagari" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2256 2330])
            ("Qthaana" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2256 2330])
            ("Qnko" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2256 2330])
            ("Qsyriac" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2256 2330])
            ("Qarabic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2256 2330])
            ("Qtelugu" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2331 2396])
            ("Qtamil" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2331 2396])
            ("Qoriya" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2331 2396])
            ("Qgujarati" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2331 2396])
            ("Qgurmukhi" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2331 2396])
            ("Qlao" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2397 2460])
            ("Qthai" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2397 2460])
            ("Qsinhala" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2397 2460])
            ("Qmalayalam" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2397 2460])
            ("Qkannada" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2397 2460])
            ("Qethiopic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2461 2530])
            ("Qhangul" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2461 2530])
            ("Qgeorgian" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2461 2530])
            ("Qmyanmar" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2461 2530])
            ("Qtibetan" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2461 2530])
            ("Qrunic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2531 2598])
            ("Qogham" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2531 2598])
            ("Qcanadian_aboriginal" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2531 2598])
            ("Qcherokee" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2531 2598])
            ("Qhan" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2599 2662])
            ("Qbraille" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2599 2662])
            ("Qsymbol" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2599 2662])
            ("Qmongolian" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2599 2662])
            ("Qkhmer" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2599 2662])
            ("Qbopomofo" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2663 2736])
            ("Qkana" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2663 2736])
            ("Qcjk_misc" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2663 2736])
            ("Qideographic_description" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2663 2736])
            ("Qbyzantine_musical_symbol" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2737 2796])
            ("Qyi" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2737 2796])
            ("Qkanbun" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2737 2796])
            ("Qphonetic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2797 2865])
            ("Qcham" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2797 2865])
            ("Qmathematical" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2797 2865])
            ("Qmusical_symbol" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2797 2865])
            ("Qcypriot" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2933 3003])
            ("Qcuneiform" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2933 3003])
            ("Qbuhid" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2933 3003])
            ("Qbuginese" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2933 3003])
            ("Qbalinese" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2933 3003])
            ("Qkharoshthi" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3004 3077])
            ("Qhanunoo" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3004 3077])
            ("Qgothic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3004 3077])
            ("Qglagolitic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3004 3077])
            ("Qdeseret" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3004 3077])
            ("Qosmanya" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3078 3152])
            ("Qold_persian" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3078 3152])
            ("Qold_italic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3078 3152])
            ("Qlinear_b" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3078 3152])
            ("Qlimbu" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3078 3152])
            ("Qsyloti_nagri" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3153 3220])
            ("Qshavian" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3153 3220])
            ("Qphoenician" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3153 3220])
            ("Qphags_pa" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3153 3220])
            ("Qugaritic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3221 3291])
            ("Qtifinagh" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3221 3291])
            ("Qtai_le" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3221 3291])
            ("Qtagbanwa" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3221 3291])
            ("Qtagalog" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3221 3291])
            ("Qw32_charset_default" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3350 3409])
            ("Qw32_charset_ansi" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3350 3409])
            ("Qw32_charset_shiftjis" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3410 3472])
            ("Qw32_charset_symbol" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3410 3472])
            ("Qw32_charset_gb2312" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3473 3534])
            ("Qw32_charset_hangeul" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3473 3534])
            ("Qw32_charset_oem" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3535 3597])
            ("Qw32_charset_chinesebig5" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3535 3597])
            ("Qw32_charset_turkish" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3598 3663])
            ("Qw32_charset_easteurope" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3598 3663])
            ("Qw32_charset_russian" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3664 3725])
            ("Qw32_charset_baltic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3664 3725])
            ("Qw32_charset_greek" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3726 3785])
            ("Qw32_charset_arabic" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3726 3785])
            ("Qw32_charset_vietnamese" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3786 3850])
            ("Qw32_charset_hebrew" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3786 3850])
            ("Qw32_charset_mac" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3851 3926])
            ("Qw32_charset_johab" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3851 3926])
            ("Qw32_charset_thai" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3851 3926])
            ("Vw32_charset_info_alist" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4003 4046])
            ("Qm" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4097 4127])
            ("Qp" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4097 4127])
            ("Qc" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4097 4127])
            ("fill_in_logfont" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [4129 4198])
            ("w32_antialias_type" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("BYTE" type (:type "class") nil nil))
                nil [4200 4250])
            ("lispy_antialias_type" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("BYTE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4251 4303])
            ("font_supported_scripts" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FONTSIGNATURE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4305 4370])
            ("w32font_full_name" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [4371 4448])
            ("compute_metrics" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("HDC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("w32font_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("w32_metric_cache" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [4449 4557])
            ("w32_registry" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("LONG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4559 4610])
            ("add_font_entity_to_list" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("ENUMLOGFONTEX" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("LPARAM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [4660 4848])
            ("add_one_font_entity_to_list" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("ENUMLOGFONTEX" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("LPARAM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [4860 5060])
            ("add_font_name_to_list" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("ENUMLOGFONTEX" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("LPARAM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [5072 5254])
            ("font_callback_data" type
               (:members 
                  ( ("pattern" variable (:type ("LOGFONT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5574 5590])
                    ("orig_font_spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5636 5663])
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5714 5732])
                    ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5772 5789])
                    ("opentype_only" variable (:type "int") (reparse-symbol classsubparts) [5839 5857]))                  
                :type "struct")
                nil [5362 5860])
            ("list_all_matching_fonts" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("font_callback_data" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [5988 6059])
            ("memq_no_quit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("elt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [6062 6228])
            ("intern_font_name" function
               (:arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6230 6723])
            ("w32font_get_cache" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6897 7055])
            ("w32font_list" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("font_spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7264 7487])
            ("w32font_match" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("font_spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7718 7947])
            ("w32font_list_family" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8087 8591])
            ("w32font_open" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("font_entity" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pixel_size" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8750 9354])
            ("w32font_close" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("font" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [9435 9936])
            ("w32font_has_char" function
               (:arguments 
                  ( ("entity" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("c" variable (:type "int") nil nil))                  
                :type "int")
                nil [10160 11515])
            ("w32font_encode_char" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("font" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("c" variable (:type "int") nil nil))                  
                :type "unsigned int")
                nil [11899 12183])
            ("w32font_text_extents" function
               (:arguments 
                  ( ("font" variable
                       (:pointer 1
                        :type ("font" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("code" variable
                       (:pointer 1
                        :type "unsigned int")
                        nil nil)
                    ("nglyphs" variable (:type "int") nil nil)
                    ("metrics" variable
                       (:pointer 1
                        :type ("font_metrics" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [12485 17289])
            ("w32font_draw" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("with_background" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("to" variable (:type "int") nil nil)
                    ("from" variable (:type "int") nil nil))                  
                :type "int")
                nil [17867 19653])
            ("w32font_list_internal" function
               (:arguments 
                  ( ("font_spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("opentype_only" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [23133 24633])
            ("w32font_match_internal" function
               (:arguments 
                  ( ("font_spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("opentype_only" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [24819 25641])
            ("w32font_open_internal" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("font_entity" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pixel_size" variable (:type "int") nil nil)
                    ("font_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [25643 29907])
            ("add_font_name_to_list" function
               (:arguments 
                  ( ("logical_font" variable
                       (:pointer 1
                        :type ("ENUMLOGFONTEX" type (:type "class") nil nil))
                        nil nil)
                    ("physical_font" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        nil nil)
                    ("font_type" variable (:type ("DWORD" type (:type "class") nil nil)) nil nil)
                    ("list_object" variable (:type ("LPARAM" type (:type "class") nil nil)) nil nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [30042 30601])
            ("w32_decode_weight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30603 30643])
            ("w32_encode_weight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [30644 30684])
            ("w32_enumfont_pattern_entity" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("logical_font" variable
                       (:pointer 1
                        :type ("ENUMLOGFONTEX" type (:type "class") nil nil))
                        nil nil)
                    ("physical_font" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        nil nil)
                    ("font_type" variable (:type ("DWORD" type (:type "class") nil nil)) nil nil)
                    ("requested_font" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil)
                    ("backend" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30753 34521])
            ("w32_generic_family" function
               (:arguments 
                  ( ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34624 34641]))                  
                :type ("BYTE" type (:type "class") nil nil))
                nil [34599 35040])
            ("logfonts_match" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pattern" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil)
                    ("font" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [35042 35639])
            ("CSB_JAPANESE" variable (:constant-flag t) nil [35700 35712])
            ("CSB_KOREAN" variable (:constant-flag t) nil [35731 35741])
            ("CSB_CHINESE" variable (:constant-flag t) nil [35774 35785])
            ("font_matches_spec" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("type" variable (:type ("DWORD" type (:type "class") nil nil)) nil nil)
                    ("font" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        nil nil)
                    ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("backend" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("logfont" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [35811 42404])
            ("w32font_coverage_ok" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("coverage" variable
                       (:pointer 1
                        :type ("FONTSIGNATURE" type (:type "class") nil nil))
                        nil nil)
                    ("charset" variable (:type ("BYTE" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [42406 43118])
            ("check_face_name" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("font" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil)
                    ("full_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [43121 44614])
            ("add_font_entity_to_list" function
               (:arguments 
                  ( ("logical_font" variable
                       (:pointer 1
                        :type ("ENUMLOGFONTEX" type (:type "class") nil nil))
                        nil nil)
                    ("physical_font" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        nil nil)
                    ("font_type" variable (:type ("DWORD" type (:type "class") nil nil)) nil nil)
                    ("lParam" variable (:type ("LPARAM" type (:type "class") nil nil)) nil nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [44948 48933])
            ("add_one_font_entity_to_list" function
               (:arguments 
                  ( ("logical_font" variable
                       (:pointer 1
                        :type ("ENUMLOGFONTEX" type (:type "class") nil nil))
                        nil nil)
                    ("physical_font" variable
                       (:pointer 1
                        :type ("NEWTEXTMETRICEX" type (:type "class") nil nil))
                        nil nil)
                    ("font_type" variable (:type ("DWORD" type (:type "class") nil nil)) nil nil)
                    ("lParam" variable (:type ("LPARAM" type (:type "class") nil nil)) nil nil))                  
                :type ("CALLBACK" type (:type "class") nil nil))
                nil [49041 49500])
            ("x_to_w32_charset" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("lpcs" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("LONG" type (:type "class") nil nil))
                nil [49571 52016])
            ("registry_to_w32_charset" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("charset" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("LONG" type (:type "class") nil nil))
                nil [52086 52521])
            ("w32_to_x_charset" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("fncharset" variable (:type "int") nil nil)
                    ("matching" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [52592 58433])
            ("w32_registry" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w32_charset" variable (:type ("LONG" type (:type "class") nil nil)) nil nil)
                    ("font_type" variable (:type ("DWORD" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [58435 58866])
            ("w32_decode_weight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fnweight" variable (:type "int") nil nil))                  
                :type "int")
                nil [58868 59299])
            ("w32_encode_weight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("n" variable (:type "int") nil nil))                  
                :type "int")
                nil [59301 59637])
            ("w32_to_fc_weight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("n" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [59759 60035])
            ("fill_in_logfont" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("logfont" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil)
                    ("font_spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [60105 64660])
            ("list_all_matching_fonts" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("match_data" variable
                       (:pointer 1
                        :type ("font_callback_data" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [64662 65765])
            ("lispy_antialias_type" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("type" variable (:type ("BYTE" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65767 66219])
            ("w32_antialias_type" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("BYTE" type (:type "class") nil nil))
                nil [66270 66626])
            ("font_supported_scripts" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("sig" variable
                       (:pointer 1
                        :type ("FONTSIGNATURE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [66735 66755]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [66692 71050])
            ("w32font_full_name" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("font" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil)
                    ("font_obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pixel_size" variable (:type "int") nil nil)
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type "int")
                nil [71213 73091])
            ("logfont_to_fcname" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("font" variable
                       (:pointer 1
                        :type ("LOGFONT" type (:type "class") nil nil))
                        nil nil)
                    ("pointsize" variable (:type "int") nil nil)
                    ("fcname" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("size" variable (:type "int") nil nil))                  
                :type "int")
                nil [73440 74344])
            ("compute_metrics" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dc" variable (:type ("HDC" type (:type "class") nil nil)) nil nil)
                    ("w32_font" variable
                       (:pointer 1
                        :type ("w32font_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("code" variable (:type "unsigned int") nil nil)
                    ("metrics" variable
                       (:pointer 1
                        :type ("w32_metric_cache" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [74346 75094])
            ("DEFUN_ARGS_" variable (:type ("Sx_select_font" type (:type "class") nil nil)) nil [75096 75456])
            ("doc" variable
               (:default-value "DEFUN (\"x-select-font\", Fx_select_font, Sx_select_font, 0, 2, 0,
       doc: /* Read a font name using a W32 font selection dialog.
Return fontconfig style font string corresponding to the selection.

If FRAME is omitted or nil, it defaults to the selected frame.
If EXCLUDE-PROPORTIONAL is non-nil, exclude proportional fonts
in the font selection dialog. */)"
                :type "int")
                nil [75096 75456])
            ("Sx_select_font" function
               (:arguments 
                  ( ("exclude_proportional" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75096 76839])
            ("w32font_driver" variable
               (:default-value "{
    0, /* Qgdi */
    0, /* case insensitive */
    w32font_get_cache,
    w32font_list,
    w32font_match,
    w32font_list_family,
    NULL, /* free_entity */
    w32font_open,
    w32font_close,
    NULL, /* prepare_face */
    NULL, /* done_face */
    w32font_has_char,
    w32font_encode_char,
    w32font_text_extents,
    w32font_draw,
    NULL, /* get_bitmap */
    NULL, /* free_bitmap */
    NULL, /* get_outline */
    NULL, /* free_outline */
    NULL, /* anchor_point */
    NULL, /* otf_capability */
    NULL, /* otf_drive */
    NULL, /* start_for_frame */
    NULL, /* end_for_frame */
    NULL, /* shape */
    NULL, /* check */
    NULL, /* get_variation_glyphs */
    NULL, /* filter_properties */
  }"
                :type ("font_driver" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [76841 77604])
            ("syms_of_w32font" function (:type "void") nil [77718 83083]))          
    :file "w32font.c"
    :pointmax 83170
    :fsize 83169
    :lastmodtime '(19383 49283)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 75096 . 75456) (symbol "__attribute__" 75096 . 75456) (symbol "Lisp_Subr" 75096 . 75456) (symbol "Lisp_Object" 75096 . 75456) (INT 49037 . 49040) (STATIC 49030 . 49036) (INT 44944 . 44947) (STATIC 44937 . 44943) (INT 30038 . 30041) (STATIC 30031 . 30037) (INT 5068 . 5071) (STATIC 5061 . 5067) (INT 4856 . 4859) (STATIC 4849 . 4855) (INT 4656 . 4659) (STATIC 4649 . 4655))
    :lexical-table 
        '(("CLEARTYPE_QUALITY" . ((number "5" 1342 . 1343)))
          ("CSB_KOREAN" . ((semantic-list "((1 << 19) | (1 << 21))" 35742 . 35765)))
          ("CSB_CHINESE" . ((semantic-list "((1 << 18) | (1 << 20))" 35786 . 35809)))
          ("CLEARTYPE_NATURAL_QUALITY" . ((number "6" 1419 . 1420)))
          ("VIETNAMESE_CHARSET" . ((number "163" 1580 . 1583)))
          ("JOHAB_CHARSET" . ((number "130" 1635 . 1638)))
          ("CSB_JAPANESE" . ((semantic-list "(1 << 17)" 35713 . 35722)))
          )

    )
   (semanticdb-table "w32.c"
    :major-mode 'c-mode
    :tags 
        '( ("stddef.h" include (:system-flag t) nil [945 964])
            ("stdlib.h" include (:system-flag t) nil [984 1003])
            ("stdio.h" include (:system-flag t) nil [1004 1022])
            ("float.h" include (:system-flag t) nil [1023 1041])
            ("io.h" include (:system-flag t) nil [1064 1079])
            ("errno.h" include (:system-flag t) nil [1080 1098])
            ("fcntl.h" include (:system-flag t) nil [1099 1117])
            ("ctype.h" include (:system-flag t) nil [1118 1136])
            ("signal.h" include (:system-flag t) nil [1137 1156])
            ("sys/file.h" include (:system-flag t) nil [1157 1178])
            ("sys/time.h" include (:system-flag t) nil [1179 1200])
            ("sys/utime.h" include (:system-flag t) nil [1201 1223])
            ("mbstring.h" include (:system-flag t) nil [1224 1245])
            ("math.h" include (:system-flag t) nil [1265 1282])
            ("setjmp.h" include (:system-flag t) nil [1283 1302])
            ("lisp.h" include nil nil [1666 1683])
            ("pwd.h" include (:system-flag t) nil [1685 1701])
            ("grp.h" include (:system-flag t) nil [1702 1718])
            ("windows.h" include (:system-flag t) nil [1794 1814])
            ("MEMORY_STATUS_EX" type
               (:typedef ("_MEMORY_STATUS_EX" type
                     (:members 
                        ( ("dwLength" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1987 2002])
                          ("dwMemoryLoad" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2011 2030])
                          ("ullTotalPhys" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2039 2062])
                          ("ullAvailPhys" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2071 2094])
                          ("ullTotalPageFile" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2103 2130])
                          ("ullAvailPageFile" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2139 2166])
                          ("ullTotalVirtual" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2175 2201])
                          ("ullAvailVirtual" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2210 2236])
                          ("ullAvailExtendedVirtual" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2245 2279]))                        
                      :type "struct")
                      nil nil)
                :superclasses "_MEMORY_STATUS_EX"
                :type "typedef")
                nil [1944 2319])
            ("LPMEMORY_STATUS_EX" type
               (:typedef ("_MEMORY_STATUS_EX" type
                     (:members 
                        ( ("dwLength" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1987 2002])
                          ("dwMemoryLoad" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2011 2030])
                          ("ullTotalPhys" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2039 2062])
                          ("ullAvailPhys" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2071 2094])
                          ("ullTotalPageFile" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2103 2130])
                          ("ullAvailPageFile" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2139 2166])
                          ("ullTotalVirtual" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2175 2201])
                          ("ullAvailVirtual" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2210 2236])
                          ("ullAvailExtendedVirtual" variable (:type ("DWORDLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2245 2279]))                        
                      :type "struct")
                      nil nil)
                :pointer 1
                :superclasses "_MEMORY_STATUS_EX"
                :type "typedef")
                nil [1944 2319])
            ("lmcons.h" include (:system-flag t) nil [2321 2340])
            ("shlobj.h" include (:system-flag t) nil [2341 2360])
            ("tlhelp32.h" include (:system-flag t) nil [2362 2383])
            ("psapi.h" include (:system-flag t) nil [2384 2402])
            ("PROCESS_MEMORY_COUNTERS_EX" type
               (:typedef ("_PROCESS_MEMORY_COUNTERS_EX" type
                     (:members 
                        ( ("cb" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2550 2559])
                          ("PageFaultCount" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2561 2582])
                          ("PeakWorkingSetSize" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2584 2609])
                          ("WorkingSetSize" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2611 2632])
                          ("QuotaPeakPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2634 2664])
                          ("QuotaPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2666 2692])
                          ("QuotaPeakNonPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2694 2727])
                          ("QuotaNonPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2729 2758])
                          ("PagefileUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2760 2780])
                          ("PeakPagefileUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2782 2806])
                          ("PrivateUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2808 2827]))                        
                      :type "struct")
                      nil nil)
                :superclasses "_PROCESS_MEMORY_COUNTERS_EX"
                :type "typedef")
                nil [2504 2886])
            ("PPROCESS_MEMORY_COUNTERS_EX" type
               (:typedef ("_PROCESS_MEMORY_COUNTERS_EX" type
                     (:members 
                        ( ("cb" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2550 2559])
                          ("PageFaultCount" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2561 2582])
                          ("PeakWorkingSetSize" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2584 2609])
                          ("WorkingSetSize" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2611 2632])
                          ("QuotaPeakPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2634 2664])
                          ("QuotaPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2666 2692])
                          ("QuotaPeakNonPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2694 2727])
                          ("QuotaNonPagedPoolUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2729 2758])
                          ("PagefileUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2760 2780])
                          ("PeakPagefileUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2782 2806])
                          ("PrivateUsage" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2808 2827]))                        
                      :type "struct")
                      nil nil)
                :pointer 1
                :superclasses "_PROCESS_MEMORY_COUNTERS_EX"
                :type "typedef")
                nil [2504 2886])
            ("sys/socket.h" include (:system-flag t) nil [2958 2981])
            ("w32.h" include nil nil [3265 3281])
            ("ndir.h" include nil nil [3282 3299])
            ("w32heap.h" include nil nil [3300 3320])
            ("systime.h" include nil nil [3321 3341])
            ("dispextern.h" include nil nil [3342 3365])
            ("coding.h" include nil nil [3389 3408])
            ("process.h" include nil nil [3488 3508])
            ("QCprocess" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3531 3577])
            ("QCspeed" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3531 3577])
            ("QCport" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3531 3577])
            ("Qeven" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3578 3643])
            ("Qodd" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3578 3643])
            ("QCparity" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3578 3643])
            ("QCstopbits" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3578 3643])
            ("QCbytesize" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3578 3643])
            ("QCsummary" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3644 3698])
            ("Qsw" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3644 3698])
            ("Qhw" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3644 3698])
            ("QCflowcontrol" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3644 3698])
            ("HRESULT" function
               (:arguments 
                  ( ("ShGetFolderPath_fn" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3717 3745]))                  
                :type "int")
                nil [3708 3798])
            ("globals_of_w32" function
               (:prototype-flag t
                :type "void")
                nil [3801 3824])
            ("get_rid" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3847 3852]))                  
                :type ("DWORD" type (:type "class") nil nil))
                nil [3825 3853])
            ("Vw32_downcase_file_names" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3855 3899])
            ("Vw32_generate_fake_inodes" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3900 3945])
            ("Vw32_get_true_file_attributes" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3946 3995])
            ("Qlocal" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4045 4071])
            ("w32_num_mouse_buttons" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [4073 4106])
            ("g_b_init_is_windows_9x" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4566 4601])
            ("g_b_init_open_process_token" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4602 4642])
            ("g_b_init_get_token_information" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4643 4686])
            ("g_b_init_lookup_account_sid" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4687 4727])
            ("g_b_init_get_sid_identifier_authority" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4728 4778])
            ("g_b_init_get_sid_sub_authority" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4779 4822])
            ("g_b_init_get_sid_sub_authority_count" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4823 4872])
            ("g_b_init_get_file_security" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4873 4912])
            ("g_b_init_get_security_descriptor_owner" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4913 4964])
            ("g_b_init_get_security_descriptor_group" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [4965 5016])
            ("g_b_init_is_valid_sid" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5017 5051])
            ("g_b_init_create_toolhelp32_snapshot" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5052 5100])
            ("g_b_init_process32_first" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5101 5138])
            ("g_b_init_process32_next" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5139 5175])
            ("g_b_init_open_thread_token" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5176 5215])
            ("g_b_init_impersonate_self" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5216 5254])
            ("g_b_init_revert_to_self" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5255 5291])
            ("g_b_init_get_process_memory_info" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5292 5337])
            ("g_b_init_get_process_working_set_size" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5338 5388])
            ("g_b_init_global_memory_status" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5389 5431])
            ("g_b_init_global_memory_status_ex" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5432 5477])
            ("g_b_init_get_length_sid" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5478 5514])
            ("g_b_init_equal_sid" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5515 5546])
            ("g_b_init_copy_sid" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5547 5577])
            ("g_b_init_get_native_system_info" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5578 5622])
            ("g_b_init_get_system_times" variable
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [5623 5661])
            ("BOOL" function
               (:arguments 
                  ( ("OpenProcessToken_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5862 5893]))                  
                :type "int")
                nil [5856 5971])
            ("BOOL" function
               (:arguments 
                  ( ("GetTokenInformation_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5987 6021]))                  
                :type "int")
                nil [5981 6186])
            ("BOOL" function
               (:arguments 
                  ( ("GetProcessTimes_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6202 6232]))                  
                :type "int")
                nil [6196 6371])
            ("get_process_times_fn" variable
               (:default-value "NULL;"
                :type ("GetProcessTimes_Proc" type (:type "class") nil nil))
                nil [6374 6423])
            ("LookupAccountSid_Name" variable
               (:pointer 1
                :constant-flag t
                :default-value "\"LookupAccountSidA\""
                :type "char")
                nil [6574 6637])
            ("GetFileSecurity_Name" variable
               (:pointer 1
                :constant-flag t
                :default-value "\"GetFileSecurityA\""
                :type "char")
                nil [6638 6700])
            ("BOOL" function
               (:arguments 
                  ( ("LookupAccountSid_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6722 6753]))                  
                :type "int")
                nil [6716 6906])
            ("PSID_IDENTIFIER_AUTHORITY" function
               (:arguments 
                  ( ("GetSidIdentifierAuthority_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6943 6983]))                  
                :type "int")
                nil [6916 7000])
            ("PDWORD" function
               (:arguments 
                  ( ("GetSidSubAuthority_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7018 7051]))                  
                :type "int")
                nil [7010 7081])
            ("PUCHAR" function
               (:arguments 
                  ( ("GetSidSubAuthorityCount_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7099 7137]))                  
                :type "int")
                nil [7091 7154])
            ("BOOL" function
               (:arguments 
                  ( ("GetFileSecurity_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7170 7200]))                  
                :type "int")
                nil [7164 7367])
            ("BOOL" function
               (:arguments 
                  ( ("GetSecurityDescriptorOwner_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7383 7424]))                  
                :type "int")
                nil [7377 7520])
            ("BOOL" function
               (:arguments 
                  ( ("GetSecurityDescriptorGroup_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7536 7577]))                  
                :type "int")
                nil [7530 7673])
            ("BOOL" function
               (:arguments 
                  ( ("IsValidSid_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7689 7714]))                  
                :type "int")
                nil [7683 7730])
            ("HANDLE" function
               (:arguments 
                  ( ("CreateToolhelp32Snapshot_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7748 7787]))                  
                :type "int")
                nil [7740 7833])
            ("BOOL" function
               (:arguments 
                  ( ("Process32First_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7849 7878]))                  
                :type "int")
                nil [7843 7929])
            ("BOOL" function
               (:arguments 
                  ( ("Process32Next_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7945 7973]))                  
                :type "int")
                nil [7939 8024])
            ("BOOL" function
               (:arguments 
                  ( ("OpenThreadToken_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8040 8070]))                  
                :type "int")
                nil [8034 8168])
            ("BOOL" function
               (:arguments 
                  ( ("ImpersonateSelf_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8184 8214]))                  
                :type "int")
                nil [8178 8269])
            ("BOOL" function
               (:arguments 
                  ( ("RevertToSelf_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8285 8312]))                  
                :type "int")
                nil [8279 8319])
            ("BOOL" function
               (:arguments 
                  ( ("GetProcessMemoryInfo_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8335 8370]))                  
                :type "int")
                nil [8329 8451])
            ("BOOL" function
               (:arguments 
                  ( ("GetProcessWorkingSetSize_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8467 8506]))                  
                :type "int")
                nil [8461 8603])
            ("BOOL" function
               (:arguments 
                  ( ("GlobalMemoryStatus_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8619 8652]))                  
                :type "int")
                nil [8613 8683])
            ("BOOL" function
               (:arguments 
                  ( ("GlobalMemoryStatusEx_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8699 8734]))                  
                :type "int")
                nil [8693 8769])
            ("BOOL" function
               (:arguments 
                  ( ("CopySid_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8785 8807]))                  
                :type "int")
                nil [8779 8889])
            ("BOOL" function
               (:arguments 
                  ( ("EqualSid_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8905 8928]))                  
                :type "int")
                nil [8899 8962])
            ("DWORD" function
               (:arguments 
                  ( ("GetLengthSid_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8979 9006]))                  
                :type "int")
                nil [8972 9023])
            ("BOOL" function
               (:arguments 
                  ( ("GetSystemTimes_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9123 9152]))                  
                :type "int")
                nil [9117 9237])
            ("is_windows_9x" function
               (:typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [9275 9690])
            ("w32_get_internal_run_time" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9899 11132])
            ("open_process_token" function
               (:arguments 
                  ( ("ProcessHandle" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11208 11229])
                    ("DesiredAccess" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11234 11254])
                    ("TokenHandle" variable (:type ("PHANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11259 11279]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [11176 11895])
            ("get_token_information" function
               (:arguments 
                  ( ("TokenHandle" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11937 11956])
                    ("TokenInformationClass" variable (:type ("TOKEN_INFORMATION_CLASS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11961 12007])
                    ("TokenInformation" variable (:type ("LPVOID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12012 12036])
                    ("TokenInformationLength" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12041 12070])
                    ("ReturnLength" variable (:type ("PDWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12075 12095]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [11902 12807])
            ("lookup_account_sid" function
               (:arguments 
                  ( ("lpSystemName" variable (:type ("LPCTSTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12846 12867])
                    ("Sid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12872 12881])
                    ("Name" variable (:type ("LPTSTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12886 12898])
                    ("cbName" variable (:type ("LPDWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12903 12918])
                    ("DomainName" variable (:type ("LPTSTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12923 12941])
                    ("cbDomainName" variable (:type ("LPDWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12946 12967])
                    ("peUse" variable (:type ("PSID_NAME_USE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12972 12992]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [12814 13674])
            ("get_sid_identifier_authority" function
               (:arguments 
                  ( ("pSid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13744 13754]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [13702 14386])
            ("get_sid_sub_authority" function
               (:arguments 
                  ( ("pSid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14430 14440])
                    ("n" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14445 14453]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [14395 15053])
            ("get_sid_sub_authority_count" function
               (:arguments 
                  ( ("pSid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15103 15113]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [15062 15761])
            ("get_file_security" function
               (:arguments 
                  ( ("lpFileName" variable (:type ("LPCTSTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15799 15818])
                    ("RequestedInformation" variable (:type ("SECURITY_INFORMATION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15823 15865])
                    ("pSecurityDescriptor" variable (:type ("PSECURITY_DESCRIPTOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15870 15911])
                    ("nLength" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15916 15930])
                    ("lpnLengthNeeded" variable (:type ("LPDWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15935 15959]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [15768 16589])
            ("get_security_descriptor_owner" function
               (:arguments 
                  ( ("pSecurityDescriptor" variable (:type ("PSECURITY_DESCRIPTOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16639 16680])
                    ("pOwner" variable
                       (:pointer 1
                        :type ("PSID" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16685 16698])
                    ("lpbOwnerDefaulted" variable (:type ("LPBOOL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16703 16728]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [16596 17425])
            ("get_security_descriptor_group" function
               (:arguments 
                  ( ("pSecurityDescriptor" variable (:type ("PSECURITY_DESCRIPTOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17475 17516])
                    ("pGroup" variable
                       (:pointer 1
                        :type ("PSID" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17521 17534])
                    ("lpbGroupDefaulted" variable (:type ("LPBOOL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17539 17564]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [17432 18261])
            ("is_valid_sid" function
               (:arguments 
                  ( ("sid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18294 18303]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [18268 18795])
            ("equal_sid" function
               (:arguments 
                  ( ("sid1" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18825 18835])
                    ("sid2" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18840 18850]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [18802 19325])
            ("get_length_sid" function
               (:arguments 
                  ( ("sid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19361 19370]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [19333 19872])
            ("copy_sid" function
               (:arguments 
                  ( ("destlen" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19901 19915])
                    ("dest" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19920 19930])
                    ("src" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19935 19944]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [19879 20418])
            ("get_native_system_info" function
               (:arguments 
                  ( ("lpSystemInfo" variable (:type ("LPSYSTEM_INFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20605 20632]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [20569 21142])
            ("get_system_times" function
               (:arguments 
                  ( ("lpIdleTime" variable (:type ("LPFILETIME" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21178 21200])
                    ("lpKernelTime" variable (:type ("LPFILETIME" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21205 21229])
                    ("lpUserTime" variable (:type ("LPFILETIME" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21234 21256]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [21149 21733])
            ("w32_strerror" function
               (:pointer 1
                :arguments 
                  ( ("error_no" variable (:type "int") (reparse-symbol arg-sub-list) [21808 21821]))                  
                :type "char")
                nil [21787 22135])
            ("w32_valid_pointer_p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [22356 22364])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [22365 22374]))                  
                :type "int")
                nil [22331 22662])
            ("startup_dir" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [22664 22700])
            ("getwd" function
               (:pointer 1
                :arguments 
                  ( ("dir" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [22758 22768]))                  
                :type "char")
                nil [22744 23115])
            ("gethostname" function
               (:arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [23183 23196])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [23197 23206]))                  
                :type "int")
                nil [23166 23341])
            ("load_sample" type
               (:members 
                  ( ("sample_time" variable (:type ("time_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23420 23439])
                    ("idle" variable (:type ("ULONGLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23442 23457])
                    ("kernel" variable (:type ("ULONGLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23460 23477])
                    ("user" variable (:type ("ULONGLONG" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23480 23495]))                  
                :type "struct")
                nil [23397 23498])
            ("num_of_processors" variable
               (:typemodifiers ("static")
                :type "unsigned int")
                nil [23545 23579])
            ("samples" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("load_sample" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [23660 23701])
            ("last_idx" variable
               (:typemodifiers ("static")
                :default-value "-1"
                :type "int")
                nil [23702 23743])
            ("first_idx" variable
               (:typemodifiers ("static")
                :default-value "-1"
                :type "int")
                nil [23702 23743])
            ("buf_next" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("from" variable (:type "int") (reparse-symbol arg-sub-list) [23827 23836]))                  
                :type "int")
                nil [23806 23933])
            ("buf_prev" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("from" variable (:type "int") (reparse-symbol arg-sub-list) [23956 23965]))                  
                :type "int")
                nil [23935 24065])
            ("sample_system_load" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("idle" variable
                       (:pointer 1
                        :type ("ULONGLONG" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24099 24115])
                    ("kernel" variable
                       (:pointer 1
                        :type ("ULONGLONG" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24116 24134])
                    ("user" variable
                       (:pointer 1
                        :type ("ULONGLONG" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24135 24151]))                  
                :type "void")
                nil [24067 25259])
            ("getavg" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("which" variable (:type "int") (reparse-symbol arg-sub-list) [25479 25489]))                  
                :type "double")
                nil [25457 26196])
            ("getloadavg" function
               (:arguments 
                  ( ("loadavg" variable
                       (:dereference 1
                        :type "double")
                        (reparse-symbol arg-sub-list) [26214 26231])
                    ("nelem" variable (:type "int") (reparse-symbol arg-sub-list) [26232 26242]))                  
                :type "int")
                nil [26198 27211])
            ("PASSWD_FIELD_SIZE" variable (:constant-flag t) nil [27268 27285])
            ("dflt_passwd_name" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [27291 27339])
            ("dflt_passwd_passwd" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [27340 27390])
            ("dflt_passwd_gecos" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [27391 27440])
            ("dflt_passwd_dir" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [27441 27488])
            ("dflt_passwd_shell" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [27489 27538])
            ("dflt_passwd" variable
               (:typemodifiers ("static")
                :default-value "{
  dflt_passwd_name,
  dflt_passwd_passwd,
  0,
  0,
  0,
  dflt_passwd_gecos,
  dflt_passwd_dir,
  dflt_passwd_shell,
}"
                :type ("passwd" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [27540 27697])
            ("dflt_group_name" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [27699 27736])
            ("dflt_group" variable
               (:typemodifiers ("static")
                :default-value "{
  /* When group information is not available, we return this as the
     group for all files.  */
  dflt_group_name,
  0,
}"
                :type ("group" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [27738 27897])
            ("getuid" function (:type "unsigned int") nil [27899 27950])
            ("geteuid" function (:type "unsigned int") nil [27952 28203])
            ("getgid" function (:type "unsigned int") nil [28205 28256])
            ("getegid" function (:type "unsigned int") nil [28258 28301])
            ("getpwuid" function
               (:pointer 1
                :arguments 
                  ( ("uid" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [28329 28342]))                  
                :type ("passwd" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28303 28419])
            ("getgrgid" function
               (:pointer 1
                :arguments 
                  ( ("gid" variable (:type ("gid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28446 28456]))                  
                :type ("group" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28421 28482])
            ("getpwnam" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [28510 28521]))                  
                :type ("passwd" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28484 28673])
            ("init_user_info" function (:type "void") nil [28675 32285])
            ("random" function (:type "int") nil [32287 32414])
            ("srandom" function
               (:arguments 
                  ( ("seed" variable (:type "int") (reparse-symbol arg-sub-list) [32430 32439]))                  
                :type "void")
                nil [32416 32459])
            ("normalize_filename" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fp" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("path_sep" variable (:type "char") nil nil))                  
                :type "void")
                nil [32632 33986])
            ("dostounix_filename" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [34040 34125])
            ("unixtodos_filename" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [34179 34265])
            ("crlf_to_lf" function
               (:arguments 
                  ( ("n" variable (:type "int") nil nil)
                    ("buf" variable
                       (:pointer 1
                        :type "unsigned char")
                        nil nil))                  
                :type "int")
                nil [34433 34834])
            ("parse_root" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [34980 34992])
                    ("pPath" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [34993 35007]))                  
                :type "int")
                nil [34957 35621])
            ("get_long_basename" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [35721 35733])
                    ("buf" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [35734 35745])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [35746 35755]))                  
                :type "int")
                nil [35691 36216])
            ("w32_get_long_filename" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [36315 36327])
                    ("buf" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [36328 36339])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [36340 36349]))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [36287 37130])
            ("is_unc_volume" function
               (:arguments 
                  ( ("filename" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [37151 37172]))                  
                :type "int")
                nil [37132 37364])
            ("sigsetmask" function
               (:arguments 
                  ( ("signal_mask" variable (:type "int") (reparse-symbol arg-sub-list) [37462 37478]))                  
                :type "int")
                nil [37446 37494])
            ("sigmask" function
               (:arguments 
                  ( ("sig" variable (:type "int") (reparse-symbol arg-sub-list) [37509 37517]))                  
                :type "int")
                nil [37496 37533])
            ("sigblock" function
               (:arguments 
                  ( ("sig" variable (:type "int") (reparse-symbol arg-sub-list) [37549 37557]))                  
                :type "int")
                nil [37535 37573])
            ("sigunblock" function
               (:arguments 
                  ( ("sig" variable (:type "int") (reparse-symbol arg-sub-list) [37591 37599]))                  
                :type "int")
                nil [37575 37615])
            ("setpgrp" function
               (:arguments 
                  ( ("pid" variable (:type "int") (reparse-symbol arg-sub-list) [37630 37638])
                    ("gid" variable (:type "int") (reparse-symbol arg-sub-list) [37639 37647]))                  
                :type "int")
                nil [37617 37663])
            ("alarm" function
               (:arguments 
                  ( ("seconds" variable (:type "int") (reparse-symbol arg-sub-list) [37676 37688]))                  
                :type "int")
                nil [37665 37704])
            ("REG_ROOT" variable (:constant-flag t) nil [37714 37722])
            ("w32_get_resource" function
               (:arguments 
                  ( ("key" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("lpdwtype" variable (:type ("LPDWORD" type (:type "class") nil nil)) nil nil))                  
                :type ("LPBYTE" type (:type "class") nil nil))
                nil [37747 38944])
            ("get_emacs_configuration" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [38977 38982]))                  
                :type "char")
                nil [38946 38983])
            ("Vsystem_configuration" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [38984 39025])
            ("init_environment" function
               (:arguments 
                  ( ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [39050 39063]))                  
                :type "void")
                nil [39027 46982])
            ("emacs_root_dir" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [47007 47012]))                  
                :type "char")
                nil [46984 47255])
            ("get_emacs_configuration" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [47530 47535]))                  
                :type "char")
                nil [47498 49331])
            ("get_emacs_configuration_options" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [49373 49378]))                  
                :type "char")
                nil [49333 50073])
            ("sys/timeb.h" include (:system-flag t) nil [50076 50098])
            ("gettimeofday" function
               (:arguments 
                  ( ("tv" variable
                       (:pointer 1
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [50176 50195])
                    ("tz" variable
                       (:pointer 1
                        :type ("timezone" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [50196 50216]))                  
                :type "void")
                nil [50157 50477])
            ("sys_ctime" function
               (:pointer 1
                :arguments 
                  ( ("t" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("time_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50872 50888]))                  
                :type "char")
                nil [50854 50977])
            ("sys_sleep" function
               (:arguments 
                  ( ("seconds" variable (:type "int") (reparse-symbol arg-sub-list) [51158 51170]))                  
                :type "void")
                nil [51142 51200])
            ("_set_osfhnd" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [51297 51304])
                    ("h" variable (:type "long") (reparse-symbol arg-sub-list) [51305 51312]))                  
                :type ("__cdecl" type (:type "class") nil nil))
                nil [51276 51313])
            ("_free_osfhnd" function
               (:prototype-flag t
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [51347 51354]))                  
                :type ("__cdecl" type (:type "class") nil nil))
                nil [51325 51355])
            ("fd_info" variable
               (:dereference 1
                :type ("filedesc" type (:type "class") nil nil))
                nil [51410 51439])
            ("volume_info_data" type
               (:typedef ("volume_info_data" type
                     (:members 
                        ( ("next" variable
                             (:pointer 1
                              :type ("volume_info_data" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil))
                              (reparse-symbol classsubparts) [51477 51508])
                          ("timestamp" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [51548 51568])
                          ("root_dir" variable
                             (:pointer 1
                              :type "char")
                              (reparse-symbol classsubparts) [51599 51618])
                          ("serialnum" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [51621 51641])
                          ("maxcomp" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [51644 51662])
                          ("flags" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [51665 51681])
                          ("name" variable
                             (:pointer 1
                              :type "char")
                              (reparse-symbol classsubparts) [51684 51699])
                          ("type" variable
                             (:pointer 1
                              :type "char")
                              (reparse-symbol classsubparts) [51702 51717]))                        
                      :type "struct")
                      nil nil)
                :superclasses "volume_info_data"
                :type "typedef")
                nil [51441 51737])
            ("volume_info" variable
               (:typemodifiers ("static")
                :type ("volume_info_data" type (:type "class") nil nil))
                nil [51786 51822])
            ("fixed_drives" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("BOOL" type (:type "class") nil nil))
                nil [51925 51954])
            ("DRIVE_INDEX" variable (:constant-flag t) nil [52110 52121])
            ("VOLINFO_STILL_VALID" variable (:constant-flag t) nil [52174 52193])
            ("volume_cache" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "NULL;"
                :type ("volume_info_data" type (:type "class") nil nil))
                nil [52448 52493])
            ("lookup_volume_info" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("root_dir" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [52541 52557]))                  
                :type ("volume_info_data" type (:type "class") nil nil))
                nil [52495 52723])
            ("add_volume_info" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("root_dir" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [52754 52770])
                    ("info" variable
                       (:pointer 1
                        :type ("volume_info_data" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52771 52795]))                  
                :type "void")
                nil [52725 52890])
            ("GetCachedVolumeInformation" function
               (:pointer 1
                :arguments 
                  ( ("root_dir" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [53138 53154]))                  
                :type ("volume_info_data" type (:type "class") nil nil))
                nil [53091 55697])
            ("get_volume_info" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55870 55888])
                    ("pPath" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55889 55909]))                  
                :type "int")
                nil [55849 56829])
            ("is_fat_volume" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [56983 57001])
                    ("pPath" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [57002 57022]))                  
                :type "int")
                nil [56964 57119])
            ("map_w32_filename" function
               (:pointer 1
                :constant-flag t
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [57205 57223])
                    ("pPath" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [57224 57244]))                  
                :type "char")
                nil [57174 59561])
            ("is_exec" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59583 59601]))                  
                :type "int")
                nil [59563 59806])
            ("dir_static" variable (:type ("direct" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [59968 59993])
            ("dir_find_handle" variable
               (:typemodifiers ("static")
                :default-value "INVALID_HANDLE_VALUE;"
                :type ("HANDLE" type (:type "class") nil nil))
                nil [60035 60088])
            ("dir_is_fat" variable
               (:typemodifiers ("static")
                :type "int")
                nil [60089 60114])
            ("dir_pathname" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [60115 60156])
            ("dir_find_data" variable
               (:typemodifiers ("static")
                :type ("WIN32_FIND_DATA" type (:type "class") nil nil))
                nil [60157 60194])
            ("wnet_enum_handle" variable
               (:typemodifiers ("static")
                :default-value "INVALID_HANDLE_VALUE;"
                :type ("HANDLE" type (:type "class") nil nil))
                nil [60291 60345])
            ("open_unc_volume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [60370 60383]))                  
                :type ("HANDLE" type (:type "class") nil nil))
                nil [60346 60384])
            ("read_unc_volume" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60409 60416])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [60417 60424])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [60425 60429]))                  
                :type "char")
                nil [60385 60430])
            ("close_unc_volume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60456 60463]))                  
                :type "void")
                nil [60431 60464])
            ("opendir" function
               (:pointer 1
                :arguments 
                  ( ("filename" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [60481 60496]))                  
                :type ("DIR" type (:type "class") nil nil))
                nil [60466 61240])
            ("closedir" function
               (:arguments 
                  ( ("dirp" variable
                       (:pointer 1
                        :type ("DIR" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61257 61267]))                  
                :type "void")
                nil [61242 61641])
            ("readdir" function
               (:pointer 1
                :arguments 
                  ( ("dirp" variable
                       (:pointer 1
                        :type ("DIR" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61668 61678]))                  
                :type ("direct" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [61643 64203])
            ("open_unc_volume" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64229 64246]))                  
                :type ("HANDLE" type (:type "class") nil nil))
                nil [64205 64779])
            ("read_unc_volume" function
               (:pointer 1
                :arguments 
                  ( ("henum" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64805 64818])
                    ("readbuf" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [64819 64833])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [64834 64843]))                  
                :type "char")
                nil [64781 65336])
            ("close_unc_volume" function
               (:arguments 
                  ( ("henum" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65361 65374]))                  
                :type "void")
                nil [65338 65442])
            ("unc_volume_file_attributes" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [65478 65495]))                  
                :type ("DWORD" type (:type "class") nil nil))
                nil [65444 65726])
            ("logon_network_drive" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [65814 65831]))                  
                :type "void")
                nil [65781 66817])
            ("sys_access" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [67082 67100])
                    ("mode" variable (:type "int") (reparse-symbol arg-sub-list) [67101 67110]))                  
                :type "int")
                nil [67066 67959])
            ("sys_chdir" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [67976 67994]))                  
                :type "int")
                nil [67961 68047])
            ("sys_chmod" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68064 68082])
                    ("mode" variable (:type "int") (reparse-symbol arg-sub-list) [68083 68092]))                  
                :type "int")
                nil [68049 68151])
            ("sys_chown" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68168 68185])
                    ("owner" variable (:type ("uid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68186 68198])
                    ("group" variable (:type ("gid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68199 68211]))                  
                :type "int")
                nil [68153 68308])
            ("sys_creat" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68325 68343])
                    ("mode" variable (:type "int") (reparse-symbol arg-sub-list) [68344 68353]))                  
                :type "int")
                nil [68310 68412])
            ("sys_fopen" function
               (:pointer 1
                :arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68431 68449])
                    ("mode" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68450 68468]))                  
                :type ("FILE" type (:type "class") nil nil))
                nil [68414 69346])
            ("sys_link" function
               (:arguments 
                  ( ("old" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [69425 69442])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [69443 69459]))                  
                :type "int")
                nil [69411 71312])
            ("sys_mkdir" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71329 71347]))                  
                :type "int")
                nil [71314 71400])
            ("sys_mktemp" function
               (:pointer 1
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [71882 71897]))                  
                :type "char")
                nil [71863 72697])
            ("sys_open" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72713 72731])
                    ("oflag" variable (:type "int") (reparse-symbol arg-sub-list) [72732 72742])
                    ("mode" variable (:type "int") (reparse-symbol arg-sub-list) [72743 72752]))                  
                :type "int")
                nil [72699 73109])
            ("sys_rename" function
               (:arguments 
                  ( ("oldname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [73127 73148])
                    ("newname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [73149 73170]))                  
                :type "int")
                nil [73111 75437])
            ("sys_rmdir" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [75454 75472]))                  
                :type "int")
                nil [75439 75525])
            ("sys_unlink" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [75543 75561]))                  
                :type "int")
                nil [75527 75710])
            ("utc_base_ft" variable
               (:typemodifiers ("static")
                :type ("FILETIME" type (:type "class") nil nil))
                nil [75712 75740])
            ("utc_base" variable
               (:typemodifiers ("static")
                :type ("ULONGLONG" type (:type "class") nil nil))
                nil [75741 75767])
            ("init" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [75790 75810])
            ("FILETIME_TO_U64" variable (:constant-flag t) nil [75820 75835])
            ("initialize_utc_base" function
               (:typemodifiers ("static")
                :type "void")
                nil [76097 76431])
            ("convert_time" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ft" variable (:type ("FILETIME" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76461 76473]))                  
                :type ("time_t" type (:type "class") nil nil))
                nil [76433 76707])
            ("convert_from_time_t" function
               (:arguments 
                  ( ("time" variable (:type ("time_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76736 76748])
                    ("pft" variable
                       (:pointer 1
                        :type ("FILETIME" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [76749 76764]))                  
                :type "void")
                nil [76710 77040])
            ("get_file_security_desc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [78266 78284]))                  
                :type ("PSECURITY_DESCRIPTOR" type (:type "class") nil nil))
                nil [78214 78776])
            ("get_rid" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("sid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78800 78809]))                  
                :type ("DWORD" type (:type "class") nil nil))
                nil [78778 79134])
            ("FLEXIBLE_ARRAY_MEMBER" variable (:constant-flag t) nil [79255 79276])
            ("w32_id" type
               (:members 
                  ( ("rid" variable (:type "unsigned int") (reparse-symbol classsubparts) [79305 79318])
                    ("next" variable
                       (:pointer 1
                        :type ("w32_id" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [79321 79341])
                    ("name" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [79344 79363])
                    ("sid" variable
                       (:dereference 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [79366 79407]))                  
                :type "struct")
                nil [79287 79410])
            ("w32_idlist" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("w32_id" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [79412 79445])
            ("w32_cached_id" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("sid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79473 79482])
                    ("id" variable
                       (:pointer 1
                        :type "unsigned int")
                        (reparse-symbol arg-sub-list) [79483 79496])
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [79497 79508]))                  
                :type "int")
                nil [79447 79818])
            ("w32_add_to_cache" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("sid" variable (:type ("PSID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79850 79859])
                    ("id" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [79860 79872])
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [79873 79884]))                  
                :type "void")
                nil [79820 80352])
            ("UID" variable (:constant-flag t) nil [80362 80365])
            ("GID" variable (:constant-flag t) nil [80376 80379])
            ("get_name_and_id" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("psd" variable (:type ("PSECURITY_DESCRIPTOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80411 80436])
                    ("fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [80437 80455])
                    ("id" variable
                       (:pointer 1
                        :type "unsigned int")
                        (reparse-symbol arg-sub-list) [80459 80472])
                    ("nm" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [80473 80482])
                    ("what" variable (:type "int") (reparse-symbol arg-sub-list) [80483 80492]))                  
                :type "int")
                nil [80383 81668])
            ("get_file_owner_and_group" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("psd" variable (:type ("PSECURITY_DESCRIPTOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81713 81738])
                    ("fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [81743 81761])
                    ("st" variable
                       (:pointer 1
                        :type ("stat" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [81766 81782]))                  
                :type "void")
                nil [81670 82417])
            ("is_slow_fs" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [82500 82517]))                  
                :type "int")
                nil [82484 83099])
            ("stat" function
               (:arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [83312 83330])
                    ("buf" variable
                       (:pointer 1
                        :type ("stat" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [83331 83349]))                  
                :type "int")
                nil [83302 89560])
            ("fstat" function
               (:arguments 
                  ( ("desc" variable (:type "int") (reparse-symbol arg-sub-list) [89666 89675])
                    ("buf" variable
                       (:pointer 1
                        :type ("stat" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [89676 89694]))                  
                :type "int")
                nil [89655 92596])
            ("utime" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [92609 92626])
                    ("times" variable
                       (:pointer 1
                        :type ("utimbuf" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [92627 92649]))                  
                :type "int")
                nil [92598 93321])
            ("create_toolhelp32_snapshot" function
               (:arguments 
                  ( ("Flags" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [93513 93525])
                    ("Ignored" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [93530 93544]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [93474 94049])
            ("process32_first" function
               (:arguments 
                  ( ("hSnapshot" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94084 94101])
                    ("lppe" variable (:type ("LPPROCESSENTRY32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94106 94128]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [94056 94523])
            ("process32_next" function
               (:arguments 
                  ( ("hSnapshot" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94557 94574])
                    ("lppe" variable (:type ("LPPROCESSENTRY32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94579 94601]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [94530 94987])
            ("open_thread_token" function
               (:arguments 
                  ( ("ThreadHandle" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95025 95045])
                    ("DesiredAccess" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95050 95070])
                    ("OpenAsSelf" variable (:type ("BOOL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95075 95091])
                    ("TokenHandle" variable (:type ("PHANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95096 95116]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [94994 95821])
            ("impersonate_self" function
               (:arguments 
                  ( ("ImpersonationLevel" variable (:type ("SECURITY_IMPERSONATION_LEVEL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95858 95906]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [95828 96437])
            ("revert_to_self" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [96467 96472]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [96444 96964])
            ("get_process_memory_info" function
               (:arguments 
                  ( ("h_proc" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97008 97022])
                    ("mem_counters" variable (:type ("PPROCESS_MEMORY_COUNTERS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97027 97065])
                    ("bufsize" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97070 97084]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [96971 97681])
            ("get_process_working_set_size" function
               (:arguments 
                  ( ("h_proc" variable (:type ("HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97730 97744])
                    ("minrss" variable
                       (:pointer 1
                        :type ("DWORD" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [97749 97763])
                    ("maxrss" variable
                       (:pointer 1
                        :type ("DWORD" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [97768 97782]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [97688 98358])
            ("global_memory_status" function
               (:arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("MEMORYSTATUS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [98399 98417]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [98365 98904])
            ("global_memory_status_ex" function
               (:arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("MEMORY_STATUS_EX" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [98948 98970]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [98911 99481])
            ("list_system_processes" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [99483 100203])
            ("enable_privilege" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("priv_name" variable (:type ("LPCTSTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100234 100252])
                    ("enable_p" variable (:type ("BOOL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100253 100267])
                    ("old_priv" variable
                       (:pointer 1
                        :type ("TOKEN_PRIVILEGES" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [100268 100295]))                  
                :type "int")
                nil [100205 101246])
            ("restore_privilege" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("priv" variable
                       (:pointer 1
                        :type ("TOKEN_PRIVILEGES" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [101278 101301]))                  
                :type "int")
                nil [101248 101711])
            ("ltime" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("time_usec" variable (:type "long") nil nil)
                    ("time_sec" variable (:type "long") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101713 101914])
            ("U64_TO_LISP_TIME" variable (:constant-flag t) nil [101924 101940])
            ("process_times" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h_proc" variable (:type ("HANDLE" type (:type "class") nil nil)) nil nil)
                    ("ttime" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("utime" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("stime" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("etime" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("ctime" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("pcpu" variable
                       (:pointer 1
                        :type "double")
                        nil nil))                  
                :type "int")
                nil [101993 103162])
            ("system_process_attributes" function
               (:arguments 
                  ( ("pid" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103164 111844])
            ("sys_close" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [131996 132003]))                  
                :type "int")
                nil [131981 133166])
            ("sys_dup" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [133181 133188]))                  
                :type "int")
                nil [133168 133382])
            ("sys_dup2" function
               (:arguments 
                  ( ("src" variable (:type "int") (reparse-symbol arg-sub-list) [133399 133407])
                    ("dst" variable (:type "int") (reparse-symbol arg-sub-list) [133408 133416]))                  
                :type "int")
                nil [133385 133804])
            ("sys_pipe" function
               (:arguments 
                  ( ("phandles" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [133855 133870]))                  
                :type "int")
                nil [133841 134662])
            ("w32_pipe_read_delay" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [134684 134715])
            ("_sys_read_ahead" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [134859 134866]))                  
                :type "int")
                nil [134838 137526])
            ("_sys_wait_accept" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [137550 137557]))                  
                :type "int")
                nil [137528 138180])
            ("sys_read" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [138196 138203])
                    ("buffer" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [138204 138218])
                    ("count" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [138219 138238]))                  
                :type "int")
                nil [138182 142759])
            ("interrupt_handle" variable
               (:typemodifiers ("extern")
                :type ("HANDLE" type (:type "class") nil nil))
                nil [142782 142813])
            ("sys_write" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [142883 142890])
                    ("buffer" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [142891 142911])
                    ("count" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [142912 142931]))                  
                :type "int")
                nil [142868 145940])
            ("check_windows_init_file" function
               (:typemodifiers ("static")
                :type "void")
                nil [145942 147732])
            ("term_ntproc" function (:type "void") nil [147734 147876])
            ("init_ntproc" function (:type "void") nil [147878 150690])
            ("shutdown_handler" function
               (:arguments 
                  ( ("type" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150855 150866]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [150831 151334])
            ("globals_of_w32" function (:type "void") nil [151538 153103])
            ("serial_open" function
               (:arguments 
                  ( ("port" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [153153 153164]))                  
                :type "int")
                nil [153136 154173])
            ("serial_configure" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("Lisp_Process" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [154234 154257])
                    ("contact" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154266 154286]))                  
                :type "void")
                nil [154211 158610]))          
    :file "w32.c"
    :pointmax 158717
    :fsize 158716
    :lastmodtime '(19383 49283)
    :unmatched-syntax '((symbol 150826 . 150830) (symbol 98906 . 98910) (symbol 98360 . 98364) (symbol 97683 . 97687) (symbol 96966 . 96970) (symbol 96439 . 96443) (symbol 95823 . 95827) (symbol 94989 . 94993) (symbol 94525 . 94529) (symbol 94051 . 94055) (symbol 93467 . 93473) (TEMPLATE 71889 . 71897) (NEW 69456 . 69459) (INT 51321 . 51324) (EXTERN 51314 . 51320) (INT 51272 . 51275) (EXTERN 51265 . 51271) (punctuation 23803 . 23804) (semantic-list 23791 . 23803) (SIZEOF 23784 . 23790) (punctuation 23782 . 23783) (semantic-list 23772 . 23781) (SIZEOF 23765 . 23771) (punctuation 23763 . 23764) (symbol 23755 . 23762) (INT 23751 . 23754) (STATIC 23744 . 23750) (symbol 21144 . 21148) (VOID 20564 . 20568) (symbol 19874 . 19878) (symbol 19327 . 19332) (symbol 18797 . 18801) (symbol 18263 . 18267) (symbol 17427 . 17431) (symbol 16591 . 16595) (symbol 15763 . 15767) (symbol 15055 . 15061) (symbol 14388 . 14394) (symbol 13676 . 13701) (symbol 12809 . 12813) (symbol 11897 . 11901) (symbol 11171 . 11175) (punctuation 9237 . 9238) (TYPEDEF 9109 . 9116) (punctuation 9107 . 9108) (semantic-list 9074 . 9107) (semantic-list 9038 . 9073) (VOID 9033 . 9037) (TYPEDEF 9025 . 9032) (punctuation 9023 . 9024) (TYPEDEF 8964 . 8971) (punctuation 8962 . 8963) (TYPEDEF 8891 . 8898) (punctuation 8889 . 8890) (TYPEDEF 8771 . 8778) (punctuation 8769 . 8770) (TYPEDEF 8685 . 8692) (punctuation 8683 . 8684) (TYPEDEF 8605 . 8612) (punctuation 8603 . 8604) (TYPEDEF 8453 . 8460) (punctuation 8451 . 8452) (TYPEDEF 8321 . 8328) (punctuation 8319 . 8320) (TYPEDEF 8271 . 8278) (punctuation 8269 . 8270) (TYPEDEF 8170 . 8177) (punctuation 8168 . 8169) (TYPEDEF 8026 . 8033) (punctuation 8024 . 8025) (TYPEDEF 7931 . 7938) (punctuation 7929 . 7930) (TYPEDEF 7835 . 7842) (punctuation 7833 . 7834) (TYPEDEF 7732 . 7739) (punctuation 7730 . 7731) (TYPEDEF 7675 . 7682) (punctuation 7673 . 7674) (TYPEDEF 7522 . 7529) (punctuation 7520 . 7521) (TYPEDEF 7369 . 7376) (punctuation 7367 . 7368) (TYPEDEF 7156 . 7163) (punctuation 7154 . 7155) (TYPEDEF 7083 . 7090) (punctuation 7081 . 7082) (TYPEDEF 7002 . 7009) (punctuation 7000 . 7001) (TYPEDEF 6908 . 6915) (punctuation 6906 . 6907) (TYPEDEF 6708 . 6715) (punctuation 6371 . 6372) (TYPEDEF 6188 . 6195) (punctuation 6186 . 6187) (TYPEDEF 5973 . 5980) (punctuation 5971 . 5972) (TYPEDEF 5848 . 5855) (punctuation 3798 . 3799) (TYPEDEF 3700 . 3707))
    :lexical-table 
        '(("FLEXIBLE_ARRAY_MEMBER" . ((number "1" 79277 . 79278)))
          ("FILETIME_TO_U64" (spp-arg-list ("result" "ft") 75835 . 75847) . 
              ((DO "do" 75859 . 75861) (semantic-list "{                                     \\
    ULARGE_INTEGER uiTemp;                 \\
    uiTemp.LowPart = (ft).dwLowDateTime;   \\
    uiTemp.HighPart = (ft).dwHighDateTime; \\
    result = uiTemp.QuadPart;              \\
  }" 75862 . 76085) (WHILE "while" 76086 . 76091) (semantic-list "(0)" 76092 . 76095)))
          ("PASSWD_FIELD_SIZE" . ((number "256" 27286 . 27289)))
          ("UID" . ((number "1" 80366 . 80367)))
          ("GID" . ((number "2" 80380 . 80381)))
          ("REG_ROOT" . ((string "\"SOFTWARE\\\\GNU\\\\Emacs\"" 37723 . 37745)))
          ("DRIVE_INDEX" (spp-arg-list ("c") 52121 . 52126) . ((semantic-list "( (c) <= 'Z' ? (c) - 'A' : (c) - 'a' )" 52127 . 52165)))
          ("VOLINFO_STILL_VALID" (spp-arg-list ("root_dir" "info") 52193 . 52211) . ((semantic-list "( ( isalpha (root_dir[0]) &&				\\
      fixed_drives[ DRIVE_INDEX (root_dir[0]) ] )	\\
    || GetTickCount () - info->timestamp < 10000 )" 52217 . 52353)))
          ("U64_TO_LISP_TIME" (spp-arg-list ("time") 101940 . 101946) . ((symbol "ltime" 101947 . 101952) (semantic-list "((time) / 1000000L, (time) % 1000000L)" 101953 . 101991)))
          )

    )
   (semanticdb-table "syssignal.h"
    :major-mode 'c-mode
    :tags 
        '( ("init_signals" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [839 876])
            ("pthread.h" include (:system-flag t) nil [934 954])
            ("FORWARD_SIGNAL_TO_MAIN_THREAD" variable (:constant-flag t) nil [1071 1100])
            ("main_thread" variable
               (:typemodifiers ("extern")
                :type ("pthread_t" type (:type "class") nil nil))
                nil [1146 1175])
            ("sigunblock" variable (:constant-flag t) nil [3662 3672])
            ("SIGMASKTYPE" variable (:constant-flag t) nil [3893 3904])
            ("SIGEMPTYMASK" variable (:constant-flag t) nil [3946 3958])
            ("SIGFULLMASK" variable (:constant-flag t) nil [3999 4010])
            ("sigmask" variable (:constant-flag t) nil [4056 4063])
            ("sigfree" variable (:constant-flag t) nil [4231 4238])
            ("NSIG" variable (:constant-flag t) nil [4909 4913])
            ("EMACS_KILLPG" variable (:constant-flag t) nil [5223 5235])
            ("SIGNAL_THREAD_CHECK" variable (:constant-flag t) nil [5619 5638]))          
    :file "syssignal.h"
    :pointmax 7009
    :fsize 7008
    :lastmodtime '(19383 49282)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("SIGEMPTYMASK" . ((semantic-list "(0)" 3959 . 3962)))
          ("NSIG" . ((symbol "NSIG_MINIMUM" 4914 . 4926)))
          ("FORWARD_SIGNAL_TO_MAIN_THREAD")
          ("EMACS_KILLPG" (spp-arg-list ("gid" "signo") 5235 . 5247) . ((semantic-list "(kill   (-(gid), (signo)))" 5248 . 5274)))
          ("sigunblock" (spp-arg-list ("SIG") 3672 . 3677) . ((semantic-list "{ SIGMASKTYPE omask = sigblock (SIGEMPTYMASK); sigsetmask (omask & ~SIG); }" 3680 . 3755)))
          ("sigfree" (spp-arg-list nil 4238 . 4240) . ((symbol "sigsetmask" 4241 . 4251) (semantic-list "(SIGEMPTYMASK)" 4252 . 4266)))
          ("SIGMASKTYPE" . ((INT "int" 3905 . 3908)))
          ("SIGFULLMASK" . ((semantic-list "(0xffffffff)" 4011 . 4023)))
          ("sigmask" (spp-arg-list ("no") 4063 . 4067) . ((semantic-list "(1L << ((no) - 1))" 4068 . 4086)))
          ("SIGNAL_THREAD_CHECK" (spp-arg-list ("signo") 5638 . 5645) . 
              ((DO "do" 5687 . 5689) (semantic-list "{                                                                  \\
    if (!pthread_equal (pthread_self (), main_thread))			\\
      {                                                                 \\
        /* POSIX says any thread can receive the signal.  On GNU/Linux  \\
           that is not true, but for other systems (FreeBSD at least)   \\
           it is.  So direct the signal to the correct thread and block \\
           it from this thread.  */                                     \\
        sigset_t new_mask;                                              \\
                                                                        \\
        sigemptyset (&new_mask);                                        \\
        sigaddset (&new_mask, signo);                                   \\
        pthread_sigmask (SIG_BLOCK, &new_mask, 0);                      \\
        pthread_kill (main_thread, signo);                              \\
        return;                                                         \\
      }                                                                 \\
   }" 5690 . 6784) (WHILE "while" 6785 . 6790) (semantic-list "(0)" 6791 . 6794)))
          )

    )
   (semanticdb-table "w32menu.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [882 901])
            ("signal.h" include (:system-flag t) nil [903 922])
            ("stdio.h" include (:system-flag t) nil [923 941])
            ("mbstring.h" include (:system-flag t) nil [942 963])
            ("setjmp.h" include (:system-flag t) nil [964 983])
            ("lisp.h" include nil nil [985 1002])
            ("keyboard.h" include nil nil [1003 1024])
            ("keymap.h" include nil nil [1025 1044])
            ("frame.h" include nil nil [1045 1063])
            ("termhooks.h" include nil nil [1064 1086])
            ("window.h" include nil nil [1087 1106])
            ("blockinput.h" include nil nil [1107 1130])
            ("buffer.h" include nil nil [1131 1150])
            ("charset.h" include nil nil [1151 1171])
            ("character.h" include nil nil [1172 1194])
            ("coding.h" include nil nil [1195 1214])
            ("menu.h" include nil nil [1215 1232])
            ("w32term.h" include nil nil [1348 1368])
            ("sys/types.h" include (:system-flag t) nil [1482 1504])
            ("dispextern.h" include nil nil [1513 1536])
            ("TRUE" variable (:constant-flag t) nil [1619 1623])
            ("FALSE" variable (:constant-flag t) nil [1634 1639])
            ("current_popup_menu" variable (:type ("HMENU" type (:type "class") nil nil)) nil [1664 1689])
            ("syms_of_w32menu" function
               (:prototype-flag t
                :type "void")
                nil [1691 1715])
            ("globals_of_w32menu" function
               (:prototype-flag t
                :type "void")
                nil [1716 1743])
            ("BOOL" function
               (:arguments 
                  ( ("GetMenuItemInfoA_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1759 1790]))                  
                :type "int")
                nil [1753 1860])
            ("BOOL" function
               (:arguments 
                  ( ("SetMenuItemInfoA_Proc" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1876 1907]))                  
                :type "int")
                nil [1870 1974])
            ("get_menu_item_info" variable
               (:default-value "NULL;"
                :type ("GetMenuItemInfoA_Proc" type (:type "class") nil nil))
                nil [1977 2025])
            ("set_menu_item_info" variable
               (:default-value "NULL;"
                :type ("SetMenuItemInfoA_Proc" type (:type "class") nil nil))
                nil [2026 2074])
            ("unicode_append_menu" variable
               (:default-value "NULL;"
                :type ("AppendMenuW_Proc" type (:type "class") nil nil))
                nil [2075 2119])
            ("Qdebug_on_next_call" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2121 2153])
            ("Qmenu_bar" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2155 2184])
            ("QCradio" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2186 2223])
            ("QCtoggle" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2186 2223])
            ("Voverriding_local_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2225 2266])
            ("Voverriding_local_map_menu_flag" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2267 2318])
            ("Qoverriding_terminal_local_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2320 2393])
            ("Qoverriding_local_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2320 2393])
            ("Qmenu_bar_update_hook" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2395 2436])
            ("set_frame_menubar" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2438 2488])
            ("is_simple_dialog" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2595 2642])
            ("simple_dialog_show" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2643 2724])
            ("w32_free_menu_strings" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2733 2771])
            ("pending_menu_activation" variable (:type "int") nil [3125 3153])
            ("menubar_id_to_frame" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("id" variable (:type ("HMENU" type (:type "class") nil nil)) nil nil))                  
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3250 3646])
            ("DEFUN_ARGS_" variable (:type ("Sx_popup_dialog" type (:type "class") nil nil)) nil [3668 4583])
            ("doc" variable
               (:default-value "DEFUN (\"x-popup-dialog\", Fx_popup_dialog, Sx_popup_dialog, 2, 3, 0,
       doc: /* Pop up a dialog box and return user's selection.
POSITION specifies which frame to use.
This is normally a mouse button event or a window or frame.
If POSITION is t, it means to use the frame the mouse is on.
The dialog box appears in the middle of the specified frame.

CONTENTS specifies the alternatives to display in the dialog box.
It is a list of the form (TITLE ITEM1 ITEM2...).
Each ITEM is a cons cell (STRING . VALUE).
The return value is VALUE from the chosen item.

An ITEM may also be just a string--that makes a nonselectable item.
An ITEM may also be nil--that means to put all preceding items
on the left of the dialog box and all following items on the right.
\\(By default, approximately half appear on each side.)

If HEADER is non-nil, the frame title for the box is \"Information\",
otherwise it is \"Question\". */)"
                :type "int")
                nil [3668 4583])
            ("Sx_popup_dialog" function
               (:arguments 
                  ( ("header" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("contents" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3668 7323])
            ("x_activate_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [7756 8057])
            ("menubar_selection_callback" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8286 8298])
                    ("client_data" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [8299 8318]))                  
                :type "void")
                nil [8253 10447])
            ("set_frame_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("first_time" variable (:type "int") nil nil)
                    ("deep_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [10635 18112])
            ("initialize_frame_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [18361 18659])
            ("free_frame_menubar" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [18801 19052])
            ("w32_menu_show" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19828 19840])
                    ("x" variable (:type "int") (reparse-symbol arg-sub-list) [19841 19847])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [19848 19854])
                    ("for_click" variable (:type "int") (reparse-symbol arg-sub-list) [19855 19869])
                    ("keymaps" variable (:type "int") (reparse-symbol arg-sub-list) [19870 19882])
                    ("title" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19891 19909])
                    ("error" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [19910 19923]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [19801 27846])
            ("is_simple_dialog" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("contents" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [34501 35210])
            ("simple_dialog_show" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("header" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("contents" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [35212 36494])
            ("name_is_separator" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [36559 36954])
            ("add_left_right_boundary" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("menu" variable (:type ("HMENU" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37042 37053]))                  
                :type "int")
                nil [37006 37111])
            ("utf8to16" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("src" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [37205 37225])
                    ("len" variable (:type "int") (reparse-symbol arg-sub-list) [37226 37234])
                    ("dest" variable
                       (:pointer 1
                        :type ("WCHAR" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37235 37248]))                  
                :type "void")
                nil [37183 38009])
            ("add_menu_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("menu" variable (:type ("HMENU" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38037 38048])
                    ("wv" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38049 38066])
                    ("item" variable (:type ("HMENU" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38067 38078]))                  
                :type "int")
                nil [38011 43313])
            ("fill_in_menu" function
               (:arguments 
                  ( ("menu" variable (:type ("HMENU" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43403 43414])
                    ("wv" variable
                       (:pointer 1
                        :type ("widget_value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43415 43432]))                  
                :type "int")
                nil [43385 43860])
            ("w32_menu_display_help" function
               (:arguments 
                  ( ("owner" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44033 44044])
                    ("menu" variable (:type ("HMENU" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44045 44056])
                    ("item" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44057 44067])
                    ("flags" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44068 44079]))                  
                :type "void")
                nil [44005 45394])
            ("w32_free_submenu_strings" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("menu" variable (:type ("HMENU" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [45444 46141])
            ("w32_free_menu_strings" function
               (:arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [46143 46484])
            ("DEFUN_ARGS_" variable (:type ("Smenu_or_popup_active_p" type (:type "class") nil nil)) nil [46574 46749])
            ("doc" variable
               (:default-value "DEFUN (\"menu-or-popup-active-p\", Fmenu_or_popup_active_p, Smenu_or_popup_active_p, 0, 0, 0,
       doc: /* Return t if a menu or popup dialog is active on selected frame.  */)"
                :type "int")
                nil [46574 46749])
            ("Smenu_or_popup_active_p" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [46574 46927])
            ("syms_of_w32menu" function (:type "void") nil [46929 47160])
            ("globals_of_w32menu" function (:type "void") nil [47517 47925]))          
    :file "w32menu.c"
    :pointmax 48012
    :fsize 48011
    :lastmodtime '(19383 49283)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 46574 . 46749) (symbol "__attribute__" 46574 . 46749) (symbol "Lisp_Subr" 46574 . 46749) (symbol "Lisp_Object" 46574 . 46749) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 3668 . 4583) (symbol "__attribute__" 3668 . 4583) (symbol "Lisp_Subr" 3668 . 4583) (symbol "Lisp_Object" 3668 . 4583) (punctuation 1974 . 1975) (TYPEDEF 1862 . 1869) (punctuation 1860 . 1861) (TYPEDEF 1745 . 1752))
    :lexical-table 
        '(("TRUE" . ((number "1" 1624 . 1625)))
          ("FALSE" . ((number "0" 1640 . 1641)))
          )

    )
   (semanticdb-table "w32term.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [898 917])
            ("signal.h" include (:system-flag t) nil [918 937])
            ("stdio.h" include (:system-flag t) nil [938 956])
            ("stdlib.h" include (:system-flag t) nil [957 976])
            ("setjmp.h" include (:system-flag t) nil [977 996])
            ("lisp.h" include nil nil [997 1014])
            ("blockinput.h" include nil nil [1015 1038])
            ("w32term.h" include nil nil [1039 1059])
            ("systty.h" include nil nil [1061 1080])
            ("systime.h" include nil nil [1081 1101])
            ("ctype.h" include (:system-flag t) nil [1103 1121])
            ("errno.h" include (:system-flag t) nil [1122 1140])
            ("sys/stat.h" include (:system-flag t) nil [1141 1162])
            ("imm.h" include (:system-flag t) nil [1163 1179])
            ("charset.h" include nil nil [1181 1201])
            ("character.h" include nil nil [1202 1224])
            ("coding.h" include nil nil [1225 1244])
            ("ccl.h" include nil nil [1245 1261])
            ("frame.h" include nil nil [1262 1280])
            ("dispextern.h" include nil nil [1281 1304])
            ("fontset.h" include nil nil [1305 1325])
            ("termhooks.h" include nil nil [1326 1348])
            ("termopts.h" include nil nil [1349 1370])
            ("termchar.h" include nil nil [1371 1392])
            ("disptab.h" include nil nil [1393 1413])
            ("buffer.h" include nil nil [1414 1433])
            ("window.h" include nil nil [1434 1453])
            ("keyboard.h" include nil nil [1454 1475])
            ("intervals.h" include nil nil [1476 1498])
            ("process.h" include nil nil [1499 1519])
            ("atimer.h" include nil nil [1520 1539])
            ("keymap.h" include nil nil [1540 1559])
            ("w32heap.h" include nil nil [1561 1581])
            ("shellapi.h" include (:system-flag t) nil [1582 1603])
            ("font.h" include nil nil [1605 1622])
            ("w32font.h" include nil nil [1623 1643])
            ("max_fringe_bmp" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [1670 1700])
            ("fringe_bmp" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type ("HBITMAP" type (:type "class") nil nil))
                nil [1701 1732])
            ("Vx_toolkit_scroll_bars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1788 1823])
            ("last_mousemove_x" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [1874 1906])
            ("last_mousemove_y" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [1907 1939])
            ("GET_WHEEL_DELTA_WPARAM" variable (:constant-flag t) nil [2048 2070])
            ("any_help_event_p" variable
               (:typemodifiers ("static")
                :type "int")
                nil [2194 2222])
            ("last_window" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2301 2332])
            ("x_use_underline_position_properties" variable (:type "int") nil [2404 2444])
            ("x_underline_at_descent_line" variable (:type "int") nil [2530 2562])
            ("msh_mousewheel" variable
               (:typemodifiers ("extern")
                :type "unsigned int")
                nil [2564 2599])
            ("free_frame_menubar" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :type "void")
                nil [2601 2635])
            ("w32_codepage_for_font" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("fontname" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [2671 2686]))                  
                :type "int")
                nil [2637 2687])
            ("w32_load_cursor" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("name" variable (:type ("LPCTSTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2719 2732]))                  
                :type ("Cursor" type (:type "class") nil nil))
                nil [2688 2733])
            ("Vwindow_system" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2735 2769])
            ("x_any_window_to_frame" variable (:constant-flag t) nil [2779 2800])
            ("x_top_window_to_frame" variable (:constant-flag t) nil [2827 2848])
            ("one_w32_display_info" variable (:type ("w32_display_info" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [2935 2980])
            ("x_display_list" variable
               (:pointer 1
                :type ("w32_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2981 3021])
            ("w32_display_name_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3273 3307])
            ("WCRANGE" type
               (:typedef ("tagWCRANGE" type
                     (:members 
                        ( ("wcLow" variable (:type ("WCHAR" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3499 3511])
                          ("cGlyphs" variable (:type ("USHORT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3514 3529]))                        
                      :type "struct")
                      nil nil)
                :superclasses "tagWCRANGE"
                :type "typedef")
                nil [3469 3540])
            ("GLYPHSET" type
               (:typedef ("tagGLYPHSET" type
                     (:members 
                        ( ("cbThis" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3573 3586])
                          ("flAccel" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3589 3603])
                          ("cGlyphsSupported" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3606 3629])
                          ("cRanges" variable (:type ("DWORD" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3632 3646])
                          ("ranges" variable
                             (:dereference 1
                              :type ("WCRANGE" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [3649 3667]))                        
                      :type "struct")
                      nil nil)
                :superclasses "tagGLYPHSET"
                :type "typedef")
                nil [3542 3679])
            ("BOOL" function
               (:arguments 
                  ( ("pfnSetLayeredWindowAttributes" variable
                       (:pointer 1
                        :type ("WINAPI" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3766 3804]))                  
                :type "int")
                nil [3760 3834])
            ("LWA_ALPHA" variable (:constant-flag t) nil [3863 3872])
            ("WS_EX_LAYERED" variable (:constant-flag t) nil [4028 4041])
            ("updating_frame" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [4341 4377])
            ("pending_autoraise_frame" variable
               (:pointer 1
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [4452 4490])
            ("w32_system_caret_hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil [4561 4588])
            ("w32_system_caret_height" variable (:type "int") nil [4589 4617])
            ("w32_system_caret_x" variable (:type "int") nil [4618 4641])
            ("w32_system_caret_y" variable (:type "int") nil [4642 4665])
            ("w32_use_visible_system_caret" variable (:type "int") nil [4666 4699])
            ("dwWindowsThreadId" variable
               (:default-value "0"
                :type ("DWORD" type (:type "class") nil nil))
                nil [4701 4729])
            ("hWindowsThread" variable
               (:default-value "NULL;"
                :type ("HANDLE" type (:type "class") nil nil))
                nil [4730 4759])
            ("dwMainThreadId" variable
               (:default-value "0"
                :type ("DWORD" type (:type "class") nil nil))
                nil [4760 4785])
            ("hMainThread" variable
               (:default-value "NULL;"
                :type ("HANDLE" type (:type "class") nil nil))
                nil [4786 4812])
            ("vertical_scroll_bar_min_handle" variable (:type "int") nil [4814 4849])
            ("vertical_scroll_bar_top_border" variable (:type "int") nil [4850 4885])
            ("vertical_scroll_bar_bottom_border" variable (:type "int") nil [4886 4924])
            ("last_scroll_bar_drag_pos" variable (:type "int") nil [4926 4955])
            ("last_mouse_glyph" variable
               (:typemodifiers ("static")
                :type ("RECT" type (:type "class") nil nil))
                nil [5044 5073])
            ("last_mouse_glyph_frame" variable
               (:typemodifiers ("static")
                :type ("FRAME_PTR" type (:type "class") nil nil))
                nil [5074 5114])
            ("last_mouse_press_frame" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [5115 5157])
            ("w32_num_mouse_buttons" variable (:type "int") nil [5159 5185])
            ("Vw32_swap_mouse_buttons" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5187 5223])
            ("Vw32_grab_focus_on_raise" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5285 5322])
            ("Vw32_capslock_is_shiftlock" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5387 5426])
            ("Vw32_recognize_altgr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5506 5539])
            ("last_mouse_scroll_bar" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [5915 5956])
            ("last_mouse_scroll_bar_pos" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5957 5994])
            ("last_mouse_movement_time" variable
               (:typemodifiers ("static")
                :type ("Time" type (:type "class") nil nil))
                nil [6377 6414])
            ("input_signal_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6560 6590])
            ("Vsystem_name" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6599 6651])
            ("Vcommand_line_args" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6599 6651])
            ("errno" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [6673 6690])
            ("extra_keyboard_modifiers" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [6769 6811])
            ("keyboard_codepage" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6883 6912])
            ("x_update_window_end" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [6914 6979])
            ("w32_handle_tool_bar_click" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [6980 7104])
            ("w32_define_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Cursor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7105 7157])
            ("x_lower_frame" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7159 7200])
            ("x_scroll_bar_clear" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7201 7247])
            ("x_wm_set_size_hint" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "long") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7248 7305])
            ("x_raise_frame" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7306 7347])
            ("x_set_window_size" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7348 7408])
            ("x_wm_set_window_state" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7409 7463])
            ("x_wm_set_icon_pixmap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7464 7517])
            ("w32_initialize" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7518 7557])
            ("x_update_end" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7558 7605])
            ("w32_frame_up_to_date" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7606 7661])
            ("w32_set_terminal_modes" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7662 7722])
            ("w32_reset_terminal_modes" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7723 7785])
            ("x_clear_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7786 7834])
            ("frame_highlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7835 7885])
            ("frame_unhighlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7886 7938])
            ("x_new_focus_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [7939 8025])
            ("x_focus_changed" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8026 8141])
            ("w32_detect_focus_change" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8142 8282])
            ("w32_frame_rehighlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8283 8339])
            ("x_frame_rehighlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8340 8405])
            ("x_draw_hollow_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8406 8482])
            ("x_draw_bar_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("text_cursor_kinds" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8483 8592])
            ("w32_clip_to_row" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("HDC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8593 8674])
            ("my_show_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [8675 8735])
            ("my_set_window_pos" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8736 8810])
            ("my_set_focus" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8811 8864])
            ("my_set_foreground_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8865 8914])
            ("my_destroy_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [8915 8973])
            ("Qvendor_specific_keysyms" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8975 9019])
            ("XChangeGC" function
               (:arguments 
                  ( ("ignore" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [9750 9764])
                    ("gc" variable
                       (:pointer 1
                        :type ("XGCValues" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9765 9779])
                    ("mask" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [9780 9799])
                    ("xgcv" variable
                       (:pointer 1
                        :type ("XGCValues" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9804 9820]))                  
                :type "void")
                nil [9734 10004])
            ("XCreateGC" function
               (:pointer 1
                :arguments 
                  ( ("ignore" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [10028 10042])
                    ("window" variable (:type ("Window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10043 10057])
                    ("mask" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [10058 10077])
                    ("xgcv" variable
                       (:pointer 1
                        :type ("XGCValues" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10100 10116]))                  
                :type ("XGCValues" type (:type "class") nil nil))
                nil [10006 10269])
            ("XGetGCValues" function
               (:arguments 
                  ( ("ignore" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [10290 10303])
                    ("gc" variable
                       (:pointer 1
                        :type ("XGCValues" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10304 10318])
                    ("mask" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [10338 10357])
                    ("xgcv" variable
                       (:pointer 1
                        :type ("XGCValues" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10358 10374]))                  
                :type "void")
                nil [10271 10416])
            ("w32_set_clip_rectangle" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hdc" variable (:type ("HDC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10454 10462])
                    ("rect" variable
                       (:pointer 1
                        :type ("RECT" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10463 10474]))                  
                :type "void")
                nil [10418 10669])
            ("w32_draw_rectangle" function
               (:arguments 
                  ( ("hdc" variable (:type ("HDC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10755 10763])
                    ("gc" variable
                       (:pointer 1
                        :type ("XGCValues" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10764 10778])
                    ("x" variable (:type "int") (reparse-symbol arg-sub-list) [10779 10785])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [10786 10792])
                    ("width" variable (:type "int") (reparse-symbol arg-sub-list) [10813 10823])
                    ("height" variable (:type "int") (reparse-symbol arg-sub-list) [10824 10835]))                  
                :type "void")
                nil [10730 11186])
            ("w32_fill_rect" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("hdc" variable (:type ("HDC" type (:type "class") nil nil)) nil nil)
                    ("pix" variable (:type ("COLORREF" type (:type "class") nil nil)) nil nil)
                    ("lprect" variable
                       (:pointer 1
                        :type ("RECT" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [11245 11456])
            ("w32_clear_window" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [11458 11855])
            ("OPAQUE_FRAME" variable (:constant-flag t) nil [11865 11877])
            ("x_set_frame_alpha" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [11883 13004])
            ("x_display_pixel_height" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [13006 13195])
            ("x_display_pixel_width" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [13197 13385])
            ("x_update_begin" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [13816 14193])
            ("x_update_window_begin" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [14355 16168])
            ("w32_draw_vertical_window_border" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y1" variable (:type "int") nil nil)
                    ("y0" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [16230 16727])
            ("x_update_window_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("mouse_face_overwritten_p" variable (:type "int") nil nil)
                    ("cursor_on_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [17255 18455])
            ("x_update_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [18545 18738])
            ("w32_frame_up_to_date" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [18916 19420])
            ("x_after_update_window_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("desired_row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [19825 21022])
            ("w32_draw_fringe_bitmap" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type ("draw_fringe_bitmap_params" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [21241 24682])
            ("w32_define_fringe_bitmap" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("which" variable (:type "int") nil nil)
                    ("bits" variable
                       (:pointer 1
                        :type "unsigned short")
                        nil nil)
                    ("wd" variable (:type "int") nil nil)
                    ("h" variable (:type "int") nil nil))                  
                :type "void")
                nil [24684 25113])
            ("w32_destroy_fringe_bitmap" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("which" variable (:type "int") nil nil))                  
                :type "void")
                nil [25115 25312])
            ("w32_set_terminal_modes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("term" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [25580 25602]))                  
                :type "void")
                nil [25544 25606])
            ("w32_reset_terminal_modes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("term" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [25783 25805]))                  
                :type "void")
                nil [25745 25809])
            ("x_set_glyph_string_clipping" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26027 26096])
            ("x_set_glyph_string_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26097 26160])
            ("x_draw_glyph_string_background" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26161 26244])
            ("x_draw_glyph_string_foreground" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26245 26317])
            ("x_draw_composite_glyph_string_foreground" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26318 26400])
            ("x_draw_glyph_string_box" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26401 26466])
            ("x_draw_glyph_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26467 26529])
            ("x_set_cursor_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26530 26587])
            ("x_set_mode_line_face_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26588 26653])
            ("x_set_mouse_face_gc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26654 26715])
            ("w32_alloc_lighter_color" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26752 26767])
                    ("" variable
                       (:pointer 1
                        :type ("COLORREF" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26768 26779])
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) [26780 26787])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [26788 26792]))                  
                :type "int")
                nil [26716 26793])
            ("w32_setup_relief_color" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("relief" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("COLORREF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26794 26931])
            ("x_setup_relief_colors" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26932 26995])
            ("x_draw_image_glyph_string" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [26996 27063])
            ("x_draw_image_relief" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27064 27125])
            ("x_draw_image_foreground" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27126 27191])
            ("w32_draw_image_foreground_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("HBITMAP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27192 27270])
            ("x_clear_glyph_string_rect" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27271 27366])
            ("w32_draw_relief_rect" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("RECT" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27367 27500])
            ("w32_draw_box_rect" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("RECT" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [27501 27608])
            ("x_set_cursor_gc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [27692 29269])
            ("x_set_mouse_face_gc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [29343 30776])
            ("x_set_mode_line_face_gc" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [30994 31082])
            ("x_set_glyph_string_gc" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [31251 32135])
            ("x_set_glyph_string_clipping" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [32280 32866])
            ("x_set_glyph_string_clipping_exactly" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dst" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("src" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [33032 33329])
            ("w32_compute_glyph_string_overhangs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [33398 34186])
            ("x_clear_glyph_string_rect" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("h" variable (:type "int") nil nil)
                    ("w" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [34277 34970])
            ("x_draw_glyph_string_background" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("force_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [35293 36355])
            ("x_draw_glyph_string_foreground" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [36405 37889])
            ("x_draw_composite_glyph_string_foreground" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [37948 40484])
            ("HIGHLIGHT_COLOR_DARK_BOOST_LIMIT" variable (:constant-flag t) nil [41018 41050])
            ("w32_alloc_lighter_color" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("COLORREF" type (:type "class") nil nil))
                        nil nil)
                    ("factor" variable (:type "double") nil nil)
                    ("delta" variable (:type "int") nil nil))                  
                :type "int")
                nil [41440 43557])
            ("x_query_colors" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("colors" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil)
                    ("ncolors" variable (:type "int") nil nil))                  
                :type "void")
                nil [43709 44108])
            ("x_query_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [44110 44217])
            ("w32_setup_relief_color" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("relief" variable
                       (:pointer 1
                        :type ("relief" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("factor" variable (:type "double") nil nil)
                    ("delta" variable (:type "int") nil nil)
                    ("default_pixel" variable (:type ("COLORREF" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [44613 45577])
            ("x_setup_relief_colors" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [45646 46444])
            ("w32_draw_relief_rect" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("bottom_y" variable (:type "int") nil nil)
                    ("right_x" variable (:type "int") nil nil)
                    ("top_y" variable (:type "int") nil nil)
                    ("left_x" variable (:type "int") nil nil)
                    ("raised_p" variable (:type "int") nil nil)
                    ("right_p" variable (:type "int") nil nil)
                    ("left_p" variable (:type "int") nil nil)
                    ("bot_p" variable (:type "int") nil nil)
                    ("top_p" variable (:type "int") nil nil)
                    ("clip_rect" variable
                       (:pointer 1
                        :type ("RECT" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [46881 48442])
            ("w32_draw_box_rect" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("right_p" variable (:type "int") nil nil)
                    ("left_p" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("bottom_y" variable (:type "int") nil nil)
                    ("right_x" variable (:type "int") nil nil)
                    ("top_y" variable (:type "int") nil nil)
                    ("left_x" variable (:type "int") nil nil)
                    ("clip_rect" variable
                       (:pointer 1
                        :type ("RECT" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [48821 49754])
            ("x_draw_glyph_string_box" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [49799 51263])
            ("x_draw_image_foreground" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [51315 54055])
            ("x_draw_image_relief" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [54113 55462])
            ("w32_draw_image_foreground_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pixmap" variable (:type ("HBITMAP" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [55528 58183])
            ("x_draw_glyph_string_bg_rect" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("h" variable (:type "int") nil nil)
                    ("w" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [58288 58748])
            ("x_draw_image_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [59034 62394])
            ("x_draw_stretch_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [62434 64549])
            ("x_draw_glyph_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("glyph_string" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [64581 72480])
            ("w32_shift_glyphs_for_insert" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("shift_by" variable (:type "int") nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [72540 72819])
            ("x_delete_glyphs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("n" variable (:type "int") nil nil))                  
                :type "void")
                nil [72912 73043])
            ("x_clear_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [73191 73207]))                  
                :type "void")
                nil [73164 73802])
            ("w32_ring_bell" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [73860 73876]))                  
                :type "void")
                nil [73833 74168])
            ("w32_set_terminal_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("n" variable (:type "int") nil nil))                  
                :type "void")
                nil [74430 74543])
            ("x_ins_del_lines" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("n" variable (:type "int") nil nil)
                    ("vpos" variable (:type "int") nil nil))                  
                :type "void")
                nil [74843 74977])
            ("x_scroll_run" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("run" variable
                       (:pointer 1
                        :type ("run" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [75036 77164])
            ("frame_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [77339 77447])
            ("frame_unhighlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [77449 77559])
            ("x_new_focus_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [77921 78574])
            ("x_focus_changed" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("type" variable (:type "int") nil nil)
                    ("state" variable (:type "int") nil nil)
                    ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [78735 79871])
            ("w32_detect_focus_change" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("event" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil)
                    ("bufp" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [80056 80547])
            ("x_mouse_leave" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [80624 80758])
            ("w32_frame_rehighlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [81134 81302])
            ("x_frame_rehighlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [81304 82107])
            ("x_get_keysym_name" function
               (:pointer 1
                :arguments 
                  ( ("keysym" variable (:type "int") nil nil))                  
                :type "char")
                nil [82197 82412])
            ("codepage_for_locale" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("locale" variable (:type ("LCID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82445 82457]))                  
                :type "int")
                nil [82414 82596])
            ("parse_button" function
               (:arguments 
                  ( ("message" variable (:type "int") nil nil)
                    ("xbutton" variable (:type "int") nil nil)
                    ("pbutton" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("pup" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [82864 83980])
            ("construct_mouse_click" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("msg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [84139 84838])
            ("construct_mouse_wheel" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("msg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [84840 86069])
            ("construct_drag_n_drop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("msg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil)
                    ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [86071 87159])
            ("last_mouse_motion_event" variable
               (:typemodifiers ("static")
                :type ("MSG" type (:type "class") nil nil))
                nil [87552 87587])
            ("last_mouse_motion_frame" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [87588 87631])
            ("note_mouse_movement" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("msg" variable
                       (:pointer 1
                        :type ("MSG" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [87633 88989])
            ("x_window_to_scroll_bar" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :type ("scroll_bar" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [89163 89215])
            ("x_scroll_bar_report_motion" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [89216 89258])
            ("x_check_fullscreen" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [89259 89312])
            ("redo_mouse_highlight" function
               (:typemodifiers ("static")
                :type "void")
                nil [89314 89602])
            ("w32_define_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Window" type (:type "class") nil nil)) nil nil)
                    ("cursor" variable (:type ("Cursor" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [89604 89758])
            ("w32_mouse_position" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fp" variable
                       (:pointer 1
                        :type ("FRAME_PTR" type (:type "class") nil nil))
                        nil nil)
                    ("insist" variable (:type "int") nil nil)
                    ("bar_window" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("part" variable
                       (:pointer 1
                        :type ("scroll_bar_part" type (:type "enum") nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("time" variable
                       (:pointer 1
                        :type "unsigned long")
                        nil nil))                  
                :type "void")
                nil [90539 92797])
            ("w32_handle_tool_bar_click" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("button_event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [93124 93504])
            ("x_window_to_scroll_bar" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("window_id" variable (:type ("Window" type (:type "class") nil nil)) nil nil))                  
                :type ("scroll_bar" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [93859 94760])
            ("w32_set_scroll_bar_thumb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("position" variable (:type "int") nil nil)
                    ("portion" variable (:type "int") nil nil))                  
                :type "void")
                nil [94913 96907])
            ("my_create_scrollbar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("HWND" type (:type "class") nil nil))
                nil [97086 97303])
            ("my_show_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97361 97373])
                    ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97374 97384])
                    ("how" variable (:type "int") (reparse-symbol arg-sub-list) [97385 97393]))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [97333 97569])
            ("my_set_window_pos" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97602 97612])
                    ("hwndAfter" variable (:type ("HWND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97613 97628])
                    ("x" variable (:type "int") (reparse-symbol arg-sub-list) [97634 97640])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [97641 97647])
                    ("cx" variable (:type "int") (reparse-symbol arg-sub-list) [97648 97655])
                    ("cy" variable (:type "int") (reparse-symbol arg-sub-list) [97656 97663])
                    ("flags" variable (:type ("UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97664 97675]))                  
                :type "void")
                nil [97571 97962])
            ("my_set_focus" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [97964 98124])
            ("my_set_foreground_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [98126 98253])
            ("my_destroy_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("hwnd" variable (:type ("HWND" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [98256 98426])
            ("x_scroll_bar_create" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("left" variable (:type "int") nil nil)
                    ("top" variable (:type "int") nil nil))                  
                :type ("scroll_bar" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [98651 99906])
            ("x_scroll_bar_remove" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [99989 100349])
            ("w32_set_vertical_scroll_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("position" variable (:type "int") nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("portion" variable (:type "int") nil nil))                  
                :type "void")
                nil [100574 104722])
            ("w32_condemn_scroll_bars" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [105423 106016])
            ("w32_redeem_scroll_bar" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [106148 107389])
            ("w32_judge_scroll_bars" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [107510 108098])
            ("w32_scroll_bar_handle_click" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("bar" variable
                       (:pointer 1
                        :type ("scroll_bar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("msg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil)
                    ("emacs_event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [108320 110965])
            ("x_scroll_bar_report_motion" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fp" variable
                       (:pointer 1
                        :type ("FRAME_PTR" type (:type "class") nil nil))
                        nil nil)
                    ("bar_window" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("part" variable
                       (:pointer 1
                        :type ("scroll_bar_part" type (:type "enum") nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("time" variable
                       (:pointer 1
                        :type "unsigned long")
                        nil nil))                  
                :type "void")
                nil [111068 112332])
            ("x_scroll_bar_clear" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [112557 113398])
            ("temp_index" variable
               (:typemodifiers ("static")
                :type "int")
                nil [113561 113583])
            ("temp_buffer" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "short")
                nil [113584 113614])
            ("dbcs_lead" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [113676 113702])
            ("w32_read_socket" function
               (:arguments 
                  ( ("sd" variable (:type "int") nil nil)
                    ("expected" variable (:type "int") nil nil)
                    ("hold_quit" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [114532 136905])
            ("w32_clip_to_row" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("area" variable (:type "int") nil nil)
                    ("hdc" variable (:type ("HDC" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [137404 137993])
            ("x_draw_hollow_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [138059 139053])
            ("x_draw_bar_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("kind" variable (:type ("text_cursor_kinds" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [139333 141634])
            ("w32_define_frame_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("cursor" variable (:type ("Cursor" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [141683 141828])
            ("w32_clear_frame_area" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [141867 142095])
            ("w32_draw_window_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("glyph_row" variable
                       (:pointer 1
                        :type ("glyph_row" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("cursor_width" variable (:type "int") nil nil)
                    ("cursor_type" variable (:type "int") nil nil)
                    ("active_p" variable (:type "int") nil nil)
                    ("on_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [142144 144556])
            ("x_bitmap_icon" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("icon" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [144576 146217])
            ("x_new_font" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("font_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("fontset" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [146998 148498])
            ("x_calc_absolute_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [149089 150896])
            ("x_set_offset" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("yoff" variable (:type "int") nil nil)
                    ("xoff" variable (:type "int") nil nil)
                    ("change_gravity" variable (:type "int") nil nil))                  
                :type "void")
                nil [151233 152015])
            ("x_check_fullscreen" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [152125 152820])
            ("x_set_window_size" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("change_gravity" variable (:type "int") nil nil)
                    ("rows" variable (:type "int") nil nil)
                    ("cols" variable (:type "int") nil nil))                  
                :type "void")
                nil [153058 156249])
            ("x_set_mouse_pixel_position" function
               (:prototype-flag t
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [156308 156324])
                    ("pix_x" variable (:type "int") (reparse-symbol arg-sub-list) [156325 156335])
                    ("pix_y" variable (:type "int") (reparse-symbol arg-sub-list) [156336 156346]))                  
                :type "void")
                nil [156275 156347])
            ("x_set_mouse_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [156349 156827])
            ("x_set_mouse_pixel_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pix_y" variable (:type "int") nil nil)
                    ("pix_x" variable (:type "int") nil nil))                  
                :type "void")
                nil [156829 157165])
            ("x_focus_on_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [157215 157623])
            ("x_unfocus_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [157625 157675])
            ("x_raise_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [157699 159622])
            ("x_lower_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [159646 159858])
            ("w32_frame_raise_lower" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("raise_flag" variable (:type "int") nil nil))                  
                :type "void")
                nil [159860 160061])
            ("x_make_frame_visible" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [160427 163485])
            ("x_make_frame_invisible" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [163598 164287])
            ("x_iconify_frame" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [164342 164851])
            ("x_free_frame_resources" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [164892 166570])
            ("x_destroy_window" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [166611 166788])
            ("x_wm_set_size_hint" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("flags" variable (:type "long") nil nil)
                    ("user_position" variable (:type "int") nil nil))                  
                :type "void")
                nil [167091 167578])
            ("x_wm_set_icon_position" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("icon_y" variable (:type "int") nil nil)
                    ("icon_x" variable (:type "int") nil nil))                  
                :type "void")
                nil [167608 167967])
            ("w32_initialized" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [168141 168172])
            ("w32_initialize_display_info" function
               (:arguments 
                  ( ("display_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [168174 169483])
            ("w32_make_rdb" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("xrm_option" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [169837 170589])
            ("x_flush" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [170605 170622]))                  
                :type "void")
                nil [170591 170646])
            ("w32_frame_parm_handlers" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type ("frame_parm_handler" type (:type "class") nil nil))
                nil [170649 170701])
            ("w32_redisplay_interface" variable
               (:typemodifiers ("static")
                :default-value "{
  w32_frame_parm_handlers,
  x_produce_glyphs,
  x_write_glyphs,
  x_insert_glyphs,
  x_clear_end_of_line,
  x_scroll_run,
  x_after_update_window_line,
  x_update_window_begin,
  x_update_window_end,
  x_cursor_to,
  x_flush,
  0,  /* flush_display_optional */
  x_clear_window_mouse_face,
  x_get_glyph_overhangs,
  x_fix_overlapping_area,
  w32_draw_fringe_bitmap,
  w32_define_fringe_bitmap,
  w32_destroy_fringe_bitmap,
  w32_compute_glyph_string_overhangs,
  x_draw_glyph_string,
  w32_define_frame_cursor,
  w32_clear_frame_area,
  w32_draw_window_cursor,
  w32_draw_vertical_window_border,
  w32_shift_glyphs_for_insert
}"
                :type ("redisplay_interface" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [170703 171395])
            ("x_delete_terminal" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("term" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [171428 171450]))                  
                :type "void")
                nil [171397 171451])
            ("w32_create_terminal" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [171499 171532]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [171453 174117])
            ("x_delete_terminal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [174150 174176]))                  
                :type "void")
                nil [174119 174480])
            ("w32_term_init" function
               (:pointer 1
                :arguments 
                  ( ("display_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("xrm_option" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("resource_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("w32_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [174482 176567])
            ("x_delete_display" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("w32_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [176643 177689])
            ("w32_msg_worker" function
               (:prototype-flag t
                :arguments 
                  ( ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [177748 177759]))                  
                :type ("WINAPI" type (:type "class") nil nil))
                nil [177725 177760])
            ("w32_initialize" function
               (:typemodifiers ("static")
                :type "void")
                nil [177762 181143])
            ("syms_of_w32term" function (:type "void") nil [181145 184450]))          
    :file "w32term.c"
    :pointmax 184537
    :fsize 184536
    :lastmodtime '(19383 49283)
    :unmatched-syntax '((symbol 177719 . 177724) (symbol "__inline__" 34270 . 34276) (STATIC 34263 . 34269) (symbol "__inline__" 32273 . 32279) (STATIC 32266 . 32272) (symbol "__inline__" 31244 . 31250) (STATIC 31237 . 31243) (symbol "__inline__" 30987 . 30993) (STATIC 30980 . 30986) (punctuation 3834 . 3835))
    :lexical-table 
        '(("GET_WHEEL_DELTA_WPARAM" (spp-arg-list ("wparam") 2070 . 2078) . ((semantic-list "((short)HIWORD (wparam))" 2079 . 2103)))
          ("x_any_window_to_frame" . ((symbol "x_window_to_frame" 2801 . 2818)))
          ("LWA_ALPHA" . ((number "0x02" 3873 . 3877)))
          ("WS_EX_LAYERED" . ((number "0x80000" 4042 . 4049)))
          ("HIGHLIGHT_COLOR_DARK_BOOST_LIMIT" . ((number "187" 41051 . 41054)))
          ("OPAQUE_FRAME" . ((number "255" 11878 . 11881)))
          ("x_top_window_to_frame" . ((symbol "x_window_to_frame" 2849 . 2866)))
          )

    )
   (semanticdb-table "indent.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [864 883])
            ("stdio.h" include (:system-flag t) nil [884 902])
            ("setjmp.h" include (:system-flag t) nil [903 922])
            ("lisp.h" include nil nil [924 941])
            ("buffer.h" include nil nil [942 961])
            ("character.h" include nil nil [962 984])
            ("category.h" include nil nil [985 1006])
            ("composite.h" include nil nil [1007 1029])
            ("indent.h" include nil nil [1030 1049])
            ("keyboard.h" include nil nil [1050 1071])
            ("frame.h" include nil nil [1072 1090])
            ("window.h" include nil nil [1091 1110])
            ("termchar.h" include nil nil [1111 1132])
            ("termopts.h" include nil nil [1133 1154])
            ("disptab.h" include nil nil [1155 1175])
            ("intervals.h" include nil nil [1176 1198])
            ("dispextern.h" include nil nil [1199 1222])
            ("region-cache.h" include nil nil [1223 1248])
            ("indent_tabs_mode" variable
               (:typemodifiers ("static")
                :type "int")
                nil [1340 1368])
            ("CR" variable (:constant-flag t) nil [1378 1380])
            ("last_known_column" variable
               (:typemodifiers ("static")
                :type "double")
                nil [1607 1639])
            ("last_known_column_point" variable (:type "int") nil [1696 1730])
            ("last_known_column_modified" variable
               (:typemodifiers ("static")
                :type "int")
                nil [1788 1826])
            ("current_column_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "double")
                nil [1828 1871])
            ("position_indentation" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "double")
                nil [1872 1918])
            ("current_column_bol_cache" variable
               (:typemodifiers ("static")
                :type "int")
                nil [1999 2041])
            ("buffer_display_table" function
               (:pointer 1
                :type ("Lisp_Char_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2104 2395])
            ("character_width" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type "int") nil nil)
                    ("dp" variable
                       (:pointer 1
                        :type ("Lisp_Char_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [2502 3402])
            ("disptab_matches_widthtab" function
               (:arguments 
                  ( ("disptab" variable
                       (:pointer 1
                        :type ("Lisp_Char_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("widthtab" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [3585 3903])
            ("recompute_width_table" function
               (:arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("disptab" variable
                       (:pointer 1
                        :type ("Lisp_Char_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [3975 4418])
            ("width_run_cache_on_off" function
               (:typemodifiers ("static")
                :type "void")
                nil [4555 5322])
            ("skip_invisible" function
               (:arguments 
                  ( ("pos" variable (:type "int") nil nil)
                    ("next_boundary_p" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("to" variable (:type "int") nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [6255 8686])
            ("MULTIBYTE_BYTES_WIDTH" variable (:constant-flag t) nil [8894 8915])
            ("DEFUN_ARGS_" variable (:type ("Scurrent_column" type (:type "class") nil nil)) nil [9421 10219])
            ("doc" variable
               (:default-value "DEFUN (\"current-column\", Fcurrent_column, Scurrent_column, 0, 0, 0,
       doc: /* Return the horizontal position of point.  Beginning of line is column 0.
This is calculated by adding together the widths of all the displayed
representations of the character between the start of the previous line
and point (eg. control characters will have a width of 2 or 4, tabs
will have a variable width).
Ignores finite width of frame, which means that this function may return
values greater than (frame-width).
Whether the line is visible (if `selective-display' is t) has no effect;
however, ^M is treated as end of line when `selective-display' is t.
Text that has an invisible property is considered as having width 0, unless
`buffer-invisibility-spec' specifies that it is replaced by an ellipsis.  */)"
                :type "int")
                nil [9421 10219])
            ("Scurrent_column" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9421 10324])
            ("invalidate_current_column" function (:type "void") nil [10388 10456])
            ("current_column" function (:type "double") nil [10458 13825])
            ("QCalign_to" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [13828 13875])
            ("QCwidth" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [13828 13875])
            ("Qspace" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [13828 13875])
            ("check_display_width" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [14158 14172])
                    ("col" variable (:type "int") (reparse-symbol arg-sub-list) [14173 14187])
                    ("endpos" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [14188 14206]))                  
                :type "int")
                nil [14126 15099])
            ("scan_for_column" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("endpos" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [15487 15505])
                    ("goalcol" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [15506 15525])
                    ("prevcol" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [15526 15545]))                  
                :type "void")
                nil [15458 20430])
            ("current_column_1" function
               (:typemodifiers ("static")
                :type "double")
                nil [20630 20788])
            ("string_display_width" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("beg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "double")
                nil [21003 22527])
            ("DEFUN_ARGS_" variable (:type ("Sindent_to" type (:type "class") nil nil)) nil [22547 22864])
            ("doc" variable
               (:default-value "DEFUN (\"indent-to\", Findent_to, Sindent_to, 1, 2, \"NIndent to column: \",
       doc: /* Indent from point with tabs and spaces until COLUMN is reached.
Optional second argument MINIMUM says always do at least MINIMUM spaces
even if that goes past COLUMN; by default, MINIMUM is zero.

The return value is COLUMN.  */)"
                :type "int")
                nil [22547 22864])
            ("Sindent_to" function
               (:arguments 
                  ( ("minimum" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("column" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [22547 23858])
            ("position_indentation" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "double")
                nil [23862 23908])
            ("DEFUN_ARGS_" variable (:type ("Scurrent_indentation" type (:type "class") nil nil)) nil [23910 24146])
            ("doc" variable
               (:default-value "DEFUN (\"current-indentation\", Fcurrent_indentation, Scurrent_indentation,
       0, 0, 0,
       doc: /* Return the indentation of the current line.
This is the horizontal position of the character
following any initial whitespace.  */)"
                :type "int")
                nil [23910 24146])
            ("Scurrent_indentation" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [23910 24396])
            ("position_indentation" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pos_byte" variable (:type "int") nil nil))                  
                :type "double")
                nil [24398 26789])
            ("indented_beyond_p" function
               (:arguments 
                  ( ("pos_byte" variable (:type "int") nil nil)
                    ("pos" variable (:type "int") nil nil)
                    ("column" variable (:type "double") nil nil))                  
                :type "int")
                nil [26954 27397])
            ("DEFUN_ARGS_" variable (:type ("Smove_to_column" type (:type "class") nil nil)) nil [27400 28257])
            ("doc" variable
               (:default-value "DEFUN (\"move-to-column\", Fmove_to_column, Smove_to_column, 1, 2, \"p\",
       doc: /* Move point to column COLUMN in the current line.
Interactively, COLUMN is the value of prefix numeric argument.
The column of a character is calculated by adding together the widths
as displayed of the previous characters in the line.
This function ignores line-continuation;
there is no upper limit on the column number a character can have
and horizontal scrolling has no effect.

If specified column is within a character, point goes after that character.
If it's past end of line, point goes to end of line.

Optional second argument FORCE non-nil means if COLUMN is in the
middle of a tab character, change it to spaces.
In addition, if FORCE is t, and the line is too short to reach
COLUMN, add spaces/tabs to get there.

The return value is the current column.  */)"
                :type "int")
                nil [27400 28257])
            ("Smove_to_column" function
               (:arguments 
                  ( ("force" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("column" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27400 29637])
            ("val_compute_motion" variable (:type ("position" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [29716 29751])
            ("compute_motion" function
               (:pointer 1
                :arguments 
                  ( ("tohpos" variable (:type "int") nil nil)
                    ("tovpos" variable (:type "int") nil nil)
                    ("to" variable (:type "int") nil nil)
                    ("fromhpos" variable (:type "int") nil nil)
                    ("fromvpos" variable (:type "int") nil nil)
                    ("from" variable (:type "int") nil nil)
                    ("did_motion" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("tab_offset" variable (:type "int") nil nil)
                    ("hscroll" variable (:type "int") nil nil)
                    ("win" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("position" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [32665 49977])
            ("DEFUN_ARGS_" variable (:type ("Scompute_motion" type (:type "class") nil nil)) nil [49980 52014])
            ("doc" variable
               (:default-value "DEFUN (\"compute-motion\", Fcompute_motion, Scompute_motion, 7, 7, 0,
       doc: /* Scan through the current buffer, calculating screen position.
Scan the current buffer forward from offset FROM,
assuming it is at position FROMPOS--a cons of the form (HPOS . VPOS)--
to position TO or position TOPOS--another cons of the form (HPOS . VPOS)--
and return the ending buffer position and screen location.

If TOPOS is nil, the actual width and height of the window's
text area are used.

There are three additional arguments:

WIDTH is the number of columns available to display text;
this affects handling of continuation lines.  A value of nil
corresponds to the actual number of available text columns.

OFFSETS is either nil or a cons cell (HSCROLL . TAB-OFFSET).
HSCROLL is the number of columns not being displayed at the left
margin; this is usually taken from a window's hscroll member.
TAB-OFFSET is the number of columns of the first tab that aren't
being displayed, perhaps because the line was continued within it.
If OFFSETS is nil, HSCROLL and TAB-OFFSET are assumed to be zero.

WINDOW is the window to operate on.  It is used to choose the display table;
if it is showing the current buffer, it is used also for
deciding which overlay properties apply.
Note that `compute-motion' always operates on the current buffer.

The value is a list of five elements:
  (POS HPOS VPOS PREVHPOS CONTIN)
POS is the buffer position where the scan stopped.
VPOS is the vertical position where the scan stopped.
HPOS is the horizontal position where the scan stopped.

PREVHPOS is the horizontal position one character back from POS.
CONTIN is t if a line was continued after (or within) the previous character.

For example, to find the buffer position of column COL of line LINE
of a certain window, pass the window's starting location as FROM
and the window's upper-left coordinates as FROMPOS.
Pass the buffer's (point-max) as TO, to limit the scan to the end of the
visible section of the buffer, and pass LINE and COL as TOPOS.  */)"
                :type "int")
                nil [49980 52014])
            ("Scompute_motion" function
               (:arguments 
                  ( ("topos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("to" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frompos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("from" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("offsets" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [49980 53923])
            ("val_vmotion" variable (:type ("position" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [53962 53990])
            ("vmotion" function
               (:pointer 1
                :arguments 
                  ( ("vtarget" variable (:type "int") nil nil)
                    ("from" variable (:type "int") nil nil)
                    ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("position" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [53992 58317])
            ("DEFUN_ARGS_" variable (:type ("Svertical_motion" type (:type "class") nil nil)) nil [58319 59517])
            ("doc" variable
               (:default-value "DEFUN (\"vertical-motion\", Fvertical_motion, Svertical_motion, 1, 2, 0,
       doc: /* Move point to start of the screen line LINES lines down.
If LINES is negative, this means moving up.

This function is an ordinary cursor motion function
which calculates the new position based on how text would be displayed.
The new position may be the start of a line,
or just the start of a continuation line.
The function returns number of screen lines moved over;
that usually equals LINES, but may be closer to zero
if beginning or end of buffer was reached.

The optional second argument WINDOW specifies the window to use for
parameters such as width, horizontal scrolling, and so on.
The default is to use the selected window's parameters.

LINES can optionally take the form (COLS . LINES), in which case
the motion will not stop at the start of a screen line but on
its column COLS (if such exists on that line, that is).

`vertical-motion' always uses the current buffer,
regardless of which buffer is displayed in WINDOW.
This is consistent with other cursor motion functions
and makes it possible to use `vertical-motion' in any buffer,
whether or not it is currently displayed in some window.  */)"
                :type "int")
                nil [58319 59517])
            ("Svertical_motion" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("lines" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [58319 63934])
            ("syms_of_indent" function (:type "void") nil [63970 64327]))          
    :file "indent.c"
    :pointmax 64414
    :fsize 64413
    :lastmodtime '(19383 49279)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 58319 . 59517) (symbol "__attribute__" 58319 . 59517) (symbol "Lisp_Subr" 58319 . 59517) (symbol "Lisp_Object" 58319 . 59517) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 49980 . 52014) (symbol "__attribute__" 49980 . 52014) (symbol "Lisp_Subr" 49980 . 52014) (symbol "Lisp_Object" 49980 . 52014) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 27400 . 28257) (symbol "__attribute__" 27400 . 28257) (symbol "Lisp_Subr" 27400 . 28257) (symbol "Lisp_Object" 27400 . 28257) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 23910 . 24146) (symbol "__attribute__" 23910 . 24146) (symbol "Lisp_Subr" 23910 . 24146) (symbol "Lisp_Object" 23910 . 24146) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 22547 . 22864) (symbol "__attribute__" 22547 . 22864) (symbol "Lisp_Subr" 22547 . 22864) (symbol "Lisp_Object" 22547 . 22864) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 9421 . 10219) (symbol "__attribute__" 9421 . 10219) (symbol "Lisp_Subr" 9421 . 10219) (symbol "Lisp_Object" 9421 . 10219))
    :lexical-table 
        '(("MULTIBYTE_BYTES_WIDTH" (spp-arg-list ("p" "dp") 8915 . 8922) . 
              ((DO "do" 8931 . 8933) (semantic-list "{									\\
    int c;								\\
    									\\
    wide_column = 0;							\\
    c = STRING_CHAR_AND_LENGTH (p, bytes);				\\
    if (BYTES_BY_CHAR_HEAD (*p) != bytes)				\\
      width = bytes * 4;						\\
    else								\\
      {									\\
	if (dp != 0 && VECTORP (DISP_CHAR_VECTOR (dp, c)))		\\
	  width = XVECTOR (DISP_CHAR_VECTOR (dp, c))->size;		\\
	else								\\
	  width = CHAR_WIDTH (c);					\\
	if (width > 1)							\\
	  wide_column = width;						\\
      }									\\
  }" 8934 . 9408) (WHILE "while" 9409 . 9414) (semantic-list "(0)" 9415 . 9418)))
          ("CR" . ((number "015" 1381 . 1384)))
          )

    )
   (semanticdb-table "term.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [961 980])
            ("stdio.h" include (:system-flag t) nil [981 999])
            ("ctype.h" include (:system-flag t) nil [1000 1018])
            ("string.h" include (:system-flag t) nil [1019 1038])
            ("errno.h" include (:system-flag t) nil [1039 1057])
            ("sys/file.h" include (:system-flag t) nil [1058 1079])
            ("unistd.h" include (:system-flag t) nil [1102 1121])
            ("termios.h" include (:system-flag t) nil [1149 1169])
            ("signal.h" include (:system-flag t) nil [1200 1219])
            ("stdarg.h" include (:system-flag t) nil [1220 1239])
            ("setjmp.h" include (:system-flag t) nil [1240 1259])
            ("lisp.h" include nil nil [1261 1278])
            ("termchar.h" include nil nil [1279 1300])
            ("termopts.h" include nil nil [1301 1322])
            ("buffer.h" include nil nil [1323 1342])
            ("character.h" include nil nil [1343 1365])
            ("charset.h" include nil nil [1366 1386])
            ("coding.h" include nil nil [1387 1406])
            ("composite.h" include nil nil [1407 1429])
            ("keyboard.h" include nil nil [1430 1451])
            ("frame.h" include nil nil [1452 1470])
            ("disptab.h" include nil nil [1471 1491])
            ("termhooks.h" include nil nil [1492 1514])
            ("dispextern.h" include nil nil [1515 1538])
            ("window.h" include nil nil [1539 1558])
            ("keymap.h" include nil nil [1559 1578])
            ("blockinput.h" include nil nil [1579 1602])
            ("syssignal.h" include nil nil [1603 1625])
            ("systty.h" include nil nil [1626 1645])
            ("intervals.h" include nil nil [1646 1668])
            ("termcap.h" include (:system-flag t) nil [1914 1934])
            ("cm.h" include nil nil [2128 2143])
            ("xterm.h" include nil nil [2166 2184])
            ("O_RDWR" variable (:constant-flag t) nil [2216 2222])
            ("O_NOCTTY" variable (:constant-flag t) nil [2258 2266])
            ("DEV_TTY" variable (:constant-flag t) nil [2382 2389])
            ("tty_set_scroll_region" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("start" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("stop" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2410 2488])
            ("turn_on_face" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("face_id" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2489 2549])
            ("turn_off_face" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("face_id" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2550 2611])
            ("tty_show_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2612 2673])
            ("tty_hide_cursor" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2674 2735])
            ("tty_background_highlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2736 2809])
            ("clear_tty_hooks" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2810 2871])
            ("set_tty_hooks" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2872 2931])
            ("dissociate_if_controlling_tty" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2932 2988])
            ("delete_tty" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2989 3037])
            ("OUTPUT" variable (:constant-flag t) nil [3047 3053])
            ("OUTPUT1" variable (:constant-flag t) nil [3335 3342])
            ("OUTPUTL" variable (:constant-flag t) nil [3393 3400])
            ("OUTPUT_IF" variable (:constant-flag t) nil [3463 3472])
            ("OUTPUT1_IF" variable (:constant-flag t) nil [3996 4006])
            ("visible_cursor" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4149 4175])
            ("QCwidth" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4209 4256])
            ("QCalign_to" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4209 4256])
            ("Qspace" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4209 4256])
            ("Vsuspend_tty_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4306 4341])
            ("Vresume_tty_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4389 4423])
            ("tty_list" variable
               (:pointer 1
                :type ("tty_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [4467 4501])
            ("no_redraw_on_reenter" variable (:type "int") nil [4707 4732])
            ("no_color_bit" type
               (:members 
                  ( ("NC_STANDOUT" variable
                       (:constant-flag t
                        :default-value (4902 4903)
                        :type "int")
                        (reparse-symbol enumsubparts) [4887 4903])
                    ("NC_UNDERLINE" variable
                       (:constant-flag t
                        :default-value (4928 4929)
                        :type "int")
                        (reparse-symbol enumsubparts) [4912 4929])
                    ("NC_REVERSE" variable
                       (:constant-flag t
                        :default-value (4952 4953)
                        :type "int")
                        (reparse-symbol enumsubparts) [4938 4953])
                    ("NC_BLINK" variable
                       (:constant-flag t
                        :default-value (4974 4975)
                        :type "int")
                        (reparse-symbol enumsubparts) [4962 4975])
                    ("NC_DIM" variable
                       (:constant-flag t
                        :default-value (4994 4995)
                        :type "int")
                        (reparse-symbol enumsubparts) [4984 4995])
                    ("NC_BOLD" variable
                       (:constant-flag t
                        :default-value (5015 5016)
                        :type "int")
                        (reparse-symbol enumsubparts) [5004 5016])
                    ("NC_INVIS" variable
                       (:constant-flag t
                        :default-value (5037 5038)
                        :type "int")
                        (reparse-symbol enumsubparts) [5025 5038])
                    ("NC_PROTECT" variable
                       (:constant-flag t
                        :default-value (5061 5062)
                        :type "int")
                        (reparse-symbol enumsubparts) [5047 5062])
                    ("NC_ALT_CHARSET" variable
                       (:constant-flag t
                        :default-value (5088 5089)
                        :type "int")
                        (reparse-symbol enumsubparts) [5071 5089]))                  
                :type "enum")
                nil [4865 5097])
            ("max_frame_cols" variable (:type "int") nil [5185 5204])
            ("max_frame_lines" variable (:type "int") nil [5271 5291])
            ("no_controlling_tty" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5399 5429])
            ("system_uses_terminfo" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5467 5499])
            ("tparam" function
               (:prototype-flag t
                :pointer 1
                :type "char")
                nil [5501 5517])
            ("tgetstr" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [5519 5543])
            ("sys/fcntl.h" include (:system-flag t) nil [5563 5585])
            ("term_clear_mouse_face" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [5587 5624])
            ("term_mouse_highlight" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5659 5675])
                    ("x" variable (:type "int") (reparse-symbol arg-sub-list) [5676 5682])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [5683 5689]))                  
                :type "void")
                nil [5625 5690])
            ("gpm_tty" variable
               (:pointer 1
                :default-value "NULL;"
                :type ("tty_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5759 5799])
            ("mouse_face_beg_col" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6096 6146])
            ("mouse_face_beg_row" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6096 6146])
            ("mouse_face_end_col" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6147 6197])
            ("mouse_face_end_row" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6147 6197])
            ("mouse_face_past_end" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6198 6229])
            ("mouse_face_window" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6230 6267])
            ("mouse_face_face_id" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6268 6298])
            ("pos_y" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6300 6324])
            ("pos_x" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6300 6324])
            ("last_mouse_y" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6325 6363])
            ("last_mouse_x" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6325 6363])
            ("tty_ring_bell" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6445 6461]))                  
                :type "void")
                nil [6418 6711])
            ("tty_set_terminal_modes" function
               (:arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6781 6807]))                  
                :type "void")
                nil [6752 7531])
            ("tty_reset_terminal_modes" function
               (:arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7613 7639]))                  
                :type "void")
                nil [7582 8129])
            ("tty_update_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8222 8238]))                  
                :type "void")
                nil [8194 8429])
            ("tty_set_terminal_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8537 8553])
                    ("size" variable (:type "int") (reparse-symbol arg-sub-list) [8554 8563]))                  
                :type "void")
                nil [8500 8764])
            ("tty_set_scroll_region" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8801 8817])
                    ("start" variable (:type "int") (reparse-symbol arg-sub-list) [8818 8828])
                    ("stop" variable (:type "int") (reparse-symbol arg-sub-list) [8829 8838]))                  
                :type "void")
                nil [8766 9318])
            ("tty_turn_on_insert" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9354 9383]))                  
                :type "void")
                nil [9322 9475])
            ("tty_turn_off_insert" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9503 9532]))                  
                :type "void")
                nil [9477 9627])
            ("tty_turn_off_highlight" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9688 9717]))                  
                :type "void")
                nil [9659 9821])
            ("tty_turn_on_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9858 9887]))                  
                :type "void")
                nil [9823 9988])
            ("tty_toggle_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10024 10053]))                  
                :type "void")
                nil [9990 10157])
            ("tty_hide_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10220 10249]))                  
                :type "void")
                nil [10191 10375])
            ("tty_show_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10446 10475]))                  
                :type "void")
                nil [10417 10668])
            ("tty_background_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10859 10888]))                  
                :type "void")
                nil [10821 10987])
            ("tty_highlight_if_desired" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11102 11131]))                  
                :type "void")
                nil [11064 11230])
            ("tty_cursor_to" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11361 11377])
                    ("vpos" variable (:type "int") (reparse-symbol arg-sub-list) [11378 11387])
                    ("hpos" variable (:type "int") (reparse-symbol arg-sub-list) [11388 11397]))                  
                :type "void")
                nil [11334 11837])
            ("tty_raw_cursor_to" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11939 11955])
                    ("row" variable (:type "int") (reparse-symbol arg-sub-list) [11956 11964])
                    ("col" variable (:type "int") (reparse-symbol arg-sub-list) [11965 11973]))                  
                :type "void")
                nil [11908 12246])
            ("tty_clear_to_end" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12365 12381]))                  
                :type "void")
                nil [12335 12718])
            ("tty_clear_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12787 12803]))                  
                :type "void")
                nil [12758 13064])
            ("tty_clear_end_of_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [13243 13259])
                    ("first_unused_hpos" variable (:type "int") (reparse-symbol arg-sub-list) [13260 13282]))                  
                :type "void")
                nil [13208 14169])
            ("encode_terminal_src" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "unsigned char")
                nil [14251 14293])
            ("encode_terminal_dst" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "unsigned char")
                nil [14294 14336])
            ("encode_terminal_src_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [14382 14418])
            ("encode_terminal_dst_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [14419 14455])
            ("encode_terminal_code" function
               (:pointer 1
                :arguments 
                  ( ("src" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("src_len" variable (:type "int") nil nil)
                    ("coding" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "unsigned char")
                nil [14651 20017])
            ("tty_write_glyphs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20112 20128])
                    ("string" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20129 20150])
                    ("len" variable (:type "int") (reparse-symbol arg-sub-list) [20151 20159]))                  
                :type "void")
                nil [20082 22095])
            ("tty_write_glyphs_with_face" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("string" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type "int") nil nil)
                    ("len" variable (:type "int") nil nil))                  
                :type "void")
                nil [22146 23913])
            ("tty_insert_glyphs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [24015 24031])
                    ("start" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [24032 24052])
                    ("len" variable (:type "int") (reparse-symbol arg-sub-list) [24053 24061]))                  
                :type "void")
                nil [23984 26163])
            ("tty_delete_glyphs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26258 26274])
                    ("n" variable (:type "int") (reparse-symbol arg-sub-list) [26275 26281]))                  
                :type "void")
                nil [26227 26839])
            ("tty_ins_del_lines" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26935 26951])
                    ("vpos" variable (:type "int") (reparse-symbol arg-sub-list) [26952 26961])
                    ("n" variable (:type "int") (reparse-symbol arg-sub-list) [26962 26968]))                  
                :type "void")
                nil [26904 28823])
            ("string_cost" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [28941 28951]))                  
                :type "int")
                nil [28924 29023])
            ("string_cost_one_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [29164 29174]))                  
                :type "int")
                nil [29131 29246])
            ("per_line_cost" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [29354 29364]))                  
                :type "int")
                nil [29335 29495])
            ("char_ins_del_vector" variable
               (:pointer 1
                :type "int")
                nil [29689 29714])
            ("char_ins_del_cost" variable (:constant-flag t) nil [29724 29741])
            ("calculate_ins_del_char_costs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29851 29867]))                  
                :type "void")
                nil [29809 31521])
            ("calculate_costs" function
               (:arguments 
                  ( ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [31545 31565]))                  
                :type "void")
                nil [31523 33882])
            ("fkey_table" type
               (:members 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [33907 33924])
                    ("cap" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [33907 33924]))                  
                :type "struct")
                nil [33885 33927])
            ("keys" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
  {\"kh\", \"home\"},	/* termcap */
  {\"kl\", \"left\"},	/* termcap */
  {\"ku\", \"up\"},		/* termcap */
  {\"kr\", \"right\"},	/* termcap */
  {\"kd\", \"down\"},	/* termcap */
  {\"%8\", \"prior\"},	/* terminfo */
  {\"%5\", \"next\"},	/* terminfo */
  {\"@7\", \"end\"},	/* terminfo */
  {\"@1\", \"begin\"},	/* terminfo */
  {\"*6\", \"select\"},	/* terminfo */
  {\"%9\", \"print\"},	/* terminfo */
  {\"@4\", \"execute\"},	/* terminfo --- actually the `command' key */
  /*
   * \"insert\" --- see below
   */
  {\"&8\", \"undo\"},	/* terminfo */
  {\"%0\", \"redo\"},	/* terminfo */
  {\"%7\", \"menu\"},	/* terminfo --- actually the `options' key */
  {\"@0\", \"find\"},	/* terminfo */
  {\"@2\", \"cancel\"},	/* terminfo */
  {\"%1\", \"help\"},	/* terminfo */
  /*
   * \"break\" goes here, but can't be reliably intercepted with termcap
   */
  {\"&4\", \"reset\"},	/* terminfo --- actually `restart' */
  /*
   * \"system\" and \"user\" --- no termcaps
   */
  {\"kE\", \"clearline\"},	/* terminfo */
  {\"kA\", \"insertline\"},	/* terminfo */
  {\"kL\", \"deleteline\"},	/* terminfo */
  {\"kI\", \"insertchar\"},	/* terminfo */
  {\"kD\", \"deletechar\"},	/* terminfo */
  {\"kB\", \"backtab\"},	/* terminfo */
  /*
   * \"kp_backtab\", \"kp-space\", \"kp-tab\" --- no termcaps
   */
  {\"@8\", \"kp-enter\"},	/* terminfo */
  /*
   * \"kp-f1\", \"kp-f2\", \"kp-f3\" \"kp-f4\",
   * \"kp-multiply\", \"kp-add\", \"kp-separator\",
   * \"kp-subtract\", \"kp-decimal\", \"kp-divide\", \"kp-0\";
   * --- no termcaps for any of these.
   */
  {\"K4\", \"kp-1\"},	/* terminfo */
  /*
   * \"kp-2\" --- no termcap
   */
  {\"K5\", \"kp-3\"},	/* terminfo */
  /*
   * \"kp-4\" --- no termcap
   */
  {\"K2\", \"kp-5\"},	/* terminfo */
  /*
   * \"kp-6\" --- no termcap
   */
  {\"K1\", \"kp-7\"},	/* terminfo */
  /*
   * \"kp-8\" --- no termcap
   */
  {\"K3\", \"kp-9\"},	/* terminfo */
  /*
   * \"kp-equal\" --- no termcap
   */
  {\"k1\", \"f1\"},
  {\"k2\", \"f2\"},
  {\"k3\", \"f3\"},
  {\"k4\", \"f4\"},
  {\"k5\", \"f5\"},
  {\"k6\", \"f6\"},
  {\"k7\", \"f7\"},
  {\"k8\", \"f8\"},
  {\"k9\", \"f9\"},

  {\"&0\", \"S-cancel\"},    /*shifted cancel key*/
  {\"&9\", \"S-begin\"},     /*shifted begin key*/
  {\"*0\", \"S-find\"},      /*shifted find key*/
  {\"*1\", \"S-execute\"},   /*shifted execute? actually shifted command key*/
  {\"*4\", \"S-delete\"},    /*shifted delete-character key*/
  {\"*7\", \"S-end\"},       /*shifted end key*/
  {\"*8\", \"S-clearline\"}, /*shifted clear-to end-of-line key*/
  {\"#1\", \"S-help\"},      /*shifted help key*/
  {\"#2\", \"S-home\"},      /*shifted home key*/
  {\"#3\", \"S-insert\"},    /*shifted insert-character key*/
  {\"#4\", \"S-left\"},      /*shifted left-arrow key*/
  {\"%d\", \"S-menu\"},      /*shifted menu? actually shifted options key*/
  {\"%c\", \"S-next\"},      /*shifted next key*/
  {\"%e\", \"S-prior\"},     /*shifted previous key*/
  {\"%f\", \"S-print\"},     /*shifted print key*/
  {\"%g\", \"S-redo\"},      /*shifted redo key*/
  {\"%i\", \"S-right\"},     /*shifted right-arrow key*/
  {\"!3\", \"S-undo\"}       /*shifted undo key*/
  }"
                :type ("fkey_table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [34274 37176])
            ("term_get_fkeys_address" variable
               (:pointer 2
                :typemodifiers ("static")
                :type "char")
                nil [37178 37215])
            ("term_get_fkeys_kboard" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("KBOARD" type (:type "class") nil nil))
                nil [37216 37253])
            ("term_get_fkeys_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [37254 37293])
            ("term_get_fkeys" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("address" variable
                       (:pointer 2
                        :type "char")
                        nil nil)
                    ("kboard" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [37513 38272])
            ("term_get_fkeys_1" function
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [38274 41993])
            ("append_glyph" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [42479 42523])
            ("produce_stretch_glyph" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [42524 42577])
            ("append_composite_glyph" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [42578 42632])
            ("produce_composite_glyph" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [42633 42688])
            ("append_glyph" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [42992 43626])
            ("produce_glyphs" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [44557 47232])
            ("produce_stretch_glyph" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [47738 49632])
            ("append_composite_glyph" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [49842 50681])
            ("produce_composite_glyph" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [50911 51399])
            ("produce_special_glyphs" function
               (:arguments 
                  ( ("it" variable
                       (:pointer 1
                        :type ("it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("what" variable (:type ("display_element_type" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [51710 52956])
            ("MAY_USE_WITH_COLORS_P" variable (:constant-flag t) nil [53398 53419])
            ("turn_on_face" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type "int") nil nil))                  
                :type "void")
                nil [53666 56227])
            ("turn_off_face" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("face_id" variable (:type "int") nil nil))                  
                :type "void")
                nil [56291 57742])
            ("tty_capable_p" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("caps" variable (:type "unsigned int") nil nil)
                    ("bg" variable (:type "unsigned long") nil nil)
                    ("fg" variable (:type "unsigned long") nil nil))                  
                :type "int")
                nil [57908 58712])
            ("DEFUN_ARGS_" variable (:type ("Stty_display_color_p" type (:type "class") nil nil)) nil [58784 59134])
            ("doc" variable
               (:default-value "DEFUN (\"tty-display-color-p\", Ftty_display_color_p, Stty_display_color_p,
       0, 1, 0,
       doc: /* Return non-nil if the tty device TERMINAL can display colors.

TERMINAL can be a terminal object, a frame, or nil (meaning the
selected frame's terminal).  This function always returns nil if
TERMINAL does not refer to a text-only terminal.  */)"
                :type "int")
                nil [58784 59134])
            ("Stty_display_color_p" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [58784 59333])
            ("DEFUN_ARGS_" variable (:type ("Stty_display_color_cells" type (:type "class") nil nil)) nil [59381 59745])
            ("doc" variable
               (:default-value "DEFUN (\"tty-display-color-cells\", Ftty_display_color_cells,
       Stty_display_color_cells, 0, 1, 0,
       doc: /* Return the number of colors supported by the tty device TERMINAL.

TERMINAL can be a terminal object, a frame, or nil (meaning the
selected frame's terminal).  This function always returns 0 if
TERMINAL does not refer to a text-only terminal.  */)"
                :type "int")
                nil [59381 59745])
            ("Stty_display_color_cells" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [59381 59953])
            ("default_max_colors" variable
               (:typemodifiers ("static")
                :type "int")
                nil [60164 60194])
            ("default_max_pairs" variable
               (:typemodifiers ("static")
                :type "int")
                nil [60195 60224])
            ("default_no_color_video" variable
               (:typemodifiers ("static")
                :type "int")
                nil [60225 60259])
            ("default_orig_pair" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [60260 60291])
            ("default_set_foreground" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [60292 60328])
            ("default_set_background" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [60329 60365])
            ("tty_default_color_capabilities" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [60494 60523])
                    ("save" variable (:type "int") (reparse-symbol arg-sub-list) [60524 60533]))                  
                :type "void")
                nil [60450 61438])
            ("tty_setup_colors" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [61737 61766])
                    ("mode" variable (:type "int") (reparse-symbol arg-sub-list) [61767 61776]))                  
                :type "void")
                nil [61707 62556])
            ("set_tty_color_mode" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [62558 63555])
            ("get_tty_terminal" function
               (:pointer 1
                :arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63678 63699])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [63700 63709]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [63642 63982])
            ("get_named_tty" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [64179 64543])
            ("DEFUN_ARGS_" variable (:type ("Stty_type" type (:type "class") nil nil)) nil [64547 64811])
            ("doc" variable
               (:default-value "DEFUN (\"tty-type\", Ftty_type, Stty_type, 0, 1, 0,
       doc: /* Return the type of the tty device that TERMINAL uses.
Returns nil if TERMINAL is not on a tty device.

TERMINAL can be a terminal object, a frame, or nil (meaning the
selected frame's terminal).  */)"
                :type "int")
                nil [64547 64811])
            ("Stty_type" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [64547 65102])
            ("DEFUN_ARGS_" variable (:type ("Scontrolling_tty_p" type (:type "class") nil nil)) nil [65104 65435])
            ("doc" variable
               (:default-value "DEFUN (\"controlling-tty-p\", Fcontrolling_tty_p, Scontrolling_tty_p, 0, 1, 0,
       doc: /* Return non-nil if TERMINAL is the controlling tty of the Emacs process.

TERMINAL can be a terminal object, a frame, or nil (meaning the
selected frame's terminal).  This function always returns nil if
TERMINAL is not on a tty device.  */)"
                :type "int")
                nil [65104 65435])
            ("Scontrolling_tty_p" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65104 65697])
            ("DEFUN_ARGS_" variable (:type ("Stty_no_underline" type (:type "class") nil nil)) nil [65699 66220])
            ("doc" variable
               (:default-value "DEFUN (\"tty-no-underline\", Ftty_no_underline, Stty_no_underline, 0, 1, 0,
       doc: /* Declare that the tty used by TERMINAL does not handle underlining.
This is used to override the terminfo data, for certain terminals that
do not really do underlining, but say that they do.  This function has
no effect if used on a non-tty terminal.

TERMINAL can be a terminal object, a frame or nil (meaning the
selected frame's terminal).  This function always returns nil if
TERMINAL does not refer to a text-only terminal.  */)"
                :type "int")
                nil [65699 66220])
            ("Stty_no_underline" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65699 66418])
            ("DEFUN_ARGS_" variable (:type ("Ssuspend_tty" type (:type "class") nil nil)) nil [66423 67155])
            ("doc" variable
               (:default-value "DEFUN (\"suspend-tty\", Fsuspend_tty, Ssuspend_tty, 0, 1, 0,
       doc: /* Suspend the terminal device TTY.

The device is restored to its default state, and Emacs ceases all
access to the tty device.  Frames that use the device are not deleted,
but input is not read from them and if they change, their display is
not updated.

TTY may be a terminal object, a frame, or nil for the terminal device
of the currently selected frame.

This function runs `suspend-tty-functions' after suspending the
device.  The functions are run with one arg, the id of the suspended
terminal device.

`suspend-tty' does nothing if it is called on a device that is already
suspended.

A suspended tty may be resumed by calling `resume-tty' on it.  */)"
                :type "int")
                nil [66423 67155])
            ("Ssuspend_tty" function
               (:arguments 
                  ( ("tty" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [66423 68274])
            ("DEFUN_ARGS_" variable (:type ("Sresume_tty" type (:type "class") nil nil)) nil [68276 68904])
            ("doc" variable
               (:default-value "DEFUN (\"resume-tty\", Fresume_tty, Sresume_tty, 0, 1, 0,
       doc: /* Resume the previously suspended terminal device TTY.
The terminal is opened and reinitialized.  Frames that are on the
suspended terminal are revived.

It is an error to resume a terminal while another terminal is active
on the same device.

This function runs `resume-tty-functions' after resuming the terminal.
The functions are run with one arg, the id of the resumed terminal
device.

`resume-tty' does nothing if it is called on a device that is not
suspended.

TTY may be a terminal object, a frame, or nil (meaning the selected
frame's terminal). */)"
                :type "int")
                nil [68276 68904])
            ("Sresume_tty" function
               (:arguments 
                  ( ("tty" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [68276 70730])
            ("term_mouse_moveto" function
               (:arguments 
                  ( ("x" variable (:type "int") (reparse-symbol arg-sub-list) [70938 70944])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [70945 70951]))                  
                :type "void")
                nil [70914 71179])
            ("term_show_mouse_face" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("draw" variable (:type ("draw_glyphs_face" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [71215 71242]))                  
                :type "void")
                nil [71181 73478])
            ("term_clear_mouse_face" function
               (:typemodifiers ("static")
                :type "void")
                nil [73480 73723])
            ("fast_find_position" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [74051 74068])
                    ("pos" variable (:type "int") (reparse-symbol arg-sub-list) [74069 74077])
                    ("hpos" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [74078 74088])
                    ("vpos" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [74089 74099]))                  
                :type "int")
                nil [74020 75615])
            ("term_mouse_highlight" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [75651 75667])
                    ("x" variable (:type "int") (reparse-symbol arg-sub-list) [75668 75674])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [75675 75681]))                  
                :type "void")
                nil [75617 81996])
            ("term_mouse_movement" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82030 82046])
                    ("event" variable
                       (:pointer 1
                        :type ("Gpm_Event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [82047 82064]))                  
                :type "int")
                nil [81998 82439])
            ("term_mouse_position" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fp" variable
                       (:pointer 1
                        :type ("FRAME_PTR" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [82916 82930])
                    ("insist" variable (:type "int") (reparse-symbol arg-sub-list) [82931 82942])
                    ("bar_window" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [82943 82967])
                    ("part" variable
                       (:pointer 1
                        :type ("scroll_bar_part" type (:type "enum") nil nil))
                        (reparse-symbol arg-sub-list) [82975 83002])
                    ("x" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [83003 83018])
                    ("y" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [83026 83041])
                    ("time" variable
                       (:pointer 1
                        :type "unsigned long")
                        (reparse-symbol arg-sub-list) [83042 83062]))                  
                :type "void")
                nil [82883 83318])
            ("term_mouse_click" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [83513 83540])
                    ("event" variable
                       (:pointer 1
                        :type ("Gpm_Event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [83541 83558])
                    ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [83563 83579]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83476 84916])
            ("handle_one_term_event" function
               (:arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [84945 84974])
                    ("event" variable
                       (:pointer 1
                        :type ("Gpm_Event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [84975 84992])
                    ("hold_quit" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [84993 85023]))                  
                :type "int")
                nil [84918 86196])
            ("DEFUN_ARGS_" variable (:type ("Sgpm_mouse_start" type (:type "class") nil nil)) nil [86198 86376])
            ("doc" variable
               (:default-value "DEFUN (\"gpm-mouse-start\", Fgpm_mouse_start, Sgpm_mouse_start,
       0, 0, 0,
       doc: /* Open a connection to Gpm.
Gpm-mouse can only be activated for one tty at a time.  */)"
                :type "int")
                nil [86198 86376])
            ("Sgpm_mouse_start" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [86198 87390])
            ("close_gpm" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [87408 87415]))                  
                :type "void")
                nil [87392 87538])
            ("DEFUN_ARGS_" variable (:type ("Sgpm_mouse_stop" type (:type "class") nil nil)) nil [87540 87661])
            ("doc" variable
               (:default-value "DEFUN (\"gpm-mouse-stop\", Fgpm_mouse_stop, Sgpm_mouse_stop,
       0, 0, 0,
       doc: /* Close a connection to Gpm.  */)"
                :type "int")
                nil [87540 87661])
            ("Sgpm_mouse_stop" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [87540 87983])
            ("create_tty_output" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [88326 88342]))                  
                :type "void")
                nil [88302 88586])
            ("tty_free_frame_resources" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [88690 88706]))                  
                :type "void")
                nil [88652 88839])
            ("clear_tty_hooks" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [89164 89190]))                  
                :type "void")
                nil [89135 90342])
            ("set_tty_hooks" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [90442 90468]))                  
                :type "void")
                nil [90415 92007])
            ("dissociate_if_controlling_tty" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [92114 92121]))                  
                :type "void")
                nil [92071 92870])
            ("maybe_fatal" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [92872 92898])
            ("init_tty" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [93284 93295])
                    ("terminal_type" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [93296 93316])
                    ("must_succeed" variable (:type "int") (reparse-symbol arg-sub-list) [93317 93334]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [93256 111642])
            ("maybe_fatal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("must_succeed" variable (:type "int") nil nil)
                    ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("arg2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("arg1" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("str2" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("str1" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [111808 112121])
            ("fatal" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [112135 112151])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [112152 112156]))                  
                :type "void")
                nil [112123 112391])
            ("delete_tty" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [112484 112510]))                  
                :type "void")
                nil [112460 113809])
            ("mark_ttys" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [113926 113931]))                  
                :type "void")
                nil [113910 114047])
            ("syms_of_term" function (:type "void") nil [114052 115750]))          
    :file "term.c"
    :pointmax 115839
    :fsize 115838
    :lastmodtime '(19383 49276)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 87540 . 87661) (symbol "__attribute__" 87540 . 87661) (symbol "Lisp_Subr" 87540 . 87661) (symbol "Lisp_Object" 87540 . 87661) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 86198 . 86376) (symbol "__attribute__" 86198 . 86376) (symbol "Lisp_Subr" 86198 . 86376) (symbol "Lisp_Object" 86198 . 86376) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 68276 . 68904) (symbol "__attribute__" 68276 . 68904) (symbol "Lisp_Subr" 68276 . 68904) (symbol "Lisp_Object" 68276 . 68904) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 66423 . 67155) (symbol "__attribute__" 66423 . 67155) (symbol "Lisp_Subr" 66423 . 67155) (symbol "Lisp_Object" 66423 . 67155) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 65699 . 66220) (symbol "__attribute__" 65699 . 66220) (symbol "Lisp_Subr" 65699 . 66220) (symbol "Lisp_Object" 65699 . 66220) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 65104 . 65435) (symbol "__attribute__" 65104 . 65435) (symbol "Lisp_Subr" 65104 . 65435) (symbol "Lisp_Object" 65104 . 65435) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 64547 . 64811) (symbol "__attribute__" 64547 . 64811) (symbol "Lisp_Subr" 64547 . 64811) (symbol "Lisp_Object" 64547 . 64811) (THROW 63704 . 63709) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 59381 . 59745) (symbol "__attribute__" 59381 . 59745) (symbol "Lisp_Subr" 59381 . 59745) (symbol "Lisp_Object" 59381 . 59745) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 58784 . 59134) (symbol "__attribute__" 58784 . 59134) (symbol "Lisp_Subr" 58784 . 59134) (symbol "Lisp_Object" 58784 . 59134) (number 5093 . 5094) (punctuation 5091 . 5092) (punctuation 5090 . 5091) (number 5066 . 5067) (punctuation 5064 . 5065) (punctuation 5063 . 5064) (number 5042 . 5043) (punctuation 5040 . 5041) (punctuation 5039 . 5040) (number 5020 . 5021) (punctuation 5018 . 5019) (punctuation 5017 . 5018) (number 4999 . 5000) (punctuation 4997 . 4998) (punctuation 4996 . 4997) (number 4979 . 4980) (punctuation 4977 . 4978) (punctuation 4976 . 4977) (number 4957 . 4958) (punctuation 4955 . 4956) (punctuation 4954 . 4955) (number 4933 . 4934) (punctuation 4931 . 4932) (punctuation 4930 . 4931) (number 4907 . 4908) (punctuation 4905 . 4906) (punctuation 4904 . 4905))
    :lexical-table 
        '(("O_NOCTTY" . ((number "0" 2267 . 2268)))
          ("O_RDWR" . ((number "2" 2223 . 2224)))
          ("OUTPUT" (spp-arg-list ("tty" "a") 3053 . 3061) . ((symbol "emacs_tputs" 3107 . 3118) (semantic-list "((tty), a,                                        \\
               (int) (FRAME_LINES (XFRAME (selected_frame))     \\
                      - curY (tty)),                            \\
               cmputc)" 3119 . 3325)))
          ("OUTPUT1_IF" (spp-arg-list ("tty" "a") 4006 . 4014) . 
              ((DO "do" 4015 . 4017) (semantic-list "{ if (a) emacs_tputs ((tty), a, 1, cmputc); }" 4018 . 4063) (WHILE "while" 4064 . 4069) (semantic-list "(0)" 4070 . 4073)))
          ("OUTPUT1" (spp-arg-list ("tty" "a") 3342 . 3350) . ((symbol "emacs_tputs" 3351 . 3362) (semantic-list "((tty), a, 1, cmputc)" 3363 . 3384)))
          ("DEV_TTY" . ((string "\"/dev/tty\"" 2391 . 2401)))
          ("OUTPUTL" (spp-arg-list ("tty" "a" "lines") 3400 . 3415) . ((symbol "emacs_tputs" 3416 . 3427) (semantic-list "((tty), a, lines, cmputc)" 3428 . 3453)))
          ("OUTPUT_IF" (spp-arg-list ("tty" "a") 3472 . 3480) . 
              ((DO "do" 3531 . 3533) (semantic-list "{                                                                  \\
    if (a)                                                              \\
      emacs_tputs ((tty), a,                                            \\
                   (int) (FRAME_LINES (XFRAME (selected_frame))         \\
                          - curY (tty) ),                               \\
                   cmputc);                                             \\
  }" 3534 . 3976) (WHILE "while" 3977 . 3982) (semantic-list "(0)" 3983 . 3986)))
          ("MAY_USE_WITH_COLORS_P" (spp-arg-list ("tty" "ATTR") 53419 . 53430) . ((semantic-list "(tty->TN_max_colors > 0				\\
   ? (tty->TN_no_color_video & (ATTR)) == 0             \\
   : 1)" 53450 . 53544)))
          ("char_ins_del_cost" (spp-arg-list ("f") 29741 . 29744) . ((semantic-list "(&char_ins_del_vector[FRAME_COLS ((f))])" 29745 . 29785)))
          )

    )
   (semanticdb-table "xrdb.c"
    :major-mode 'c-mode
    :tags 
        '( ("unistd.h" include (:system-flag t) nil [930 949])
            ("epaths.h" include (:system-flag t) nil [958 977])
            ("stdio.h" include (:system-flag t) nil [979 997])
            ("setjmp.h" include (:system-flag t) nil [998 1017])
            ("SYSV" variable (:constant-flag t) nil [1366 1370])
            ("X11/Xlib.h" include (:system-flag t) nil [1426 1447])
            ("X11/Xatom.h" include (:system-flag t) nil [1448 1470])
            ("X11/X.h" include (:system-flag t) nil [1505 1523])
            ("X11/Xutil.h" include (:system-flag t) nil [1524 1546])
            ("X11/Xresource.h" include (:system-flag t) nil [1547 1573])
            ("pwd.h" include (:system-flag t) nil [1592 1608])
            ("sys/stat.h" include (:system-flag t) nil [1616 1637])
            ("S_ISDIR" variable (:constant-flag t) nil [1689 1696])
            ("lisp.h" include nil nil [1736 1753])
            ("getenv" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [1755 1778])
            ("getpwuid" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type ("passwd" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2158 2192])
            ("getpwnam" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type ("passwd" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2193 2227])
            ("get_system_name" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [2236 2268])
            ("x_get_string_resource" function
               (:prototype-flag t
                :pointer 1
                :type "char")
                nil [2557 2588])
            ("file_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "int")
                nil [2589 2610])
            ("x_customization_string" variable
               (:pointer 1
                :type "char")
                nil [2779 2808])
            ("db" variable (:type ("XrmDatabase" type (:type "class") nil nil)) nil [3039 3054])
            ("" type
               (:prototype t
                :type "class")
                nil [3073 3079])
            ("string" variable
               (:pointer 1
                :type "char")
                nil [4946 4959])
            ("string_len" variable (:type "int") nil [4965 4980])
            ("suffix" variable
               (:pointer 1
                :type "int")
                nil [4999 5024])
            ("escaped_suffix" variable
               (:pointer 1
                :type "int")
                nil [4999 5024])
            ("gethomedir" function
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [7108 7570])
            ("file_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("filename" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [7573 7845])
            ("suffix" variable
               (:pointer 1
                :type "int")
                nil [8152 8177])
            ("escaped_suffix" variable
               (:pointer 1
                :type "int")
                nil [8152 8177])
            ("" type
               (:prototype t
                :type "class")
                nil [8737 8743])
            ("get_fallback" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type ("XrmDatabase" type (:type "class") nil nil))
                nil [9009 9092])
            ("" type
               (:prototype t
                :type "class")
                nil [9146 9152])
            ("get_user_db" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil))                  
                :type ("XrmDatabase" type (:type "class") nil nil))
                nil [10156 11071])
            ("get_environ_db" function
               (:typemodifiers ("static")
                :type ("XrmDatabase" type (:type "class") nil nil))
                nil [11073 11554])
            ("XrmStringType" variable (:constant-flag t) nil [11647 11660])
            ("x_rm_string" variable (:type ("XrmRepresentation" type (:type "class") nil nil)) nil [11698 11728])
            ("x_load_resources" function
               (:arguments 
                  ( ("display" variable
                       (:pointer 1
                        :type ("Display" type (:type "class") nil nil))
                        nil nil)
                    ("myclass" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("myname" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("xrm_string" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("XrmDatabase" type (:type "class") nil nil))
                nil [11830 16267])
            ("rdb" variable (:type ("XrmDatabase" type (:type "class") nil nil)) nil [16492 16508])
            ("" type
               (:prototype t
                :type "class")
                nil [16527 16533])
            ("expected_type" variable (:type ("XrmRepresentation" type (:type "class") nil nil)) nil [16539 16571])
            ("ret_value" variable
               (:pointer 1
                :type ("XrmValue" type (:type "class") nil nil))
                nil [16577 16597])
            ("rdb" variable (:type ("XrmDatabase" type (:type "class") nil nil)) nil [17216 17232])
            ("" type
               (:prototype t
                :type "class")
                nil [17251 17257]))          
    :file "xrdb.c"
    :pointmax 19716
    :fsize 19715
    :lastmodtime '(19383 49283)
    :unmatched-syntax '((semantic-list 17258 . 17492) (punctuation 17250 . 17251) (punctuation 17248 . 17249) (symbol 17244 . 17248) (punctuation 17243 . 17244) (CHAR 17238 . 17242) (semantic-list 17192 . 17210) (symbol 17170 . 17191) (punctuation 17168 . 17169) (CHAR 17163 . 17167) (semantic-list 16598 . 17074) (punctuation 16526 . 16527) (punctuation 16524 . 16525) (symbol 16520 . 16524) (punctuation 16519 . 16520) (CHAR 16514 . 16518) (semantic-list 16442 . 16486) (symbol 16427 . 16441) (INT 16423 . 16426) (semantic-list 9153 . 10153) (punctuation 9145 . 9146) (CHAR 9140 . 9144) (semantic-list 9127 . 9134) (symbol 9114 . 9126) (symbol 9102 . 9113) (STATIC 9095 . 9101) (semantic-list 8744 . 9006) (punctuation 8736 . 8737) (CHAR 8731 . 8735) (semantic-list 8718 . 8725) (symbol 8703 . 8717) (symbol 8691 . 8702) (STATIC 8684 . 8690) (semantic-list 8178 . 8629) (punctuation 8150 . 8151) (CLASS 8145 . 8150) (punctuation 8144 . 8145) (punctuation 8142 . 8143) (symbol 8131 . 8142) (punctuation 8130 . 8131) (CHAR 8125 . 8129) (semantic-list 8075 . 8119) (symbol 8057 . 8074) (punctuation 8055 . 8056) (CHAR 8050 . 8054) (STATIC 8043 . 8049) (semantic-list 5025 . 7105) (punctuation 4997 . 4998) (CLASS 4992 . 4997) (punctuation 4991 . 4992) (CHAR 4986 . 4990) (semantic-list 4889 . 4940) (symbol 4876 . 4888) (punctuation 4874 . 4875) (CHAR 4869 . 4873) (STATIC 4862 . 4868) (semantic-list 3080 . 3609) (punctuation 3072 . 3073) (punctuation 3070 . 3071) (symbol 3066 . 3070) (punctuation 3065 . 3066) (CHAR 3060 . 3064) (semantic-list 3016 . 3033) (symbol 2989 . 3015) (punctuation 2987 . 2988) (CHAR 2982 . 2986))
    :lexical-table 
        '(("S_ISDIR" (spp-arg-list ("m") 1696 . 1699) . ((semantic-list "(((m) & S_IFMT) == S_IFDIR)" 1700 . 1727)))
          ("SYSV")
          ("XrmStringType" . ((string "\"String\"" 11661 . 11669)))
          )

    )
   (semanticdb-table "w32xfns.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [883 902])
            ("signal.h" include (:system-flag t) nil [903 922])
            ("stdio.h" include (:system-flag t) nil [923 941])
            ("setjmp.h" include (:system-flag t) nil [942 961])
            ("lisp.h" include nil nil [962 979])
            ("keyboard.h" include nil nil [980 1001])
            ("frame.h" include nil nil [1002 1020])
            ("charset.h" include nil nil [1021 1041])
            ("fontset.h" include nil nil [1042 1062])
            ("blockinput.h" include nil nil [1063 1086])
            ("w32term.h" include nil nil [1087 1107])
            ("windowsx.h" include nil nil [1108 1129])
            ("myalloc" variable (:constant-flag t) nil [1139 1146])
            ("myfree" variable (:constant-flag t) nil [1185 1191])
            ("critsect" variable (:type ("CRITICAL_SECTION" type (:type "class") nil nil)) nil [1216 1242])
            ("keyboard_handle" variable
               (:typemodifiers ("extern")
                :type ("HANDLE" type (:type "class") nil nil))
                nil [1243 1273])
            ("input_available" variable
               (:default-value "NULL;"
                :type ("HANDLE" type (:type "class") nil nil))
                nil [1274 1304])
            ("interrupt_handle" variable
               (:default-value "NULL;"
                :type ("HANDLE" type (:type "class") nil nil))
                nil [1305 1336])
            ("init_crit" function (:type "void") nil [1338 2091])
            ("delete_crit" function (:type "void") nil [2093 2361])
            ("signal_quit" function (:type "void") nil [2363 2552])
            ("select_palette" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2575 2587])
                    ("hdc" variable (:type ("HDC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2588 2596]))                  
                :type "void")
                nil [2554 3110])
            ("deselect_palette" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3135 3147])
                    ("hdc" variable (:type ("HDC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3148 3156]))                  
                :type "void")
                nil [3112 3264])
            ("get_frame_dc" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3405 3417]))                  
                :type ("HDC" type (:type "class") nil nil))
                nil [3387 3741])
            ("release_frame_dc" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3765 3777])
                    ("hdc" variable (:type ("HDC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3778 3786]))                  
                :type "int")
                nil [3743 3922])
            ("int_msg" type
               (:typedef ("int_msg" type
                     (:members 
                        ( ("w32msg" variable (:type ("W32Msg" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3951 3965])
                          ("lpNext" variable
                             (:pointer 1
                              :type ("int_msg" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil))
                              (reparse-symbol classsubparts) [3968 3991]))                        
                      :type "struct")
                      nil nil)
                :superclasses "int_msg"
                :type "typedef")
                nil [3924 4002])
            ("lpHead" variable
               (:pointer 1
                :default-value "NULL;"
                :type ("int_msg" type (:type "class") nil nil))
                nil [4004 4027])
            ("lpTail" variable
               (:pointer 1
                :default-value "NULL;"
                :type ("int_msg" type (:type "class") nil nil))
                nil [4028 4051])
            ("nQueue" variable
               (:default-value "0"
                :type "int")
                nil [4052 4067])
            ("get_next_msg" function
               (:arguments 
                  ( ("lpmsg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil)
                    ("bWait" variable (:type ("BOOL" type (:type "class") nil nil)) nil nil))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [4069 5887])
            ("post_msg" function
               (:arguments 
                  ( ("lpmsg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        nil nil))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [5889 6310])
            ("prepend_msg" function
               (:arguments 
                  ( ("lpmsg" variable
                       (:pointer 1
                        :type ("W32Msg" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6330 6344]))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [6312 6607])
            ("drain_message_queue" function (:type "void") nil [6668 6835])
            ("read_integer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("NextString" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [7331 7791])
            ("XParseGeometry" function
               (:arguments 
                  ( ("string" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("height" variable
                       (:pointer 1
                        :type "unsigned int")
                        nil nil)
                    ("width" variable
                       (:pointer 1
                        :type "unsigned int")
                        nil nil))                  
                :type "int")
                nil [7793 9921])
            ("x_sync" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [9956 9989]))          
    :file "w32xfns.c"
    :pointmax 10076
    :fsize 10075
    :lastmodtime '(19383 49283)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("myalloc" (spp-arg-list ("cb") 1146 . 1150) . ((symbol "GlobalAllocPtr" 1151 . 1165) (semantic-list "(GPTR, cb)" 1166 . 1176)))
          ("myfree" (spp-arg-list ("lp") 1191 . 1195) . ((symbol "GlobalFreePtr" 1196 . 1209) (semantic-list "(lp)" 1210 . 1214)))
          )

    )
   (semanticdb-table "xfns.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [882 901])
            ("stdio.h" include (:system-flag t) nil [902 920])
            ("math.h" include (:system-flag t) nil [921 938])
            ("setjmp.h" include (:system-flag t) nil [939 958])
            ("ctype.h" include (:system-flag t) nil [959 977])
            ("unistd.h" include (:system-flag t) nil [1000 1019])
            ("XLIB_ILLEGAL_ACCESS" variable (:constant-flag t) nil [1113 1132])
            ("lisp.h" include nil nil [1134 1151])
            ("xterm.h" include nil nil [1152 1170])
            ("frame.h" include nil nil [1171 1189])
            ("window.h" include nil nil [1190 1209])
            ("buffer.h" include nil nil [1210 1229])
            ("intervals.h" include nil nil [1230 1252])
            ("dispextern.h" include nil nil [1253 1276])
            ("keyboard.h" include nil nil [1277 1298])
            ("blockinput.h" include nil nil [1299 1322])
            ("epaths.h" include (:system-flag t) nil [1323 1342])
            ("character.h" include nil nil [1343 1365])
            ("charset.h" include nil nil [1366 1386])
            ("coding.h" include nil nil [1387 1406])
            ("fontset.h" include nil nil [1407 1427])
            ("systime.h" include nil nil [1428 1448])
            ("termhooks.h" include nil nil [1449 1471])
            ("atimer.h" include nil nil [1472 1491])
            ("termchar.h" include nil nil [1492 1513])
            ("font.h" include nil nil [1514 1531])
            ("ctype.h" include (:system-flag t) nil [1556 1574])
            ("sys/types.h" include (:system-flag t) nil [1575 1597])
            ("sys/stat.h" include (:system-flag t) nil [1598 1619])
            ("bitmaps/gray.xbm" include nil nil [1701 1728])
            ("xsettings.h" include nil nil [1771 1793])
            ("gtkutil.h" include nil nil [1810 1830])
            ("Vgtk_version_string" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2975 3014])
            ("MAXREQUEST" variable (:constant-flag t) nil [3046 3056])
            ("gray_bitmap_width" variable
               (:default-value "gray_width;"
                :type "int")
                nil [3292 3327])
            ("gray_bitmap_height" variable
               (:default-value "gray_height;"
                :type "int")
                nil [3328 3365])
            ("gray_bitmap_bits" variable
               (:pointer 1
                :default-value "gray_bits;"
                :type "char")
                nil [3366 3401])
            ("x_gtk_use_old_file_dialog" variable (:type "int") nil [3473 3503])
            ("x_gtk_show_hidden_files" variable (:type "int") nil [3580 3608])
            ("x_gtk_file_dialog_help_text" variable (:type "int") nil [3688 3720])
            ("x_gtk_whole_detached_tool_bar" variable (:type "int") nil [3791 3825])
            ("Vx_mode_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3934 4012])
            ("Vx_nontext_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3934 4012])
            ("Vx_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3934 4012])
            ("Vx_hourglass_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4013 4052])
            ("Vx_sensitive_text_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4104 4148])
            ("Vx_window_horizontal_drag_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4245 4289])
            ("Vx_cursor_fore_pixel" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4339 4372])
            ("x_in_use" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4402 4422])
            ("Vx_no_window_manager" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4472 4505])
            ("Vx_pixel_size_width_font_regexp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4584 4628])
            ("Qnone" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4630 4648])
            ("Qsuppress_icon" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4649 4676])
            ("Qundefined_color" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4677 4706])
            ("Qcancel_timer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4707 4749])
            ("Qcompound_text" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4707 4749])
            ("Qfont_param" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4750 4774])
            ("Vwindow_system_version" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4796 4838])
            ("dpyinfo_refcount" variable (:type "int") nil [4898 4941])
            ("image_cache_refcount" variable (:type "int") nil [4898 4941])
            ("x_last_font_name" variable
               (:pointer 1
                :type "char")
                nil [4999 5022])
            ("check_x" function (:type "void") nil [5077 5173])
            ("have_menus_p" function (:type "int") nil [5276 5318])
            ("check_x_frame" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("FRAME_PTR" type (:type "class") nil nil))
                nil [5425 5665])
            ("check_x_display_info" function
               (:pointer 1
                :arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("x_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5886 6747])
            ("x_window_to_frame" function
               (:pointer 1
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("wdesc" variable (:type "int") nil nil))                  
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [6956 8212])
            ("x_any_window_to_frame" function
               (:pointer 1
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("wdesc" variable (:type "int") nil nil))                  
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [8353 9639])
            ("x_menubar_window_to_frame" function
               (:pointer 1
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("wdesc" variable (:type "int") nil nil))                  
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [9698 10853])
            ("x_top_window_to_frame" function
               (:pointer 1
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("wdesc" variable (:type "int") nil nil))                  
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [10982 12136])
            ("x_default_font_parameter" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12179 12251])
            ("unwind_create_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12253 12311])
            ("unwind_create_tip_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12312 12374])
            ("x_set_foreground_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12376 12452])
            ("x_set_wait_for_wm" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12453 12531])
            ("x_set_background_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12532 12608])
            ("x_set_mouse_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12609 12680])
            ("x_set_cursor_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12681 12753])
            ("x_set_border_color" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12754 12826])
            ("x_set_cursor_type" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12827 12898])
            ("x_set_icon_type" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12899 12968])
            ("x_set_icon_name" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [12969 13038])
            ("x_explicitly_set_name" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13039 13114])
            ("x_set_menu_bar_lines" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13115 13189])
            ("x_set_title" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13190 13255])
            ("x_set_tool_bar_lines" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13256 13330])
            ("x_set_scroll_bar_foreground" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13331 13422])
            ("x_set_scroll_bar_background" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13423 13514])
            ("x_default_scroll_bar_color_parameter" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [13515 13688])
            ("x_real_positions" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("yptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("xptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [13853 16975])
            ("gamma_correct" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [17021 17349])
            ("x_defined_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("color_name" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("color" variable
                       (:pointer 1
                        :type ("XColor" type (:type "class") nil nil))
                        nil nil)
                    ("alloc_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [17589 18018])
            ("x_decode_color" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("color_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("mono_color" variable (:type "int") nil nil))                  
                :type "int")
                nil [18218 19073])
            ("x_set_wait_for_wm" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("old_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("new_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [19281 19454])
            ("xg_set_icon" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("file" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [19617 20197])
            ("xg_set_icon_from_xpm_data" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("data" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [20199 20512])
            ("x_set_foreground_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [20841 21698])
            ("x_set_background_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [21700 22878])
            ("make_invisible_cursor" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Cursor" type (:type "class") nil nil))
                nil [22880 23565])
            ("x_set_mouse_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [23567 28118])
            ("x_set_cursor_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [28120 29799])
            ("x_set_border_pixel" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("pix" variable (:type "int") nil nil))                  
                :type "void")
                nil [29944 30362])
            ("x_set_border_color" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [30865 31142])
            ("x_set_cursor_type" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [31145 31343])
            ("x_set_icon_type" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [31346 31984])
            ("x_set_icon_name" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [31986 32643])
            ("x_set_menu_bar_lines" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [32647 35106])
            ("x_set_tool_bar_lines" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [35428 38086])
            ("x_set_scroll_bar_foreground" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [38320 39193])
            ("x_set_scroll_bar_background" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [39426 40811])
            ("x_encode_text" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("coding_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("stringp" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("text_bytes" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("selectionp" variable (:type "int") nil nil)
                    ("freep" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "unsigned char")
                nil [41696 42767])
            ("x_set_name_internal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [42932 45292])
            ("x_set_name" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("explicit" variable (:type "int") nil nil))                  
                :type "void")
                nil [45804 46986])
            ("x_explicitly_set_name" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [47148 47269])
            ("x_implicitly_set_name" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("oldval" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [47430 47551])
            ("x_set_title" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("old_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [47651 47991])
            ("x_set_scroll_bar_default_width" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [47993 48654])
            ("x_default_scroll_bar_color_parameter" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("xprop" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("xclass" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("foreground_p" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [48932 50199])
            ("xic_create_xfontset" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("XFontSet" type (:type "class") nil nil))
                nil [52141 52199])
            ("best_xim_style" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("XIMStyles" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("XIMStyles" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("XIMStyle" type (:type "class") nil nil))
                nil [52200 52263])
            ("supported_xim_styles" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
  XIMPreeditPosition | XIMStatusArea,
  XIMPreeditPosition | XIMStatusNothing,
  XIMPreeditPosition | XIMStatusNone,
  XIMPreeditNothing | XIMStatusArea,
  XIMPreeditNothing | XIMStatusNothing,
  XIMPreeditNothing | XIMStatusNone,
  XIMPreeditNone | XIMStatusArea,
  XIMPreeditNone | XIMStatusNothing,
  XIMPreeditNone | XIMStatusNone,
  0,
}"
                :type ("XIMStyle" type (:type "class") nil nil))
                nil [52319 52705])
            ("xic_defaut_fontset" variable
               (:dereference 1
                :default-value "\"-*-*-*-r-normal--14-*-*-*-*-*-*-*\""
                :type "char")
                nil [52782 52846])
            ("xic_create_fontsetname" function
               (:pointer 1
                :arguments 
                  ( ("base_fontname" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("motif" variable (:type ("Bool" type (:type "class") nil nil)) nil nil))                  
                :type "char")
                nil [52955 56761])
            ("xic_create_xfontset" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("XFontSet" type (:type "class") nil nil))
                nil [57220 59792])
            ("xic_free_xfontset" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [59866 60700])
            ("best_xim_style" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("user" variable
                       (:pointer 1
                        :type ("XIMStyles" type (:type "class") nil nil))
                        nil nil)
                    ("xim" variable
                       (:pointer 1
                        :type ("XIMStyles" type (:type "class") nil nil))
                        nil nil))                  
                :type ("XIMStyle" type (:type "class") nil nil))
                nil [60866 61238])
            ("xic_style" variable
               (:typemodifiers ("static")
                :type ("XIMStyle" type (:type "class") nil nil))
                nil [61271 61297])
            ("create_frame_xic" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [61299 63009])
            ("free_frame_xic" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [63072 63243])
            ("xic_set_preeditarea" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil))                  
                :type "void")
                nil [63372 63815])
            ("xic_set_statusarea" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [63887 65129])
            ("xic_set_xfontset" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("base_fontname" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [65257 65776])
            ("x_window" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [74071 74939])
            ("x_icon_verify" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [78385 79025])
            ("x_icon" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [79175 80424])
            ("x_make_gc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [80581 82367])
            ("x_free_gcs" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [82416 83094])
            ("unwind_create_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83236 84089])
            ("x_default_font_parameter" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [84092 86302])
            ("DEFUN_ARGS_" variable (:type ("Sx_wm_set_size_hint" type (:type "class") nil nil)) nil [86305 86511])
            ("doc" variable
               (:default-value "DEFUN (\"x-wm-set-size-hint\", Fx_wm_set_size_hint, Sx_wm_set_size_hint,
       0, 1, 0,
       doc: /* Send the size hints for frame FRAME to the window manager.
If FRAME is nil, use the selected frame.  */)"
                :type "int")
                nil [86305 86511])
            ("Sx_wm_set_size_hint" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [86305 86743])
            ("DEFUN_ARGS_" variable (:type ("Sx_create_frame" type (:type "class") nil nil)) nil [86745 87262])
            ("doc" variable
               (:default-value "DEFUN (\"x-create-frame\", Fx_create_frame, Sx_create_frame,
       1, 1, 0,
       doc: /* Make a new X window, which is called a \"frame\" in Emacs terms.
Return an Emacs frame object.
PARMS is an alist of frame parameters.
If the parameters specify that the frame should not have a minibuffer,
and do not specify a specific minibuffer window to use,
then `default-minibuffer-frame' must be a frame whose minibuffer can
be shared by the new frame.

This function is an internal primitive--use `make-frame' instead.  */)"
                :type "int")
                nil [86745 87262])
            ("Sx_create_frame" function
               (:arguments 
                  ( ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [86745 101485])
            ("x_get_focus_frame" function
               (:arguments 
                  ( ("frame" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [101672 101939])
            ("DEFUN_ARGS_" variable (:type ("Sx_focus_frame" type (:type "class") nil nil)) nil [102362 102516])
            ("doc" variable
               (:default-value "DEFUN (\"x-focus-frame\", Fx_focus_frame, Sx_focus_frame, 1, 1, 0,
       doc: /* Set the input focus to FRAME.
FRAME nil means use the selected frame.  */)"
                :type "int")
                nil [102362 102516])
            ("Sx_focus_frame" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [102362 102856])
            ("DEFUN_ARGS_" variable (:type ("Sxw_color_defined_p" type (:type "class") nil nil)) nil [102860 103017])
            ("doc" variable
               (:default-value "DEFUN (\"xw-color-defined-p\", Fxw_color_defined_p, Sxw_color_defined_p, 1, 2, 0,
       doc: /* Internal function called by `color-defined-p', which see.  */)"
                :type "int")
                nil [102860 103017])
            ("Sxw_color_defined_p" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("color" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [102860 103241])
            ("DEFUN_ARGS_" variable (:type ("Sxw_color_values" type (:type "class") nil nil)) nil [103243 103388])
            ("doc" variable
               (:default-value "DEFUN (\"xw-color-values\", Fxw_color_values, Sxw_color_values, 1, 2, 0,
       doc: /* Internal function called by `color-values', which see.  */)"
                :type "int")
                nil [103243 103388])
            ("Sxw_color_values" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("color" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103243 103696])
            ("DEFUN_ARGS_" variable (:type ("Sxw_display_color_p" type (:type "class") nil nil)) nil [103698 103855])
            ("doc" variable
               (:default-value "DEFUN (\"xw-display-color-p\", Fxw_display_color_p, Sxw_display_color_p, 0, 1, 0,
       doc: /* Internal function called by `display-color-p', which see.  */)"
                :type "int")
                nil [103698 103855])
            ("Sxw_display_color_p" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103698 104201])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_grayscale_p" type (:type "class") nil nil)) nil [104203 104631])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-grayscale-p\", Fx_display_grayscale_p, Sx_display_grayscale_p,
       0, 1, 0,
       doc: /* Return t if the X display supports shades of gray.
Note that color displays do support shades of gray.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [104203 104631])
            ("Sx_display_grayscale_p" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [104203 105018])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_pixel_width" type (:type "class") nil nil)) nil [105020 105399])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-pixel-width\", Fx_display_pixel_width, Sx_display_pixel_width,
       0, 1, 0,
       doc: /* Return the width in pixels of the X display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [105020 105399])
            ("Sx_display_pixel_width" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105020 105571])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_pixel_height" type (:type "class") nil nil)) nil [105573 105956])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-pixel-height\", Fx_display_pixel_height,
       Sx_display_pixel_height, 0, 1, 0,
       doc: /* Return the height in pixels of the X display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [105573 105956])
            ("Sx_display_pixel_height" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105573 106129])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_planes" type (:type "class") nil nil)) nil [106131 106499])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-planes\", Fx_display_planes, Sx_display_planes,
       0, 1, 0,
       doc: /* Return the number of bitplanes of the X display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [106131 106499])
            ("Sx_display_planes" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106131 106657])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_color_cells" type (:type "class") nil nil)) nil [106659 107044])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-color-cells\", Fx_display_color_cells, Sx_display_color_cells,
       0, 1, 0,
       doc: /* Return the number of color cells of the X display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [106659 107044])
            ("Sx_display_color_cells" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [106659 107680])
            ("DEFUN_ARGS_" variable (:type ("Sx_server_max_request_size" type (:type "class") nil nil)) nil [107682 108095])
            ("doc" variable
               (:default-value "DEFUN (\"x-server-max-request-size\", Fx_server_max_request_size,
       Sx_server_max_request_size,
       0, 1, 0,
       doc: /* Return the maximum request size of the X server of display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [107682 108095])
            ("Sx_server_max_request_size" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107682 108265])
            ("DEFUN_ARGS_" variable (:type ("Sx_server_vendor" type (:type "class") nil nil)) nil [108267 108785])
            ("doc" variable
               (:default-value "DEFUN (\"x-server-vendor\", Fx_server_vendor, Sx_server_vendor, 0, 1, 0,
       doc: /* Return the \"vendor ID\" string of the X server of display TERMINAL.
\\(Labelling every distributor as a \"vendor\" embodies the false assumption
that operating systems cannot be developed and distributed noncommercially.)
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [108267 108785])
            ("Sx_server_vendor" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [108267 109012])
            ("DEFUN_ARGS_" variable (:type ("Sx_server_version" type (:type "class") nil nil)) nil [109014 109570])
            ("doc" variable
               (:default-value "DEFUN (\"x-server-version\", Fx_server_version, Sx_server_version, 0, 1, 0,
       doc: /* Return the version numbers of the X server of display TERMINAL.
The value is a list of three integers: the major and minor
version numbers of the X Protocol in use, and the distributor-specific release
number.  See also the function `x-server-vendor'.

The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [109014 109570])
            ("Sx_server_version" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109014 109881])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_screens" type (:type "class") nil nil)) nil [109883 110255])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-screens\", Fx_display_screens, Sx_display_screens, 0, 1, 0,
       doc: /* Return the number of screens on the X server of display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [109883 110255])
            ("Sx_display_screens" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109883 110426])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_mm_height" type (:type "class") nil nil)) nil [110428 110800])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-mm-height\", Fx_display_mm_height, Sx_display_mm_height, 0, 1, 0,
       doc: /* Return the height in millimeters of the X display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [110428 110800])
            ("Sx_display_mm_height" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110428 110975])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_mm_width" type (:type "class") nil nil)) nil [110977 111345])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-mm-width\", Fx_display_mm_width, Sx_display_mm_width, 0, 1, 0,
       doc: /* Return the width in millimeters of the X display TERMINAL.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [110977 111345])
            ("Sx_display_mm_width" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110977 111519])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_backing_store" type (:type "class") nil nil)) nil [111521 111982])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-backing-store\", Fx_display_backing_store,
       Sx_display_backing_store, 0, 1, 0,
       doc: /* Return an indication of whether X display TERMINAL does backing store.
The value may be `always', `when-mapped', or `not-useful'.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [111521 111982])
            ("Sx_display_backing_store" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [111521 112509])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_visual_class" type (:type "class") nil nil)) nil [112511 113014])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-visual-class\", Fx_display_visual_class,
       Sx_display_visual_class, 0, 1, 0,
       doc: /* Return the visual class of the X display TERMINAL.
The value is one of the symbols `static-gray', `gray-scale',
`static-color', `pseudo-color', `true-color', or `direct-color'.

The optional argument TERMINAL specifies which display to ask about.
TERMINAL should a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [112511 113014])
            ("Sx_display_visual_class" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112511 113743])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_save_under" type (:type "class") nil nil)) nil [113745 114135])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-save-under\", Fx_display_save_under,
       Sx_display_save_under, 0, 1, 0,
       doc: /* Return t if the X display TERMINAL supports the save-under feature.
The optional argument TERMINAL specifies which display to ask about.
TERMINAL should be a terminal object, a frame or a display name (a string).
If omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [113745 114135])
            ("Sx_display_save_under" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [113745 114338])
            ("x_pixel_width" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [114341 114429])
            ("x_pixel_height" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [114431 114521])
            ("x_char_width" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [114523 114611])
            ("x_char_height" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [114613 114701])
            ("x_screen_planes" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [114703 114806])
            ("visual_class" type
               (:members 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [115055 115066])
                    ("" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol classsubparts) [115073 115079]))                  
                :type "struct")
                nil [115024 115301])
            ("visual_classes" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
  {\"StaticGray\",	StaticGray},
  {\"GrayScale\",		GrayScale},
  {\"StaticColor\",	StaticColor},
  {\"PseudoColor\",	PseudoColor},
  {\"TrueColor\",		TrueColor},
  {\"DirectColor\",	DirectColor},
  {NULL, 0}
}"
                :type ("visual_class" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [115024 115301])
            ("select_visual" function
               (:arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [115859 117831])
            ("x_display_info_for_name" function
               (:pointer 1
                :arguments 
                  ( ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("x_display_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [117940 118869])
            ("DEFUN_ARGS_" variable (:type ("Sx_open_connection" type (:type "class") nil nil)) nil [118872 119231])
            ("doc" variable
               (:default-value "DEFUN (\"x-open-connection\", Fx_open_connection, Sx_open_connection,
       1, 3, 0,
       doc: /* Open a connection to an X server.
DISPLAY is the name of the display to connect to.
Optional second arg XRM-STRING is a string of resources in xrdb format.
If the optional third arg MUST-SUCCEED is non-nil,
terminate Emacs if we can't open the connection.  */)"
                :type "int")
                nil [118872 119231])
            ("Sx_open_connection" function
               (:arguments 
                  ( ("must_succeed" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("xrm_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [118872 120529])
            ("DEFUN_ARGS_" variable (:type ("Sx_close_connection" type (:type "class") nil nil)) nil [120531 120829])
            ("doc" variable
               (:default-value "DEFUN (\"x-close-connection\", Fx_close_connection,
       Sx_close_connection, 1, 1, 0,
       doc: /* Close the connection to TERMINAL's X server.
For TERMINAL, specify a terminal object, a frame or a display name (a
string).  If TERMINAL is nil, that stands for the selected frame's
terminal.  */)"
                :type "int")
                nil [120531 120829])
            ("Sx_close_connection" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [120531 121085])
            ("DEFUN_ARGS_" variable (:type ("Sx_display_list" type (:type "class") nil nil)) nil [121087 121238])
            ("doc" variable
               (:default-value "DEFUN (\"x-display-list\", Fx_display_list, Sx_display_list, 0, 0, 0,
       doc: /* Return the list of display names that Emacs has connections to.  */)"
                :type "int")
                nil [121087 121238])
            ("Sx_display_list" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [121087 121432])
            ("DEFUN_ARGS_" variable (:type ("Sx_synchronize" type (:type "class") nil nil)) nil [121434 122008])
            ("doc" variable
               (:default-value "DEFUN (\"x-synchronize\", Fx_synchronize, Sx_synchronize, 1, 2, 0,
       doc: /* If ON is non-nil, report X errors as soon as the erring request is made.
If ON is nil, allow buffering of requests.
Turning on synchronization prohibits the Xlib routines from buffering
requests and seriously degrades performance, but makes debugging much
easier.
The optional second argument TERMINAL specifies which display to act on.
TERMINAL should be a terminal object, a frame or a display name (a string).
If TERMINAL is omitted or nil, that stands for the selected frame's display.  */)"
                :type "int")
                nil [121434 122008])
            ("Sx_synchronize" function
               (:arguments 
                  ( ("on" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [121434 122198])
            ("x_sync" function
               (:arguments 
                  ( ("f" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [122272 122379])
            ("DEFUN_ARGS_" variable (:type ("Sx_change_window_property" type (:type "class") nil nil)) nil [122576 123561])
            ("doc" variable
               (:default-value "DEFUN (\"x-change-window-property\", Fx_change_window_property,
       Sx_change_window_property, 2, 6, 0,
       doc: /* Change window property PROP to VALUE on the X window of FRAME.
PROP must be a string.
VALUE may be a string or a list of conses, numbers and/or strings.
If an element in the list is a string, it is converted to
an Atom and the value of the Atom is used.  If an element is a cons,
it is converted to a 32 bit number where the car is the 16 top bits and the
cdr is the lower 16 bits.
FRAME nil or omitted means use the selected frame.
If TYPE is given and non-nil, it is the name of the type of VALUE.
If TYPE is not given or nil, the type is STRING.
FORMAT gives the size in bits of each element if VALUE is a list.
It must be one of 8, 16 or 32.
If VALUE is a string or FORMAT is nil or not given, FORMAT defaults to 8.
If OUTER_P is non-nil, the property is changed for the outer X window of
FRAME.  Default is to change on the edit X window.

Value is VALUE.  */)"
                :type "int")
                nil [122576 123561])
            ("Sx_change_window_property" function
               (:arguments 
                  ( ("outer_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [122576 125648])
            ("DEFUN_ARGS_" variable (:type ("Sx_delete_window_property" type (:type "class") nil nil)) nil [125651 125894])
            ("doc" variable
               (:default-value "DEFUN (\"x-delete-window-property\", Fx_delete_window_property,
       Sx_delete_window_property, 1, 2, 0,
       doc: /* Remove window property PROP from X window of FRAME.
FRAME nil or omitted means use the selected frame.  Value is PROP.  */)"
                :type "int")
                nil [125651 125894])
            ("Sx_delete_window_property" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [125651 126314])
            ("DEFUN_ARGS_" variable (:type ("Sx_window_property" type (:type "class") nil nil)) nil [126317 126998])
            ("doc" variable
               (:default-value "DEFUN (\"x-window-property\", Fx_window_property, Sx_window_property,
       1, 6, 0,
       doc: /* Value is the value of window property PROP on FRAME.
If FRAME is nil or omitted, use the selected frame.
If TYPE is nil or omitted, get the property as a string.  Otherwise TYPE
is the name of the Atom that denotes the type expected.
If SOURCE is non-nil, get the property on that window instead of from
FRAME.  The number 0 denotes the root window.
If DELETE_P is non-nil, delete the property after retreiving it.
If VECTOR_RET_P is non-nil, don't return a string but a vector of values.

Value is nil if FRAME hasn't a property with name PROP or if PROP has
no value of TYPE.  */)"
                :type "int")
                nil [126317 126998])
            ("Sx_window_property" function
               (:arguments 
                  ( ("vector_ret_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("delete_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("source" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [126317 130397])
            ("show_hourglass" function
               (:arguments 
                  ( ("timer" variable
                       (:pointer 1
                        :type ("atimer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [130873 132240])
            ("hide_hourglass" function (:type "void") nil [132322 132976])
            ("x_create_tip_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [133143 133246])
            ("compute_tip_xy" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [133247 133363])
            ("tip_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [133415 133437])
            ("tip_timer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [133521 133543])
            ("tip_window" variable (:type ("Window" type (:type "class") nil nil)) nil [133544 133562])
            ("last_show_tip_args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [133681 133712])
            ("Vx_max_tooltip_size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [133774 133806])
            ("unwind_create_tip_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [133809 134056])
            ("x_create_tip_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dpyinfo" variable
                       (:pointer 1
                        :type ("x_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("text" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [134465 145720])
            ("compute_tip_xy" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("dy" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dx" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("root_y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("root_x" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [146047 147747])
            ("DEFUN_ARGS_" variable (:type ("Sx_show_tip" type (:type "class") nil nil)) nil [147750 148814])
            ("doc" variable
               (:default-value "DEFUN (\"x-show-tip\", Fx_show_tip, Sx_show_tip, 1, 6, 0,
       doc: /* Show STRING in a \"tooltip\" window on frame FRAME.
A tooltip window is a small X window displaying a string.

This is an internal function; Lisp code should call `tooltip-show'.

FRAME nil or omitted means use the selected frame.

PARMS is an optional list of frame parameters which can be used to
change the tooltip's appearance.

Automatically hide the tooltip after TIMEOUT seconds.  TIMEOUT nil
means use the default timeout of 5 seconds.

If the list of frame parameters PARAMS contains a `left' parameters,
the tooltip is displayed at that x-position.  Otherwise it is
displayed at the mouse position, with offset DX added (default is 5 if
DX isn't specified).  Likewise for the y-position; if a `top' frame
parameter is specified, it determines the y-position of the tooltip
window, otherwise it is displayed at the mouse position, with offset
DY added (default is -10).

A tooltip's maximum size is specified by `x-max-tooltip-size'.
Text larger than the specified size is clipped.  */)"
                :type "int")
                nil [147750 148814])
            ("Sx_show_tip" function
               (:arguments 
                  ( ("dy" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dx" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("timeout" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parms" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [147750 154433])
            ("DEFUN_ARGS_" variable (:type ("Sx_hide_tip" type (:type "class") nil nil)) nil [154436 154608])
            ("doc" variable
               (:default-value "DEFUN (\"x-hide-tip\", Fx_hide_tip, Sx_hide_tip, 0, 0, 0,
       doc: /* Hide the current tooltip window, if there is any.
Value is t if tooltip was open, nil otherwise.  */)"
                :type "int")
                nil [154436 154608])
            ("Sx_hide_tip" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [154436 155729])
            ("DEFUN_ARGS_" variable (:type ("Sx_uses_old_gtk_dialog" type (:type "class") nil nil)) nil [155907 156085])
            ("doc" variable
               (:default-value "DEFUN (\"x-uses-old-gtk-dialog\", Fx_uses_old_gtk_dialog,
       Sx_uses_old_gtk_dialog,
       0, 0, 0,
       doc: /* Return t if the old Gtk+ file selection dialog is used.  */)"
                :type "int")
                nil [155907 156085])
            ("Sx_uses_old_gtk_dialog" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [155907 156317])
            ("clean_up_dialog" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [162607 162714])
            ("DEFUN_ARGS_" variable (:type ("Sx_file_dialog" type (:type "class") nil nil)) nil [162716 163094])
            ("doc" variable
               (:default-value "DEFUN (\"x-file-dialog\", Fx_file_dialog, Sx_file_dialog, 2, 5, 0,
       doc: /* Read file name, prompting with PROMPT in directory DIR.
Use a file selection dialog.  Select DEFAULT-FILENAME in the dialog's file
selection box, if specified.  If MUSTMATCH is non-nil, the returned file
or directory must exist.  If ONLY-DIR-P is non-nil, the user can only select
directories.  */)"
                :type "int")
                nil [162716 163094])
            ("Sx_file_dialog" function
               (:arguments 
                  ( ("only_dir_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("mustmatch" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("default_filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dir" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [162716 164329])
            ("DEFUN_ARGS_" variable (:type ("Sx_select_font" type (:type "class") nil nil)) nil [164354 164616])
            ("doc" variable
               (:default-value "DEFUN (\"x-select-font\", Fx_select_font, Sx_select_font, 0, 2, 0,
       doc: /* Read a font name using a GTK font selection dialog.
Return a GTK-style font string corresponding to the selection.

If FRAME is omitted or nil, it defaults to the selected frame. */)"
                :type "int")
                nil [164354 164616])
            ("Sx_select_font" function
               (:arguments 
                  ( ("ignored" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [164354 166150])
            ("X11/XKBlib.h" include (:system-flag t) nil [166397 166420])
            ("X11/keysym.h" include (:system-flag t) nil [166421 166444])
            ("DEFUN_ARGS_" variable (:type ("Sx_backspace_delete_keys_p" type (:type "class") nil nil)) nil [166453 166881])
            ("doc" variable
               (:default-value "DEFUN (\"x-backspace-delete-keys-p\", Fx_backspace_delete_keys_p,
       Sx_backspace_delete_keys_p, 0, 1, 0,
       doc: /* Check if both Backspace and Delete keys are on the keyboard of FRAME.
FRAME nil means use the selected frame.
Value is t if we know that both keys are present, and are mapped to the
usual X keysyms.  Value is `lambda' if we cannot determine if both keys are
present and mapped to the usual X keysyms.  */)"
                :type "int")
                nil [166453 166881])
            ("Sx_backspace_delete_keys_p" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [166453 169583])
            ("x_frame_parm_handlers" variable
               (:dereference 1
                :default-value "{
  x_set_autoraise,
  x_set_autolower,
  x_set_background_color,
  x_set_border_color,
  x_set_border_width,
  x_set_cursor_color,
  x_set_cursor_type,
  x_set_font,
  x_set_foreground_color,
  x_set_icon_name,
  x_set_icon_type,
  x_set_internal_border_width,
  x_set_menu_bar_lines,
  x_set_mouse_color,
  x_explicitly_set_name,
  x_set_scroll_bar_width,
  x_set_title,
  x_set_unsplittable,
  x_set_vertical_scroll_bars,
  x_set_visibility,
  x_set_tool_bar_lines,
  x_set_scroll_bar_foreground,
  x_set_scroll_bar_background,
  x_set_screen_gamma,
  x_set_line_spacing,
  x_set_fringe_width,
  x_set_fringe_width,
  x_set_wait_for_wm,
  x_set_fullscreen,
  x_set_font_backend,
  x_set_alpha,
  x_set_sticky,
}"
                :type ("frame_parm_handler" type (:type "class") nil nil))
                nil [169869 170629])
            ("syms_of_xfns" function (:type "void") nil [170631 178769]))          
    :file "xfns.c"
    :pointmax 178885
    :fsize 178884
    :lastmodtime '(19383 49285)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 166453 . 166881) (symbol "__attribute__" 166453 . 166881) (symbol "Lisp_Subr" 166453 . 166881) (symbol "Lisp_Object" 166453 . 166881) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 164354 . 164616) (symbol "__attribute__" 164354 . 164616) (symbol "Lisp_Subr" 164354 . 164616) (symbol "Lisp_Object" 164354 . 164616) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 162716 . 163094) (symbol "__attribute__" 162716 . 163094) (symbol "Lisp_Subr" 162716 . 163094) (symbol "Lisp_Object" 162716 . 163094) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 155907 . 156085) (symbol "__attribute__" 155907 . 156085) (symbol "Lisp_Subr" 155907 . 156085) (symbol "Lisp_Object" 155907 . 156085) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 154436 . 154608) (symbol "__attribute__" 154436 . 154608) (symbol "Lisp_Subr" 154436 . 154608) (symbol "Lisp_Object" 154436 . 154608) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 147750 . 148814) (symbol "__attribute__" 147750 . 148814) (symbol "Lisp_Subr" 147750 . 148814) (symbol "Lisp_Object" 147750 . 148814) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 126317 . 126998) (symbol "__attribute__" 126317 . 126998) (symbol "Lisp_Subr" 126317 . 126998) (symbol "Lisp_Object" 126317 . 126998) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 125651 . 125894) (symbol "__attribute__" 125651 . 125894) (symbol "Lisp_Subr" 125651 . 125894) (symbol "Lisp_Object" 125651 . 125894) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 122576 . 123561) (symbol "__attribute__" 122576 . 123561) (symbol "Lisp_Subr" 122576 . 123561) (symbol "Lisp_Object" 122576 . 123561) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 121434 . 122008) (symbol "__attribute__" 121434 . 122008) (symbol "Lisp_Subr" 121434 . 122008) (symbol "Lisp_Object" 121434 . 122008) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 121087 . 121238) (symbol "__attribute__" 121087 . 121238) (symbol "Lisp_Subr" 121087 . 121238) (symbol "Lisp_Object" 121087 . 121238) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 120531 . 120829) (symbol "__attribute__" 120531 . 120829) (symbol "Lisp_Subr" 120531 . 120829) (symbol "Lisp_Object" 120531 . 120829) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 118872 . 119231) (symbol "__attribute__" 118872 . 119231) (symbol "Lisp_Subr" 118872 . 119231) (symbol "Lisp_Object" 118872 . 119231) (INT 115069 . 115072) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 113745 . 114135) (symbol "__attribute__" 113745 . 114135) (symbol "Lisp_Subr" 113745 . 114135) (symbol "Lisp_Object" 113745 . 114135) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 112511 . 113014) (symbol "__attribute__" 112511 . 113014) (symbol "Lisp_Subr" 112511 . 113014) (symbol "Lisp_Object" 112511 . 113014) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 111521 . 111982) (symbol "__attribute__" 111521 . 111982) (symbol "Lisp_Subr" 111521 . 111982) (symbol "Lisp_Object" 111521 . 111982) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 110977 . 111345) (symbol "__attribute__" 110977 . 111345) (symbol "Lisp_Subr" 110977 . 111345) (symbol "Lisp_Object" 110977 . 111345) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 110428 . 110800) (symbol "__attribute__" 110428 . 110800) (symbol "Lisp_Subr" 110428 . 110800) (symbol "Lisp_Object" 110428 . 110800) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 109883 . 110255) (symbol "__attribute__" 109883 . 110255) (symbol "Lisp_Subr" 109883 . 110255) (symbol "Lisp_Object" 109883 . 110255) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 109014 . 109570) (symbol "__attribute__" 109014 . 109570) (symbol "Lisp_Subr" 109014 . 109570) (symbol "Lisp_Object" 109014 . 109570) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 108267 . 108785) (symbol "__attribute__" 108267 . 108785) (symbol "Lisp_Subr" 108267 . 108785) (symbol "Lisp_Object" 108267 . 108785) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 107682 . 108095) (symbol "__attribute__" 107682 . 108095) (symbol "Lisp_Subr" 107682 . 108095) (symbol "Lisp_Object" 107682 . 108095) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 106659 . 107044) (symbol "__attribute__" 106659 . 107044) (symbol "Lisp_Subr" 106659 . 107044) (symbol "Lisp_Object" 106659 . 107044) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 106131 . 106499) (symbol "__attribute__" 106131 . 106499) (symbol "Lisp_Subr" 106131 . 106499) (symbol "Lisp_Object" 106131 . 106499) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 105573 . 105956) (symbol "__attribute__" 105573 . 105956) (symbol "Lisp_Subr" 105573 . 105956) (symbol "Lisp_Object" 105573 . 105956) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 105020 . 105399) (symbol "__attribute__" 105020 . 105399) (symbol "Lisp_Subr" 105020 . 105399) (symbol "Lisp_Object" 105020 . 105399) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 104203 . 104631) (symbol "__attribute__" 104203 . 104631) (symbol "Lisp_Subr" 104203 . 104631) (symbol "Lisp_Object" 104203 . 104631) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 103698 . 103855) (symbol "__attribute__" 103698 . 103855) (symbol "Lisp_Subr" 103698 . 103855) (symbol "Lisp_Object" 103698 . 103855) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 103243 . 103388) (symbol "__attribute__" 103243 . 103388) (symbol "Lisp_Subr" 103243 . 103388) (symbol "Lisp_Object" 103243 . 103388) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 102860 . 103017) (symbol "__attribute__" 102860 . 103017) (symbol "Lisp_Subr" 102860 . 103017) (symbol "Lisp_Object" 102860 . 103017) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 102362 . 102516) (symbol "__attribute__" 102362 . 102516) (symbol "Lisp_Subr" 102362 . 102516) (symbol "Lisp_Object" 102362 . 102516) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 86745 . 87262) (symbol "__attribute__" 86745 . 87262) (symbol "Lisp_Subr" 86745 . 87262) (symbol "Lisp_Object" 86745 . 87262) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 86305 . 86511) (symbol "__attribute__" 86305 . 86511) (symbol "Lisp_Subr" 86305 . 86511) (symbol "Lisp_Object" 86305 . 86511))
    :lexical-table 
        '(("XLIB_ILLEGAL_ACCESS")
          ("MAXREQUEST" (spp-arg-list ("dpy") 3056 . 3061) . ((semantic-list "(XMaxRequestSize (dpy))" 3062 . 3085)))
          )

    )
   (semanticdb-table "mktime.c"
    :major-mode 'c-mode
    :tags 
        '( ("LEAP_SECONDS_POSSIBLE" variable (:constant-flag t) nil [1562 1583])
            ("sys/types.h" include (:system-flag t) nil [1594 1616])
            ("time.h" include (:system-flag t) nil [1660 1677])
            ("limits.h" include (:system-flag t) nil [1697 1717])
            ("stdio.h" include (:system-flag t) nil [1736 1755])
            ("stdlib.h" include (:system-flag t) nil [1774 1795])
            ("mktime" variable (:constant-flag t) nil [1887 1893])
            ("CHAR_BIT" variable (:constant-flag t) nil [2119 2127])
            ("TYPE_SIGNED" variable (:constant-flag t) nil [2203 2214])
            ("TYPE_MINIMUM" variable (:constant-flag t) nil [2365 2377])
            ("TYPE_MAXIMUM" variable (:constant-flag t) nil [2473 2485])
            ("INT_MIN" variable (:constant-flag t) nil [2550 2557])
            ("INT_MAX" variable (:constant-flag t) nil [2609 2616])
            ("TIME_T_MIN" variable (:constant-flag t) nil [2672 2682])
            ("TIME_T_MAX" variable (:constant-flag t) nil [2740 2750])
            ("TM_YEAR_BASE" variable (:constant-flag t) nil [2789 2801])
            ("EPOCH_YEAR" variable (:constant-flag t) nil [2815 2825])
            ("__isleap" variable (:constant-flag t) nil [2962 2970])
            ("__mon_yday" variable
               (:dereference 2
                :constant-flag t
                :default-value "{
    /* Normal years.  */
    { 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365 },
    /* Leap years.  */
    { 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366 }
  }"
                :type "unsigned short int")
                nil [3103 3339])
            ("my_mktime_localtime_r" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("t" variable
                       (:pointer 1
                        :type ("time_t" type (:type "class") nil nil))
                        nil nil)
                    ("tp" variable
                       (:pointer 1
                        :type ("tm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("tm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3554 3730])
            ("sec" variable (:type "int") nil [4177 4181])
            ("tp" variable
               (:pointer 1
                :constant-flag t
                :type ("tm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [4187 4207])
            ("convert" variable
               (:functionpointer-flag t
                :type ("tm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5437 5489])
            ("t" variable
               (:pointer 1
                :type ("time_t" type (:type "class") nil nil))
                nil [5538 5548])
            ("tp" variable
               (:pointer 1
                :type ("tm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5554 5568])
            ("tp" variable
               (:pointer 1
                :type ("tm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [6675 6689])
            ("convert" variable
               (:functionpointer-flag t
                :type ("tm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [6713 6765])
            ("offset" variable
               (:pointer 1
                :type ("time_t" type (:type "class") nil nil))
                nil [6814 6829])
            ("localtime_offset" variable
               (:typemodifiers ("static")
                :type ("time_t" type (:type "class") nil nil))
                nil [12475 12506])
            ("my_mktime" function
               (:arguments 
                  ( ("tp" variable
                       (:pointer 1
                        :type ("tm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("time_t" type (:type "class") nil nil))
                nil [12546 12895])
            ("not_equal_tm" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("a" variable
                       (:pointer 1
                        :type ("tm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("b" variable
                       (:pointer 1
                        :type ("tm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [12966 13320])
            ("print_tm" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tp" variable
                       (:pointer 1
                        :type ("tm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [13322 13628])
            ("check_result" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tk" variable (:type ("time_t" type (:type "class") nil nil)) nil nil)
                    ("tmk" variable (:type ("tm" type
                         (:prototype t
                          :type "struct")
                          nil nil)) nil nil)
                    ("tl" variable (:type ("time_t" type (:type "class") nil nil)) nil nil)
                    ("lt" variable
                       (:pointer 1
                        :type ("tm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [13630 14005])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") nil nil)
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [14007 15834]))          
    :file "mktime.c"
    :pointmax 16067
    :fsize 16066
    :lastmodtime '(19352 21355)
    :unmatched-syntax '((semantic-list 6830 . 12472) (semantic-list 6648 . 6669) (symbol 6630 . 6647) (symbol 6623 . 6629) (semantic-list 5569 . 6297) (semantic-list 5397 . 5413) (symbol 5382 . 5396) (punctuation 5380 . 5381) (symbol 5377 . 5379) (STRUCT 5370 . 5376) (STATIC 5363 . 5369) (semantic-list 4208 . 5180) (semantic-list #("((a) < (b) ? (a) : (b))" 0 1 (macros (("b") ("a")))) 4172 . 4176) (punctuation 4170 . 4171) (symbol 4166 . 4170) (punctuation 4164 . 4165) (symbol 4160 . 4164) (punctuation 4158 . 4159) (symbol 4154 . 4158) (INT 4150 . 4153) (semantic-list 4112 . 4144) (symbol 4098 . 4111) (semantic-list #("((a) < (b) ? (a) : (b))" 0 1 (macros (("b") ("a")))) 4131 . 4135) (symbol 4091 . 4097) (semantic-list #("((a) < (b) ? (a) : (b))" 0 1 (macros (("b") ("a")))) 4131 . 4135) (STATIC 4084 . 4090) (semantic-list #("((a) < (b) ? (a) : (b))" 0 1 (macros (("b") ("a")))) 4131 . 4135))
    :lexical-table 
        '(("mktime" . ((symbol "my_mktime" 1894 . 1903)))
          ("TYPE_MINIMUM" (spp-arg-list ("t") 2377 . 2380) . ((semantic-list "((t) (TYPE_SIGNED (t) \\
			      ? ~ (t) 0 << (sizeof (t) * CHAR_BIT - 1) : (t) 0))" 2381 . 2464)))
          ("__isleap" (spp-arg-list ("year") 2970 . 2976) . ((semantic-list "((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))" 2981 . 3042)))
          ("TIME_T_MAX" . ((symbol "TYPE_MAXIMUM" 2751 . 2763) (semantic-list "(time_t)" 2764 . 2772)))
          ("TM_YEAR_BASE" . ((number "1900" 2802 . 2806)))
          ("INT_MAX" . ((symbol "TYPE_MAXIMUM" 2617 . 2629) (semantic-list "(int)" 2630 . 2635)))
          ("LEAP_SECONDS_POSSIBLE" . ((number "1" 1584 . 1585)))
          ("TIME_T_MIN" . ((symbol "TYPE_MINIMUM" 2683 . 2695) (semantic-list "(time_t)" 2696 . 2704)))
          ("CHAR_BIT" . ((number "8" 2128 . 2129)))
          ("INT_MIN" . ((symbol "TYPE_MINIMUM" 2558 . 2570) (semantic-list "(int)" 2571 . 2576)))
          ("TYPE_SIGNED" (spp-arg-list ("t") 2214 . 2217) . ((semantic-list "(! ((t) 0 < (t) -1))" 2218 . 2238)))
          ("TYPE_MAXIMUM" (spp-arg-list ("t") 2485 . 2488) . ((semantic-list "((t) (~ (t) 0 - TYPE_MINIMUM (t)))" 2489 . 2523)))
          ("EPOCH_YEAR" . ((number "1970" 2826 . 2830)))
          )

    )
   (semanticdb-table "emacs.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [902 921])
            ("signal.h" include (:system-flag t) nil [922 941])
            ("errno.h" include (:system-flag t) nil [942 960])
            ("stdio.h" include (:system-flag t) nil [961 979])
            ("sys/types.h" include (:system-flag t) nil [981 1003])
            ("sys/file.h" include (:system-flag t) nil [1004 1025])
            ("setjmp.h" include (:system-flag t) nil [1026 1045])
            ("unistd.h" include (:system-flag t) nil [1068 1087])
            ("lisp.h" include nil nil [1431 1448])
            ("commands.h" include nil nil [1449 1470])
            ("intervals.h" include nil nil [1471 1493])
            ("buffer.h" include nil nil [1494 1513])
            ("window.h" include nil nil [1514 1533])
            ("systty.h" include nil nil [1535 1554])
            ("blockinput.h" include nil nil [1555 1578])
            ("syssignal.h" include nil nil [1579 1601])
            ("process.h" include nil nil [1602 1622])
            ("frame.h" include nil nil [1623 1641])
            ("termhooks.h" include nil nil [1642 1664])
            ("keyboard.h" include nil nil [1665 1686])
            ("keymap.h" include nil nil [1687 1706])
            ("locale.h" include (:system-flag t) nil [1730 1749])
            ("sys/time.h" include (:system-flag t) nil [1780 1801])
            ("sys/resource.h" include (:system-flag t) nil [1802 1827])
            ("sys/personality.h" include (:system-flag t) nil [1868 1896])
            ("O_RDWR" variable (:constant-flag t) nil [1928 1934])
            ("setpgrp" variable (:constant-flag t) nil [2030 2037])
            ("malloc_warning" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2061 2102])
            ("set_time_zone_rule" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2103 2148])
            ("index" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [2167 2211])
            ("gdb_use_lsb" variable
               (:default-value "1"
                :type "int")
                nil [2309 2329])
            ("gdb_use_union" variable
               (:default-value "0"
                :type "int")
                nil [2392 2414])
            ("gdb_valbits" variable
               (:default-value "VALBITS"
                :type "int")
                nil [2451 2483])
            ("gdb_gctypebits" variable
               (:default-value "GCTYPEBITS"
                :type "int")
                nil [2484 2522])
            ("gdb_data_seg_bits" variable
               (:default-value "DATA_SEG_BITS;"
                :type "int")
                nil [2578 2622])
            ("PVEC_FLAG" variable
               (:default-value "PSEUDOVECTOR_FLAG"
                :type "int")
                nil [2669 2709])
            ("gdb_array_mark_flag" variable
               (:default-value "ARRAY_MARK_FLAG"
                :type "int")
                nil [2710 2758])
            ("gdb_pvec_type" variable
               (:default-value "PVEC_TYPE_MASK;"
                :type ("pvec_type" type (:type "enum") nil nil))
                nil [2899 2945])
            ("Vcommand_line_args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3004 3035])
            ("Vinvocation_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3131 3160])
            ("Vinvocation_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3218 3252])
            ("Vinstallation_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3376 3412])
            ("Vafter_init_time" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3489 3537])
            ("Vbefore_init_time" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3489 3537])
            ("Vkill_emacs_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3603 3632])
            ("empty_multibyte_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3699 3756])
            ("empty_unibyte_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3699 3756])
            ("Vpath_separator" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3788 3816])
            ("initialized" variable (:type "int") nil [3962 3978])
            ("malloc_state_ptr" variable
               (:pointer 1
                :type "void")
                nil [4109 4132])
            ("malloc_get_state" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type "void")
                nil [4212 4245])
            ("malloc_set_state" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :type "int")
                nil [4318 4349])
            ("malloc_using_checking" variable (:type "int") nil [4480 4506])
            ("Vsystem_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4583 4608])
            ("Vsystem_configuration" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4680 4714])
            ("Vsystem_configuration_options" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4816 4858])
            ("Qfile_name_handler_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4860 4897])
            ("Vsystem_messages_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4965 5001])
            ("Vprevious_system_messages_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5002 5047])
            ("Vsystem_time_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5048 5080])
            ("Vprevious_system_time_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5081 5122])
            ("inhibit_window_system" variable (:type "int") nil [5275 5301])
            ("emacs_priority" variable (:type "int") nil [5511 5536])
            ("running_asynch_code" variable (:type "int") nil [5687 5711])
            ("display_arg" variable (:type "int") nil [5914 5930])
            ("stack_bottom" variable
               (:pointer 1
                :type "char")
                nil [6032 6051])
            ("my_heap_start" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "void")
                nil [6126 6153])
            ("heap_bss_diff" variable
               (:typemodifiers ("static")
                :type "unsigned long")
                nil [6224 6259])
            ("MAX_HEAP_BSS_DIFF" variable (:constant-flag t) nil [6373 6390])
            ("Vinitial_window_system" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6431 6473])
            ("Vauto_save_list_file_name" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6507 6552])
            ("Vinhibit_redisplay" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6554 6592])
            ("noninteractive" variable (:type "int") nil [6660 6679])
            ("noninteractive1" variable (:type "int") nil [6833 6853])
            ("inhibit_x_resources" variable (:type "int") nil [6907 6931])
            ("daemon_name" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [6981 7006])
            ("daemon_pipe" variable
               (:dereference 1
                :type "int")
                nil [7087 7106])
            ("initial_argv" variable
               (:pointer 2
                :type "char")
                nil [7135 7155])
            ("initial_argc" variable (:type "int") nil [7156 7173])
            ("sort_args" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [7175 7200])
            ("syms_of_emacs" function
               (:prototype-flag t
                :type "void")
                nil [7201 7223])
            ("USAGE1" variable (:constant-flag t) nil [7359 7365])
            ("USAGE2" variable (:constant-flag t) nil [8692 8698])
            ("USAGE3" variable (:constant-flag t) nil [9547 9553])
            ("USAGE4" variable (:constant-flag t) nil [11636 11642])
            ("fatal_error_code" variable (:type "int") nil [12111 12132])
            ("fatal_error_in_progress" variable (:type "int") nil [12184 12212])
            ("fatal_error_signal_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [12308 12352])
            ("fatal_error_signal" function
               (:arguments 
                  ( ("sig" variable (:type "int") nil nil))                  
                :type "void")
                nil [12661 13415])
            ("abort" function (:type "void") nil [13967 14089])
            ("init_cmdargs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("argc" variable (:type "int") nil nil)
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        nil nil)
                    ("skip_args" variable (:type "int") nil nil))                  
                :type "void")
                nil [14168 18176])
            ("DEFUN_ARGS_" variable (:type ("Sinvocation_name" type (:type "class") nil nil)) nil [18178 18353])
            ("doc" variable
               (:default-value "DEFUN (\"invocation-name\", Finvocation_name, Sinvocation_name, 0, 0, 0,
       doc: /* Return the program name that was used to run Emacs.
Any directory names are omitted.  */)"
                :type "int")
                nil [18178 18353])
            ("Sinvocation_name" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [18178 18409])
            ("DEFUN_ARGS_" variable (:type ("Sinvocation_directory" type (:type "class") nil nil)) nil [18411 18592])
            ("doc" variable
               (:default-value "DEFUN (\"invocation-directory\", Finvocation_directory, Sinvocation_directory,
       0, 0, 0,
       doc: /* Return the directory name in which the Emacs executable was located.  */)"
                :type "int")
                nil [18411 18592])
            ("Sinvocation_directory" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [18411 18653])
            ("dump_tz" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "\"UtC0\""
                :type "char")
                nil [18814 18845])
            ("argmatch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("argv" variable
                       (:pointer 2
                        :type "char")
                        nil nil)
                    ("argc" variable (:type "int") nil nil)
                    ("sstr" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("lstr" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("minlen" variable (:type "int") nil nil)
                    ("valptr" variable
                       (:pointer 2
                        :type "char")
                        nil nil)
                    ("skipptr" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [20008 21075])
            ("malloc_initialize_hook" function
               (:typemodifiers ("static")
                :type "void")
                nil [21274 22058])
            ("malloc_initialize_hook" variable (:type "int") nil [22098 22121])
            ("REPORT_EMACS_BUG_ADDRESS" variable (:constant-flag t) nil [22162 22186])
            ("REPORT_EMACS_BUG_PRETEST_ADDRESS" variable (:constant-flag t) nil [22219 22251])
            ("bug_reporting_address" function
               (:pointer 1
                :type "char")
                nil [22370 22972])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [23000 23009])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [23010 23022]))                  
                :type "int")
                nil [22990 53315])
            ("standard_args" type
               (:members 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [53492 53509])
                    ("longname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [53512 53533])
                    ("priority" variable (:type "int") (reparse-symbol classsubparts) [53536 53549])
                    ("nargs" variable (:type "int") (reparse-symbol classsubparts) [53552 53562]))                  
                :type "struct")
                nil [53467 53565])
            ("standard_args" variable
               (:dereference 1
                :constant-flag t
                :default-value "{
  { \"-version\", \"--version\", 150, 0 },
#ifdef HAVE_SHM
  { \"-nl\", \"--no-shared-memory\", 140, 0 },
#endif
  { \"-t\", \"--terminal\", 120, 1 },
  { \"-nw\", \"--no-window-system\", 110, 0 },
  { \"-nw\", \"--no-windows\", 110, 0 },
  { \"-batch\", \"--batch\", 100, 0 },
  { \"-script\", \"--script\", 100, 1 },
  { \"-daemon\", \"--daemon\", 99, 0 },
  { \"-help\", \"--help\", 90, 0 },
  { \"-no-unibyte\", \"--no-unibyte\", 83, 0 },
  { \"-multibyte\", \"--multibyte\", 82, 0 },
  { \"-unibyte\", \"--unibyte\", 81, 0 },
  { \"-no-multibyte\", \"--no-multibyte\", 80, 0 },
  { \"-nl\", \"--no-loadup\", 70, 0 },
  /* -d must come last before the options handled in startup.el.  */
  { \"-d\", \"--display\", 60, 1 },
  { \"-display\", 0, 60, 1 },
  /* Now for the options handled in `command-line' (startup.el).  */
  { \"-Q\", \"--quick\", 55, 0 },
  { \"-quick\", 0, 55, 0 },
  { \"-q\", \"--no-init-file\", 50, 0 },
  { \"-no-init-file\", 0, 50, 0 },
  { \"-no-site-file\", \"--no-site-file\", 40, 0 },
  { \"-u\", \"--user\", 30, 1 },
  { \"-user\", 0, 30, 1 },
  { \"-debug-init\", \"--debug-init\", 20, 0 },
  { \"-iconic\", \"--iconic\", 15, 0 },
  { \"-D\", \"--basic-display\", 12, 0},
  { \"-basic-display\", 0, 12, 0},
  { \"-nbc\", \"--no-blinking-cursor\", 12, 0 },
  /* Now for the options handled in `command-line-1' (startup.el).  */
  { \"-nbi\", \"--no-bitmap-icon\", 10, 0 },
  { \"-bg\", \"--background-color\", 10, 1 },
  { \"-background\", 0, 10, 1 },
  { \"-fg\", \"--foreground-color\", 10, 1 },
  { \"-foreground\", 0, 10, 1 },
  { \"-bd\", \"--border-color\", 10, 1 },
  { \"-bw\", \"--border-width\", 10, 1 },
  { \"-ib\", \"--internal-border\", 10, 1 },
  { \"-ms\", \"--mouse-color\", 10, 1 },
  { \"-cr\", \"--cursor-color\", 10, 1 },
  { \"-fn\", \"--font\", 10, 1 },
  { \"-font\", 0, 10, 1 },
  { \"-fs\", \"--fullscreen\", 10, 0 },
  { \"-fw\", \"--fullwidth\", 10, 0 },
  { \"-fh\", \"--fullheight\", 10, 0 },
  { \"-mm\", \"--maximized\", 10, 0 },
  { \"-g\", \"--geometry\", 10, 1 },
  { \"-geometry\", 0, 10, 1 },
  { \"-T\", \"--title\", 10, 1 },
  { \"-title\", 0, 10, 1 },
  { \"-name\", \"--name\", 10, 1 },
  { \"-xrm\", \"--xrm\", 10, 1 },
  { \"-parent-id\", \"--parent-id\", 10, 1 },
  { \"-r\", \"--reverse-video\", 5, 0 },
  { \"-rv\", 0, 5, 0 },
  { \"-reverse\", 0, 5, 0 },
  { \"-hb\", \"--horizontal-scroll-bars\", 5, 0 },
  { \"-vb\", \"--vertical-scroll-bars\", 5, 0 },
  { \"-color\", \"--color\", 5, 0},
  { \"-no-splash\", \"--no-splash\", 3, 0 },
  { \"-no-desktop\", \"--no-desktop\", 3, 0 },
#ifdef HAVE_NS
  { \"-NSAutoLaunch\", 0, 5, 1 },
  { \"-NXAutoLaunch\", 0, 5, 1 },
  { \"-disable-font-backend\", \"--disable-font-backend\", 65, 0 },
  { \"-_NSMachLaunch\", 0, 85, 1 },
  { \"-MachLaunch\", 0, 85, 1 },
  { \"-macosx\", 0, 85, 0 },
  { \"-NSHost\", 0, 85, 1 },
#endif
  /* These have the same priority as ordinary file name args,
     so they are not reordered with respect to those.  */
  { \"-L\", \"--directory\", 0, 1 },
  { \"-directory\", 0, 0, 1 },
  { \"-l\", \"--load\", 0, 1 },
  { \"-load\", 0, 0, 1 },
  /* This has no longname, because using --scriptload confuses sort_args,
     because then the --script long option seems to match twice; ie
     you can't have a long option which is a prefix of another long
     option.  In any case, this is entirely an internal option.  */
  { \"-scriptload\", NULL, 0, 1 },
  { \"-f\", \"--funcall\", 0, 1 },
  { \"-funcall\", 0, 0, 1 },
  { \"-eval\", \"--eval\", 0, 1 },
  { \"-execute\", \"--execute\", 0, 1 },
  { \"-find-file\", \"--find-file\", 0, 1 },
  { \"-visit\", \"--visit\", 0, 1 },
  { \"-file\", \"--file\", 0, 1 },
  { \"-insert\", \"--insert\", 0, 1 },
#ifdef HAVE_NS
  { \"-NXOpen\", 0, 0, 1 },
  { \"-NXOpenTemp\", 0, 0, 1 },
  { \"-NSOpen\", 0, 0, 1 },
  { \"-NSOpenTemp\", 0, 0, 1 },
  { \"-GSFilePath\", 0, 0, 1 },
#endif
  /* This should be processed after ordinary file name args and the like.  */
  { \"-kill\", \"--kill\", -10, 0 },
}"
                :type ("standard_args" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [53567 57321])
            ("sort_args" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("argc" variable (:type "int") nil nil)
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [57670 61899])
            ("DEFUN_ARGS_" variable (:type ("Skill_emacs" type (:type "class") nil nil)) nil [61902 62258])
            ("doc" variable
               (:default-value "DEFUN (\"kill-emacs\", Fkill_emacs, Skill_emacs, 0, 1, \"P\",
       doc: /* Exit the Emacs job and kill it.
If ARG is an integer, return ARG as the exit program code.
If ARG is a string, stuff it as keyboard input.

The value of `kill-emacs-hook', if not void,
is a list of functions (of no args),
all of which are called before Emacs is actually killed.  */)"
                :type "int")
                nil [61902 62258])
            ("Skill_emacs" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61902 62889])
            ("shut_down_emacs" function
               (:arguments 
                  ( ("no_x" variable (:type "int") nil nil)
                    ("sig" variable (:type "int") nil nil)
                    ("stuff" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [63372 65163])
            ("DEFUN_ARGS_" variable (:type ("Sdump_emacs" type (:type "class") nil nil)) nil [65946 66268])
            ("doc" variable
               (:default-value "DEFUN (\"dump-emacs\", Fdump_emacs, Sdump_emacs, 2, 2, 0,
       doc: /* Dump current state of Emacs into executable file FILENAME.
Take symbols from SYMFILE (presumably the file you executed to run Emacs).
This is used in the file `loadup.el' when building Emacs.

You must run Emacs in batch mode in order to dump it.  */)"
                :type "int")
                nil [65946 66268])
            ("Sdump_emacs" function
               (:arguments 
                  ( ("symfile" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("filename" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65946 68958])
            ("fixup_locale" function (:type "void") nil [69081 69262])
            ("synchronize_locale" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("category" variable (:type "int") nil nil)
                    ("plocale" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("desired_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [69352 69694])
            ("synchronize_system_time_locale" function (:type "void") nil [69769 69903])
            ("synchronize_system_messages_locale" function (:type "void") nil [69989 70165])
            ("SEPCHAR" variable (:constant-flag t) nil [70220 70227])
            ("decode_env_path" function
               (:arguments 
                  ( ("defalt" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("evarname" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [70240 71704])
            ("DEFUN_ARGS_" variable (:type ("Sdaemonp" type (:type "class") nil nil)) nil [71706 71887])
            ("doc" variable
               (:default-value "DEFUN (\"daemonp\", Fdaemonp, Sdaemonp, 0, 0, 0,
       doc: /* Return non-nil if the current emacs process is a daemon.
If the daemon was given a name argument, return that name. */)"
                :type "int")
                nil [71706 71887])
            ("Sdaemonp" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [71706 72025])
            ("DEFUN_ARGS_" variable (:type ("Sdaemon_initialized" type (:type "class") nil nil)) nil [72027 72301])
            ("doc" variable
               (:default-value "DEFUN (\"daemon-initialized\", Fdaemon_initialized, Sdaemon_initialized, 0, 0, 0,
       doc: /* Mark the Emacs daemon as being initialized.
This finishes the daemonization process by doing the other half of detaching
from the parent process and its tty file descriptors.  */)"
                :type "int")
                nil [72027 72301])
            ("Sdaemon_initialized" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [72027 73370])
            ("syms_of_emacs" function (:type "void") nil [73372 78604]))          
    :file "emacs.c"
    :pointmax 78691
    :fsize 78690
    :lastmodtime '(19383 49279)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 72027 . 72301) (symbol "__attribute__" 72027 . 72301) (symbol "Lisp_Subr" 72027 . 72301) (symbol "Lisp_Object" 72027 . 72301) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 71706 . 71887) (symbol "__attribute__" 71706 . 71887) (symbol "Lisp_Subr" 71706 . 71887) (symbol "Lisp_Object" 71706 . 71887) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 65946 . 66268) (symbol "__attribute__" 65946 . 66268) (symbol "Lisp_Subr" 65946 . 66268) (symbol "Lisp_Object" 65946 . 66268) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 61902 . 62258) (symbol "__attribute__" 61902 . 62258) (symbol "Lisp_Subr" 61902 . 62258) (symbol "Lisp_Object" 61902 . 62258) (punctuation 22096 . 22097) (semantic-list 22093 . 22095) (semantic-list 22065 . 22092) (VOID 22060 . 22064) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 18411 . 18592) (symbol "__attribute__" 18411 . 18592) (symbol "Lisp_Subr" 18411 . 18592) (symbol "Lisp_Object" 18411 . 18592) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 18178 . 18353) (symbol "__attribute__" 18178 . 18353) (symbol "Lisp_Subr" 18178 . 18353) (symbol "Lisp_Object" 18178 . 18353))
    :lexical-table 
        '(("O_RDWR" . ((number "2" 1935 . 1936)))
          ("USAGE1" . ((string "\"\\
Usage: %s [OPTION-OR-FILENAME]...\\n\\
\\n\\
Run Emacs, the extensible, customizable, self-documenting real-time\\n\\
display editor.  The recommended way to start Emacs for normal editing\\n\\
is with no options at all.\\n\\
\\n\\
Run M-x info RET m emacs RET m emacs invocation RET inside Emacs to\\n\\
read the main documentation for these command-line arguments.\\n\\
\\n\\
Initialization options:\\n\\
\\n\\
--batch                     do not do interactive display; implies -q\\n\\
--daemon                    start a server in the background\\n\\
--debug-init                enable Emacs Lisp debugger for init file\\n\\
--display, -d DISPLAY       use X server DISPLAY\\n\\
--no-desktop                do not load a saved desktop\\n\\
--no-init-file, -q          load neither ~/.emacs nor default.el\\n\\
--no-shared-memory, -nl     do not use shared memory\\n\\
--no-site-file              do not load site-start.el\\n\\
--no-splash                 do not display a splash screen on startup\\n\\
--no-window-system, -nw     do not communicate with X, ignoring $DISPLAY\\n\\
--quick, -Q                 equivalent to -q --no-site-file --no-splash\\n\\
--script FILE               run FILE as an Emacs Lisp script\\n\\
--terminal, -t DEVICE       use DEVICE for terminal I/O\\n\\
--user, -u USER             load ~USER/.emacs instead of your own\\n\\
\\n%s\"" 7366 . 8682)))
          ("setpgrp" . ((symbol "setpgid" 2038 . 2045)))
          ("USAGE2" . ((string "\"\\
Action options:\\n\\
\\n\\
FILE                    visit FILE using find-file\\n\\
+LINE                   go to line LINE in next FILE\\n\\
+LINE:COLUMN            go to line LINE, column COLUMN, in next FILE\\n\\
--directory, -L DIR     add DIR to variable load-path\\n\\
--eval EXPR             evaluate Emacs Lisp expression EXPR\\n\\
--execute EXPR          evaluate Emacs Lisp expression EXPR\\n\\
--file FILE             visit FILE using find-file\\n\\
--find-file FILE        visit FILE using find-file\\n\\
--funcall, -f FUNC      call Emacs Lisp function FUNC with no arguments\\n\\
--insert FILE           insert contents of FILE into current buffer\\n\\
--kill                  exit without asking for confirmation\\n\\
--load, -l FILE         load Emacs Lisp FILE using the load function\\n\\
--visit FILE            visit FILE using find-file\\n\\
\\n\"" 8699 . 9537)))
          ("USAGE3" . ((string "\"\\
Display options:\\n\\
\\n\\
--background-color, -bg COLOR   window background color\\n\\
--basic-display, -D             disable many display features;\\n\\
                                  used for debugging Emacs\\n\\
--border-color, -bd COLOR       main border color\\n\\
--border-width, -bw WIDTH       width of main border\\n\\
--color, --color=MODE           override color mode for character terminals;\\n\\
                                  MODE defaults to `auto', and can also\\n\\
                                  be `never', `auto', `always',\\n\\
                                  or a mode name like `ansi8'\\n\\
--cursor-color, -cr COLOR       color of the Emacs cursor indicating point\\n\\
--font, -fn FONT                default font; must be fixed-width\\n\\
--foreground-color, -fg COLOR   window foreground color\\n\\
--fullheight, -fh               make the first frame high as the screen\\n\\
--fullscreen, -fs               make first frame fullscreen\\n\\
--fullwidth, -fw                make the first frame wide as the screen\\n\\
--maximized, -mm                make the first frame maximized\\n\\
--geometry, -g GEOMETRY         window geometry\\n\\
--no-bitmap-icon, -nbi          do not use picture of gnu for Emacs icon\\n\\
--iconic                        start Emacs in iconified state\\n\\
--internal-border, -ib WIDTH    width between text and main border\\n\\
--line-spacing, -lsp PIXELS     additional space to put between lines\\n\\
--mouse-color, -ms COLOR        mouse cursor color in Emacs window\\n\\
--name NAME                     title for initial Emacs frame\\n\\
--no-blinking-cursor, -nbc      disable blinking cursor\\n\\
--reverse-video, -r, -rv        switch foreground and background\\n\\
--title, -T TITLE               title for initial Emacs frame\\n\\
--vertical-scroll-bars, -vb     enable vertical scroll bars\\n\\
--xrm XRESOURCES                set additional X resources\\n\\
--parent-id XID                 set parent window\\n\\
--help                          display this help and exit\\n\\
--version                       output version information and exit\\n\\
\\n\"" 9554 . 11626)))
          ("USAGE4" . ((string "\"\\
You can generally also specify long option names with a single -; for\\n\\
example, -batch as well as --batch.  You can use any unambiguous\\n\\
abbreviation for a --option.\\n\\
\\n\\
Various environment variables and window system resources also affect\\n\\
Emacs' operation.  See the main documentation.\\n\\
\\n\\
Report bugs to %s.  First, please see the Bugs\\n\\
section of the Emacs manual or the file BUGS.\\n\"" 11643 . 12048)))
          ("REPORT_EMACS_BUG_PRETEST_ADDRESS" . ((string "\"bug-gnu-emacs@gnu.org\"" 22252 . 22275)))
          ("SEPCHAR" . ((string "':'" 70228 . 70231)))
          ("REPORT_EMACS_BUG_ADDRESS" . ((string "\"bug-gnu-emacs@gnu.org\"" 22187 . 22210)))
          ("MAX_HEAP_BSS_DIFF" . ((semantic-list "(1024*1024)" 6391 . 6402)))
          )

    )
   (semanticdb-table "prefix-args.c"
    :major-mode 'c-mode
    :tags 
        '( ("stdlib.h" include (:system-flag t) nil [1983 2003])
            ("stdio.h" include (:system-flag t) nil [2052 2070])
            ("stdlib.h" include (:system-flag t) nil [2071 2090])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") nil nil)
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        nil nil))                  
                :type "int")
                nil [2092 2537]))          
    :file "prefix-args.c"
    :pointmax 2624
    :fsize 2623
    :lastmodtime '(19383 49281)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "alloc.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [883 902])
            ("stdio.h" include (:system-flag t) nil [903 921])
            ("limits.h" include (:system-flag t) nil [922 941])
            ("setjmp.h" include (:system-flag t) nil [964 983])
            ("stddef.h" include (:system-flag t) nil [1005 1024])
            ("signal.h" include (:system-flag t) nil [1118 1137])
            ("pthread.h" include (:system-flag t) nil [1167 1187])
            ("lisp.h" include nil nil [1419 1436])
            ("process.h" include nil nil [1437 1457])
            ("intervals.h" include nil nil [1458 1480])
            ("puresize.h" include nil nil [1481 1502])
            ("buffer.h" include nil nil [1503 1522])
            ("window.h" include nil nil [1523 1542])
            ("keyboard.h" include nil nil [1543 1564])
            ("frame.h" include nil nil [1565 1583])
            ("blockinput.h" include nil nil [1584 1607])
            ("character.h" include nil nil [1608 1630])
            ("syssignal.h" include nil nil [1631 1653])
            ("termhooks.h" include nil nil [1654 1676])
            ("setjmp.h" include (:system-flag t) nil [1706 1725])
            ("unistd.h" include (:system-flag t) nil [1955 1974])
            ("INCLUDED_FCNTL" variable (:constant-flag t) nil [2047 2061])
            ("fcntl.h" include (:system-flag t) nil [2062 2080])
            ("O_WRONLY" variable (:constant-flag t) nil [2113 2121])
            ("malloc.h" include (:system-flag t) nil [2217 2236])
            ("__malloc_size_t" variable (:constant-flag t) nil [2330 2345])
            ("MMAP_MAX_AREAS" variable (:constant-flag t) nil [2485 2499])
            ("alloc_mutex" variable
               (:typemodifiers ("static")
                :type ("pthread_mutex_t" type (:type "class") nil nil))
                nil [3808 3843])
            ("BLOCK_INPUT_ALLOC" variable (:constant-flag t) nil [3853 3870])
            ("UNBLOCK_INPUT_ALLOC" variable (:constant-flag t) nil [4240 4259])
            ("bytes_used_when_full" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4873 4917])
            ("bytes_used_when_reconsidered" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4919 4971])
            ("MARK_STRING" variable (:constant-flag t) nil [5085 5096])
            ("UNMARK_STRING" variable (:constant-flag t) nil [5140 5153])
            ("STRING_MARKED_P" variable (:constant-flag t) nil [5197 5212])
            ("VECTOR_MARK" variable (:constant-flag t) nil [5262 5273])
            ("VECTOR_UNMARK" variable (:constant-flag t) nil [5317 5330])
            ("VECTOR_MARKED_P" variable (:constant-flag t) nil [5374 5389])
            ("GC_STRING_BYTES" variable (:constant-flag t) nil [5652 5667])
            ("GC_STRING_CHARS" variable (:constant-flag t) nil [5698 5713])
            ("consing_since_gc" variable (:type "int") nil [5808 5829])
            ("cons_cells_consed" variable (:type "int") nil [5894 5922])
            ("floats_consed" variable (:type "int") nil [5923 5947])
            ("vector_cells_consed" variable (:type "int") nil [5948 5978])
            ("symbols_consed" variable (:type "int") nil [5979 6004])
            ("string_chars_consed" variable (:type "int") nil [6005 6035])
            ("misc_objects_consed" variable (:type "int") nil [6036 6066])
            ("intervals_consed" variable (:type "int") nil [6067 6094])
            ("strings_consed" variable (:type "int") nil [6095 6120])
            ("gc_cons_threshold" variable (:type "int") nil [6189 6217])
            ("gc_relative_threshold" variable (:type "int") nil [6279 6311])
            ("Vgc_cons_percentage" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6313 6352])
            ("memory_full_cons_threshold" variable (:type "int") nil [6446 6483])
            ("gc_in_progress" variable (:type "int") nil [6512 6531])
            ("abort_on_gc" variable (:type "int") nil [6690 6706])
            ("garbage_collection_messages" variable (:type "int") nil [6775 6807])
            ("malloc_sbrk_used" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [6834 6892])
            ("malloc_sbrk_unused" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [6919 6979])
            ("total_vector_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7025 7098])
            ("total_symbols" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7025 7098])
            ("total_markers" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7025 7098])
            ("total_conses" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7025 7098])
            ("total_free_symbols" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7099 7168])
            ("total_free_markers" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7099 7168])
            ("total_free_conses" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7099 7168])
            ("total_floats" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7169 7212])
            ("total_free_floats" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7169 7212])
            ("spare_memory" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [7377 7406])
            ("SPARE_MEMORY" variable (:constant-flag t) nil [7479 7491])
            ("malloc_hysteresis" variable
               (:typemodifiers ("static")
                :type "int")
                nil [7577 7606])
            ("Vpurify_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [7683 7708])
            ("Vmemory_full" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [7769 7794])
            ("pure" variable
               (:dereference 1
                :default-value "{1,}"
                :type "int")
                nil [8146 8226])
            ("PUREBEG" variable (:constant-flag t) nil [8235 8242])
            ("purebeg" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [8451 8472])
            ("pure_size" variable
               (:typemodifiers ("static")
                :type ("size_t" type (:type "class") nil nil))
                nil [8473 8497])
            ("pure_bytes_used_before_overflow" variable
               (:typemodifiers ("static")
                :type ("size_t" type (:type "class") nil nil))
                nil [8640 8686])
            ("PURE_POINTER_P" variable (:constant-flag t) nil [8751 8765])
            ("pure_bytes_used" variable (:type "int") nil [9018 9044])
            ("pure_bytes_used_lisp" variable
               (:typemodifiers ("static")
                :type "int")
                nil [9118 9156])
            ("pure_bytes_used_non_lisp" variable
               (:typemodifiers ("static")
                :type "int")
                nil [9230 9272])
            ("pending_malloc_warning" variable
               (:pointer 1
                :type "char")
                nil [9358 9387])
            ("Vmemory_signal_data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9460 9492])
            ("MAX_SAVE_STACK" variable (:constant-flag t) nil [9586 9600])
            ("stack_copy" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [9681 9705])
            ("stack_copy_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [9706 9733])
            ("ignore_warnings" variable
               (:typemodifiers ("static")
                :type "int")
                nil [9833 9860])
            ("Qchar_table_extra_slots" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9862 9918])
            ("Qgc_cons_threshold" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9862 9918])
            ("Qpost_gc_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9960 10001])
            ("Vpost_gc_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9960 10001])
            ("Vgc_elapsed" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10003 10027])
            ("gcs_done" variable (:type "int") nil [10066 10085])
            ("mark_buffer" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10111 10154])
            ("mark_terminals" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10155 10194])
            ("mark_kboards" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10195 10232])
            ("mark_ttys" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10233 10267])
            ("mark_backtrace" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10268 10307])
            ("gc_sweep" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10308 10341])
            ("mark_glyph_matrix" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph_matrix" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10342 10401])
            ("mark_face_cache" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("face_cache" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10402 10457])
            ("mark_fringe_data" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10485 10526])
            ("allocate_string" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_String" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [10560 10615])
            ("compact_small_strings" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10616 10662])
            ("free_large_strings" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10663 10706])
            ("sweep_strings" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [10707 10745])
            ("message_enable_multibyte" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [10747 10783])
            ("mem_type" type
               (:members 
                  ( ("MEM_TYPE_NON_LISP" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11003 11021])
                    ("MEM_TYPE_BUFFER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11024 11040])
                    ("MEM_TYPE_CONS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11043 11057])
                    ("MEM_TYPE_STRING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11060 11076])
                    ("MEM_TYPE_MISC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11079 11093])
                    ("MEM_TYPE_SYMBOL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11096 11112])
                    ("MEM_TYPE_FLOAT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11115 11130])
                    ("MEM_TYPE_VECTORLIKE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11401 11422]))                  
                :type "enum")
                nil [10985 11423])
            ("lisp_align_malloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("mem_type" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11425 11493])
            ("lisp_malloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("mem_type" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [11494 11556])
            ("refill_memory_reserve" function
               (:prototype-flag t
                :type "void")
                nil [11557 11587])
            ("stdio.h" include (:system-flag t) nil [11685 11703])
            ("Vdead" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [11841 11866])
            ("mem_node" type
               (:members 
                  ( ("right" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [13139 13169])
                    ("left" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [13139 13169])
                    ("parent" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [13240 13264])
                    ("end" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [13312 13330])
                    ("start" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [13312 13330])
                    ("color" variable (:type ("" type
                         (:members 
                            ( ("MEM_BLACK" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [13361 13371])
                              ("MEM_RED" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [13372 13380]))                            
                          :type "enum")
                          nil nil)) (reparse-symbol classsubparts) [13355 13387])
                    ("type" variable (:type ("mem_type" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [13413 13432]))                  
                :type "struct")
                nil [12973 13435])
            ("stack_base" variable
               (:pointer 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [13482 13506])
            ("mem_root" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("mem_node" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [13567 13600])
            ("max_heap_address" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "void")
                nil [13656 13705])
            ("min_heap_address" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "void")
                nil [13656 13705])
            ("mem_z" variable
               (:typemodifiers ("static")
                :type ("mem_node" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [13742 13771])
            ("MEM_NIL" variable (:constant-flag t) nil [13780 13787])
            ("lisp_malloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("mem_type" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13796 13858])
            ("allocate_vectorlike" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [13859 13923])
            ("lisp_free" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("POINTER_TYPE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13924 13968])
            ("mark_stack" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [13969 14004])
            ("live_vector_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [14005 14063])
            ("live_buffer_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [14064 14122])
            ("live_string_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [14123 14181])
            ("live_cons_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [14182 14238])
            ("live_symbol_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [14239 14297])
            ("live_float_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [14298 14355])
            ("live_misc_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [14356 14412])
            ("mark_maybe_object" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14413 14462])
            ("mark_memory" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14463 14514])
            ("mem_init" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14515 14548])
            ("mem_insert" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("mem_type" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("mem_node" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [14549 14621])
            ("mem_insert_fixup" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14622 14676])
            ("mem_rotate_left" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14677 14730])
            ("mem_rotate_right" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14731 14785])
            ("mem_delete" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14786 14834])
            ("mem_delete_fixup" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14835 14889])
            ("mem_find" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("mem_node" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [14904 14944])
            ("check_gcpros" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [14995 15032])
            ("gcprolist" variable
               (:pointer 1
                :type ("gcpro" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15138 15162])
            ("NSTATICS" variable (:constant-flag t) nil [15296 15304])
            ("staticvec" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{&Vpurify_flag}"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15311 15369])
            ("staticidx" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [15419 15444])
            ("pure_alloc" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [15446 15497])
            ("ALIGN" variable (:constant-flag t) nil [15609 15614])
            ("malloc_warning" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [15970 16047])
            ("display_malloc_warning" function (:type "void") nil [16101 16288])
            ("BYTES_USED" variable (:constant-flag t) nil [16324 16334])
            ("buffer_memory_full" function (:type "void") nil [16474 17064])
            ("MALLOC_BLOCK_INPUT" variable (:constant-flag t) nil [21990 22008])
            ("MALLOC_UNBLOCK_INPUT" variable (:constant-flag t) nil [22029 22049])
            ("xmalloc" function
               (:pointer 1
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [22230 22453])
            ("xrealloc" function
               (:pointer 1
                :arguments 
                  ( ("block" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [22529 22953])
            ("xfree" function
               (:arguments 
                  ( ("block" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [23001 23287])
            ("xstrdup" function
               (:pointer 1
                :arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "char")
                nil [23329 23471])
            ("safe_alloca_unwind" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [23504 23714])
            ("lisp_malloc" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("nbytes" variable (:type ("size_t" type (:type "class") nil nil)) nil nil)
                    ("type" variable (:type ("mem_type" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [23975 24874])
            ("lisp_free" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("block" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [24973 25180])
            ("USE_POSIX_MEMALIGN" variable (:constant-flag t) nil [25671 25689])
            ("BLOCK_ALIGN" variable (:constant-flag t) nil [25751 25762])
            ("BLOCK_PADDING" variable (:constant-flag t) nil [26436 26449])
            ("BLOCK_BYTES" variable (:constant-flag t) nil [26460 26471])
            ("ABLOCKS_SIZE" variable (:constant-flag t) nil [26590 26602])
            ("ablock" type
               (:members 
                  ( ("x" variable (:type ("" type
                         (:members 
                            ( ("payload" variable
                                 (:dereference 1
                                  :type "char")
                                  (reparse-symbol classsubparts) [26674 26700])
                              ("next_free" variable
                                 (:pointer 1
                                  :type ("ablock" type
                                       (:prototype t
                                        :type "struct")
                                        nil nil))
                                  (reparse-symbol classsubparts) [26705 26730]))                            
                          :type "union")
                          nil nil)) (reparse-symbol classsubparts) [26660 26737])
                    ("abase" variable
                       (:pointer 1
                        :type ("ablocks" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [27300 27322])
                    ("padding" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [27471 27499]))                  
                :type "struct")
                nil [26642 27509])
            ("ablocks" type
               (:members 
                  ( ("blocks" variable
                       (:dereference 1
                        :type ("ablock" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [27576 27611]))                  
                :type "struct")
                nil [27557 27614])
            ("ABLOCKS_BYTES" variable (:constant-flag t) nil [27684 27697])
            ("ABLOCK_ABASE" variable (:constant-flag t) nil [27749 27761])
            ("ABLOCKS_BUSY" variable (:constant-flag t) nil [27933 27945])
            ("ABLOCKS_BASE" variable (:constant-flag t) nil [28077 28089])
            ("free_ablock" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("ablock" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28248 28282])
            ("lisp_align_malloc" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("nbytes" variable (:type ("size_t" type (:type "class") nil nil)) nil nil)
                    ("type" variable (:type ("mem_type" type (:type "enum") nil nil)) nil nil))                  
                :type "void")
                nil [28432 31184])
            ("lisp_align_free" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("block" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [31186 32362])
            ("allocate_buffer" function
               (:pointer 1
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [32457 32704])
            ("INTERVAL_BLOCK_SIZE" variable (:constant-flag t) nil [39378 39397])
            ("interval_block" type
               (:members 
                  ( ("intervals" variable
                       (:dereference 1
                        :type ("interval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [39642 39689])
                    ("next" variable
                       (:pointer 1
                        :type ("interval_block" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [39692 39720]))                  
                :type "struct")
                nil [39559 39723])
            ("interval_block" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("interval_block" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [39804 39849])
            ("interval_block_index" variable
               (:typemodifiers ("static")
                :type "int")
                nil [39931 39963])
            ("total_intervals" variable
               (:typemodifiers ("static")
                :type "int")
                nil [40008 40057])
            ("total_free_intervals" variable
               (:typemodifiers ("static")
                :type "int")
                nil [40008 40057])
            ("interval_free_list" variable (:type ("INTERVAL" type (:type "class") nil nil)) nil [40091 40119])
            ("n_interval_blocks" variable
               (:typemodifiers ("static")
                :type "int")
                nil [40173 40202])
            ("init_intervals" function
               (:typemodifiers ("static")
                :type "void")
                nil [40245 40400])
            ("make_interval" function (:type ("INTERVAL" type (:type "class") nil nil)) nil [40434 41219])
            ("mark_interval" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("i" variable (:type ("INTERVAL" type (:type "class") nil nil)) nil nil)
                    ("dummy" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [41262 41461])
            ("mark_interval_tree" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tree" variable (:type ("INTERVAL" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [41583 41880])
            ("MARK_INTERVAL_TREE" variable (:constant-flag t) nil [41935 41953])
            ("UNMARK_BALANCE_INTERVALS" variable (:constant-flag t) nil [42086 42110])
            ("SBLOCK_SIZE" variable (:constant-flag t) nil [43962 43973])
            ("LARGE_STRING_BYTES" variable (:constant-flag t) nil [44123 44141])
            ("sdata" type
               (:members 
                  ( ("string" variable
                       (:pointer 1
                        :type ("Lisp_String" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [44662 44689])
                    ("u" variable (:type ("" type
                         (:members 
                            ( ("data" variable
                                 (:dereference 1
                                  :type "unsigned char")
                                  (reparse-symbol classsubparts) [44927 44949])
                              ("nbytes" variable (:type "int") (reparse-symbol classsubparts) [44987 45004]))                            
                          :type "union")
                          nil nil)) (reparse-symbol classsubparts) [44877 45011])
                    ("SDATA_NBYTES" variable (:constant-flag t) (reparse-symbol classsubparts) [45022 45034])
                    ("SDATA_DATA" variable (:constant-flag t) (reparse-symbol classsubparts) [45060 45070]))                  
                :type "struct")
                nil [44279 45128])
            ("sblock" type
               (:members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("sblock" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [45405 45425])
                    ("next_free" variable
                       (:pointer 1
                        :type ("sdata" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [45566 45590])
                    ("first_data" variable (:type ("sdata" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [45618 45642]))                  
                :type "struct")
                nil [45364 45645])
            ("STRING_BLOCK_SIZE" variable (:constant-flag t) nil [45759 45776])
            ("string_block" type
               (:members 
                  ( ("strings" variable
                       (:dereference 1
                        :type ("Lisp_String" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [46022 46068])
                    ("next" variable
                       (:pointer 1
                        :type ("string_block" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [46071 46097]))                  
                :type "struct")
                nil [45943 46100])
            ("current_sblock" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("sblock" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [46315 46368])
            ("oldest_sblock" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("sblock" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [46315 46368])
            ("large_sblocks" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("sblock" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [46413 46449])
            ("string_blocks" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("string_block" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [46516 46558])
            ("n_string_blocks" variable
               (:typemodifiers ("static")
                :type "int")
                nil [46559 46586])
            ("string_free_list" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("Lisp_String" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [46623 46667])
            ("total_free_strings" variable
               (:typemodifiers ("static")
                :type "int")
                nil [46715 46760])
            ("total_strings" variable
               (:typemodifiers ("static")
                :type "int")
                nil [46715 46760])
            ("total_string_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [46808 46837])
            ("NEXT_FREE_LISP_STRING" variable (:constant-flag t) nil [46992 47013])
            ("SDATA_OF_STRING" variable (:constant-flag t) nil [47520 47535])
            ("GC_STRING_OVERRUN_COOKIE_SIZE" variable (:constant-flag t) nil [48015 48044])
            ("SDATA_SIZE" variable (:constant-flag t) nil [48537 48547])
            ("GC_STRING_EXTRA" variable (:constant-flag t) nil [48796 48811])
            ("init_strings" function
               (:typemodifiers ("static")
                :type "void")
                nil [48913 49253])
            ("check_string_free_list" variable (:constant-flag t) nil [51579 51601])
            ("allocate_string" function
               (:pointer 1
                :typemodifiers ("static")
                :type ("Lisp_String" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [51646 52997])
            ("allocate_string_data" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :type ("Lisp_String" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil)
                    ("nchars" variable (:type "int") nil nil))                  
                :type "void")
                nil [53326 56017])
            ("sweep_strings" function
               (:typemodifiers ("static")
                :type "void")
                nil [56055 58317])
            ("free_large_strings" function
               (:typemodifiers ("static")
                :type "void")
                nil [58353 58680])
            ("compact_small_strings" function
               (:typemodifiers ("static")
                :type "void")
                nil [58797 61444])
            ("DEFUN_ARGS_" variable (:type ("Smake_string" type (:type "class") nil nil)) nil [61447 61680])
            ("doc" variable
               (:default-value "DEFUN (\"make-string\", Fmake_string, Smake_string, 2, 2, 0,
       doc: /* Return a newly created string of length LENGTH, with INIT in each element.
LENGTH must be an integer.
INIT must be an integer that represents a character.  */)"
                :type "int")
                nil [61447 61680])
            ("Smake_string" function
               (:arguments 
                  ( ("init" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("length" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61447 62423])
            ("DEFUN_ARGS_" variable (:type ("Smake_bool_vector" type (:type "class") nil nil)) nil [62426 62662])
            ("doc" variable
               (:default-value "DEFUN (\"make-bool-vector\", Fmake_bool_vector, Smake_bool_vector, 2, 2, 0,
       doc: /* Return a new bool-vector of length LENGTH, using INIT for each element.
LENGTH must be a number.  INIT matters only in whether it is t or nil.  */)"
                :type "int")
                nil [62426 62662])
            ("Smake_bool_vector" function
               (:arguments 
                  ( ("init" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("length" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [62426 63966])
            ("make_string" function
               (:arguments 
                  ( ("contents" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [64153 64694])
            ("make_unibyte_string" function
               (:arguments 
                  ( ("contents" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("length" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [64759 65005])
            ("make_multibyte_string" function
               (:arguments 
                  ( ("contents" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil)
                    ("nchars" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65102 65356])
            ("make_string_from_bytes" function
               (:arguments 
                  ( ("contents" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil)
                    ("nchars" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65490 65811])
            ("make_specified_string" function
               (:arguments 
                  ( ("contents" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil)
                    ("nchars" variable (:type "int") nil nil)
                    ("multibyte" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [66049 66517])
            ("build_string" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [66614 66712])
            ("make_uninit_string" function
               (:arguments 
                  ( ("length" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [66813 67038])
            ("make_uninit_multibyte_string" function
               (:arguments 
                  ( ("nbytes" variable (:type "int") nil nil)
                    ("nchars" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [67143 67506])
            ("FLOAT_BLOCK_SIZE" variable (:constant-flag t) nil [67950 67966])
            ("GETMARKBIT" variable (:constant-flag t) nil [68208 68218])
            ("SETMARKBIT" variable (:constant-flag t) nil [68352 68362])
            ("UNSETMARKBIT" variable (:constant-flag t) nil [68485 68497])
            ("FLOAT_BLOCK" variable (:constant-flag t) nil [68623 68634])
            ("FLOAT_INDEX" variable (:constant-flag t) nil [68722 68733])
            ("float_block" type
               (:members 
                  ( ("floats" variable
                       (:dereference 1
                        :type ("Lisp_Float" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [68914 68957])
                    ("gcmarkbits" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol classsubparts) [68960 69024])
                    ("next" variable
                       (:pointer 1
                        :type ("float_block" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [69027 69052]))                  
                :type "struct")
                nil [68819 69055])
            ("FLOAT_MARKED_P" variable (:constant-flag t) nil [69065 69079])
            ("FLOAT_MARK" variable (:constant-flag t) nil [69153 69163])
            ("FLOAT_UNMARK" variable (:constant-flag t) nil [69237 69249])
            ("float_block" variable
               (:pointer 1
                :type ("float_block" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [69346 69378])
            ("float_block_index" variable (:type "int") nil [69449 69471])
            ("n_float_blocks" variable (:type "int") nil [69522 69541])
            ("float_free_list" variable
               (:pointer 1
                :type ("Lisp_Float" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [69577 69612])
            ("init_float" function
               (:typemodifiers ("static")
                :type "void")
                nil [69652 69828])
            ("free_float" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type ("Lisp_Float" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [69900 70020])
            ("make_float" function
               (:arguments 
                  ( ("float_value" variable (:type "double") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [70081 71121])
            ("CONS_BLOCK_SIZE" variable (:constant-flag t) nil [71558 71573])
            ("CONS_BLOCK" variable (:constant-flag t) nil [71697 71707])
            ("CONS_INDEX" variable (:constant-flag t) nil [71794 71804])
            ("cons_block" type
               (:members 
                  ( ("conses" variable
                       (:dereference 1
                        :type ("Lisp_Cons" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [71982 72023])
                    ("gcmarkbits" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol classsubparts) [72026 72089])
                    ("next" variable
                       (:pointer 1
                        :type ("cons_block" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [72092 72116]))                  
                :type "struct")
                nil [71889 72119])
            ("CONS_MARKED_P" variable (:constant-flag t) nil [72129 72142])
            ("CONS_MARK" variable (:constant-flag t) nil [72214 72223])
            ("CONS_UNMARK" variable (:constant-flag t) nil [72295 72306])
            ("cons_block" variable
               (:pointer 1
                :type ("cons_block" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [72400 72430])
            ("cons_block_index" variable (:type "int") nil [72494 72515])
            ("cons_free_list" variable
               (:pointer 1
                :type ("Lisp_Cons" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [72560 72593])
            ("n_cons_blocks" variable
               (:typemodifiers ("static")
                :type "int")
                nil [72643 72668])
            ("init_cons" function
               (:typemodifiers ("static")
                :type "void")
                nil [72707 72875])
            ("free_cons" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type ("Lisp_Cons" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [72946 73100])
            ("DEFUN_ARGS_" variable (:type ("Scons" type (:type "class") nil nil)) nil [73102 73228])
            ("doc" variable
               (:default-value "DEFUN (\"cons\", Fcons, Scons, 2, 2, 0,
       doc: /* Create a new cons, give it CAR and CDR as components, and return it.  */)"
                :type "int")
                nil [73102 73228])
            ("Scons" function
               (:arguments 
                  ( ("cdr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("car" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [73102 74234])
            ("check_cons_list" function (:type "void") nil [74303 74448])
            ("list1" function
               (:arguments 
                  ( ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [74508 74588])
            ("list2" function
               (:arguments 
                  ( ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [74590 74696])
            ("list3" function
               (:arguments 
                  ( ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [74699 74831])
            ("list4" function
               (:arguments 
                  ( ("arg4" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [74834 74992])
            ("list5" function
               (:arguments 
                  ( ("arg5" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg4" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [74995 75192])
            ("DEFUN_ARGS_" variable (:type ("Slist" type (:type "class") nil nil)) nil [75195 75408])
            ("doc" variable
               (:default-value "DEFUN (\"list\", Flist, Slist, 0, MANY, 0,
       doc: /* Return a newly created list with specified arguments as elements.
Any number of arguments, even zero arguments, are allowed.
usage: (list &rest OBJECTS)  */)"
                :type "int")
                nil [75195 75408])
            ("Slist" function
               (:arguments 
                  ( ("nargs" variable (:type "int") nil nil)
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75195 75622])
            ("DEFUN_ARGS_" variable (:type ("Smake_list" type (:type "class") nil nil)) nil [75625 75773])
            ("doc" variable
               (:default-value "DEFUN (\"make-list\", Fmake_list, Smake_list, 2, 2, 0,
       doc: /* Return a newly created list of length LENGTH, with each element being INIT.  */)"
                :type "int")
                nil [75625 75773])
            ("Smake_list" function
               (:arguments 
                  ( ("init" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("length" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75625 76359])
            ("all_vectors" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [76579 76618])
            ("n_vectors" variable
               (:typemodifiers ("static")
                :type "int")
                nil [76676 76697])
            ("allocate_vectorlike" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("len" variable (:type "int") nil nil))                  
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [76805 77682])
            ("allocate_vector" function
               (:pointer 1
                :arguments 
                  ( ("nslots" variable (:type "int") nil nil))                  
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [77730 77890])
            ("allocate_pseudovector" function
               (:pointer 1
                :arguments 
                  ( ("lisplen" variable (:type "int") nil nil)
                    ("memlen" variable (:type "int") nil nil)
                    ("tag" variable (:type "int") nil nil))                  
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [77940 78350])
            ("allocate_hash_table" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [78398 78403]))                  
                :type ("Lisp_Hash_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [78352 78488])
            ("allocate_window" function
               (:pointer 1
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [78491 78605])
            ("allocate_terminal" function
               (:pointer 1
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [78608 78928])
            ("allocate_frame" function
               (:pointer 1
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [78930 79222])
            ("allocate_process" function
               (:pointer 1
                :type ("Lisp_Process" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [79225 79343])
            ("DEFUN_ARGS_" variable (:type ("Smake_vector" type (:type "class") nil nil)) nil [79346 79534])
            ("doc" variable
               (:default-value "DEFUN (\"make-vector\", Fmake_vector, Smake_vector, 2, 2, 0,
       doc: /* Return a newly created vector of length LENGTH, with each element being INIT.
See also the function `vector'.  */)"
                :type "int")
                nil [79346 79534])
            ("Smake_vector" function
               (:arguments 
                  ( ("init" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("length" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79346 79908])
            ("DEFUN_ARGS_" variable (:type ("Svector" type (:type "class") nil nil)) nil [79911 80134])
            ("doc" variable
               (:default-value "DEFUN (\"vector\", Fvector, Svector, 0, MANY, 0,
       doc: /* Return a newly created vector with specified arguments as elements.
Any number of arguments, even zero arguments, are allowed.
usage: (vector &rest OBJECTS)  */)"
                :type "int")
                nil [79911 80134])
            ("Svector" function
               (:arguments 
                  ( ("nargs" variable (:type "int") nil nil)
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79911 80473])
            ("DEFUN_ARGS_" variable (:type ("Smake_byte_code" type (:type "class") nil nil)) nil [80476 80953])
            ("doc" variable
               (:default-value "DEFUN (\"make-byte-code\", Fmake_byte_code, Smake_byte_code, 4, MANY, 0,
       doc: /* Create a byte-code object with specified arguments as elements.
The arguments should be the arglist, bytecode-string, constant vector,
stack size, (optional) doc string, and (optional) interactive spec.
The first four arguments are required; at most six have any
significance.
usage: (make-byte-code ARGLIST BYTE-CODE CONSTANTS DEPTH &optional DOCSTRING INTERACTIVE-SPEC &rest ELEMENTS)  */)"
                :type "int")
                nil [80476 80953])
            ("Smake_byte_code" function
               (:arguments 
                  ( ("nargs" variable (:type "int") nil nil)
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80476 81965])
            ("SYMBOL_BLOCK_SIZE" variable (:constant-flag t) nil [82307 82324])
            ("symbol_block" type
               (:members 
                  ( ("symbols" variable
                       (:dereference 1
                        :type ("Lisp_Symbol" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [82481 82527])
                    ("next" variable
                       (:pointer 1
                        :type ("symbol_block" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [82530 82556]))                  
                :type "struct")
                nil [82402 82559])
            ("symbol_block" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("symbol_block" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [82648 82689])
            ("symbol_block_index" variable
               (:typemodifiers ("static")
                :type "int")
                nil [82690 82720])
            ("symbol_free_list" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("Lisp_Symbol" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [82752 82796])
            ("n_symbol_blocks" variable
               (:typemodifiers ("static")
                :type "int")
                nil [82848 82875])
            ("init_symbol" function
               (:typemodifiers ("static")
                :type "void")
                nil [82916 83058])
            ("DEFUN_ARGS_" variable (:type ("Smake_symbol" type (:type "class") nil nil)) nil [83061 83276])
            ("doc" variable
               (:default-value "DEFUN (\"make-symbol\", Fmake_symbol, Smake_symbol, 1, 1, 0,
       doc: /* Return a newly allocated uninterned symbol whose name is NAME.
Its value and function definition are void, and its property list is nil.  */)"
                :type "int")
                nil [83061 83276])
            ("Smake_symbol" function
               (:arguments 
                  ( ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [83061 84318])
            ("MARKER_BLOCK_SIZE" variable (:constant-flag t) nil [84623 84640])
            ("marker_block" type
               (:members 
                  ( ("markers" variable
                       (:dereference 1
                        :type ("Lisp_Misc" type (:type "union") nil nil))
                        (reparse-symbol classsubparts) [84794 84837])
                    ("next" variable
                       (:pointer 1
                        :type ("marker_block" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [84840 84866]))                  
                :type "struct")
                nil [84715 84869])
            ("marker_block" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("marker_block" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [84871 84912])
            ("marker_block_index" variable
               (:typemodifiers ("static")
                :type "int")
                nil [84913 84943])
            ("marker_free_list" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("Lisp_Misc" type (:type "union") nil nil))
                nil [84945 84986])
            ("n_marker_blocks" variable
               (:typemodifiers ("static")
                :type "int")
                nil [85038 85065])
            ("init_marker" function
               (:typemodifiers ("static")
                :type "void")
                nil [85067 85209])
            ("allocate_misc" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [85284 86129])
            ("free_misc" function
               (:arguments 
                  ( ("misc" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [86162 86356])
            ("make_save_value" function
               (:arguments 
                  ( ("pointer" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("integer" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [86571 86896])
            ("DEFUN_ARGS_" variable (:type ("Smake_marker" type (:type "class") nil nil)) nil [86898 87043])
            ("doc" variable
               (:default-value "DEFUN (\"make-marker\", Fmake_marker, Smake_marker, 0, 0, 0,
       doc: /* Return a newly allocated marker which does not point at any place.  */)"
                :type "int")
                nil [86898 87043])
            ("Smake_marker" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [86898 87313])
            ("free_marker" function
               (:arguments 
                  ( ("marker" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [87384 87497])
            ("make_event_array" function
               (:arguments 
                  ( ("nargs" variable (:type "int") nil nil)
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [87770 88624])
            ("memory_full" function (:type "void") nil [88846 89639])
            ("refill_memory_reserve" function (:type "void") nil [89957 90974])
            ("mem_init" function
               (:typemodifiers ("static")
                :type "void")
                nil [91881 92052])
            ("mem_find" function
               (:pointer 1
                :arguments 
                  ( ("start" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type ("mem_node" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [92201 92611])
            ("mem_insert" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("end" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("start" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("type" variable (:type ("mem_type" type (:type "enum") nil nil)) nil nil))                  
                :type ("mem_node" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [92791 94373])
            ("mem_insert_fixup" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("x" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [94517 96325])
            ("mem_rotate_left" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("x" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [96486 97077])
            ("mem_rotate_right" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("x" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [97242 97658])
            ("mem_delete" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("z" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [97736 98470])
            ("mem_delete_fixup" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("x" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [98553 100219])
            ("live_string_p" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [100358 100907])
            ("live_cons_p" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [101044 101705])
            ("live_symbol_p" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [101844 102534])
            ("live_float_p" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [102672 103261])
            ("live_misc_p" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [103398 104084])
            ("live_vector_p" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [104217 104344])
            ("live_buffer_p" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :type ("mem_node" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [104466 104730])
            ("MAX_ZOMBIES" variable (:constant-flag t) nil [104989 105000])
            ("zombies" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105004 105044])
            ("nzombies" variable
               (:typemodifiers ("static")
                :type "int")
                nil [105080 105100])
            ("ngcs" variable
               (:typemodifiers ("static")
                :type "int")
                nil [105141 105157])
            ("avg_zombies" variable
               (:typemodifiers ("static")
                :type "double")
                nil [105213 105239])
            ("max_zombies" variable
               (:typemodifiers ("static")
                :type "int")
                nil [105289 105322])
            ("max_live" variable
               (:typemodifiers ("static")
                :type "int")
                nil [105289 105322])
            ("avg_live" variable
               (:typemodifiers ("static")
                :type "double")
                nil [105371 105394])
            ("DEFUN_ARGS_" variable (:type ("Sgc_status" type (:type "class") nil nil)) nil [105396 105517])
            ("doc" variable
               (:default-value "DEFUN (\"gc-status\", Fgc_status, Sgc_status, 0, 0, \"\",
       doc: /* Show information about live and zombie objects.  */)"
                :type "int")
                nil [105396 105517])
            ("Sgc_status" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [105396 106052])
            ("mark_maybe_object" function
               (:arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [106181 107483])
            ("mark_maybe_pointer" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [107583 109180])
            ("mark_memory" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("end" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("start" variable
                       (:pointer 1
                        :type "void")
                        nil nil)
                    ("offset" variable (:type "int") nil nil))                  
                :type "void")
                nil [109285 110509])
            ("longjmps_done" variable
               (:typemodifiers ("static")
                :type "int")
                nil [110826 110868])
            ("setjmp_tested_p" variable
               (:typemodifiers ("static")
                :type "int")
                nil [110826 110868])
            ("SETJMP_WILL_LIKELY_WORK" variable (:constant-flag t) nil [110878 110901])
            ("SETJMP_WILL_NOT_WORK" variable (:constant-flag t) nil [111394 111414])
            ("test_setjmp" function
               (:typemodifiers ("static")
                :type "void")
                nil [112278 113165])
            ("check_gcpros" function
               (:typemodifiers ("static")
                :type "void")
                nil [113343 113657])
            ("dump_zombies" function
               (:typemodifiers ("static")
                :type "void")
                nil [113711 113948])
            ("mark_stack" function
               (:typemodifiers ("static")
                :type "void")
                nil [115758 117891])
            ("valid_pointer_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [117994 118629])
            ("valid_lisp_object_p" function
               (:arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [118861 119869])
            ("pure_alloc" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) nil nil)
                    ("type" variable (:type "int") nil nil))                  
                :type "void")
                nil [120257 121671])
            ("check_pure_size" function (:type "void") nil [121724 121933])
            ("find_string_data_in_pure" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil))                  
                :type "char")
                nil [122116 123581])
            ("make_pure_string" function
               (:arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("nbytes" variable (:type "int") nil nil)
                    ("nchars" variable (:type "int") nil nil)
                    ("multibyte" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [123968 124571])
            ("make_pure_c_string" function
               (:arguments 
                  ( ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [124720 124737]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [124688 125037])
            ("pure_cons" function
               (:arguments 
                  ( ("cdr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("car" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [125142 125422])
            ("make_pure_float" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("num" variable (:type "double") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [125499 125739])
            ("make_pure_vector" function
               (:arguments 
                  ( ("len" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [125827 126123])
            ("DEFUN_ARGS_" variable (:type ("Spurecopy" type (:type "class") nil nil)) nil [126126 126357])
            ("doc" variable
               (:default-value "DEFUN (\"purecopy\", Fpurecopy, Spurecopy, 1, 1, 0,
       doc: /* Make a copy of object OBJ in pure storage.
Recursively copies contents of vectors and cons cells.
Does not copy symbols.  Copies strings without text properties.  */)"
                :type "int")
                nil [126126 126357])
            ("Spurecopy" function
               (:arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [126126 127410])
            ("staticpro" function
               (:arguments 
                  ( ("varaddress" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [127675 127818])
            ("inhibit_garbage_collection" function (:type "int") nil [128042 128254])
            ("DEFUN_ARGS_" variable (:type ("Sgarbage_collect" type (:type "class") nil nil)) nil [128257 128942])
            ("doc" variable
               (:default-value "DEFUN (\"garbage-collect\", Fgarbage_collect, Sgarbage_collect, 0, 0, \"\",
       doc: /* Reclaim storage for Lisp objects no longer needed.
Garbage collection happens automatically if you cons more than
`gc-cons-threshold' bytes of Lisp data since previous garbage collection.
`garbage-collect' normally returns a list with info on amount of space in use:
 ((USED-CONSES . FREE-CONSES) (USED-SYMS . FREE-SYMS)
  (USED-MARKERS . FREE-MARKERS) USED-STRING-CHARS USED-VECTOR-SLOTS
  (USED-FLOATS . FREE-FLOATS) (USED-INTERVALS . FREE-INTERVALS)
  (USED-STRINGS . FREE-STRINGS))
However, if there was overflow in pure space, `garbage-collect'
returns nil, because real GC can't be done.  */)"
                :type "int")
                nil [128257 128942])
            ("Sgarbage_collect" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [128257 137012])
            ("mark_glyph_matrix" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("matrix" variable
                       (:pointer 1
                        :type ("glyph_matrix" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [137144 137713])
            ("mark_face_cache" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("face_cache" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [137761 138056])
            ("LAST_MARKED_SIZE" variable (:constant-flag t) nil [138218 138234])
            ("last_marked" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [138239 138288])
            ("last_marked_index" variable (:type "int") nil [138289 138311])
            ("mark_object_loop_halt" variable
               (:typemodifiers ("static")
                :type "int")
                nil [138523 138556])
            ("mark_vectorlike" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [138558 139185])
            ("mark_char_table" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [139333 139857])
            ("mark_object" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [139859 147564])
            ("mark_buffer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("buf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [147615 148794])
            ("mark_terminals" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [148917 148922]))                  
                :type "void")
                nil [148889 149224])
            ("survives_gc_p" function
               (:arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [149361 150134])
            ("gc_sweep" function
               (:typemodifiers ("static")
                :type "void")
                nil [150200 159107])
            ("DEFUN_ARGS_" variable (:type ("Smemory_limit" type (:type "class") nil nil)) nil [159137 159415])
            ("doc" variable
               (:default-value "DEFUN (\"memory-limit\", Fmemory_limit, Smemory_limit, 0, 0, 0,
       doc: /* Return the address of the last byte Emacs has allocated, divided by 1024.
This may be helpful in debugging Emacs's memory usage.
We divide the value by 1024 to make sure it fits in a Lisp integer.  */)"
                :type "int")
                nil [159137 159415])
            ("Smemory_limit" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [159137 159508])
            ("DEFUN_ARGS_" variable (:type ("Smemory_use_counts" type (:type "class") nil nil)) nil [159510 160280])
            ("doc" variable
               (:default-value "DEFUN (\"memory-use-counts\", Fmemory_use_counts, Smemory_use_counts, 0, 0, 0,
       doc: /* Return a list of counters that measure how much consing there has been.
Each of these counters increments for a certain kind of object.
The counters wrap around from the largest positive integer to zero.
Garbage collection does not decrease them.
The elements of the value are as follows:
  (CONSES FLOATS VECTOR-CELLS SYMBOLS STRING-CHARS MISCS INTERVALS STRINGS)
All are in units of 1 = one object consed
except for VECTOR-CELLS and STRING-CHARS, which count the total length of
objects consed.
MISCS include overlays, markers, and some internal types.
Frames, windows, buffers, and subprocesses count as vectors
  (but the contents of a buffer's text do not count here).  */)"
                :type "int")
                nil [159510 160280])
            ("Smemory_use_counts" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [159510 160942])
            ("suppress_checking" variable (:type "int") nil [160944 160966])
            ("die" function
               (:arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("file" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("line" variable (:type "int") nil nil))                  
                :type "void")
                nil [160968 161151])
            ("init_alloc_once" function (:type "void") nil [161176 162497])
            ("init_alloc" function (:type "void") nil [162499 162750])
            ("syms_of_alloc" function (:type "void") nil [162752 166947]))          
    :file "alloc.c"
    :pointmax 167034
    :fsize 167033
    :lastmodtime '(19383 49278)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 159510 . 160280) (symbol "__attribute__" 159510 . 160280) (symbol "Lisp_Subr" 159510 . 160280) (symbol "Lisp_Object" 159510 . 160280) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 159137 . 159415) (symbol "__attribute__" 159137 . 159415) (symbol "Lisp_Subr" 159137 . 159415) (symbol "Lisp_Object" 159137 . 159415) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 128257 . 128942) (symbol "__attribute__" 128257 . 128942) (symbol "Lisp_Subr" 128257 . 128942) (symbol "Lisp_Object" 128257 . 128942) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 126126 . 126357) (symbol "__attribute__" 126126 . 126357) (symbol "Lisp_Subr" 126126 . 126357) (symbol "Lisp_Object" 126126 . 126357) (symbol "__inline__" 107576 . 107582) (STATIC 107569 . 107575) (symbol "__inline__" 106174 . 106180) (STATIC 106167 . 106173) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 105396 . 105517) (symbol "__attribute__" 105396 . 105517) (symbol "Lisp_Subr" 105396 . 105517) (symbol "Lisp_Object" 105396 . 105517) (symbol "__inline__" 104459 . 104465) (STATIC 104452 . 104458) (symbol "__inline__" 104210 . 104216) (STATIC 104203 . 104209) (symbol "__inline__" 103391 . 103397) (STATIC 103384 . 103390) (symbol "__inline__" 102665 . 102671) (STATIC 102658 . 102664) (symbol "__inline__" 101837 . 101843) (STATIC 101830 . 101836) (symbol "__inline__" 101037 . 101043) (STATIC 101030 . 101036) (symbol "__inline__" 100351 . 100357) (STATIC 100344 . 100350) (symbol "__inline__" 92194 . 92200) (STATIC 92187 . 92193) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 86898 . 87043) (symbol "__attribute__" 86898 . 87043) (symbol "Lisp_Subr" 86898 . 87043) (symbol "Lisp_Object" 86898 . 87043) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 83061 . 83276) (symbol "__attribute__" 83061 . 83276) (symbol "Lisp_Subr" 83061 . 83276) (symbol "Lisp_Object" 83061 . 83276) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 80476 . 80953) (symbol "__attribute__" 80476 . 80953) (symbol "Lisp_Subr" 80476 . 80953) (symbol "Lisp_Object" 80476 . 80953) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 79911 . 80134) (symbol "__attribute__" 79911 . 80134) (symbol "Lisp_Subr" 79911 . 80134) (symbol "Lisp_Object" 79911 . 80134) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 79346 . 79534) (symbol "__attribute__" 79346 . 79534) (symbol "Lisp_Subr" 79346 . 79534) (symbol "Lisp_Object" 79346 . 79534) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 75625 . 75773) (symbol "__attribute__" 75625 . 75773) (symbol "Lisp_Subr" 75625 . 75773) (symbol "Lisp_Object" 75625 . 75773) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 75195 . 75408) (symbol "__attribute__" 75195 . 75408) (symbol "Lisp_Subr" 75195 . 75408) (symbol "Lisp_Object" 75195 . 75408) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 73102 . 73228) (symbol "__attribute__" 73102 . 73228) (symbol "Lisp_Subr" 73102 . 73228) (symbol "Lisp_Object" 73102 . 73228) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 62426 . 62662) (symbol "__attribute__" 62426 . 62662) (symbol "Lisp_Subr" 62426 . 62662) (symbol "Lisp_Object" 62426 . 62662) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 61447 . 61680) (symbol "__attribute__" 61447 . 61680) (symbol "Lisp_Subr" 61447 . 61680) (symbol "Lisp_Object" 61447 . 61680) (symbol "__inline__" 14897 . 14903) (STATIC 14890 . 14896))
    :lexical-table 
        '(("UNMARK_STRING" (spp-arg-list ("S") 5153 . 5156) . ((semantic-list "((S)->size &= ~ARRAY_MARK_FLAG)" 5157 . 5188)))
          ("STRING_MARKED_P" (spp-arg-list ("S") 5212 . 5215) . ((semantic-list "(((S)->size & ARRAY_MARK_FLAG) != 0)" 5216 . 5252)))
          ("VECTOR_UNMARK" (spp-arg-list ("V") 5330 . 5333) . ((semantic-list "((V)->size &= ~ARRAY_MARK_FLAG)" 5334 . 5365)))
          ("MARK_INTERVAL_TREE" (spp-arg-list ("i") 41953 . 41956) . 
              ((DO "do" 41964 . 41966) (semantic-list "{							\\
    if (!NULL_INTERVAL_P (i) && !i->gcmarkbit)		\\
      mark_interval_tree (i);				\\
  }" 41967 . 42065) (WHILE "while" 42066 . 42071) (semantic-list "(0)" 42072 . 42075)))
          ("GETMARKBIT" (spp-arg-list ("block" "n") 68218 . 68227) . ((semantic-list "(((block)->gcmarkbits[(n) / (sizeof(int) * CHAR_BIT)]	\\
    >> ((n) % (sizeof(int) * CHAR_BIT)))		\\
   & 1)" 68235 . 68342)))
          ("CONS_INDEX" (spp-arg-list ("fptr") 71804 . 71810) . ((semantic-list "((((EMACS_UINT)(fptr)) & (BLOCK_ALIGN - 1)) / sizeof (struct Lisp_Cons))" 71815 . 71887)))
          ("SETJMP_WILL_LIKELY_WORK" . ((string "\"\\
\\n\\
Emacs garbage collector has been changed to use conservative stack\\n\\
marking.  Emacs has determined that the method it uses to do the\\n\\
marking will likely work on your system, but this isn't sure.\\n\\
\\n\\
If you are a system-programmer, or can get the help of a local wizard\\n\\
who is, please take a look at the function mark_stack in alloc.c, and\\n\\
verify that the methods used are appropriate for your system.\\n\\
\\n\\
Please mail the result to <emacs-devel@gnu.org>.\\n\\
\"" 110902 . 111384)))
          ("VECTOR_MARKED_P" (spp-arg-list ("V") 5389 . 5392) . ((semantic-list "(((V)->size & ARRAY_MARK_FLAG) != 0)" 5393 . 5429)))
          ("GC_STRING_BYTES" (spp-arg-list ("S") 5667 . 5670) . ((semantic-list "(STRING_BYTES (S))" 5671 . 5689)))
          ("GC_STRING_CHARS" (spp-arg-list ("S") 5713 . 5716) . ((semantic-list "((S)->size & ~ARRAY_MARK_FLAG)" 5717 . 5747)))
          ("ABLOCKS_BUSY" (spp-arg-list ("abase") 27945 . 27952) . ((semantic-list "((abase)->blocks[0].abase)" 27953 . 27979)))
          ("ABLOCKS_BASE" (spp-arg-list ("abase") 28089 . 28096) . ((semantic-list "(abase)" 28097 . 28104)))
          ("UNMARK_BALANCE_INTERVALS" (spp-arg-list ("i") 42110 . 42113) . 
              ((DO "do" 42120 . 42122) (semantic-list "{							\\
   if (! NULL_INTERVAL_P (i))				\\
     (i) = balance_intervals (i);			\\
  }" 42123 . 42209) (WHILE "while" 42210 . 42215) (semantic-list "(0)" 42216 . 42219)))
          ("SDATA_OF_STRING" (spp-arg-list ("S") 47535 . 47538) . ((semantic-list "((struct sdata *) ((S)->data - sizeof (struct Lisp_String *)))" 47546 . 47608)))
          ("SDATA_NBYTES" (spp-arg-list ("S") 45034 . 45037) . 
              ((semantic-list "(S)" 45038 . 45041) (punctuation "-" 45041 . 45042) (punctuation ">" 45042 . 45043) (symbol "u" 45043 . 45044) (punctuation "." 45044 . 45045) (symbol "nbytes" 45045 . 45051)))
          ("MARK_STRING" (spp-arg-list ("S") 5096 . 5099) . ((semantic-list "((S)->size |= ARRAY_MARK_FLAG)" 5101 . 5131)))
          ("VECTOR_MARK" (spp-arg-list ("V") 5273 . 5276) . ((semantic-list "((V)->size |= ARRAY_MARK_FLAG)" 5278 . 5308)))
          ("SPARE_MEMORY" . ((semantic-list "(1 << 14)" 7492 . 7501)))
          ("ABLOCK_ABASE" (spp-arg-list ("block") 27761 . 27768) . ((semantic-list "(((unsigned long) (block)->abase) <= (1 + 2 * ABLOCKS_SIZE)   \\
   ? (struct ablocks *)(block)					\\
   : (block)->abase)" 27773 . 27894)))
          ("MALLOC_UNBLOCK_INPUT" . ((semantic-list "((void)0)" 22050 . 22059)))
          ("CONS_MARKED_P" (spp-arg-list ("fptr") 72142 . 72148) . ((symbol "GETMARKBIT" 72153 . 72163) (semantic-list "(CONS_BLOCK (fptr), CONS_INDEX ((fptr)))" 72164 . 72204)))
          ("CONS_UNMARK" (spp-arg-list ("fptr") 72306 . 72312) . ((symbol "UNSETMARKBIT" 72317 . 72329) (semantic-list "(CONS_BLOCK (fptr), CONS_INDEX ((fptr)))" 72330 . 72370)))
          ("SDATA_DATA" (spp-arg-list ("S") 45070 . 45073) . 
              ((semantic-list "(S)" 45074 . 45077) (punctuation "-" 45077 . 45078) (punctuation ">" 45078 . 45079) (symbol "u" 45079 . 45080) (punctuation "." 45080 . 45081) (symbol "data" 45081 . 45085)))
          ("__malloc_size_t" . ((INT "int" 2346 . 2349)))
          ("ALIGN" (spp-arg-list ("ptr" "ALIGNMENT") 15614 . 15630) . ((semantic-list "((POINTER_TYPE *) ((((EMACS_UINT)(ptr)) + (ALIGNMENT) - 1) \\
		     & ~((ALIGNMENT) - 1)))" 15635 . 15725)))
          ("BLOCK_ALIGN" . ((semantic-list "(1 << 10)" 25763 . 25772)))
          ("ABLOCKS_SIZE" . ((number "16" 26603 . 26605)))
          ("FLOAT_BLOCK" (spp-arg-list ("fptr") 68634 . 68640) . ((semantic-list "((struct float_block *)(((EMACS_UINT)(fptr)) & ~(BLOCK_ALIGN - 1)))" 68645 . 68712)))
          ("FLOAT_MARK" (spp-arg-list ("fptr") 69163 . 69169) . ((symbol "SETMARKBIT" 69174 . 69184) (semantic-list "(FLOAT_BLOCK (fptr), FLOAT_INDEX ((fptr)))" 69185 . 69227)))
          ("UNBLOCK_INPUT_ALLOC" . 
              ((DO "do" 4292 . 4294) (semantic-list "{                                                   \\
      pthread_mutex_unlock (&alloc_mutex);              \\
      if (pthread_equal (pthread_self (), main_thread)) \\
        UNBLOCK_INPUT;					\\
    }" 4352 . 4556) (WHILE "while" 4611 . 4616) (semantic-list "(0)" 4617 . 4620)))
          ("INTERVAL_BLOCK_SIZE" . ((semantic-list "((1020 - sizeof (struct interval_block *)) / sizeof (struct interval))" 39402 . 39472)))
          ("SDATA_SIZE" (spp-arg-list ("NBYTES") 48547 . 48555) . ((semantic-list "((sizeof (struct Lisp_String *)		\\
       + (NBYTES) + 1				\\
       + sizeof (EMACS_INT) - 1)		\\
      & ~(sizeof (EMACS_INT) - 1))" 48565 . 48697)))
          ("LARGE_STRING_BYTES" . ((number "1024" 44142 . 44146)))
          ("SETMARKBIT" (spp-arg-list ("block" "n") 68362 . 68371) . 
              ((semantic-list "(block)" 68379 . 68386) (punctuation "-" 68386 . 68387) (punctuation ">" 68387 . 68388) (symbol "gcmarkbits" 68388 . 68398) (semantic-list "[(n) / (sizeof(int) * CHAR_BIT)]" 68398 . 68430) (punctuation "|" 68435 . 68436) (punctuation "=" 68436 . 68437) (number "1" 68438 . 68439) (punctuation "<" 68440 . 68441) (punctuation "<" 68441 . 68442) (semantic-list "((n) % (sizeof(int) * CHAR_BIT))" 68443 . 68475)))
          ("FLOAT_MARKED_P" (spp-arg-list ("fptr") 69079 . 69085) . ((symbol "GETMARKBIT" 69090 . 69100) (semantic-list "(FLOAT_BLOCK (fptr), FLOAT_INDEX ((fptr)))" 69101 . 69143)))
          ("USE_POSIX_MEMALIGN" . ((number "1" 25690 . 25691)))
          ("GC_STRING_EXTRA" . ((semantic-list "(GC_STRING_OVERRUN_COOKIE_SIZE)" 48812 . 48843)))
          ("FLOAT_UNMARK" (spp-arg-list ("fptr") 69249 . 69255) . ((symbol "UNSETMARKBIT" 69260 . 69272) (semantic-list "(FLOAT_BLOCK (fptr), FLOAT_INDEX ((fptr)))" 69273 . 69315)))
          ("LAST_MARKED_SIZE" . ((number "500" 138235 . 138238)))
          ("PURE_POINTER_P" (spp-arg-list ("P") 8765 . 8768) . ((semantic-list "(((PNTR_COMPARISON_TYPE) (P)				\\
       < (PNTR_COMPARISON_TYPE) ((char *) purebeg + pure_size))	\\
      && ((PNTR_COMPARISON_TYPE) (P)				\\
	  >= (PNTR_COMPARISON_TYPE) purebeg))" 8780 . 8960)))
          ("NSTATICS" . ((number "0x640" 15305 . 15310)))
          ("MALLOC_BLOCK_INPUT" . ((semantic-list "((void)0)" 22011 . 22020)))
          ("STRING_BLOCK_SIZE" . ((semantic-list "((1020 - sizeof (struct string_block *)) / sizeof (struct Lisp_String))" 45781 . 45852)))
          ("UNSETMARKBIT" (spp-arg-list ("block" "n") 68497 . 68506) . 
              ((semantic-list "(block)" 68514 . 68521) (punctuation "-" 68521 . 68522) (punctuation ">" 68522 . 68523) (symbol "gcmarkbits" 68523 . 68533) (semantic-list "[(n) / (sizeof(int) * CHAR_BIT)]" 68533 . 68565) (punctuation "&" 68570 . 68571) (punctuation "=" 68571 . 68572) (punctuation "~" 68573 . 68574) (semantic-list "(1 << ((n) % (sizeof(int) * CHAR_BIT)))" 68574 . 68613)))
          ("CONS_BLOCK" (spp-arg-list ("fptr") 71707 . 71713) . ((semantic-list "((struct cons_block *)(((EMACS_UINT)(fptr)) & ~(BLOCK_ALIGN - 1)))" 71718 . 71784)))
          ("SYMBOL_BLOCK_SIZE" . ((semantic-list "((1020 - sizeof (struct symbol_block *)) / sizeof (struct Lisp_Symbol))" 82329 . 82400)))
          ("MARKER_BLOCK_SIZE" . ((semantic-list "((1020 - sizeof (struct marker_block *)) / sizeof (union Lisp_Misc))" 84645 . 84713)))
          ("MMAP_MAX_AREAS" . ((number "100000000" 2500 . 2509)))
          ("BLOCK_INPUT_ALLOC" . 
              ((DO "do" 3905 . 3907) (semantic-list "{                                                   \\
      if (pthread_equal (pthread_self (), main_thread)) \\
        BLOCK_INPUT;					\\
      pthread_mutex_lock (&alloc_mutex);                \\
    }" 3965 . 4167) (WHILE "while" 4222 . 4227) (semantic-list "(0)" 4228 . 4231)))
          ("BLOCK_BYTES" . ((semantic-list "(BLOCK_ALIGN - sizeof (struct ablock *) - BLOCK_PADDING)" 26476 . 26532)))
          ("NEXT_FREE_LISP_STRING" (spp-arg-list ("S") 47013 . 47016) . ((semantic-list "(*(struct Lisp_String **) (S))" 47017 . 47047)))
          ("FLOAT_INDEX" (spp-arg-list ("fptr") 68733 . 68739) . ((semantic-list "((((EMACS_UINT)(fptr)) & (BLOCK_ALIGN - 1)) / sizeof (struct Lisp_Float))" 68744 . 68817)))
          ("SETJMP_WILL_NOT_WORK" . ((string "\"\\
\\n\\
Emacs garbage collector has been changed to use conservative stack\\n\\
marking.  Emacs has determined that the default method it uses to do the\\n\\
marking will not work on your system.  We will need a system-dependent\\n\\
solution for your system.\\n\\
\\n\\
Please take a look at the function mark_stack in alloc.c, and\\n\\
try to find a way to make it work on your system.\\n\\
\\n\\
Note that you may get false negatives, depending on the compiler.\\n\\
In particular, you need to use -O with GCC for this test.\\n\\
\\n\\
Please mail the result to <emacs-devel@gnu.org>.\\n\\
\"" 111415 . 111984)))
          ("MEM_NIL" . ((punctuation "&" 13788 . 13789) (symbol "mem_z" 13789 . 13794)))
          ("SBLOCK_SIZE" . ((number "8188" 43974 . 43978)))
          ("CONS_BLOCK_SIZE" . ((semantic-list "(((BLOCK_BYTES - sizeof (struct cons_block *)) * CHAR_BIT) \\
   / (sizeof (struct Lisp_Cons) * CHAR_BIT + 1))" 71578 . 71687)))
          ("PUREBEG" . ((semantic-list "(char *)" 8243 . 8251) (symbol "pure" 8252 . 8256)))
          ("MAX_SAVE_STACK" . ((number "16000" 9601 . 9606)))
          ("BYTES_USED" . ((semantic-list "(mallinfo ().uordblks)" 16335 . 16357)))
          ("check_string_free_list" (spp-arg-list nil 51601 . 51603))
          ("FLOAT_BLOCK_SIZE" . ((semantic-list "(((BLOCK_BYTES - sizeof (struct float_block *)		\\
     /* The compiler might add padding at the end.  */		\\
     - (sizeof (struct Lisp_Float) - sizeof (int))) * CHAR_BIT) \\
   / (sizeof (struct Lisp_Float) * CHAR_BIT + 1))" 67975 . 68198)))
          ("CONS_MARK" (spp-arg-list ("fptr") 72223 . 72229) . ((symbol "SETMARKBIT" 72234 . 72244) (semantic-list "(CONS_BLOCK (fptr), CONS_INDEX ((fptr)))" 72245 . 72285)))
          ("INCLUDED_FCNTL")
          ("O_WRONLY" . ((number "1" 2122 . 2123)))
          ("BLOCK_PADDING" . ((number "0" 26450 . 26451)))
          ("ABLOCKS_BYTES" . ((semantic-list "(sizeof (struct ablocks) - BLOCK_PADDING)" 27698 . 27739)))
          ("GC_STRING_OVERRUN_COOKIE_SIZE" . ((number "0" 48045 . 48046)))
          ("MAX_ZOMBIES" . ((number "10" 105001 . 105003)))
          )

    )
   (semanticdb-table "window.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [935 954])
            ("stdio.h" include (:system-flag t) nil [955 973])
            ("setjmp.h" include (:system-flag t) nil [974 993])
            ("lisp.h" include nil nil [995 1012])
            ("buffer.h" include nil nil [1013 1032])
            ("keyboard.h" include nil nil [1033 1054])
            ("keymap.h" include nil nil [1055 1074])
            ("frame.h" include nil nil [1075 1093])
            ("window.h" include nil nil [1094 1113])
            ("commands.h" include nil nil [1114 1135])
            ("indent.h" include nil nil [1136 1155])
            ("termchar.h" include nil nil [1156 1177])
            ("disptab.h" include nil nil [1178 1198])
            ("dispextern.h" include nil nil [1199 1222])
            ("blockinput.h" include nil nil [1223 1246])
            ("intervals.h" include nil nil [1247 1269])
            ("termhooks.h" include nil nil [1270 1292])
            ("xterm.h" include nil nil [1344 1362])
            ("Qwindow_configuration_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1519 1581])
            ("Qwindow_live_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1519 1581])
            ("Qwindowp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1519 1581])
            ("Qdisplay_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1582 1610])
            ("Qscroll_down" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1611 1648])
            ("Qscroll_up" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1611 1648])
            ("Qwindow_size_fixed" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1649 1680])
            ("Qright_margin" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1682 1729])
            ("Qleft_margin" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1682 1729])
            ("displayed_window_lines" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [1731 1788])
            ("decode_window" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1789 1844])
            ("count_windows" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [1845 1893])
            ("get_leaf_windows" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 2
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [1894 1968])
            ("window_scroll" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [1969 2029])
            ("window_scroll_pixel_based" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2030 2102])
            ("window_scroll_line_based" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2103 2174])
            ("window_min_size_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2175 2237])
            ("window_min_size_2" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2238 2300])
            ("window_min_size" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2301 2373])
            ("size_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2374 2442])
            ("freeze_window_start" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2443 2505])
            ("window_fixed_size_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2506 2570])
            ("enlarge_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2571 2627])
            ("window_list" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2628 2671])
            ("add_window_to_list" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2672 2733])
            ("candidate_window_p" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [2734 2829])
            ("next_window" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [2830 2919])
            ("decode_next_window_args" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [2920 3013])
            ("foreach_window_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [3014 3121])
            ("window_list_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3122 3200])
            ("selected_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3521 3549])
            ("Vwindow_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3718 3743])
            ("minibuf_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3965 3992])
            ("minibuf_selected_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4124 4160])
            ("Vminibuf_scroll_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4258 4293])
            ("Vother_window_scroll_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4370 4410])
            ("Vtemp_buffer_show_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4481 4520])
            ("auto_window_vscroll_p" variable (:type "int") nil [4652 4678])
            ("mode_line_in_non_selected_windows" variable (:type "int") nil [4842 4880])
            ("window_min_height" variable (:type "int") nil [4951 4979])
            ("window_min_width" variable (:type "int") nil [4980 5007])
            ("Qtemp_buffer_show_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5061 5096])
            ("next_screen_context_lines" variable (:type "int") nil [5164 5200])
            ("sequence_number" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5247 5274])
            ("window_initialized" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5329 5359])
            ("Qwindow_configuration_change_hook" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [5409 5462])
            ("Vwindow_configuration_change_hook" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [5463 5516])
            ("Vscroll_preserve_screen_position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5617 5662])
            ("Vwindow_point_insertion_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5733 5774])
            ("window_deletion_count" variable (:type "int") nil [5831 5857])
            ("window_scroll_pixel_based_preserve_x" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5913 5961])
            ("window_scroll_pixel_based_preserve_y" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5962 6010])
            ("window_scroll_preserve_hpos" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6055 6094])
            ("window_scroll_preserve_vpos" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6095 6134])
            ("inhibit_frame_unsplittable" variable
               (:typemodifiers ("static")
                :type "int")
                nil [6247 6285])
            ("scroll_margin" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [6302 6333])
            ("Vwindow_scroll_functions" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6335 6405])
            ("Qwindow_scroll_functions" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6335 6405])
            ("Vrecenter_redisplay" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6595 6634])
            ("Qtty" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6635 6659])
            ("DEFUN_ARGS_" variable (:type ("Swindowp" type (:type "class") nil nil)) nil [6663 6761])
            ("doc" variable
               (:default-value "DEFUN (\"windowp\", Fwindowp, Swindowp, 1, 1, 0,
       doc: /* Return t if OBJECT is a window.  */)"
                :type "int")
                nil [6663 6761])
            ("Swindowp" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6663 6843])
            ("DEFUN_ARGS_" variable (:type ("Swindow_live_p" type (:type "class") nil nil)) nil [6845 6988])
            ("doc" variable
               (:default-value "DEFUN (\"window-live-p\", Fwindow_live_p, Swindow_live_p, 1, 1, 0,
       doc: /* Return t if OBJECT is a window which is currently visible.  */)"
                :type "int")
                nil [6845 6988])
            ("Swindow_live_p" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [6845 7076])
            ("make_window" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [7078 8613])
            ("DEFUN_ARGS_" variable (:type ("Sselected_window" type (:type "class") nil nil)) nil [8615 8777])
            ("doc" variable
               (:default-value "DEFUN (\"selected-window\", Fselected_window, Sselected_window, 0, 0, 0,
       doc: /* Return the window that the cursor now appears in and commands apply to.  */)"
                :type "int")
                nil [8615 8777])
            ("Sselected_window" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [8615 8815])
            ("DEFUN_ARGS_" variable (:type ("Sminibuffer_window" type (:type "class") nil nil)) nil [8817 9051])
            ("doc" variable
               (:default-value "DEFUN (\"minibuffer-window\", Fminibuffer_window, Sminibuffer_window, 0, 1, 0,
       doc: /* Return the window used now for minibuffers.
If the optional argument FRAME is specified, return the minibuffer window
used by that frame.  */)"
                :type "int")
                nil [8817 9051])
            ("Sminibuffer_window" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [8817 9215])
            ("DEFUN_ARGS_" variable (:type ("Swindow_minibuffer_p" type (:type "class") nil nil)) nil [9217 9408])
            ("doc" variable
               (:default-value "DEFUN (\"window-minibuffer-p\", Fwindow_minibuffer_p, Swindow_minibuffer_p, 0, 1, 0,
       doc: /* Return non-nil if WINDOW is a minibuffer window.
WINDOW defaults to the selected window.  */)"
                :type "int")
                nil [9217 9408])
            ("Swindow_minibuffer_p" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9217 9536])
            ("DEFUN_ARGS_" variable (:type ("Spos_visible_in_window_p" type (:type "class") nil nil)) nil [9539 10628])
            ("doc" variable
               (:default-value "DEFUN (\"pos-visible-in-window-p\", Fpos_visible_in_window_p,
       Spos_visible_in_window_p, 0, 3, 0,
       doc: /* Return non-nil if position POS is currently on the frame in WINDOW.
Return nil if that position is scrolled vertically out of view.
If a character is only partially visible, nil is returned, unless the
optional argument PARTIALLY is non-nil.
If POS is only out of view because of horizontal scrolling, return non-nil.
If POS is t, it specifies the position of the last visible glyph in WINDOW.
POS defaults to point in WINDOW; WINDOW defaults to the selected window.

If POS is visible, return t if PARTIALLY is nil; if PARTIALLY is non-nil,
return value is a list of 2 or 6 elements (X Y [RTOP RBOT ROWH VPOS]),
where X and Y are the pixel coordinates relative to the top left corner
of the window.  The remaining elements are omitted if the character after
POS is fully visible; otherwise, RTOP and RBOT are the number of pixels
off-window at the top and bottom of the row, ROWH is the height of the
display row, and VPOS is the row number (0-based) containing POS.  */)"
                :type "int")
                nil [9539 10628])
            ("Spos_visible_in_window_p" function
               (:arguments 
                  ( ("partially" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9539 12022])
            ("DEFUN_ARGS_" variable (:type ("Swindow_line_height" type (:type "class") nil nil)) nil [12024 13004])
            ("doc" variable
               (:default-value "DEFUN (\"window-line-height\", Fwindow_line_height,
       Swindow_line_height, 0, 2, 0,
       doc: /* Return height in pixels of text line LINE in window WINDOW.
If WINDOW is nil or omitted, use selected window.

Return height of current line if LINE is omitted or nil.  Return height of
header or mode line if LINE is `header-line' and `mode-line'.
Otherwise, LINE is a text line number starting from 0.  A negative number
counts from the end of the window.

Value is a list (HEIGHT VPOS YPOS OFFBOT), where HEIGHT is the height
in pixels of the visible part of the line, VPOS and YPOS are the
vertical position in lines and pixels of the line, relative to the top
of the first text line, and OFFBOT is the number of off-window pixels at
the bottom of the text line.  If there are off-window pixels at the top
of the (first) text line, YPOS is negative.

Return nil if window display is not up-to-date.  In that case, use
`pos-visible-in-window-p' to obtain the information.  */)"
                :type "int")
                nil [12024 13004])
            ("Swindow_line_height" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("line" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12024 15207])
            ("decode_window" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15212 15412])
            ("decode_any_window" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15414 15613])
            ("DEFUN_ARGS_" variable (:type ("Swindow_buffer" type (:type "class") nil nil)) nil [15615 15784])
            ("doc" variable
               (:default-value "DEFUN (\"window-buffer\", Fwindow_buffer, Swindow_buffer, 0, 1, 0,
       doc: /* Return the buffer that WINDOW is displaying.
WINDOW defaults to the selected window.  */)"
                :type "int")
                nil [15615 15784])
            ("Swindow_buffer" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15615 15868])
            ("DEFUN_ARGS_" variable (:type ("Swindow_height" type (:type "class") nil nil)) nil [15870 16103])
            ("doc" variable
               (:default-value "DEFUN (\"window-height\", Fwindow_height, Swindow_height, 0, 1, 0,
       doc: /* Return the number of lines in WINDOW.
WINDOW defaults to the selected window.

The return value includes WINDOW's mode line and header line, if any.  */)"
                :type "int")
                nil [15870 16103])
            ("Swindow_height" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15870 16196])
            ("DEFUN_ARGS_" variable (:type ("Swindow_width" type (:type "class") nil nil)) nil [16198 16573])
            ("doc" variable
               (:default-value "DEFUN (\"window-width\", Fwindow_width, Swindow_width, 0, 1, 0,
       doc: /* Return the number of display columns in WINDOW.
WINDOW defaults to the selected window.

Note: The return value is the number of columns available for text in
WINDOW.  If you want to find out how many columns WINDOW takes up, use
(let ((edges (window-edges))) (- (nth 2 edges) (nth 0 edges))).  */)"
                :type "int")
                nil [16198 16573])
            ("Swindow_width" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16198 16690])
            ("DEFUN_ARGS_" variable (:type ("Swindow_full_width_p" type (:type "class") nil nil)) nil [16692 16878])
            ("doc" variable
               (:default-value "DEFUN (\"window-full-width-p\", Fwindow_full_width_p, Swindow_full_width_p, 0, 1, 0,
       doc: /* Return t if WINDOW is as wide as its frame.
WINDOW defaults to the selected window.  */)"
                :type "int")
                nil [16692 16878])
            ("Swindow_full_width_p" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16692 16992])
            ("DEFUN_ARGS_" variable (:type ("Swindow_hscroll" type (:type "class") nil nil)) nil [16994 17196])
            ("doc" variable
               (:default-value "DEFUN (\"window-hscroll\", Fwindow_hscroll, Swindow_hscroll, 0, 1, 0,
       doc: /* Return the number of columns by which WINDOW is scrolled from left margin.
WINDOW defaults to the selected window.  */)"
                :type "int")
                nil [16994 17196])
            ("Swindow_hscroll" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16994 17281])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_hscroll" type (:type "class") nil nil)) nil [17283 17622])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-hscroll\", Fset_window_hscroll, Sset_window_hscroll, 2, 2, 0,
       doc: /* Set number of columns WINDOW is scrolled from left margin to NCOL.
Return NCOL.  NCOL should be zero or positive.

Note that if `automatic-hscrolling' is non-nil, you cannot scroll the
window so that the location of point moves off-window.  */)"
                :type "int")
                nil [17283 17622])
            ("Sset_window_hscroll" function
               (:arguments 
                  ( ("ncol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17283 18014])
            ("DEFUN_ARGS_" variable (:type ("Swindow_redisplay_end_trigger" type (:type "class") nil nil)) nil [18016 18298])
            ("doc" variable
               (:default-value "DEFUN (\"window-redisplay-end-trigger\", Fwindow_redisplay_end_trigger,
       Swindow_redisplay_end_trigger, 0, 1, 0,
       doc: /* Return WINDOW's redisplay end trigger value.
WINDOW defaults to the selected window.
See `set-window-redisplay-end-trigger' for more information.  */)"
                :type "int")
                nil [18016 18298])
            ("Swindow_redisplay_end_trigger" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [18016 18397])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_redisplay_end_trigger" type (:type "class") nil nil)) nil [18399 18917])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-redisplay-end-trigger\", Fset_window_redisplay_end_trigger,
       Sset_window_redisplay_end_trigger, 2, 2, 0,
       doc: /* Set WINDOW's redisplay end trigger value to VALUE.
VALUE should be a buffer position (typically a marker) or nil.
If it is a buffer position, then if redisplay in WINDOW reaches a position
beyond VALUE, the functions in `redisplay-end-trigger-functions' are called
with two arguments: WINDOW, and the end trigger value.
Afterwards the end-trigger value is reset to nil.  */)"
                :type "int")
                nil [18399 18917])
            ("Sset_window_redisplay_end_trigger" function
               (:arguments 
                  ( ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [18399 19095])
            ("DEFUN_ARGS_" variable (:type ("Swindow_edges" type (:type "class") nil nil)) nil [19097 19699])
            ("doc" variable
               (:default-value "DEFUN (\"window-edges\", Fwindow_edges, Swindow_edges, 0, 1, 0,
       doc: /* Return a list of the edge coordinates of WINDOW.
The list has the form (LEFT TOP RIGHT BOTTOM).
TOP and BOTTOM count by lines, and LEFT and RIGHT count by columns,
all relative to 0, 0 at top left corner of frame.

RIGHT is one more than the rightmost column occupied by WINDOW.
BOTTOM is one more than the bottommost row occupied by WINDOW.
The edges include the space used by WINDOW's scroll bar, display
margins, fringes, header line, and/or mode line.  For the edges of
just the text area, use `window-inside-edges'.  */)"
                :type "int")
                nil [19097 19699])
            ("Swindow_edges" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [19097 20020])
            ("DEFUN_ARGS_" variable (:type ("Swindow_pixel_edges" type (:type "class") nil nil)) nil [20022 20617])
            ("doc" variable
               (:default-value "DEFUN (\"window-pixel-edges\", Fwindow_pixel_edges, Swindow_pixel_edges, 0, 1, 0,
       doc: /* Return a list of the edge pixel coordinates of WINDOW.
The list has the form (LEFT TOP RIGHT BOTTOM), all relative to 0, 0 at
the top left corner of the frame.

RIGHT is one more than the rightmost x position occupied by WINDOW.
BOTTOM is one more than the bottommost y position occupied by WINDOW.
The pixel edges include the space used by WINDOW's scroll bar, display
margins, fringes, header line, and/or mode line.  For the pixel edges
of just the text area, use `window-inside-pixel-edges'.  */)"
                :type "int")
                nil [20022 20617])
            ("Swindow_pixel_edges" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20022 20928])
            ("DEFUN_ARGS_" variable (:type ("Swindow_inside_edges" type (:type "class") nil nil)) nil [20930 21512])
            ("doc" variable
               (:default-value "DEFUN (\"window-inside-edges\", Fwindow_inside_edges, Swindow_inside_edges, 0, 1, 0,
       doc: /* Return a list of the edge coordinates of WINDOW.
The list has the form (LEFT TOP RIGHT BOTTOM).
TOP and BOTTOM count by lines, and LEFT and RIGHT count by columns,
all relative to 0, 0 at top left corner of frame.

RIGHT is one more than the rightmost column of WINDOW's text area.
BOTTOM is one more than the bottommost row of WINDOW's text area.
The inside edges do not include the space used by the WINDOW's scroll
bar, display margins, fringes, header line, and/or mode line.  */)"
                :type "int")
                nil [20930 21512])
            ("Swindow_inside_edges" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20930 22039])
            ("DEFUN_ARGS_" variable (:type ("Swindow_inside_pixel_edges" type (:type "class") nil nil)) nil [22041 22594])
            ("doc" variable
               (:default-value "DEFUN (\"window-inside-pixel-edges\", Fwindow_inside_pixel_edges, Swindow_inside_pixel_edges, 0, 1, 0,
       doc: /* Return a list of the edge pixel coordinates of WINDOW.
The list has the form (LEFT TOP RIGHT BOTTOM), all relative to 0, 0 at
the top left corner of the frame.

RIGHT is one more than the rightmost x position of WINDOW's text area.
BOTTOM is one more than the bottommost y position of WINDOW's text area.
The inside edges do not include the space used by WINDOW's scroll bar,
display margins, fringes, header line, and/or mode line.  */)"
                :type "int")
                nil [22041 22594])
            ("Swindow_inside_pixel_edges" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [22041 23117])
            ("coordinates_in_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("window_part" type (:type "enum") nil nil))
                nil [24046 29475])
            ("DEFUN_ARGS_" variable (:type ("Scoordinates_in_window_p" type (:type "class") nil nil)) nil [29478 30431])
            ("doc" variable
               (:default-value "DEFUN (\"coordinates-in-window-p\", Fcoordinates_in_window_p,
       Scoordinates_in_window_p, 2, 2, 0,
       doc: /* Return non-nil if COORDINATES are in WINDOW.
COORDINATES is a cons of the form (X . Y), X and Y being distances
measured in characters from the upper-left corner of the frame.
\\(0 . 0) denotes the character in the upper left corner of the
frame.
If COORDINATES are in the text portion of WINDOW,
   the coordinates relative to the window are returned.
If they are in the mode line of WINDOW, `mode-line' is returned.
If they are in the top mode line of WINDOW, `header-line' is returned.
If they are in the left fringe of WINDOW, `left-fringe' is returned.
If they are in the right fringe of WINDOW, `right-fringe' is returned.
If they are on the border between WINDOW and its right sibling,
  `vertical-line' is returned.
If they are in the windows's left or right marginal areas, `left-margin'\\n\\
  or `right-margin' is returned.  */)"
                :type "int")
                nil [29478 30431])
            ("Scoordinates_in_window_p" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("coordinates" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29478 31813])
            ("check_window_data" type
               (:members 
                  ( ("window" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32306 32326])
                    ("y" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol classsubparts) [32329 32340])
                    ("x" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol classsubparts) [32329 32340])
                    ("part" variable
                       (:pointer 1
                        :type ("window_part" type (:type "enum") nil nil))
                        (reparse-symbol classsubparts) [32343 32366]))                  
                :type "struct")
                nil [32277 32369])
            ("check_window_containing" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("user_data" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [32371 32785])
            ("window_from_coordinates" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable (:type "int") nil nil)
                    ("x" variable (:type "int") nil nil)
                    ("part" variable
                       (:pointer 1
                        :type ("window_part" type (:type "enum") nil nil))
                        nil nil)
                    ("wy" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("wx" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("tool_bar_p" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [33674 34553])
            ("DEFUN_ARGS_" variable (:type ("Swindow_at" type (:type "class") nil nil)) nil [34555 34812])
            ("doc" variable
               (:default-value "DEFUN (\"window-at\", Fwindow_at, Swindow_at, 2, 3, 0,
       doc: /* Return window containing coordinates X and Y on FRAME.
If omitted, FRAME defaults to the currently selected frame.
The top left corner of the frame is considered to be row 0,
column 0.  */)"
                :type "int")
                nil [34555 34812])
            ("Swindow_at" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("y" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [34555 35321])
            ("DEFUN_ARGS_" variable (:type ("Swindow_point" type (:type "class") nil nil)) nil [35323 35851])
            ("doc" variable
               (:default-value "DEFUN (\"window-point\", Fwindow_point, Swindow_point, 0, 1, 0,
       doc: /* Return current value of point in WINDOW.
WINDOW defaults to the selected window.

For a nonselected window, this is the value point would have
if that window were selected.

Note that, when WINDOW is the selected window and its buffer
is also currently selected, the value returned is the same as (point).
It would be more strictly correct to return the `top-level' value
of point, outside of any save-excursion forms.
But that is hard to define.  */)"
                :type "int")
                nil [35323 35851])
            ("Swindow_point" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [35323 36095])
            ("DEFUN_ARGS_" variable (:type ("Swindow_start" type (:type "class") nil nil)) nil [36097 36342])
            ("doc" variable
               (:default-value "DEFUN (\"window-start\", Fwindow_start, Swindow_start, 0, 1, 0,
       doc: /* Return position at which display currently starts in WINDOW.
WINDOW defaults to the selected window.
This is updated by redisplay or by calling `set-window-start'.  */)"
                :type "int")
                nil [36097 36342])
            ("Swindow_start" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [36097 36444])
            ("DEFUN_ARGS_" variable (:type ("Swindow_end" type (:type "class") nil nil)) nil [36894 37425])
            ("doc" variable
               (:default-value "DEFUN (\"window-end\", Fwindow_end, Swindow_end, 0, 2, 0,
       doc: /* Return position at which display currently ends in WINDOW.
WINDOW defaults to the selected window.
This is updated by redisplay, when it runs to completion.
Simply changing the buffer text or setting `window-start'
does not update this value.
Return nil if there is no recorded value.  \\(This can happen if the
last redisplay of WINDOW was preempted, and did not finish.)
If UPDATE is non-nil, compute the up-to-date position
if it isn't already recorded.  */)"
                :type "int")
                nil [36894 37425])
            ("Swindow_end" function
               (:arguments 
                  ( ("update" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [36894 39433])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_point" type (:type "class") nil nil)) nil [39435 39606])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-point\", Fset_window_point, Sset_window_point, 2, 2, 0,
       doc: /* Make point value in WINDOW be at position POS in WINDOW's buffer.
Return POS.  */)"
                :type "int")
                nil [39435 39606])
            ("Sset_window_point" function
               (:arguments 
                  ( ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [39435 40107])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_start" type (:type "class") nil nil)) nil [40109 40452])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-start\", Fset_window_start, Sset_window_start, 2, 3, 0,
       doc: /* Make display in WINDOW start at position POS in WINDOW's buffer.
WINDOW defaults to the selected window.  Return POS.
Optional third arg NOFORCE non-nil inhibits next redisplay from
overriding motion of point in order to display at this exact start.  */)"
                :type "int")
                nil [40109 40452])
            ("Sset_window_start" function
               (:arguments 
                  ( ("noforce" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [40109 41009])
            ("DEFUN_ARGS_" variable (:type ("Swindow_dedicated_p" type (:type "class") nil nil)) nil [41012 41987])
            ("doc" variable
               (:default-value "DEFUN (\"window-dedicated-p\", Fwindow_dedicated_p, Swindow_dedicated_p,
       0, 1, 0,
       doc: /* Return non-nil when WINDOW is dedicated to its buffer.
More precisely, return the value assigned by the last call of
`set-window-dedicated-p' for WINDOW.  Return nil if that function was
never called with WINDOW as its argument, or the value set by that
function was internally reset since its last call.  WINDOW defaults to
the selected window.

When a window is dedicated to its buffer, `display-buffer' will refrain
from displaying another buffer in it.  `get-lru-window' and
`get-largest-window' treat dedicated windows specially.
`delete-windows-on', `replace-buffer-in-windows', `quit-window' and
`kill-buffer' can delete a dedicated window and the containing frame.

Functions like `set-window-buffer' may change the buffer displayed by a
window, unless that window is \"strongly\" dedicated to its buffer, that
is the value returned by `window-dedicated-p' is t.  */)"
                :type "int")
                nil [41012 41987])
            ("Swindow_dedicated_p" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [41012 42074])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_dedicated_p" type (:type "class") nil nil)) nil [42076 43079])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-dedicated-p\", Fset_window_dedicated_p,
       Sset_window_dedicated_p, 2, 2, 0,
       doc: /* Mark WINDOW as dedicated according to FLAG.
WINDOW defaults to the selected window.  FLAG non-nil means mark WINDOW
as dedicated to its buffer.  FLAG nil means mark WINDOW as non-dedicated.
Return FLAG.

When a window is dedicated to its buffer, `display-buffer' will refrain
from displaying another buffer in it.  `get-lru-window' and
`get-largest-window' treat dedicated windows specially.
`delete-windows-on', `replace-buffer-in-windows', `quit-window' and
`kill-buffer' can delete a dedicated window and the containing
frame.

As a special case, if FLAG is t, mark WINDOW as \"strongly\" dedicated to
its buffer.  Functions like `set-window-buffer' may change the buffer
displayed by a window, unless that window is strongly dedicated to its
buffer.  If and when `set-window-buffer' displays another buffer in a
window, it also makes sure that the window is not marked as dedicated.  */)"
                :type "int")
                nil [42076 43079])
            ("Sset_window_dedicated_p" function
               (:arguments 
                  ( ("flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42076 43235])
            ("DEFUN_ARGS_" variable (:type ("Swindow_parameters" type (:type "class") nil nil)) nil [43238 43503])
            ("doc" variable
               (:default-value "DEFUN (\"window-parameters\", Fwindow_parameters, Swindow_parameters,
       0, 1, 0,
       doc: /* Return the parameters of WINDOW and their values.
WINDOW defaults to the selected window.  The return value is a list of
elements of the form (PARAMETER . VALUE). */)"
                :type "int")
                nil [43238 43503])
            ("Swindow_parameters" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43238 43612])
            ("DEFUN_ARGS_" variable (:type ("Swindow_parameter" type (:type "class") nil nil)) nil [43614 43792])
            ("doc" variable
               (:default-value "DEFUN (\"window-parameter\", Fwindow_parameter, Swindow_parameter,
       2, 2, 0,
       doc:  /* Return WINDOW's value for PARAMETER.
WINDOW defaults to the selected window.  */)"
                :type "int")
                nil [43614 43792])
            ("Swindow_parameter" function
               (:arguments 
                  ( ("parameter" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43614 43981])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_parameter" type (:type "class") nil nil)) nil [43983 44192])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-parameter\", Fset_window_parameter,
       Sset_window_parameter, 3, 3, 0,
       doc: /* Set WINDOW's value of PARAMETER to VALUE.
WINDOW defaults to the selected window.  Return VALUE.  */)"
                :type "int")
                nil [43983 44192])
            ("Sset_window_parameter" function
               (:arguments 
                  ( ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("parameter" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43983 44584])
            ("DEFUN_ARGS_" variable (:type ("Swindow_display_table" type (:type "class") nil nil)) nil [44587 44786])
            ("doc" variable
               (:default-value "DEFUN (\"window-display-table\", Fwindow_display_table, Swindow_display_table,
       0, 1, 0,
       doc: /* Return the display-table that WINDOW is using.
WINDOW defaults to the selected window.  */)"
                :type "int")
                nil [44587 44786])
            ("Swindow_display_table" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [44587 44877])
            ("window_display_table" function
               (:pointer 1
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Char_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [45098 45578])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_display_table" type (:type "class") nil nil)) nil [45580 45734])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-display-table\", Fset_window_display_table, Sset_window_display_table, 2, 2, 0,
       doc: /* Set WINDOW's display-table to TABLE.  */)"
                :type "int")
                nil [45580 45734])
            ("Sset_window_display_table" function
               (:arguments 
                  ( ("table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [45580 45904])
            ("unshow_buffer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [46012 47694])
            ("replace_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("replacement" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("old" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [47761 49356])
            ("DEFUN_ARGS_" variable (:type ("Sdelete_window" type (:type "class") nil nil)) nil [49358 49587])
            ("doc" variable
               (:default-value "DEFUN (\"delete-window\", Fdelete_window, Sdelete_window, 0, 1, \"\",
       doc: /* Remove WINDOW from its frame.
WINDOW defaults to the selected window.  Return nil.
Signal an error when WINDOW is the only window on its frame.  */)"
                :type "int")
                nil [49358 49587])
            ("Sdelete_window" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [49358 49884])
            ("delete_window" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [49886 55803])
            ("add_window_to_list" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("user_data" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [56143 56378])
            ("window_list" function
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [56568 57170])
            ("candidate_window_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("all_frames" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("minibuf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("owindow" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [57722 59696])
            ("decode_next_window_args" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("all_frames" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("minibuf" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("window" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [59857 61189])
            ("next_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("all_frames" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("minibuf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("next_p" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61420 63257])
            ("DEFUN_ARGS_" variable (:type ("Snext_window" type (:type "class") nil nil)) nil [63260 65055])
            ("doc" variable
               (:default-value "DEFUN (\"next-window\", Fnext_window, Snext_window, 0, 3, 0,
       doc: /* Return window following WINDOW in cyclic ordering of windows.
WINDOW defaults to the selected window. The optional arguments
MINIBUF and ALL-FRAMES specify the set of windows to consider.

MINIBUF t means consider the minibuffer window even if the
minibuffer is not active.  MINIBUF nil or omitted means consider
the minibuffer window only if the minibuffer is active.  Any
other value means do not consider the minibuffer window even if
the minibuffer is active.

Several frames may share a single minibuffer; if the minibuffer
is active, all windows on all frames that share that minibuffer
are considered too.  Therefore, if you are using a separate
minibuffer frame and the minibuffer is active and MINIBUF says it
counts, `next-window' considers the windows in the frame from
which you entered the minibuffer, as well as the minibuffer
window.

ALL-FRAMES nil or omitted means consider all windows on WINDOW's
 frame, plus the minibuffer window if specified by the MINIBUF
 argument, see above.  If the minibuffer counts, consider all
 windows on all frames that share that minibuffer too.
ALL-FRAMES t means consider all windows on all existing frames.
ALL-FRAMES `visible' means consider all windows on all visible
 frames.
ALL-FRAMES 0 means consider all windows on all visible and
 iconified frames.
ALL-FRAMES a frame means consider all windows on that frame only.
Anything else means consider all windows on WINDOW's frame and no
 others.

If you use consistent values for MINIBUF and ALL-FRAMES, you can use
`next-window' to iterate through the entire cycle of acceptable
windows, eventually ending up back at the window you started with.
`previous-window' traverses the same cycle, in the reverse order.  */)"
                :type "int")
                nil [63260 65055])
            ("Snext_window" function
               (:arguments 
                  ( ("all_frames" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("minibuf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [63260 65195])
            ("DEFUN_ARGS_" variable (:type ("Sprevious_window" type (:type "class") nil nil)) nil [65198 65806])
            ("doc" variable
               (:default-value "DEFUN (\"previous-window\", Fprevious_window, Sprevious_window, 0, 3, 0,
       doc: /* Return window preceding WINDOW in cyclic ordering of windows.
WINDOW defaults to the selected window. The optional arguments
MINIBUF and ALL-FRAMES specify the set of windows to consider.
For the precise meaning of these arguments see `next-window'.

If you use consistent values for MINIBUF and ALL-FRAMES, you can
use `previous-window' to iterate through the entire cycle of
acceptable windows, eventually ending up back at the window you
started with.  `next-window' traverses the same cycle, in the
reverse order.  */)"
                :type "int")
                nil [65198 65806])
            ("Sprevious_window" function
               (:arguments 
                  ( ("all_frames" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("minibuf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65198 65946])
            ("DEFUN_ARGS_" variable (:type ("Sother_window" type (:type "class") nil nil)) nil [65949 66654])
            ("doc" variable
               (:default-value "DEFUN (\"other-window\", Fother_window, Sother_window, 1, 2, \"p\",
       doc: /* Select another window in cyclic ordering of windows.
COUNT specifies the number of windows to skip, starting with the
selected window, before making the selection.  If COUNT is
positive, skip COUNT windows forwards.  If COUNT is negative,
skip -COUNT windows backwards.  COUNT zero means do not skip any
window, so select the selected window.  In an interactive call,
COUNT is the numeric prefix argument.  Return nil.

This function uses `next-window' for finding the window to select.
The argument ALL-FRAMES has the same meaning as in `next-window',
but the MINIBUF argument of `next-window' is always effectively
nil.  */)"
                :type "int")
                nil [65949 66654])
            ("Sother_window" function
               (:arguments 
                  ( ("all_frames" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("count" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [65949 67023])
            ("DEFUN_ARGS_" variable (:type ("Swindow_list" type (:type "class") nil nil)) nil [67026 67486])
            ("doc" variable
               (:default-value "DEFUN (\"window-list\", Fwindow_list, Swindow_list, 0, 3, 0,
       doc: /* Return a list of windows on FRAME, starting with WINDOW.
FRAME nil or omitted means use the selected frame.
WINDOW nil or omitted means use the selected window.
MINIBUF t means include the minibuffer window, even if it isn't active.
MINIBUF nil or omitted means include the minibuffer window only
if it's active.
MINIBUF neither nil nor t means never include the minibuffer window.  */)"
                :type "int")
                nil [67026 67486])
            ("Swindow_list" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("minibuf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [67026 67877])
            ("window_list_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("all_frames" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("minibuf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [67975 68678])
            ("window_loop" type
               (:members 
                  ( ("WINDOW_LOOP_UNUSED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69055 69074])
                    ("GET_BUFFER_WINDOW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69077 69095])
                    ("GET_LRU_WINDOW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69119 69134])
                    ("DELETE_OTHER_WINDOWS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69181 69202])
                    ("DELETE_BUFFER_WINDOWS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69240 69262])
                    ("GET_LARGEST_WINDOW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69285 69304])
                    ("UNSHOW_BUFFER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69307 69321])
                    ("REDISPLAY_BUFFER_WINDOWS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69345 69370])
                    ("CHECK_ALL_WINDOWS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [69393 69412]))                  
                :type "enum")
                nil [69034 69413])
            ("window_loop" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("type" variable (:type ("window_loop" type (:type "enum") nil nil)) nil nil)
                    ("frames" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("mini" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [69415 75751])
            ("check_all_windows" function (:type "void") nil [75821 75898])
            ("DEFUN_ARGS_" variable (:type ("Sget_lru_window" type (:type "class") nil nil)) nil [75900 76542])
            ("doc" variable
               (:default-value "DEFUN (\"get-lru-window\", Fget_lru_window, Sget_lru_window, 0, 2, 0,
       doc: /* Return the window least recently selected or used for display.
\\(LRU means Least Recently Used.)

Return a full-width window if possible.
A minibuffer window is never a candidate.
A dedicated window is never a candidate, unless DEDICATED is non-nil,
  so if all windows are dedicated, the value is nil.
If optional argument FRAME is `visible', search all visible frames.
If FRAME is 0, search all visible and iconified frames.
If FRAME is t, search all frames.
If FRAME is nil, search only the selected frame.
If FRAME is a frame, search only that frame.  */)"
                :type "int")
                nil [75900 76542])
            ("Sget_lru_window" function
               (:arguments 
                  ( ("dedicated" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75900 77004])
            ("DEFUN_ARGS_" variable (:type ("Sget_largest_window" type (:type "class") nil nil)) nil [77006 77556])
            ("doc" variable
               (:default-value "DEFUN (\"get-largest-window\", Fget_largest_window, Sget_largest_window, 0, 2, 0,
       doc: /* Return the largest window in area.
A minibuffer window is never a candidate.
A dedicated window is never a candidate unless DEDICATED is non-nil,
  so if all windows are dedicated, the value is nil.
If optional argument FRAME is `visible', search all visible frames.
If FRAME is 0, search all visible and iconified frames.
If FRAME is t, search all frames.
If FRAME is nil, search only the selected frame.
If FRAME is a frame, search only that frame.  */)"
                :type "int")
                nil [77006 77556])
            ("Sget_largest_window" function
               (:arguments 
                  ( ("dedicated" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77006 77690])
            ("DEFUN_ARGS_" variable (:type ("Sget_buffer_window" type (:type "class") nil nil)) nil [77692 78211])
            ("doc" variable
               (:default-value "DEFUN (\"get-buffer-window\", Fget_buffer_window, Sget_buffer_window, 0, 2, 0,
       doc: /* Return a window currently displaying BUFFER-OR-NAME, or nil if none.
BUFFER-OR-NAME may be a buffer or a buffer name and defaults to the
current buffer.
If optional argument FRAME is `visible', search all visible frames.
If optional argument FRAME is 0, search all visible and iconified frames.
If FRAME is t, search all frames.
If FRAME is nil, search only the selected frame.
If FRAME is a frame, search only that frame.  */)"
                :type "int")
                nil [77692 78211])
            ("Sget_buffer_window" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77692 78530])
            ("DEFUN_ARGS_" variable (:type ("Sdelete_other_windows" type (:type "class") nil nil)) nil [78532 79066])
            ("doc" variable
               (:default-value "DEFUN (\"delete-other-windows\", Fdelete_other_windows, Sdelete_other_windows,
       0, 1, \"\",
       doc: /* Make WINDOW (or the selected window) fill its frame.
Only the frame WINDOW is on is affected.
This function tries to reduce display jumps by keeping the text
previously visible in WINDOW in the same place on the frame.  Doing this
depends on the value of (window-start WINDOW), so if calling this
function in a program gives strange scrolling, make sure the
window-start value is reasonable when this function is called.  */)"
                :type "int")
                nil [78532 79066])
            ("Sdelete_other_windows" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [78532 80784])
            ("DEFUN_ARGS_" variable (:type ("Sdelete_windows_on" type (:type "class") nil nil)) nil [80786 81523])
            ("doc" variable
               (:default-value "DEFUN (\"delete-windows-on\", Fdelete_windows_on, Sdelete_windows_on,
       0, 2, \"bDelete windows on (buffer): \",
       doc: /* Delete all windows showing BUFFER-OR-NAME.
BUFFER-OR-NAME may be a buffer or the name of an existing buffer and
defaults to the current buffer.

Optional second argument FRAME controls which frames are affected.
If optional argument FRAME is `visible', search all visible frames.
If FRAME is 0, search all visible and iconified frames.
If FRAME is nil, search all frames.
If FRAME is t, search only the selected frame.
If FRAME is a frame, search only that frame.
When a window showing BUFFER-OR-NAME is dedicated and the only window of
its frame, that frame is deleted when there are other frames left.  */)"
                :type "int")
                nil [80786 81523])
            ("Sdelete_windows_on" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80786 82015])
            ("DEFUN_ARGS_" variable (:type ("Sreplace_buffer_in_windows" type (:type "class") nil nil)) nil [82017 82621])
            ("doc" variable
               (:default-value "DEFUN (\"replace-buffer-in-windows\", Freplace_buffer_in_windows,
       Sreplace_buffer_in_windows,
       0, 1, \"bReplace buffer in windows: \",
       doc: /* Replace BUFFER-OR-NAME with some other buffer in all windows showing it.
BUFFER-OR-NAME may be a buffer or the name of an existing buffer and
defaults to the current buffer.

When a window showing BUFFER-OR-NAME is dedicated that window is
deleted.  If that window is the only window on its frame, that frame is
deleted too when there are other frames left.  If there are no other
frames left, some other buffer is displayed in that window.  */)"
                :type "int")
                nil [82017 82621])
            ("Sreplace_buffer_in_windows" function
               (:arguments 
                  ( ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [82017 82921])
            ("replace_buffer_in_all_windows" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [83033 83389])
            ("MIN_SAFE_WINDOW_WIDTH" variable (:constant-flag t) nil [83553 83574])
            ("MIN_SAFE_WINDOW_HEIGHT" variable (:constant-flag t) nil [83588 83610])
            ("WINDOW_TOTAL_SIZE" variable (:constant-flag t) nil [83735 83752])
            ("check_frame_size" function
               (:arguments 
                  ( ("frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("cols" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("rows" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "void")
                nil [83920 84541])
            ("window_fixed_size_p" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("check_siblings_p" variable (:type "int") nil nil)
                    ("width_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [84832 87145])
            ("window_min_size_2" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("safe_p" variable (:type "int") nil nil)
                    ("width_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [87549 88253])
            ("window_min_size_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("safe_p" variable (:type "int") nil nil)
                    ("width_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [88708 90302])
            ("window_min_size" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("fixed" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("ignore_fixed_p" variable (:type "int") nil nil)
                    ("safe_p" variable (:type "int") nil nil)
                    ("width_p" variable (:type "int") nil nil))                  
                :type "int")
                nil [90775 91210])
            ("adjust_window_margins" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [91367 92220])
            ("shrink_windows" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("shrinkable" variable (:type "int") nil nil)
                    ("nchildren" variable (:type "int") nil nil)
                    ("size" variable (:type "int") nil nil)
                    ("total" variable (:type "int") nil nil)
                    ("safe_p" variable (:type "int") nil nil)
                    ("width_p" variable (:type "int") nil nil)
                    ("resize_fixed_p" variable (:type "int") nil nil)
                    ("forward" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [93556 97223])
            ("size_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("nodelete_p" variable (:type "int") nil nil)
                    ("width_p" variable (:type "int") nil nil)
                    ("size" variable (:type "int") nil nil)
                    ("last_only" variable (:type "int") nil nil)
                    ("first_only" variable (:type "int") nil nil))                  
                :type "void")
                nil [97939 103281])
            ("set_window_height" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("height" variable (:type "int") nil nil)
                    ("nodelete" variable (:type "int") nil nil))                  
                :type "void")
                nil [103730 103895])
            ("set_window_width" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("width" variable (:type "int") nil nil)
                    ("nodelete" variable (:type "int") nil nil))                  
                :type "void")
                nil [104340 104501])
            ("change_window_heights" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("n" variable (:type "int") nil nil))                  
                :type "void")
                nil [104573 105349])
            ("window_select_count" variable (:type "int") nil [105353 105377])
            ("DEFUN_ARGS_" variable (:type ("Fset_window_fringes" type (:type "class") nil nil)) nil [105379 105410])
            ("DEFUN_ARGS_" variable (:type ("Fset_window_scroll_bars" type (:type "class") nil nil)) nil [105411 105446])
            ("run_funs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("funs" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105470 105487]))                  
                :type "void")
                nil [105448 105592])
            ("select_window_norecord" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105637 105656]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105594 105657])
            ("select_frame_norecord" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105700 105718]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105658 105719])
            ("run_window_configuration_change_hook" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [105764 105780]))                  
                :type "void")
                nil [105721 107046])
            ("set_window_buffer" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("keep_margins_p" variable (:type "int") nil nil)
                    ("run_hooks_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [107370 110694])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_buffer" type (:type "class") nil nil)) nil [110697 111480])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-buffer\", Fset_window_buffer, Sset_window_buffer, 2, 3, 0,
       doc: /* Make WINDOW display BUFFER-OR-NAME as its contents.
WINDOW defaults to the selected window.  BUFFER-OR-NAME must be a buffer
or the name of an existing buffer.  Optional third argument KEEP-MARGINS
non-nil means that WINDOW's current display margins, fringe widths, and
scroll bar settings are preserved; the default is to reset these from
the local settings for BUFFER-OR-NAME or the frame defaults.  Return nil.

This function throws an error when WINDOW is strongly dedicated to its
buffer (that is `window-dedicated-p' returns t for WINDOW) and does not
already display BUFFER-OR-NAME.

This function runs `window-scroll-functions' before running
`window-configuration-change-hook'.  */)"
                :type "int")
                nil [110697 111480])
            ("Sset_window_buffer" function
               (:arguments 
                  ( ("keep_margins" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer_or_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110697 112298])
            ("DEFUN_ARGS_" variable (:type ("Sselect_window" type (:type "class") nil nil)) nil [112400 112949])
            ("doc" variable
               (:default-value "DEFUN (\"select-window\", Fselect_window, Sselect_window, 1, 2, 0,
       doc: /* Select WINDOW.  Most editing will apply to WINDOW's buffer.
If WINDOW is not already selected, make WINDOW's buffer current
and make WINDOW the frame's selected window.  Return WINDOW.
Optional second arg NORECORD non-nil means do not put this buffer
at the front of the list of recently selected ones and do not
make this window the most recently selected one.

Note that the main editor command loop selects the buffer of the
selected window before each command.  */)"
                :type "int")
                nil [112400 112949])
            ("Sselect_window" function
               (:arguments 
                  ( ("norecord" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [112400 115001])
            ("select_window_norecord" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115003 115167])
            ("select_frame_norecord" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115169 115334])
            ("display_buffer" function
               (:arguments 
                  ( ("override_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("not_this_window_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115337 115548])
            ("DEFUN_ARGS_" variable (:type ("Sforce_window_update" type (:type "class") nil nil)) nil [115550 115876])
            ("doc" variable
               (:default-value "DEFUN (\"force-window-update\", Fforce_window_update, Sforce_window_update,
       0, 1, 0,
       doc: /* Force all windows to be updated on next redisplay.
If optional arg OBJECT is a window, force redisplay of that window only.
If OBJECT is a buffer or buffer name, force redisplay of all windows
displaying that buffer.  */)"
                :type "int")
                nil [115550 115876])
            ("Sforce_window_update" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [115550 116875])
            ("temp_output_buffer_show" function
               (:arguments 
                  ( ("buf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [116878 118767])
            ("make_dummy_parent" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [118770 119433])
            ("DEFUN_ARGS_" variable (:type ("Ssplit_window" type (:type "class") nil nil)) nil [119435 120118])
            ("doc" variable
               (:default-value "DEFUN (\"split-window\", Fsplit_window, Ssplit_window, 0, 3, \"\",
       doc: /* Split WINDOW, putting SIZE lines in the first of the pair.
WINDOW defaults to selected one and SIZE to half its size.
If optional third arg HORIZONTAL is non-nil, split side by side and put
SIZE columns in the first of the pair.  In that case, SIZE includes that
window's scroll bar, or the divider column to its right.
Interactively, all arguments are nil.
Returns the newly created window (which is the lower or rightmost one).
The upper or leftmost window is the original one, and remains selected
if it was selected before.

See Info node `(elisp)Splitting Windows' for more details and examples.  */)"
                :type "int")
                nil [119435 120118])
            ("Ssplit_window" function
               (:arguments 
                  ( ("horizontal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [119435 123920])
            ("DEFUN_ARGS_" variable (:type ("Senlarge_window" type (:type "class") nil nil)) nil [123923 124425])
            ("doc" variable
               (:default-value "DEFUN (\"enlarge-window\", Fenlarge_window, Senlarge_window, 1, 2, \"p\",
       doc: /* Make selected window SIZE lines taller.
Interactively, if no argument is given, make the selected window one
line taller.  If optional argument HORIZONTAL is non-nil, make selected
window wider by SIZE columns.  If SIZE is negative, shrink the window by
-SIZE lines or columns.  Return nil.

This function can delete windows if they get too small.  The size of
fixed size windows is not altered by this function.  */)"
                :type "int")
                nil [123923 124425])
            ("Senlarge_window" function
               (:arguments 
                  ( ("horizontal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [123923 124657])
            ("DEFUN_ARGS_" variable (:type ("Sshrink_window" type (:type "class") nil nil)) nil [124659 125163])
            ("doc" variable
               (:default-value "DEFUN (\"shrink-window\", Fshrink_window, Sshrink_window, 1, 2, \"p\",
       doc: /* Make selected window SIZE lines smaller.
Interactively, if no argument is given, make the selected window one
line smaller.  If optional argument HORIZONTAL is non-nil, make the
window narrower by SIZE columns.  If SIZE is negative, enlarge selected
window by -SIZE lines or columns.  Return nil.

This function can delete windows if they get too small.  The size of
fixed size windows is not altered by this function. */)"
                :type "int")
                nil [124659 125163])
            ("Sshrink_window" function
               (:arguments 
                  ( ("horizontal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [124659 125396])
            ("window_height" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [125398 125534])
            ("window_width" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [125536 125670])
            ("CURBEG" variable (:constant-flag t) nil [125681 125687])
            ("CURSIZE" variable (:constant-flag t) nil [125772 125779])
            ("enlarge_window" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("horiz_flag" variable (:type "int") nil nil)
                    ("delta" variable (:type "int") nil nil))                  
                :type "void")
                nil [126124 133858])
            ("adjust_window_trailing_edge" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("horiz_flag" variable (:type "int") nil nil)
                    ("delta" variable (:type "int") nil nil))                  
                :type "void")
                nil [134248 138109])
            ("DEFUN_ARGS_" variable (:type ("Sadjust_window_trailing_edge" type (:type "class") nil nil)) nil [138141 138635])
            ("doc" variable
               (:default-value "DEFUN (\"adjust-window-trailing-edge\", Fadjust_window_trailing_edge,
       Sadjust_window_trailing_edge, 3, 3, 0,
       doc: /* Adjust the bottom or right edge of WINDOW by DELTA.
If HORIZONTAL is non-nil, that means adjust the width, moving the right edge.
Otherwise, adjust the height, moving the bottom edge.

Following siblings of the selected window are resized to fulfill
the size request.  If they become too small in the process, they
are not deleted; instead, we signal an error.  */)"
                :type "int")
                nil [138141 138635])
            ("Sadjust_window_trailing_edge" function
               (:arguments 
                  ( ("horizontal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("delta" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [138141 138963])
            ("shrink_window_lowest_first" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [139141 139208])
            ("save_restore_action" type
               (:members 
                  ( ("CHECK_ORIG_SIZES" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [139241 139258])
                    ("SAVE_ORIG_SIZES" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [139263 139279])
                    ("RESTORE_ORIG_SIZES" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [139284 139304]))                  
                :type "enum")
                nil [139210 139305])
            ("save_restore_orig_size" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("save_restore_action" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [139307 139429])
            ("shrink_window_lowest_first" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("height" variable (:type "int") nil nil))                  
                :type "void")
                nil [139537 141321])
            ("save_restore_orig_size" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("action" variable (:type ("save_restore_action" type (:type "enum") nil nil)) nil nil))                  
                :type "int")
                nil [141882 143071])
            ("grow_mini_window" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("delta" variable (:type "int") nil nil))                  
                :type "void")
                nil [143185 144667])
            ("shrink_mini_window" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [144895 145541])
            ("mark_window_cursors_off" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [145783 146113])
            ("window_internal_height" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [146187 146547])
            ("window_box_text_cols" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [146707 147448])
            ("window_scroll" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("n" variable (:type "int") nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("noerror" variable (:type "int") nil nil))                  
                :type "void")
                nil [147989 148480])
            ("window_scroll_pixel_based" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("n" variable (:type "int") nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("noerror" variable (:type "int") nil nil))                  
                :type "void")
                nil [148631 159732])
            ("window_scroll_line_based" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("n" variable (:type "int") nil nil)
                    ("whole" variable (:type "int") nil nil)
                    ("noerror" variable (:type "int") nil nil))                  
                :type "void")
                nil [159873 163813])
            ("scroll_command" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("n" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("direction" variable (:type "int") nil nil))                  
                :type "void")
                nil [164138 165066])
            ("DEFUN_ARGS_" variable (:type ("Sscroll_up" type (:type "class") nil nil)) nil [165068 165500])
            ("doc" variable
               (:default-value "DEFUN (\"scroll-up\", Fscroll_up, Sscroll_up, 0, 1, \"^P\",
       doc: /* Scroll text of selected window upward ARG lines.
If ARG is omitted or nil, scroll upward by a near full screen.
A near full screen is `next-screen-context-lines' less than a full screen.
Negative ARG means scroll downward.
If ARG is the atom `-', scroll downward by nearly full screen.
When calling from a program, supply as argument a number, nil, or `-'.  */)"
                :type "int")
                nil [165068 165500])
            ("Sscroll_up" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [165068 165579])
            ("DEFUN_ARGS_" variable (:type ("Sscroll_down" type (:type "class") nil nil)) nil [165581 166011])
            ("doc" variable
               (:default-value "DEFUN (\"scroll-down\", Fscroll_down, Sscroll_down, 0, 1, \"^P\",
       doc: /* Scroll text of selected window down ARG lines.
If ARG is omitted or nil, scroll down by a near full screen.
A near full screen is `next-screen-context-lines' less than a full screen.
Negative ARG means scroll upward.
If ARG is the atom `-', scroll upward by nearly full screen.
When calling from a program, supply as argument a number, nil, or `-'.  */)"
                :type "int")
                nil [165581 166011])
            ("Sscroll_down" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [165581 166091])
            ("DEFUN_ARGS_" variable (:type ("Sother_window_for_scrolling" type (:type "class") nil nil)) nil [166094 166501])
            ("doc" variable
               (:default-value "DEFUN (\"other-window-for-scrolling\", Fother_window_for_scrolling, Sother_window_for_scrolling, 0, 0, 0,
       doc: /* Return the other window for \\\"other window scroll\\\" commands.
If `other-window-scroll-buffer' is non-nil, a window
showing that buffer is used.
If in the minibuffer, `minibuffer-scroll-window' if non-nil
specifies the window.  This takes precedence over
`other-window-scroll-buffer'.  */)"
                :type "int")
                nil [166094 166501])
            ("Sother_window_for_scrolling" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [166094 167519])
            ("DEFUN_ARGS_" variable (:type ("Sscroll_other_window" type (:type "class") nil nil)) nil [167521 168318])
            ("doc" variable
               (:default-value "DEFUN (\"scroll-other-window\", Fscroll_other_window, Sscroll_other_window, 0, 1, \"P\",
       doc: /* Scroll next window upward ARG lines; or near full screen if no ARG.
A near full screen is `next-screen-context-lines' less than a full screen.
The next window is the one below the current one; or the one at the top
if the current one is at the bottom.  Negative ARG means scroll downward.
If ARG is the atom `-', scroll downward by nearly full screen.
When calling from a program, supply as argument a number, nil, or `-'.

If `other-window-scroll-buffer' is non-nil, scroll the window
showing that buffer, popping the buffer up if necessary.
If in the minibuffer, `minibuffer-scroll-window' if non-nil
specifies the window to scroll.  This takes precedence over
`other-window-scroll-buffer'.  */)"
                :type "int")
                nil [167521 168318])
            ("Sscroll_other_window" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [167521 169080])
            ("DEFUN_ARGS_" variable (:type ("Sscroll_left" type (:type "class") nil nil)) nil [169083 169589])
            ("doc" variable
               (:default-value "DEFUN (\"scroll-left\", Fscroll_left, Sscroll_left, 0, 2, \"^P\\np\",
       doc: /* Scroll selected window display ARG columns left.
Default for ARG is window width minus 2.
Value is the total amount of leftward horizontal scrolling in
effect after the change.
If SET-MINIMUM is non-nil, the new scroll amount becomes the
lower bound for automatic scrolling, i.e. automatic scrolling
will not scroll a window to a column less than the value returned
by this function.  This happens in an interactive call.  */)"
                :type "int")
                nil [169083 169589])
            ("Sscroll_left" function
               (:arguments 
                  ( ("set_minimum" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [169083 170061])
            ("DEFUN_ARGS_" variable (:type ("Sscroll_right" type (:type "class") nil nil)) nil [170063 170573])
            ("doc" variable
               (:default-value "DEFUN (\"scroll-right\", Fscroll_right, Sscroll_right, 0, 2, \"^P\\np\",
       doc: /* Scroll selected window display ARG columns right.
Default for ARG is window width minus 2.
Value is the total amount of leftward horizontal scrolling in
effect after the change.
If SET-MINIMUM is non-nil, the new scroll amount becomes the
lower bound for automatic scrolling, i.e. automatic scrolling
will not scroll a window to a column less than the value returned
by this function.  This happens in an interactive call.  */)"
                :type "int")
                nil [170063 170573])
            ("Sscroll_right" function
               (:arguments 
                  ( ("set_minimum" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [170063 171045])
            ("DEFUN_ARGS_" variable (:type ("Sminibuffer_selected_window" type (:type "class") nil nil)) nil [171047 171297])
            ("doc" variable
               (:default-value "DEFUN (\"minibuffer-selected-window\", Fminibuffer_selected_window, Sminibuffer_selected_window, 0, 0, 0,
       doc: /* Return the window which was selected when entering the minibuffer.
Returns nil, if selected window is not a minibuffer window.  */)"
                :type "int")
                nil [171047 171297])
            ("Sminibuffer_selected_window" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [171047 171486])
            ("displayed_window_lines" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [171586 173094])
            ("DEFUN_ARGS_" variable (:type ("Srecenter" type (:type "class") nil nil)) nil [173097 173958])
            ("doc" variable
               (:default-value "DEFUN (\"recenter\", Frecenter, Srecenter, 0, 1, \"P\",
       doc: /* Center point in selected window and maybe redisplay frame.
With prefix argument ARG, recenter putting point on screen line ARG
relative to the selected window.  If ARG is negative, it counts up from the
bottom of the window.  (ARG should be less than the height of the window.)

If ARG is omitted or nil, then recenter with point on the middle line of
the selected window; if the variable `recenter-redisplay' is non-nil,
also erase the entire frame and redraw it (when `auto-resize-tool-bars'
is set to `grow-only', this resets the tool-bar's height to the minimum
height needed); if `recenter-redisplay' has the special value `tty',
then only tty frame are redrawn.

Just C-u as prefix means put point in the center of the window
and redisplay normally--don't erase and redraw the frame.  */)"
                :type "int")
                nil [173097 173958])
            ("Srecenter" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [173097 178552])
            ("DEFUN_ARGS_" variable (:type ("Swindow_text_height" type (:type "class") nil nil)) nil [178555 178886])
            ("doc" variable
               (:default-value "DEFUN (\"window-text-height\", Fwindow_text_height, Swindow_text_height,
       0, 1, 0,
       doc: /* Return the height in lines of the text display area of WINDOW.
WINDOW defaults to the selected window.

The return value does not include the mode line, any header line, nor
any partial-height lines in the text display area.  */)"
                :type "int")
                nil [178555 178886])
            ("Swindow_text_height" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [178555 179128])
            ("DEFUN_ARGS_" variable (:type ("Smove_to_window_line" type (:type "class") nil nil)) nil [179133 179463])
            ("doc" variable
               (:default-value "DEFUN (\"move-to-window-line\", Fmove_to_window_line, Smove_to_window_line,
       1, 1, \"P\",
       doc: /* Position point relative to window.
With no argument, position point at center of window.
An argument specifies vertical position within the window;
zero means top of window, negative means relative to bottom of window.  */)"
                :type "int")
                nil [179133 179463])
            ("Smove_to_window_line" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [179133 181020])
            ("save_window_data" type
               (:members 
                  ( ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [181230 181246])
                    ("next_from_Lisp_Vector_struct" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [181251 181300])
                    ("selected_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181305 181332])
                    ("current_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181337 181364])
                    ("current_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181369 181396])
                    ("minibuf_scroll_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181401 181435])
                    ("minibuf_selected_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181440 181476])
                    ("root_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181481 181505])
                    ("focus_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181510 181534])
                    ("saved_windows" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [181631 181657])
                    ("frame_menu_bar_lines" variable (:type "int") (reparse-symbol classsubparts) [181778 181828])
                    ("frame_lines" variable (:type "int") (reparse-symbol classsubparts) [181778 181828])
                    ("frame_cols" variable (:type "int") (reparse-symbol classsubparts) [181778 181828])
                    ("frame_tool_bar_lines" variable (:type "int") (reparse-symbol classsubparts) [181833 181858]))                  
                :type "struct")
                nil [181198 181863])
            ("saved_window" type
               (:members 
                  ( ("size" variable (:type "unsigned int") (reparse-symbol classsubparts) [181996 182012])
                    ("next_from_Lisp_Vector_struct" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [182015 182064])
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182068 182087])
                    ("mark" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182090 182130])
                    ("pointm" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182090 182130])
                    ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182090 182130])
                    ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182090 182130])
                    ("total_lines" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182133 182189])
                    ("total_cols" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182133 182189])
                    ("top_line" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182133 182189])
                    ("left_col" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182133 182189])
                    ("min_hscroll" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182192 182225])
                    ("hscroll" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182192 182225])
                    ("prev" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182228 182253])
                    ("parent" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182228 182253])
                    ("start_at_line_beg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182256 182286])
                    ("display_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182289 182315])
                    ("orig_total_lines" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182318 182362])
                    ("orig_top_line" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182318 182362])
                    ("right_margin_cols" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182365 182413])
                    ("left_margin_cols" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182365 182413])
                    ("fringes_outside_margins" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182416 182491])
                    ("right_fringe_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182416 182491])
                    ("left_fringe_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182416 182491])
                    ("vertical_scroll_bar_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182494 182549])
                    ("scroll_bar_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182494 182549])
                    ("resize_proportionally" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182552 182597])
                    ("dedicated" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [182552 182597]))                  
                :type "struct")
                nil [181903 182600])
            ("SAVED_WINDOW_N" variable (:constant-flag t) nil [182610 182624])
            ("DEFUN_ARGS_" variable (:type ("Swindow_configuration_p" type (:type "class") nil nil)) nil [182696 182860])
            ("doc" variable
               (:default-value "DEFUN (\"window-configuration-p\", Fwindow_configuration_p, Swindow_configuration_p, 1, 1, 0,
       doc: /* Return t if OBJECT is a window-configuration object.  */)"
                :type "int")
                nil [182696 182860])
            ("Swindow_configuration_p" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [182696 182956])
            ("DEFUN_ARGS_" variable (:type ("Swindow_configuration_frame" type (:type "class") nil nil)) nil [182958 183152])
            ("doc" variable
               (:default-value "DEFUN (\"window-configuration-frame\", Fwindow_configuration_frame, Swindow_configuration_frame, 1, 1, 0,
       doc: /* Return the frame that CONFIG, a window-configuration object, is about.  */)"
                :type "int")
                nil [182958 183152])
            ("Swindow_configuration_frame" function
               (:arguments 
                  ( ("config" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [182958 183488])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_configuration" type (:type "class") nil nil)) nil [183490 183961])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-configuration\", Fset_window_configuration,
       Sset_window_configuration, 1, 1, 0,
       doc: /* Set the configuration of windows and buffers as specified by CONFIGURATION.
CONFIGURATION must be a value previously returned
by `current-window-configuration' (which see).
If CONFIGURATION was made from a frame that is now deleted,
only frame-independent values can be restored.  In this case,
the return value is nil.  Otherwise the value is t.  */)"
                :type "int")
                nil [183490 183961])
            ("Sset_window_configuration" function
               (:arguments 
                  ( ("configuration" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [183490 196019])
            ("delete_all_subwindows" function
               (:arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [196106 196848])
            ("count_windows" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "int")
                nil [196851 197218])
            ("get_leaf_windows" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("flat" variable
                       (:pointer 2
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("i" variable (:type "int") nil nil))                  
                :type "int")
                nil [197322 197714])
            ("get_phys_cursor_glyph" function
               (:pointer 1
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("glyph" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [197883 198327])
            ("save_window_save" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("vector" variable
                       (:pointer 1
                        :type ("Lisp_Vector" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("i" variable (:type "int") nil nil))                  
                :type "int")
                nil [198330 200723])
            ("DEFUN_ARGS_" variable (:type ("Scurrent_window_configuration" type (:type "class") nil nil)) nil [200725 201336])
            ("doc" variable
               (:default-value "DEFUN (\"current-window-configuration\", Fcurrent_window_configuration,
       Scurrent_window_configuration, 0, 1, 0,
       doc: /* Return an object representing the current window configuration of FRAME.
If FRAME is nil or omitted, use the selected frame.
This describes the number of windows, their sizes and current buffers,
and for each displayed buffer, where display starts, and the positions of
point and mark.  An exception is made for point in the current buffer:
its value is -not- saved.
This also records the currently selected frame, and FRAME's focus
redirection (see `redirect-frame-focus').  */)"
                :type "int")
                nil [200725 201336])
            ("Scurrent_window_configuration" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [200725 202712])
            ("DEFUN_ARGS_" variable (:type ("Ssave_window_excursion" type (:type "class") nil nil)) nil [202714 203225])
            ("doc" variable
               (:default-value "DEFUN (\"save-window-excursion\", Fsave_window_excursion, Ssave_window_excursion,
       0, UNEVALLED, 0,
       doc: /* Execute BODY, preserving window sizes and contents.
Return the value of the last form in BODY.
Restore which buffer appears in which window, where display starts,
and the value of point and mark for each window.
Also restore the choice of selected window.
Also restore which buffer is current.
Does not restore the value of point in current buffer.
usage: (save-window-excursion BODY...)  */)"
                :type "int")
                nil [202714 203225])
            ("Ssave_window_excursion" function
               (:arguments 
                  ( ("args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [202714 203485])
            ("window_tree" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [203663 204311])
            ("DEFUN_ARGS_" variable (:type ("Swindow_tree" type (:type "class") nil nil)) nil [204315 205171])
            ("doc" variable
               (:default-value "DEFUN (\"window-tree\", Fwindow_tree, Swindow_tree,
       0, 1, 0,
       doc: /* Return the window tree for frame FRAME.

The return value is a list of the form (ROOT MINI), where ROOT
represents the window tree of the frame's root window, and MINI
is the frame's minibuffer window.

If the root window is not split, ROOT is the root window itself.
Otherwise, ROOT is a list (DIR EDGES W1 W2 ...) where DIR is nil for a
horizontal split, and t for a vertical split, EDGES gives the combined
size and position of the subwindows in the split, and the rest of the
elements are the subwindows in the split.  Each of the subwindows may
again be a window or a list representing a window split, and so on.
EDGES is a list \\(LEFT TOP RIGHT BOTTOM) as returned by `window-edges'.

If FRAME is nil or omitted, return information on the currently
selected frame.  */)"
                :type "int")
                nil [204315 205171])
            ("Swindow_tree" function
               (:arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [204315 205422])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_margins" type (:type "class") nil nil)) nil [205596 206028])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-margins\", Fset_window_margins, Sset_window_margins,
       2, 3, 0,
       doc: /* Set width of marginal areas of window WINDOW.
If WINDOW is nil, set margins of the currently selected window.
Second arg LEFT-WIDTH specifies the number of character cells to
reserve for the left marginal area.  Optional third arg RIGHT-WIDTH
does the same for the right marginal area.  A nil width parameter
means no margin.  */)"
                :type "int")
                nil [205596 206028])
            ("Sset_window_margins" function
               (:arguments 
                  ( ("right_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("left_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [205596 206860])
            ("DEFUN_ARGS_" variable (:type ("Swindow_margins" type (:type "class") nil nil)) nil [206863 207193])
            ("doc" variable
               (:default-value "DEFUN (\"window-margins\", Fwindow_margins, Swindow_margins,
       0, 1, 0,
       doc: /* Get width of marginal areas of window WINDOW.
If WINDOW is omitted or nil, use the currently selected window.
Value is a cons of the form (LEFT-WIDTH . RIGHT-WIDTH).
If a marginal area does not exist, its width will be returned
as nil.  */)"
                :type "int")
                nil [206863 207193])
            ("Swindow_margins" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [206863 207341])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_fringes" type (:type "class") nil nil)) nil [207509 208215])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-fringes\", Fset_window_fringes, Sset_window_fringes,
       2, 4, 0,
       doc: /* Set the fringe widths of window WINDOW.
If WINDOW is nil, set the fringe widths of the currently selected
window.
Second arg LEFT-WIDTH specifies the number of pixels to reserve for
the left fringe.  Optional third arg RIGHT-WIDTH specifies the right
fringe width.  If a fringe width arg is nil, that means to use the
frame's default fringe width.  Default fringe widths can be set with
the command `set-fringe-style'.
If optional fourth arg OUTSIDE-MARGINS is non-nil, draw the fringes
outside of the display margins.  By default, fringes are drawn between
display marginal areas and the text area.  */)"
                :type "int")
                nil [207509 208215])
            ("Sset_window_fringes" function
               (:arguments 
                  ( ("outside_margins" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("right_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("left_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [207509 209095])
            ("DEFUN_ARGS_" variable (:type ("Swindow_fringes" type (:type "class") nil nil)) nil [209098 209365])
            ("doc" variable
               (:default-value "DEFUN (\"window-fringes\", Fwindow_fringes, Swindow_fringes,
       0, 1, 0,
       doc: /* Get width of fringes of window WINDOW.
If WINDOW is omitted or nil, use the currently selected window.
Value is a list of the form (LEFT-WIDTH RIGHT-WIDTH OUTSIDE-MARGINS).  */)"
                :type "int")
                nil [209098 209365])
            ("Swindow_fringes" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [209098 209657])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_scroll_bars" type (:type "class") nil nil)) nil [209829 210467])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-scroll-bars\", Fset_window_scroll_bars, Sset_window_scroll_bars,
       2, 4, 0,
       doc: /* Set width and type of scroll bars of window WINDOW.
If window is nil, set scroll bars of the currently selected window.
Second parameter WIDTH specifies the pixel width for the scroll bar;
this is automatically adjusted to a multiple of the frame column width.
Third parameter VERTICAL-TYPE specifies the type of the vertical scroll
bar: left, right, or nil.
If WIDTH is nil, use the frame's scroll-bar width.
If VERTICAL-TYPE is t, use the frame's scroll-bar type.
Fourth parameter HORIZONTAL-TYPE is currently unused.  */)"
                :type "int")
                nil [209829 210467])
            ("Sset_window_scroll_bars" function
               (:arguments 
                  ( ("horizontal_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("vertical_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [209829 211333])
            ("DEFUN_ARGS_" variable (:type ("Swindow_scroll_bars" type (:type "class") nil nil)) nil [211336 211713])
            ("doc" variable
               (:default-value "DEFUN (\"window-scroll-bars\", Fwindow_scroll_bars, Swindow_scroll_bars,
       0, 1, 0,
       doc: /* Get width and type of scroll bars of window WINDOW.
If WINDOW is omitted or nil, use the currently selected window.
Value is a list of the form (WIDTH COLS VERTICAL-TYPE HORIZONTAL-TYPE).
If WIDTH is nil or TYPE is t, the window is using the frame's corresponding
value.  */)"
                :type "int")
                nil [211336 211713])
            ("Swindow_scroll_bars" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [211336 212087])
            ("DEFUN_ARGS_" variable (:type ("Swindow_vscroll" type (:type "class") nil nil)) nil [212263 212600])
            ("doc" variable
               (:default-value "DEFUN (\"window-vscroll\", Fwindow_vscroll, Swindow_vscroll, 0, 2, 0,
       doc: /* Return the amount by which WINDOW is scrolled vertically.
Use the selected window if WINDOW is nil or omitted.
Normally, value is a multiple of the canonical character height of WINDOW;
optional second arg PIXELS-P means value is measured in pixels.  */)"
                :type "int")
                nil [212263 212600])
            ("Swindow_vscroll" function
               (:arguments 
                  ( ("pixels_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [212263 213057])
            ("DEFUN_ARGS_" variable (:type ("Sset_window_vscroll" type (:type "class") nil nil)) nil [213060 213647])
            ("doc" variable
               (:default-value "DEFUN (\"set-window-vscroll\", Fset_window_vscroll, Sset_window_vscroll,
       2, 3, 0,
       doc: /* Set amount by which WINDOW should be scrolled vertically to VSCROLL.
WINDOW nil means use the selected window.  Normally, VSCROLL is a
non-negative multiple of the canonical character height of WINDOW;
optional third arg PIXELS-P non-nil means that VSCROLL is in pixels.
If PIXELS-P is nil, VSCROLL may have to be rounded so that it
corresponds to an integral number of pixels.  The return value is the
result of this rounding.
If PIXELS-P is non-nil, the return value is VSCROLL.  */)"
                :type "int")
                nil [213060 213647])
            ("Sset_window_vscroll" function
               (:arguments 
                  ( ("pixels_p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("vscroll" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [213060 214533])
            ("f" variable
               (:pointer 1
                :type ("frame" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [214776 214792])
            ("fn" variable
               (:functionpointer-flag t
                :type "int")
                nil [214798 214840])
            ("user_data" variable
               (:pointer 1
                :type "void")
                nil [214846 214862])
            ("w" variable
               (:pointer 1
                :type ("window" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [215361 215378])
            ("fn" variable
               (:functionpointer-flag t
                :type "int")
                nil [215384 215426])
            ("user_data" variable
               (:pointer 1
                :type "void")
                nil [215432 215448])
            ("freeze_window_start" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("w" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("freeze_p" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "int")
                nil [215961 216446])
            ("freeze_window_starts" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("freeze_p" variable (:type "int") nil nil))                  
                :type "void")
                nil [216628 216784])
            ("compare_window_configurations" function
               (:arguments 
                  ( ("c2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("c1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("ignore_positions" variable (:type "int") nil nil))                  
                :type "int")
                nil [217074 220497])
            ("DEFUN_ARGS_" variable (:type ("Scompare_window_configurations" type (:type "class") nil nil)) nil [220499 220801])
            ("doc" variable
               (:default-value "DEFUN (\"compare-window-configurations\", Fcompare_window_configurations,
       Scompare_window_configurations, 2, 2, 0,
       doc: /* Compare two window configurations as regards the structure of windows.
This function ignores details such as the values of point and mark
and scrolling positions.  */)"
                :type "int")
                nil [220499 220801])
            ("Scompare_window_configurations" function
               (:arguments 
                  ( ("y" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [220499 220917])
            ("init_window_once" function (:type "void") nil [220920 221197])
            ("init_window" function (:type "void") nil [221199 221245])
            ("syms_of_window" function (:type "void") nil [221247 228677])
            ("keys_of_window" function (:type "void") nil [228679 229427]))          
    :file "window.c"
    :pointmax 229514
    :fsize 229513
    :lastmodtime '(19383 49283)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 220499 . 220801) (symbol "__attribute__" 220499 . 220801) (symbol "Lisp_Subr" 220499 . 220801) (symbol "Lisp_Object" 220499 . 220801) (semantic-list 215449 . 215802) (semantic-list 215337 . 215355) (symbol 215320 . 215336) (INT 215316 . 215319) (STATIC 215309 . 215315) (semantic-list 214863 . 215037) (semantic-list 214752 . 214770) (symbol 214737 . 214751) (VOID 214732 . 214736) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 213060 . 213647) (symbol "__attribute__" 213060 . 213647) (symbol "Lisp_Subr" 213060 . 213647) (symbol "Lisp_Object" 213060 . 213647) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 212263 . 212600) (symbol "__attribute__" 212263 . 212600) (symbol "Lisp_Subr" 212263 . 212600) (symbol "Lisp_Object" 212263 . 212600) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 211336 . 211713) (symbol "__attribute__" 211336 . 211713) (symbol "Lisp_Subr" 211336 . 211713) (symbol "Lisp_Object" 211336 . 211713) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 209829 . 210467) (symbol "__attribute__" 209829 . 210467) (symbol "Lisp_Subr" 209829 . 210467) (symbol "Lisp_Object" 209829 . 210467) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 209098 . 209365) (symbol "__attribute__" 209098 . 209365) (symbol "Lisp_Subr" 209098 . 209365) (symbol "Lisp_Object" 209098 . 209365) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 207509 . 208215) (symbol "__attribute__" 207509 . 208215) (symbol "Lisp_Subr" 207509 . 208215) (symbol "Lisp_Object" 207509 . 208215) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 206863 . 207193) (symbol "__attribute__" 206863 . 207193) (symbol "Lisp_Subr" 206863 . 207193) (symbol "Lisp_Object" 206863 . 207193) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 205596 . 206028) (symbol "__attribute__" 205596 . 206028) (symbol "Lisp_Subr" 205596 . 206028) (symbol "Lisp_Object" 205596 . 206028) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 204315 . 205171) (symbol "__attribute__" 204315 . 205171) (symbol "Lisp_Subr" 204315 . 205171) (symbol "Lisp_Object" 204315 . 205171) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 202714 . 203225) (symbol "__attribute__" 202714 . 203225) (symbol "Lisp_Subr" 202714 . 203225) (symbol "Lisp_Object" 202714 . 203225) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 200725 . 201336) (symbol "__attribute__" 200725 . 201336) (symbol "Lisp_Subr" 200725 . 201336) (symbol "Lisp_Object" 200725 . 201336) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 183490 . 183961) (symbol "__attribute__" 183490 . 183961) (symbol "Lisp_Subr" 183490 . 183961) (symbol "Lisp_Object" 183490 . 183961) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 182958 . 183152) (symbol "__attribute__" 182958 . 183152) (symbol "Lisp_Subr" 182958 . 183152) (symbol "Lisp_Object" 182958 . 183152) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 182696 . 182860) (symbol "__attribute__" 182696 . 182860) (symbol "Lisp_Subr" 182696 . 182860) (symbol "Lisp_Object" 182696 . 182860) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 179133 . 179463) (symbol "__attribute__" 179133 . 179463) (symbol "Lisp_Subr" 179133 . 179463) (symbol "Lisp_Object" 179133 . 179463) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 178555 . 178886) (symbol "__attribute__" 178555 . 178886) (symbol "Lisp_Subr" 178555 . 178886) (symbol "Lisp_Object" 178555 . 178886) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 173097 . 173958) (symbol "__attribute__" 173097 . 173958) (symbol "Lisp_Subr" 173097 . 173958) (symbol "Lisp_Object" 173097 . 173958) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 171047 . 171297) (symbol "__attribute__" 171047 . 171297) (symbol "Lisp_Subr" 171047 . 171297) (symbol "Lisp_Object" 171047 . 171297) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 170063 . 170573) (symbol "__attribute__" 170063 . 170573) (symbol "Lisp_Subr" 170063 . 170573) (symbol "Lisp_Object" 170063 . 170573) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 169083 . 169589) (symbol "__attribute__" 169083 . 169589) (symbol "Lisp_Subr" 169083 . 169589) (symbol "Lisp_Object" 169083 . 169589) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 167521 . 168318) (symbol "__attribute__" 167521 . 168318) (symbol "Lisp_Subr" 167521 . 168318) (symbol "Lisp_Object" 167521 . 168318) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 166094 . 166501) (symbol "__attribute__" 166094 . 166501) (symbol "Lisp_Subr" 166094 . 166501) (symbol "Lisp_Object" 166094 . 166501) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 165581 . 166011) (symbol "__attribute__" 165581 . 166011) (symbol "Lisp_Subr" 165581 . 166011) (symbol "Lisp_Object" 165581 . 166011) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 165068 . 165500) (symbol "__attribute__" 165068 . 165500) (symbol "Lisp_Subr" 165068 . 165500) (symbol "Lisp_Object" 165068 . 165500) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 138141 . 138635) (symbol "__attribute__" 138141 . 138635) (symbol "Lisp_Subr" 138141 . 138635) (symbol "Lisp_Object" 138141 . 138635) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 124659 . 125163) (symbol "__attribute__" 124659 . 125163) (symbol "Lisp_Subr" 124659 . 125163) (symbol "Lisp_Object" 124659 . 125163) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 123923 . 124425) (symbol "__attribute__" 123923 . 124425) (symbol "Lisp_Subr" 123923 . 124425) (symbol "Lisp_Object" 123923 . 124425) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 119435 . 120118) (symbol "__attribute__" 119435 . 120118) (symbol "Lisp_Subr" 119435 . 120118) (symbol "Lisp_Object" 119435 . 120118) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 115550 . 115876) (symbol "__attribute__" 115550 . 115876) (symbol "Lisp_Subr" 115550 . 115876) (symbol "Lisp_Object" 115550 . 115876) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 112400 . 112949) (symbol "__attribute__" 112400 . 112949) (symbol "Lisp_Subr" 112400 . 112949) (symbol "Lisp_Object" 112400 . 112949) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 110697 . 111480) (symbol "__attribute__" 110697 . 111480) (symbol "Lisp_Subr" 110697 . 111480) (symbol "Lisp_Object" 110697 . 111480) (symbol "Lisp_Object" 105411 . 105445) (EXTERN "extern" 105411 . 105445) (symbol "Lisp_Object" 105379 . 105409) (EXTERN "extern" 105379 . 105409) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 82017 . 82621) (symbol "__attribute__" 82017 . 82621) (symbol "Lisp_Subr" 82017 . 82621) (symbol "Lisp_Object" 82017 . 82621) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 80786 . 81523) (symbol "__attribute__" 80786 . 81523) (symbol "Lisp_Subr" 80786 . 81523) (symbol "Lisp_Object" 80786 . 81523) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 78532 . 79066) (symbol "__attribute__" 78532 . 79066) (symbol "Lisp_Subr" 78532 . 79066) (symbol "Lisp_Object" 78532 . 79066) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 77692 . 78211) (symbol "__attribute__" 77692 . 78211) (symbol "Lisp_Subr" 77692 . 78211) (symbol "Lisp_Object" 77692 . 78211) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 77006 . 77556) (symbol "__attribute__" 77006 . 77556) (symbol "Lisp_Subr" 77006 . 77556) (symbol "Lisp_Object" 77006 . 77556) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 75900 . 76542) (symbol "__attribute__" 75900 . 76542) (symbol "Lisp_Subr" 75900 . 76542) (symbol "Lisp_Object" 75900 . 76542) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 67026 . 67486) (symbol "__attribute__" 67026 . 67486) (symbol "Lisp_Subr" 67026 . 67486) (symbol "Lisp_Object" 67026 . 67486) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 65949 . 66654) (symbol "__attribute__" 65949 . 66654) (symbol "Lisp_Subr" 65949 . 66654) (symbol "Lisp_Object" 65949 . 66654) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 65198 . 65806) (symbol "__attribute__" 65198 . 65806) (symbol "Lisp_Subr" 65198 . 65806) (symbol "Lisp_Object" 65198 . 65806) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 63260 . 65055) (symbol "__attribute__" 63260 . 65055) (symbol "Lisp_Subr" 63260 . 65055) (symbol "Lisp_Object" 63260 . 65055) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 49358 . 49587) (symbol "__attribute__" 49358 . 49587) (symbol "Lisp_Subr" 49358 . 49587) (symbol "Lisp_Object" 49358 . 49587) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 45580 . 45734) (symbol "__attribute__" 45580 . 45734) (symbol "Lisp_Subr" 45580 . 45734) (symbol "Lisp_Object" 45580 . 45734) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 44587 . 44786) (symbol "__attribute__" 44587 . 44786) (symbol "Lisp_Subr" 44587 . 44786) (symbol "Lisp_Object" 44587 . 44786) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 43983 . 44192) (symbol "__attribute__" 43983 . 44192) (symbol "Lisp_Subr" 43983 . 44192) (symbol "Lisp_Object" 43983 . 44192) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 43614 . 43792) (symbol "__attribute__" 43614 . 43792) (symbol "Lisp_Subr" 43614 . 43792) (symbol "Lisp_Object" 43614 . 43792) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 43238 . 43503) (symbol "__attribute__" 43238 . 43503) (symbol "Lisp_Subr" 43238 . 43503) (symbol "Lisp_Object" 43238 . 43503) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 42076 . 43079) (symbol "__attribute__" 42076 . 43079) (symbol "Lisp_Subr" 42076 . 43079) (symbol "Lisp_Object" 42076 . 43079) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 41012 . 41987) (symbol "__attribute__" 41012 . 41987) (symbol "Lisp_Subr" 41012 . 41987) (symbol "Lisp_Object" 41012 . 41987) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 40109 . 40452) (symbol "__attribute__" 40109 . 40452) (symbol "Lisp_Subr" 40109 . 40452) (symbol "Lisp_Object" 40109 . 40452) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 39435 . 39606) (symbol "__attribute__" 39435 . 39606) (symbol "Lisp_Subr" 39435 . 39606) (symbol "Lisp_Object" 39435 . 39606) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 36894 . 37425) (symbol "__attribute__" 36894 . 37425) (symbol "Lisp_Subr" 36894 . 37425) (symbol "Lisp_Object" 36894 . 37425) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 36097 . 36342) (symbol "__attribute__" 36097 . 36342) (symbol "Lisp_Subr" 36097 . 36342) (symbol "Lisp_Object" 36097 . 36342) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 35323 . 35851) (symbol "__attribute__" 35323 . 35851) (symbol "Lisp_Subr" 35323 . 35851) (symbol "Lisp_Object" 35323 . 35851) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 34555 . 34812) (symbol "__attribute__" 34555 . 34812) (symbol "Lisp_Subr" 34555 . 34812) (symbol "Lisp_Object" 34555 . 34812) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 29478 . 30431) (symbol "__attribute__" 29478 . 30431) (symbol "Lisp_Subr" 29478 . 30431) (symbol "Lisp_Object" 29478 . 30431) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 22041 . 22594) (symbol "__attribute__" 22041 . 22594) (symbol "Lisp_Subr" 22041 . 22594) (symbol "Lisp_Object" 22041 . 22594) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 20930 . 21512) (symbol "__attribute__" 20930 . 21512) (symbol "Lisp_Subr" 20930 . 21512) (symbol "Lisp_Object" 20930 . 21512) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 20022 . 20617) (symbol "__attribute__" 20022 . 20617) (symbol "Lisp_Subr" 20022 . 20617) (symbol "Lisp_Object" 20022 . 20617) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 19097 . 19699) (symbol "__attribute__" 19097 . 19699) (symbol "Lisp_Subr" 19097 . 19699) (symbol "Lisp_Object" 19097 . 19699) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 18399 . 18917) (symbol "__attribute__" 18399 . 18917) (symbol "Lisp_Subr" 18399 . 18917) (symbol "Lisp_Object" 18399 . 18917) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 18016 . 18298) (symbol "__attribute__" 18016 . 18298) (symbol "Lisp_Subr" 18016 . 18298) (symbol "Lisp_Object" 18016 . 18298) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 17283 . 17622) (symbol "__attribute__" 17283 . 17622) (symbol "Lisp_Subr" 17283 . 17622) (symbol "Lisp_Object" 17283 . 17622) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 16994 . 17196) (symbol "__attribute__" 16994 . 17196) (symbol "Lisp_Subr" 16994 . 17196) (symbol "Lisp_Object" 16994 . 17196) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 16692 . 16878) (symbol "__attribute__" 16692 . 16878) (symbol "Lisp_Subr" 16692 . 16878) (symbol "Lisp_Object" 16692 . 16878) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 16198 . 16573) (symbol "__attribute__" 16198 . 16573) (symbol "Lisp_Subr" 16198 . 16573) (symbol "Lisp_Object" 16198 . 16573) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 15870 . 16103) (symbol "__attribute__" 15870 . 16103) (symbol "Lisp_Subr" 15870 . 16103) (symbol "Lisp_Object" 15870 . 16103) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 15615 . 15784) (symbol "__attribute__" 15615 . 15784) (symbol "Lisp_Subr" 15615 . 15784) (symbol "Lisp_Object" 15615 . 15784) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 12024 . 13004) (symbol "__attribute__" 12024 . 13004) (symbol "Lisp_Subr" 12024 . 13004) (symbol "Lisp_Object" 12024 . 13004) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 9539 . 10628) (symbol "__attribute__" 9539 . 10628) (symbol "Lisp_Subr" 9539 . 10628) (symbol "Lisp_Object" 9539 . 10628) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 9217 . 9408) (symbol "__attribute__" 9217 . 9408) (symbol "Lisp_Subr" 9217 . 9408) (symbol "Lisp_Object" 9217 . 9408) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 8817 . 9051) (symbol "__attribute__" 8817 . 9051) (symbol "Lisp_Subr" 8817 . 9051) (symbol "Lisp_Object" 8817 . 9051) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 8615 . 8777) (symbol "__attribute__" 8615 . 8777) (symbol "Lisp_Subr" 8615 . 8777) (symbol "Lisp_Object" 8615 . 8777) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 6845 . 6988) (symbol "__attribute__" 6845 . 6988) (symbol "Lisp_Subr" 6845 . 6988) (symbol "Lisp_Object" 6845 . 6988) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 6663 . 6761) (symbol "__attribute__" 6663 . 6761) (symbol "Lisp_Subr" 6663 . 6761) (symbol "Lisp_Object" 6663 . 6761))
    :lexical-table 
        '(("WINDOW_TOTAL_SIZE" (spp-arg-list ("w" "wp") 83752 . 83759) . ((semantic-list "(wp ? WINDOW_TOTAL_COLS (w) : WINDOW_TOTAL_LINES (w))" 83764 . 83817)))
          ("SAVED_WINDOW_N" (spp-arg-list ("swv" "n") 182624 . 182631) . ((semantic-list "((struct saved_window *) (XVECTOR ((swv)->contents[(n)])))" 182636 . 182694)))
          ("MIN_SAFE_WINDOW_WIDTH" . ((semantic-list "(2)" 83576 . 83579)))
          ("MIN_SAFE_WINDOW_HEIGHT" . ((semantic-list "(1)" 83611 . 83614)))
          )

    )
   (semanticdb-table "keyboard.c"
    :major-mode 'c-mode
    :tags 
        '( ("config.h" include (:system-flag t) nil [906 925])
            ("signal.h" include (:system-flag t) nil [926 945])
            ("stdio.h" include (:system-flag t) nil [946 964])
            ("setjmp.h" include (:system-flag t) nil [965 984])
            ("lisp.h" include nil nil [985 1002])
            ("termchar.h" include nil nil [1003 1024])
            ("termopts.h" include nil nil [1025 1046])
            ("frame.h" include nil nil [1047 1065])
            ("termhooks.h" include nil nil [1066 1088])
            ("macros.h" include nil nil [1089 1108])
            ("keyboard.h" include nil nil [1109 1130])
            ("window.h" include nil nil [1131 1150])
            ("commands.h" include nil nil [1151 1172])
            ("buffer.h" include nil nil [1173 1192])
            ("character.h" include nil nil [1193 1215])
            ("disptab.h" include nil nil [1216 1236])
            ("dispextern.h" include nil nil [1237 1260])
            ("syntax.h" include nil nil [1261 1280])
            ("intervals.h" include nil nil [1281 1303])
            ("keymap.h" include nil nil [1304 1323])
            ("blockinput.h" include nil nil [1324 1347])
            ("puresize.h" include nil nil [1348 1369])
            ("systime.h" include nil nil [1370 1390])
            ("atimer.h" include nil nil [1391 1410])
            ("setjmp.h" include (:system-flag t) nil [1411 1430])
            ("errno.h" include (:system-flag t) nil [1431 1449])
            ("pthread.h" include (:system-flag t) nil [1479 1499])
            ("sys/ioctl.h" include (:system-flag t) nil [1579 1601])
            ("syssignal.h" include nil nil [1626 1648])
            ("sys/types.h" include (:system-flag t) nil [1650 1672])
            ("unistd.h" include (:system-flag t) nil [1694 1713])
            ("fcntl.h" include (:system-flag t) nil [1742 1760])
            ("xterm.h" include nil nil [1849 1867])
            ("errno" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [2003 2020])
            ("interrupt_input_blocked" variable
               (:typemodifiers ("volatile")
                :type "int")
                nil [2121 2158])
            ("interrupt_input_pending" variable (:type "int") nil [2252 2280])
            ("pending_signals" variable (:type "int") nil [2593 2613])
            ("KBD_BUFFER_SIZE" variable (:constant-flag t) nil [2630 2645])
            ("initial_kboard" variable
               (:pointer 1
                :type ("KBOARD" type (:type "class") nil nil))
                nil [2652 2675])
            ("current_kboard" variable
               (:pointer 1
                :type ("KBOARD" type (:type "class") nil nil))
                nil [2676 2699])
            ("all_kboards" variable
               (:pointer 1
                :type ("KBOARD" type (:type "class") nil nil))
                nil [2700 2720])
            ("single_kboard" variable (:type "int") nil [2721 2739])
            ("Qdisabled_command_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2862 2912])
            ("Qdisabled" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2862 2912])
            ("NUM_RECENT_KEYS" variable (:constant-flag t) nil [2922 2937])
            ("recent_keys_index" variable (:type "int") nil [2944 2966])
            ("total_keys" variable (:type "int") nil [3021 3036])
            ("recent_keys" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3093 3117])
            ("this_command_keys" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3475 3505])
            ("this_command_key_count" variable (:type "int") nil [3506 3533])
            ("this_command_key_count_reset" variable (:type "int") nil [3607 3640])
            ("raw_keybuf" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3751 3774])
            ("raw_keybuf_count" variable (:type "int") nil [3775 3796])
            ("Vthis_command_keys_shift_translated" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3876 3924])
            ("GROW_RAW_KEYBUF" variable (:constant-flag t) nil [3934 3949])
            ("this_single_command_key_start" variable (:type "int") nil [4172 4206])
            ("before_command_key_count" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4307 4343])
            ("before_command_echo_length" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4344 4382])
            ("minbuf_level" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [4384 4408])
            ("message_enable_multibyte" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [4410 4446])
            ("Vshow_help_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [4580 4612])
            ("menu_prompting" variable
               (:typemodifiers ("static")
                :type "int")
                nil [4655 4681])
            ("menu_prompt_more_char" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4734 4775])
            ("getcjmp" variable
               (:typemodifiers ("static")
                :type ("jmp_buf" type (:type "class") nil nil))
                nil [4831 4854])
            ("waiting_for_input" variable (:type "int") nil [4891 4913])
            ("echoing" variable (:type "int") nil [4981 4993])
            ("ok_to_echo_at_next_pause" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("kboard" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5115 5162])
            ("echo_kboard" variable
               (:pointer 1
                :type ("kboard" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5419 5446])
            ("echo_message_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5531 5563])
            ("inhibit_local_menu_bar_menus" variable
               (:typemodifiers ("static")
                :type "int")
                nil [5625 5665])
            ("immediate_quit" variable (:type "int") nil [5729 5748])
            ("Vcommand_error_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5815 5851])
            ("Vtty_erase_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5886 5914])
            ("Vhelp_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [5964 5987])
            ("Vhelp_event_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6054 6083])
            ("Vhelp_form" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6133 6156])
            ("Vprefix_help_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6226 6259])
            ("Vmenu_bar_final_items" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6327 6361])
            ("Vsuggest_key_bindings" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6579 6613])
            ("Vminibuffer_message_timeout" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [6757 6797])
            ("quit_char" variable (:type "int") nil [7563 7577])
            ("current_global_map" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7579 7617])
            ("minibuf_level" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [7618 7643])
            ("Voverriding_local_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [7715 7749])
            ("Voverriding_local_map_menu_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [7817 7861])
            ("Vspecial_event_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [7966 7997])
            ("command_loop_level" variable (:type "int") nil [8040 8063])
            ("num_input_keys" variable (:type "int") nil [8132 8157])
            ("last_command_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [8202 8233])
            ("last_nonmenu_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [8326 8357])
            ("last_input_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [8405 8434])
            ("Vunread_command_events" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [8514 8549])
            ("Vunread_input_method_events" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [8666 8706])
            ("Vunread_post_input_method_events" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [8831 8876])
            ("unread_command_char" variable (:type "int") nil [8945 8975])
            ("unread_switch_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9374 9406])
            ("extra_keyboard_modifiers" variable (:type "int") nil [9478 9513])
            ("meta_prefix_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [9650 9679])
            ("last_non_minibuf_size" variable
               (:typemodifiers ("static")
                :type "int")
                nil [9755 9788])
            ("Vauto_save_timeout" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9864 9902])
            ("num_input_events" variable (:type "int") nil [9957 9978])
            ("num_nonmacro_input_events" variable (:type "int") nil [10052 10088])
            ("auto_save_interval" variable
               (:typemodifiers ("static")
                :type "int")
                nil [10188 10224])
            ("last_auto_save" variable (:type "int") nil [10291 10310])
            ("Vthis_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10495 10521])
            ("real_this_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10593 10623])
            ("Vthis_original_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10762 10797])
            ("last_point_position" variable (:type "int") nil [10860 10884])
            ("last_point_position_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [10956 10995])
            ("last_point_position_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11068 11107])
            ("internal_last_event_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11418 11456])
            ("Vlast_event_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11659 11689])
            ("last_event_timestamp" variable (:type "unsigned long") nil [11816 11851])
            ("Qself_insert_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11853 11886])
            ("Qforward_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11887 11913])
            ("Qbackward_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11914 11941])
            ("Qundefined" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11942 11965])
            ("Qtimer_event_handler" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [11966 11999])
            ("read_key_sequence_cmd" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12099 12133])
            ("Vecho_keystrokes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12201 12230])
            ("Vtop_level" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12292 12315])
            ("Vinput_method_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12378 12413])
            ("Qinput_method_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12414 12449])
            ("Vinput_method_previous_message" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12553 12596])
            ("Vdeactivate_mark" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12663 12692])
            ("Qdeactivate_mark" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12693 12722])
            ("Vlucid_menu_bar_dirty_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12775 12814])
            ("Qactivate_menubar_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12815 12876])
            ("Qrecompute_lucid_menubar" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12815 12876])
            ("Qecho_area_clear_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12878 12912])
            ("Vpre_command_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12965 13014])
            ("Qpre_command_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [12965 13014])
            ("Vpost_command_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13015 13066])
            ("Qpost_command_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13015 13066])
            ("Vcommand_hook_internal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13067 13126])
            ("Qcommand_hook_internal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13067 13126])
            ("Vfunction_key_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13195 13225])
            ("Vkey_translation_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13288 13321])
            ("Vdeferred_action_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13464 13498])
            ("Vdeferred_action_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13572 13610])
            ("Qdeferred_action_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13611 13649])
            ("Qinput_method_exit_on_first_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13651 13696])
            ("Qinput_method_use_echo_area" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [13697 13737])
            ("dribble" variable
               (:pointer 1
                :type ("FILE" type (:type "class") nil nil))
                nil [13791 13805])
            ("input_pending" variable (:type "int") nil [13845 13863])
            ("pending_malloc_warning" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [13865 13901])
            ("kbd_buffer" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("input_event" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [13956 14010])
            ("kbd_fetch_ptr" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("input_event" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [14235 14276])
            ("kbd_store_ptr" variable
               (:typemodifiers ("volatile")
                :type "int")
                nil [14478 14501])
            ("do_mouse_tracking" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15112 15142])
            ("Qmouse_movement" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15175 15203])
            ("Qscroll_bar_movement" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15204 15237])
            ("Qswitch_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15238 15264])
            ("Qdelete_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15265 15291])
            ("Qiconify_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15292 15319])
            ("Qmake_frame_visible" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15320 15352])
            ("Qselect_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15353 15380])
            ("Qhelp_echo" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15381 15404])
            ("Qremap" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15406 15432])
            ("Qmouse_fixup_help_message" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15481 15519])
            ("Qfunction_key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15570 15596])
            ("Qmouse_click" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15597 15622])
            ("Qlanguage_change" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15647 15676])
            ("Qdrag_n_drop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15684 15709])
            ("Qsave_session" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15710 15736])
            ("Qdbus_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15754 15778])
            ("Qconfig_changed_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15786 15820])
            ("Qevent_kind" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15917 15941])
            ("Qevent_symbol_elements" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [15942 15977])
            ("Qmenu_enable" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16001 16026])
            ("QCkey_sequence" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16027 16101])
            ("QCkeys" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16027 16101])
            ("QCfilter" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16027 16101])
            ("QChelp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16027 16101])
            ("QCvisible" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16027 16101])
            ("QCenable" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16027 16101])
            ("QCradio" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16102 16142])
            ("QCtoggle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16102 16142])
            ("QCbutton" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16102 16142])
            ("Qmenu_item" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16143 16173])
            ("Qevent_symbol_element_mask" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16475 16514])
            ("Qmodifier_cache" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16730 16758])
            ("Qmode_line" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16804 16827])
            ("Qvertical_line" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16828 16855])
            ("Qvertical_scroll_bar" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16856 16889])
            ("Qmenu_bar" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [16890 16912])
            ("Qright_margin" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16913 16960])
            ("Qleft_margin" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16913 16960])
            ("Qright_fringe" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16961 17008])
            ("Qleft_fringe" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [16961 17008])
            ("QCmap" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17009 17034])
            ("recursive_edit_unwind" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17036 17090])
            ("Fthis_command_keys" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17091 17125])
            ("Qextended_command_history" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17126 17164])
            ("timer_check" function
               (:prototype-flag t
                :type ("EMACS_TIME" type (:type "class") nil nil))
                nil [17165 17191])
            ("Vtranslation_table_for_input" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17193 17258])
            ("Vhistory_length" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17193 17258])
            ("x_get_keysym_name" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [17260 17294])
            ("record_menu_key" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [17296 17327])
            ("echo_length" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "int")
                nil [17328 17354])
            ("Qpolling_period" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17356 17384])
            ("Vtimer_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17461 17485])
            ("Vtimer_idle_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [17563 17592])
            ("timers_run" variable (:type "int") nil [17638 17653])
            ("Vprint_length" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17655 17702])
            ("Vprint_level" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17655 17702])
            ("input_available_clear_time" variable
               (:pointer 1
                :type ("EMACS_TIME" type (:type "class") nil nil))
                nil [17789 17828])
            ("interrupt_input" variable (:type "int") nil [17948 17968])
            ("interrupts_deferred" variable (:type "int") nil [18045 18069])
            ("POLL_FOR_INPUT" variable (:constant-flag t) nil [18552 18566])
            ("Vdisable_point_adjustment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [18901 18939])
            ("Vglobal_disable_point_adjustment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [18994 19039])
            ("timer_idleness_start_time" variable
               (:typemodifiers ("static")
                :type ("EMACS_TIME" type (:type "class") nil nil))
                nil [19089 19133])
            ("timer_last_idleness_start_time" variable
               (:typemodifiers ("static")
                :type ("EMACS_TIME" type (:type "class") nil nil))
                nil [19254 19303])
            ("Venable_disabled_menus_and_buttons" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [19475 19522])
            ("READABLE_EVENTS_DO_TIMERS_NOW" variable (:constant-flag t) nil [19606 19635])
            ("READABLE_EVENTS_FILTER_EVENTS" variable (:constant-flag t) nil [19654 19683])
            ("READABLE_EVENTS_IGNORE_SQUEEZABLES" variable (:constant-flag t) nil [19702 19736])
            ("keyboard_init_hook" variable
               (:functionpointer-flag t
                :type "void")
                nil [19816 19846])
            ("read_avail_input" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [19848 19887])
            ("get_input_pending" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [19888 19936])
            ("readable_events" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [19937 19975])
            ("read_char_x_menu_prompt" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [19976 20071])
            ("read_char_x_menu_prompt" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20072 20118])
            ("read_char_minibuf_menu_prompt" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20119 20211])
            ("make_lispy_event" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20212 20276])
            ("make_lispy_movement" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("scroll_bar_part" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20324 20488])
            ("modify_event_symbol" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20496 20634])
            ("make_lispy_switch_frame" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20635 20697])
            ("save_getcjmp" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("jmp_buf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [20698 20738])
            ("save_getcjmp" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [20739 20767])
            ("restore_getcjmp" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("jmp_buf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [20768 20811])
            ("apply_modifiers" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20812 20871])
            ("clear_event" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [20872 20924])
            ("restore_kboard_configuration" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [20925 20992])
            ("interrupt_signal" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("signalnum" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [20993 21046])
            ("handle_interrupt" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [21047 21088])
            ("timer_start_idle" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [21089 21130])
            ("timer_stop_idle" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [21131 21171])
            ("timer_resume_idle" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [21172 21214])
            ("handle_user_signal" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [21215 21260])
            ("find_user_signal_name" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [21261 21307])
            ("store_user_signal_events" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [21308 21356])
            ("cannot_suspend" variable
               (:typemodifiers ("static")
                :type "int")
                nil [21453 21479])
            ("Qonly" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21481 21517])
            ("Qidentity" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21481 21517])
            ("echo_prompt" function
               (:arguments 
                  ( ("str" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [21674 21826])
            ("echo_char" function
               (:arguments 
                  ( ("c" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [22005 24159])
            ("echo_dash" function (:type "void") nil [24308 25406])
            ("echo_now" function (:type "void") nil [25495 26923])
            ("cancel_echoing" function (:type "void") nil [26983 27214])
            ("echo_length" function
               (:typemodifiers ("static")
                :type "int")
                nil [27270 27398])
            ("echo_truncate" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("nchars" variable (:type "int") nil nil))                  
                :type "void")
                nil [27582 27840])
            ("add_command_key" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [27897 28779])
            ("recursive_edit_1" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [28783 30141])
            ("record_auto_save" function (:type "void") nil [30222 30296])
            ("force_auto_save_soon" function (:type "void") nil [30369 30481])
            ("DEFUN_ARGS_" variable (:type ("Srecursive_edit" type (:type "class") nil nil)) nil [30484 30865])
            ("doc" variable
               (:default-value "DEFUN (\"recursive-edit\", Frecursive_edit, Srecursive_edit, 0, 0, \"\",
       doc: /* Invoke the editor command loop recursively.
To get out of the recursive edit, a command can do `(throw 'exit nil)';
that tells this function to return.
Alternatively, `(throw 'exit t)' makes this function signal an error.
This function is called by the editor initialization to begin editing.  */)"
                :type "int")
                nil [30484 30865])
            ("Srecursive_edit" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [30484 31756])
            ("recursive_edit_unwind" function
               (:arguments 
                  ( ("buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [31758 31944])
            ("any_kboard_state" function
               (:typemodifiers ("static")
                :type "void")
                nil [32050 32585])
            ("single_kboard_state" function (:type "void") nil [32709 32761])
            ("not_single_kboard_state" function
               (:arguments 
                  ( ("kboard" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [32847 32964])
            ("kboard_stack" type
               (:members 
                  ( ("kboard" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33151 33166])
                    ("next" variable
                       (:pointer 1
                        :type ("kboard_stack" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [33169 33195]))                  
                :type "struct")
                nil [33127 33198])
            ("kboard_stack" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("kboard_stack" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [33200 33241])
            ("push_kboard" function
               (:arguments 
                  ( ("k" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [33243 33485])
            ("pop_kboard" function (:type "void") nil [33487 33987])
            ("temporarily_switch_to_single_kboard" function
               (:arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [34366 35530])
            ("record_single_kboard_state" function (:type "void") nil [35582 35785])
            ("restore_kboard_configuration" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("was_locked" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [35794 36179])
            ("cmd_error" function
               (:arguments 
                  ( ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [36316 37525])
            ("cmd_error_internal" function
               (:arguments 
                  ( ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("context" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [37830 39638])
            ("command_loop_1" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [39641 39671])
            ("command_loop_2" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [39672 39702])
            ("top_level_1" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [39703 39730])
            ("command_loop" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [39903 40647])
            ("command_loop_2" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [40944 41121])
            ("top_level_2" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [41123 41182])
            ("top_level_1" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [41184 41542])
            ("DEFUN_ARGS_" variable (:type ("Stop_level" type (:type "class") nil nil)) nil [41544 41692])
            ("doc" variable
               (:default-value "DEFUN (\"top-level\", Ftop_level, Stop_level, 0, 0, \"\",
       doc: /* Exit all recursive editing levels.
This also exits all active minibuffers.  */)"
                :type "int")
                nil [41544 41692])
            ("Stop_level" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [41544 42016])
            ("DEFUN_ARGS_" variable (:type ("Sexit_recursive_edit" type (:type "class") nil nil)) nil [42018 42175])
            ("doc" variable
               (:default-value "DEFUN (\"exit-recursive-edit\", Fexit_recursive_edit, Sexit_recursive_edit, 0, 0, \"\",
       doc: /* Exit from the innermost recursive edit or minibuffer.  */)"
                :type "int")
                nil [42018 42175])
            ("Sexit_recursive_edit" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [42018 42326])
            ("DEFUN_ARGS_" variable (:type ("Sabort_recursive_edit" type (:type "class") nil nil)) nil [42328 42508])
            ("doc" variable
               (:default-value "DEFUN (\"abort-recursive-edit\", Fabort_recursive_edit, Sabort_recursive_edit, 0, 0, \"\",
       doc: /* Abort the command that requested this recursive edit or minibuffer input.  */)"
                :type "int")
                nil [42328 42508])
            ("Sabort_recursive_edit" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [42328 42657])
            ("tracking_off" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("old_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42807 43414])
            ("DEFUN_ARGS_" variable (:type ("Strack_mouse" type (:type "class") nil nil)) nil [43416 43718])
            ("doc" variable
               (:default-value "DEFUN (\"track-mouse\", Ftrack_mouse, Strack_mouse, 0, UNEVALLED, 0,
       doc: /* Evaluate BODY with mouse movement events enabled.
Within a `track-mouse' form, mouse motion generates input events that
you can read with `read-event'.
Normally, mouse motion is ignored.
usage: (track-mouse BODY...)  */)"
                :type "int")
                nil [43416 43718])
            ("Strack_mouse" function
               (:arguments 
                  ( ("args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43416 43952])
            ("ignore_mouse_drag_p" variable (:type "int") nil [44160 44184])
            ("some_mouse_moved" function
               (:typemodifiers ("static")
                :type ("FRAME_PTR" type (:type "class") nil nil))
                nil [44186 44466])
            ("read_key_sequence" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [44593 44682])
            ("safe_run_hooks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [44683 44722])
            ("adjust_point_for_property" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [44723 44777])
            ("cancel_hourglass_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [44870 44982])
            ("nonundocount" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [44991 45015])
            ("command_loop_1" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [45044 61363])
            ("Qdisplay" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61365 61407])
            ("Qcomposition" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61365 61407])
            ("Qbefore_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61643 61692])
            ("Qafter_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61643 61692])
            ("get_pos_property" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [61693 61774])
            ("adjust_point_for_property" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("last_pt" variable (:type "int") nil nil)
                    ("modified" variable (:type "int") nil nil))                  
                :type "void")
                nil [61776 67375])
            ("safe_run_hooks_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [67435 67590])
            ("safe_run_hooks_error" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [67673 67919])
            ("safe_run_hooks" function
               (:arguments 
                  ( ("hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [68094 68314])
            ("polling_period" variable (:type "int") nil [68418 68443])
            ("poll_suppress_count" variable (:type "int") nil [68512 68536])
            ("poll_timer" variable
               (:pointer 1
                :type ("atimer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [68578 68604])
            ("poll_for_input_1" function (:type "void") nil [68770 69081])
            ("poll_for_input" function
               (:arguments 
                  ( ("timer" variable
                       (:pointer 1
                        :type ("atimer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [69165 69387])
            ("start_polling" function (:type "void") nil [69548 70466])
            ("input_polling_used" function (:type "int") nil [70540 70805])
            ("stop_polling" function (:type "void") nil [70833 71099])
            ("set_poll_suppress_count" function
               (:arguments 
                  ( ("count" variable (:type "int") nil nil))                  
                :type "void")
                nil [71197 71512])
            ("bind_polling_period" function
               (:arguments 
                  ( ("n" variable (:type "int") nil nil))                  
                :type "void")
                nil [71591 71893])
            ("make_ctrl_char" function
               (:arguments 
                  ( ("c" variable (:type "int") nil nil))                  
                :type "int")
                nil [71945 72801])
            ("show_help_echo" function
               (:arguments 
                  ( ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("help" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("ok_to_overwrite_keystroke_echo" variable (:type "int") nil nil))                  
                :type "void")
                nil [74064 75250])
            ("print_help" function
               (:prototype-flag t
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75303 75329])
            ("kbd_buffer_get_event" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75330 75373])
            ("record_char" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [75374 75401])
            ("help_form_saved_window_configs" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75403 75453])
            ("read_char_help_form_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75501 75517]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75454 75755])
            ("STOP_POLLING" variable (:constant-flag t) nil [75765 75777])
            ("RESUME_POLLING" variable (:constant-flag t) nil [75890 75904])
            ("read_char" function
               (:arguments 
                  ( ("commandflag" variable (:type "int") nil nil)
                    ("nmaps" variable (:type "int") nil nil)
                    ("maps" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("prev_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("used_mouse_menu" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("end_time" variable
                       (:pointer 1
                        :type ("EMACS_TIME" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77169 104725])
            ("record_menu_key" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [104837 105579])
            ("help_char_p" function
               (:arguments 
                  ( ("c" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [105645 105872])
            ("record_char" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [105924 109983])
            ("print_help" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109985 110237])
            ("save_getcjmp" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("temp" variable (:type ("jmp_buf" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [110433 110528])
            ("restore_getcjmp" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("temp" variable (:type ("jmp_buf" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [110530 110628])
            ("readable_events" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("flags" variable (:type "int") nil nil))                  
                :type "int")
                nil [110907 112657])
            ("stop_character" variable (:type "int") nil [112714 112733])
            ("event_to_kboard" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("KBOARD" type (:type "class") nil nil))
                nil [112735 113243])
            ("Vthrow_on_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [113246 113274])
            ("kbd_buffer_store_event" function
               (:arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [113348 113470])
            ("kbd_buffer_store_event_hold" function
               (:arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("hold_quit" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [113925 117058])
            ("kbd_buffer_unget_event" function
               (:arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [117125 117464])
            ("gen_help_event" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("help" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pos" variable (:type "int") nil nil))                  
                :type "void")
                nil [117949 118321])
            ("kbd_buffer_store_help_event" function
               (:arguments 
                  ( ("help" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [118388 118666])
            ("discard_mouse_events" function (:type "void") nil [118754 119185])
            ("kbd_buffer_events_waiting" function
               (:arguments 
                  ( ("discard" variable (:type "int") nil nil))                  
                :type "int")
                nil [119464 119815])
            ("clear_event" function
               (:arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type "void")
                nil [119866 119952])
            ("kbd_buffer_get_event" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("kbp" variable
                       (:pointer 2
                        :type ("KBOARD" type (:type "class") nil nil))
                        nil nil)
                    ("used_mouse_menu" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("end_time" variable
                       (:pointer 1
                        :type ("EMACS_TIME" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [120204 131128])
            ("swallow_events" function
               (:arguments 
                  ( ("do_display" variable (:type "int") nil nil))                  
                :type "void")
                nil [131242 132433])
            ("timer_start_idle" function
               (:typemodifiers ("static")
                :type "void")
                nil [132529 133149])
            ("timer_stop_idle" function
               (:typemodifiers ("static")
                :type "void")
                nil [133230 133324])
            ("timer_resume_idle" function
               (:typemodifiers ("static")
                :type "void")
                nil [133379 133544])
            ("last_timer_event" variable (:type ("input_event" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [133581 133617])
            ("pending_funcalls" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [133822 133851])
            ("Qapply" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [133853 133879])
            ("timer_check_2" function
               (:typemodifiers ("static")
                :type ("EMACS_TIME" type (:type "class") nil nil))
                nil [134359 139611])
            ("timer_check" function
               (:arguments 
                  ( ("do_it_now" variable (:type "int") nil nil))                  
                :type ("EMACS_TIME" type (:type "class") nil nil))
                nil [140101 140325])
            ("DEFUN_ARGS_" variable (:type ("Scurrent_idle_time" type (:type "class") nil nil)) nil [140327 140830])
            ("doc" variable
               (:default-value "DEFUN (\"current-idle-time\", Fcurrent_idle_time, Scurrent_idle_time, 0, 0, 0,
       doc: /* Return the current length of Emacs idleness, or nil.
The value when Emacs is idle is a list of three integers.  The first has
the most significant 16 bits of the seconds, while the second has the least
significant 16 bits.  The third integer gives the microsecond count.

The value when Emacs is not idle is nil.

The microsecond count is zero on systems that do not provide
resolution finer than a second.  */)"
                :type "int")
                nil [140327 140830])
            ("Scurrent_idle_time" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [140327 141247])
            ("accent_key_syms" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141289 141324])
            ("func_key_syms" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141325 141358])
            ("mouse_syms" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141359 141389])
            ("wheel_syms" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141390 141420])
            ("drag_n_drop_syms" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141421 141457])
            ("lispy_accent_codes" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
#ifdef XK_dead_circumflex
  XK_dead_circumflex,
#else
  0,
#endif
#ifdef XK_dead_grave
  XK_dead_grave,
#else
  0,
#endif
#ifdef XK_dead_tilde
  XK_dead_tilde,
#else
  0,
#endif
#ifdef XK_dead_diaeresis
  XK_dead_diaeresis,
#else
  0,
#endif
#ifdef XK_dead_macron
  XK_dead_macron,
#else
  0,
#endif
#ifdef XK_dead_degree
  XK_dead_degree,
#else
  0,
#endif
#ifdef XK_dead_acute
  XK_dead_acute,
#else
  0,
#endif
#ifdef XK_dead_cedilla
  XK_dead_cedilla,
#else
  0,
#endif
#ifdef XK_dead_breve
  XK_dead_breve,
#else
  0,
#endif
#ifdef XK_dead_ogonek
  XK_dead_ogonek,
#else
  0,
#endif
#ifdef XK_dead_caron
  XK_dead_caron,
#else
  0,
#endif
#ifdef XK_dead_doubleacute
  XK_dead_doubleacute,
#else
  0,
#endif
#ifdef XK_dead_abovedot
  XK_dead_abovedot,
#else
  0,
#endif
#ifdef XK_dead_abovering
  XK_dead_abovering,
#else
  0,
#endif
#ifdef XK_dead_iota
  XK_dead_iota,
#else
  0,
#endif
#ifdef XK_dead_belowdot
  XK_dead_belowdot,
#else
  0,
#endif
#ifdef XK_dead_voiced_sound
  XK_dead_voiced_sound,
#else
  0,
#endif
#ifdef XK_dead_semivoiced_sound
  XK_dead_semivoiced_sound,
#else
  0,
#endif
#ifdef XK_dead_hook
  XK_dead_hook,
#else
  0,
#endif
#ifdef XK_dead_horn
  XK_dead_horn,
#else
  0,
#endif
}"
                :type "int")
                nil [141566 142820])
            ("lispy_accent_keys" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{
  \"dead-circumflex\",
  \"dead-grave\",
  \"dead-tilde\",
  \"dead-diaeresis\",
  \"dead-macron\",
  \"dead-degree\",
  \"dead-acute\",
  \"dead-cedilla\",
  \"dead-breve\",
  \"dead-ogonek\",
  \"dead-caron\",
  \"dead-doubleacute\",
  \"dead-abovedot\",
  \"dead-abovering\",
  \"dead-iota\",
  \"dead-belowdot\",
  \"dead-voiced-sound\",
  \"dead-semivoiced-sound\",
  \"dead-hook\",
  \"dead-horn\",
}"
                :type "char")
                nil [142928 143332])
            ("FUNCTION_KEY_OFFSET" variable (:constant-flag t) nil [154717 154736])
            ("lispy_function_keys" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{
    /* X Keysym value */

    0, 0, 0, 0, 0, 0, 0, 0,			      /* 0xff00...0f */
    \"backspace\", \"tab\", \"linefeed\", \"clear\",
    0, \"return\", 0, 0,
    0, 0, 0, \"pause\",				      /* 0xff10...1f */
    0, 0, 0, 0, 0, 0, 0, \"escape\",
    0, 0, 0, 0,
    0, \"kanji\", \"muhenkan\", \"henkan\",		      /* 0xff20...2f */
    \"romaji\", \"hiragana\", \"katakana\", \"hiragana-katakana\",
    \"zenkaku\", \"hankaku\", \"zenkaku-hankaku\", \"touroku\",
    \"massyo\", \"kana-lock\", \"kana-shift\", \"eisu-shift\",
    \"eisu-toggle\",				      /* 0xff30...3f */
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   /* 0xff40...4f */

    \"home\", \"left\", \"up\", \"right\", /* 0xff50 */	/* IsCursorKey */
    \"down\", \"prior\", \"next\", \"end\",
    \"begin\", 0, 0, 0, 0, 0, 0, 0,
    \"select\",			/* 0xff60 */	/* IsMiscFunctionKey */
    \"print\",
    \"execute\",
    \"insert\",
    0,		/* 0xff64 */
    \"undo\",
    \"redo\",
    \"menu\",
    \"find\",
    \"cancel\",
    \"help\",
    \"break\",			/* 0xff6b */

    0, 0, 0, 0,
    0, 0, 0, 0, \"backtab\", 0, 0, 0,		/* 0xff70... */
    0, 0, 0, 0, 0, 0, 0, \"kp-numlock\",		/* 0xff78... */
    \"kp-space\",			/* 0xff80 */	/* IsKeypadKey */
    0, 0, 0, 0, 0, 0, 0, 0,
    \"kp-tab\",			/* 0xff89 */
    0, 0, 0,
    \"kp-enter\",			/* 0xff8d */
    0, 0, 0,
    \"kp-f1\",			/* 0xff91 */
    \"kp-f2\",
    \"kp-f3\",
    \"kp-f4\",
    \"kp-home\",			/* 0xff95 */
    \"kp-left\",
    \"kp-up\",
    \"kp-right\",
    \"kp-down\",
    \"kp-prior\",			/* kp-page-up */
    \"kp-next\",			/* kp-page-down */
    \"kp-end\",
    \"kp-begin\",
    \"kp-insert\",
    \"kp-delete\",
    0,				/* 0xffa0 */
    0, 0, 0, 0, 0, 0, 0, 0, 0,
    \"kp-multiply\",		/* 0xffaa */
    \"kp-add\",
    \"kp-separator\",
    \"kp-subtract\",
    \"kp-decimal\",
    \"kp-divide\",		/* 0xffaf */
    \"kp-0\",			/* 0xffb0 */
    \"kp-1\",	\"kp-2\",	\"kp-3\",	\"kp-4\",	\"kp-5\",	\"kp-6\",	\"kp-7\",	\"kp-8\",	\"kp-9\",
    0,		/* 0xffba */
    0, 0,
    \"kp-equal\",			/* 0xffbd */
    \"f1\",			/* 0xffbe */	/* IsFunctionKey */
    \"f2\",
    \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\",	\"f9\", \"f10\", /* 0xffc0 */
    \"f11\", \"f12\", \"f13\", \"f14\", \"f15\", \"f16\", \"f17\", \"f18\",
    \"f19\", \"f20\", \"f21\", \"f22\", \"f23\", \"f24\", \"f25\", \"f26\", /* 0xffd0 */
    \"f27\", \"f28\", \"f29\", \"f30\", \"f31\", \"f32\", \"f33\", \"f34\",
    \"f35\", 0, 0, 0, 0, 0, 0, 0,	/* 0xffe0 */
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,     /* 0xfff0 */
    0, 0, 0, 0, 0, 0, 0, \"delete\"
  }"
                :type "char")
                nil [154852 157303])
            ("ISO_FUNCTION_KEY_OFFSET" variable (:constant-flag t) nil [157381 157404])
            ("iso_lispy_function_keys" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{
    0, 0, 0, 0, 0, 0, 0, 0,	/* 0xfe00 */
    0, 0, 0, 0, 0, 0, 0, 0,	/* 0xfe08 */
    0, 0, 0, 0, 0, 0, 0, 0,	/* 0xfe10 */
    0, 0, 0, 0, 0, 0, 0, 0,	/* 0xfe18 */
    \"iso-lefttab\",		/* 0xfe20 */
    \"iso-move-line-up\", \"iso-move-line-down\",
    \"iso-partial-line-up\", \"iso-partial-line-down\",
    \"iso-partial-space-left\", \"iso-partial-space-right\",
    \"iso-set-margin-left\", \"iso-set-margin-right\", /* 0xffe27, 28 */
    \"iso-release-margin-left\", \"iso-release-margin-right\",
    \"iso-release-both-margins\",
    \"iso-fast-cursor-left\", \"iso-fast-cursor-right\",
    \"iso-fast-cursor-up\", \"iso-fast-cursor-down\",
    \"iso-continuous-underline\", \"iso-discontinuous-underline\", /* 0xfe30, 31 */
    \"iso-emphasize\", \"iso-center-object\", \"iso-enter\", /* ... 0xfe34 */
  }"
                :type "char")
                nil [157413 158229])
            ("Vlispy_mouse_stem" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158260 158290])
            ("lispy_wheel_names" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{
  \"wheel-up\", \"wheel-down\", \"wheel-left\", \"wheel-right\"
}"
                :type "char")
                nil [158292 158387])
            ("lispy_drag_n_drop_names" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :default-value "{
  \"drag-n-drop\"
}"
                :type "char")
                nil [158532 158593])
            ("Qbelow_handle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158620 158670])
            ("Qhandle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158620 158670])
            ("Qabove_handle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158620 158670])
            ("Qend_scroll" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158671 158716])
            ("Qbottom" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158671 158716])
            ("Qdown" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158671 158716])
            ("Qup" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158671 158716])
            ("Qratio" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158717 158742])
            ("Qtop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [158717 158742])
            ("scroll_bar_parts" variable
               (:pointer 1
                :dereference 1
                :default-value "{
  &Qabove_handle, &Qhandle, &Qbelow_handle,
  &Qup, &Qdown, &Qtop, &Qbottom, &Qend_scroll, &Qratio
}"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [158823 158960])
            ("button_down_location" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [159440 159480])
            ("last_mouse_button" variable
               (:typemodifiers ("static")
                :type "int")
                nil [159594 159623])
            ("last_mouse_x" variable
               (:typemodifiers ("static")
                :type "int")
                nil [159624 159648])
            ("last_mouse_y" variable
               (:typemodifiers ("static")
                :type "int")
                nil [159649 159673])
            ("button_down_time" variable
               (:typemodifiers ("static")
                :type "unsigned long")
                nil [159674 159712])
            ("Vdouble_click_time" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [159849 159880])
            ("double_click_fuzz" variable (:type "int") nil [159980 160008])
            ("double_click_count" variable (:type "int") nil [160062 160085])
            ("make_lispy_position" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil)
                    ("y" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("x" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("time" variable (:type "unsigned long") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [160142 164745])
            ("make_lispy_event" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [165152 185898])
            ("make_lispy_movement" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("FRAME_PTR" type (:type "class") nil nil)) nil nil)
                    ("bar_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("part" variable (:type ("scroll_bar_part" type (:type "enum") nil nil)) nil nil)
                    ("y" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("time" variable (:type "unsigned long") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [185946 186788])
            ("make_lispy_switch_frame" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [186866 186997])
            ("parse_modifiers_uncached" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("modifier_end" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type "int")
                nil [187324 189806])
            ("apply_modifiers_uncached" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("modifiers" variable (:type "int") nil nil)
                    ("base" variable
                       (:pointer 1
                        :type "char")
                        nil nil)
                    ("base_len_byte" variable (:type "int") nil nil)
                    ("base_len" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [189961 191718])
            ("modifier_names" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
  \"up\", \"down\", \"drag\", \"click\", \"double\", \"triple\", 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, \"alt\", \"super\", \"hyper\", \"shift\", \"control\", \"meta\"
}"
                :type "char")
                nil [191721 191920])
            ("NUM_MOD_NAMES" variable (:constant-flag t) nil [191929 191942])
            ("modifier_symbols" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [191999 192035])
            ("lispy_modifier_list" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("modifiers" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [192117 192462])
            ("KEY_TO_CHAR" variable (:constant-flag t) nil [192839 192850])
            ("parse_modifiers" function
               (:arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [192895 194161])
            ("DEFUN_ARGS_" variable (:type ("Sevent_symbol_parse_modifiers" type (:type "class") nil nil)) nil [194163 194351])
            ("doc" variable
               (:default-value "DEFUN (\"internal-event-symbol-parse-modifiers\", Fevent_symbol_parse_modifiers,
       Sevent_symbol_parse_modifiers, 1, 1, 0,
       doc: /* Parse the event symbol.  For internal use.  */)"
                :type "int")
                nil [194163 194351])
            ("Sevent_symbol_parse_modifiers" function
               (:arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [194163 194667])
            ("apply_modifiers" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("modifiers" variable (:type "int") nil nil)
                    ("base" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [195034 197021])
            ("reorder_modifiers" function
               (:arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [197422 197770])
            ("modify_event_symbol" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("symbol_num" variable (:type "int") nil nil)
                    ("modifiers" variable (:type "unsigned int") nil nil)
                    ("symbol_kind" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name_alist_or_stem" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("name_table" variable
                       (:pointer 2
                        :type "char")
                        nil nil)
                    ("symbol_table" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("table_size" variable (:type "unsigned int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [199238 201849])
            ("DEFUN_ARGS_" variable (:type ("Sevent_convert_list" type (:type "class") nil nil)) nil [202017 202505])
            ("doc" variable
               (:default-value "DEFUN (\"event-convert-list\", Fevent_convert_list, Sevent_convert_list, 1, 1, 0,
       doc: /* Convert the event description list EVENT-DESC to an event type.
EVENT-DESC should contain one base event type (a character or symbol)
and zero or more modifier names (control, meta, hyper, super, shift, alt,
drag, down, double or triple).  The base must be last.
The return value is an event type (a character or symbol) which
has the same base event type and all the specified modifiers.  */)"
                :type "int")
                nil [202017 202505])
            ("Sevent_convert_list" function
               (:arguments 
                  ( ("event_desc" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [202017 203846])
            ("parse_solitary_modifier" function
               (:arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [203986 204005]))                  
                :type "int")
                nil [203957 205537])
            ("lucid_event_type_list_p" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [205708 206209])
            ("get_input_pending" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("addr" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("flags" variable (:type "int") nil nil))                  
                :type "void")
                nil [206752 207242])
            ("gobble_input" function
               (:arguments 
                  ( ("expected" variable (:type "int") nil nil))                  
                :type "void")
                nil [207323 208084])
            ("record_asynch_buffer_change" function (:type "void") nil [208199 209238])
            ("read_avail_input" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("expected" variable (:type "int") nil nil))                  
                :type "int")
                nil [209525 211625])
            ("decode_keyboard_code" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tty" variable
                       (:pointer 1
                        :type ("tty_display_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [211661 211690])
                    ("coding" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [211699 211728])
                    ("buf" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [211737 211756])
                    ("nbytes" variable (:type "int") (reparse-symbol arg-sub-list) [211757 211768]))                  
                :type "void")
                nil [211627 212836])
            ("tty_read_avail_input" function
               (:arguments 
                  ( ("terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [213133 213159])
                    ("expected" variable (:type "int") (reparse-symbol arg-sub-list) [213182 213195])
                    ("hold_quit" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [213218 213248]))                  
                :type "int")
                nil [213107 219173])
            ("handle_async_input" function (:type "void") nil [219176 219767])
            ("process_pending_signals" function (:type "void") nil [219769 219887])
            ("input_available_signal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("signo" variable (:type "int") nil nil))                  
                :type "void")
                nil [219986 220606])
            ("reinvoke_input_signal" function (:type "void") nil [220915 220993])
            ("user_signal_info" type
               (:members 
                  ( ("sig" variable (:type "int") (reparse-symbol classsubparts) [221078 221086])
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [221119 221130])
                    ("npending" variable (:type "int") (reparse-symbol classsubparts) [221170 221183])
                    ("next" variable
                       (:pointer 1
                        :type ("user_signal_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [221187 221217]))                  
                :type "struct")
                nil [221026 221220])
            ("user_signals" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "NULL;"
                :type ("user_signal_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [221250 221302])
            ("add_user_signal" function
               (:arguments 
                  ( ("sig" variable (:type "int") nil nil)
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        nil nil))                  
                :type "void")
                nil [221304 221711])
            ("handle_user_signal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("sig" variable (:type "int") nil nil))                  
                :type "void")
                nil [221713 222443])
            ("find_user_signal_name" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("sig" variable (:type "int") nil nil))                  
                :type "char")
                nil [222445 222637])
            ("store_user_signal_events" function
               (:typemodifiers ("static")
                :type "int")
                nil [222639 223219])
            ("menu_bar_item" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [223223 223301])
            ("menu_bar_one_keymap_changed_items" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [223302 223355])
            ("menu_bar_items_vector" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [223516 223557])
            ("menu_bar_items_index" variable
               (:typemodifiers ("static")
                :type "int")
                nil [223558 223590])
            ("menu_bar_items" function
               (:arguments 
                  ( ("old" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [223810 228461])
            ("item_properties" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [228600 228628])
            ("menu_bar_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("dummy1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("item" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dummy2" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [228630 231226])
            ("menu_item_eval_property_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [231303 231601])
            ("menu_item_eval_property" function
               (:arguments 
                  ( ("sexpr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [231739 232023])
            ("parse_menu_item" function
               (:arguments 
                  ( ("item" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("inmenubar" variable (:type "int") nil nil))                  
                :type "int")
                nil [232415 240127])
            ("tool_bar_items_vector" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [240461 240502])
            ("tool_bar_item_properties" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [240635 240679])
            ("ntool_bar_items" variable
               (:typemodifiers ("static")
                :type "int")
                nil [240731 240758])
            ("Qtool_bar" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [240813 240842])
            ("QCimage" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [240843 240863])
            ("Qrtl" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [240864 240881])
            ("init_tool_bar_items" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [240912 240963])
            ("process_tool_bar_item" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [240964 241050])
            ("parse_tool_bar_item" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [241051 241114])
            ("append_tool_bar_item" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [241115 241160])
            ("tool_bar_items" function
               (:arguments 
                  ( ("reuse" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("nitems" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [241330 243905])
            ("process_tool_bar_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("def" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("args" variable
                       (:pointer 1
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [243960 245030])
            ("parse_tool_bar_item" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("item" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "int")
                nil [246240 250244])
            ("init_tool_bar_items" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("reuse" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [250344 250566])
            ("append_tool_bar_item" function
               (:typemodifiers ("static")
                :type "void")
                nil [250648 251309])
            ("read_char_x_menu_prompt" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("nmaps" variable (:type "int") nil nil)
                    ("maps" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("prev_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("used_mouse_menu" variable
                       (:pointer 1
                        :type "int")
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [252300 254507])
            ("read_char_minibuf_menu_text" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [254637 254678])
            ("read_char_minibuf_menu_width" variable
               (:typemodifiers ("static")
                :type "int")
                nil [254707 254747])
            ("read_char_minibuf_menu_prompt" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("commandflag" variable (:type "int") nil nil)
                    ("nmaps" variable (:type "int") nil nil)
                    ("maps" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [254749 261477])
            ("follow_key" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("next" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("defs" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("current" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("nmaps" variable (:type "int") nil nil))                  
                :type "int")
                nil [262125 262762])
            ("keyremap" type
               (:typedef ("keyremap" type
                     (:members 
                        ( ("parent" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [262983 263002])
                          ("map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [263100 263116])
                          ("end" variable (:type "int") (reparse-symbol classsubparts) [263322 263337])
                          ("start" variable (:type "int") (reparse-symbol classsubparts) [263322 263337]))                        
                      :type "struct")
                      nil nil)
                :superclasses "keyremap"
                :type "typedef")
                nil [262895 263349])
            ("access_keymap_keyremap" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("do_funcall" variable (:type "int") nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [263673 264934])
            ("keyremap_step" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("keybuf" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("fkey" variable
                       (:pointer 1
                        :type ("keyremap" type (:type "class") nil nil))
                        nil nil)
                    ("bufsize" variable (:type "int") nil nil)
                    ("diff" variable
                       (:pointer 1
                        :type "int")
                        nil nil)
                    ("doit" variable (:type "int") nil nil)
                    ("input" variable (:type "int") nil nil))                  
                :type "int")
                nil [265550 267053])
            ("read_key_sequence" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("keybuf" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("bufsize" variable (:type "int") nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("dont_downcase_last" variable (:type "int") nil nil)
                    ("can_return_switch_frame" variable (:type "int") nil nil)
                    ("fix_current_buffer" variable (:type "int") nil nil))                  
                :type "int")
                nil [268672 304892])
            ("DEFUN_ARGS_" variable (:type ("Sread_key_sequence" type (:type "class") nil nil)) nil [304894 307313])
            ("doc" variable
               (:default-value "DEFUN (\"read-key-sequence\", Fread_key_sequence, Sread_key_sequence, 1, 5, 0,
       doc: /* Read a sequence of keystrokes and return as a string or vector.
The sequence is sufficient to specify a non-prefix command in the
current local and global maps.

First arg PROMPT is a prompt string.  If nil, do not prompt specially.
Second (optional) arg CONTINUE-ECHO, if non-nil, means this key echos
as a continuation of the previous key.

The third (optional) arg DONT-DOWNCASE-LAST, if non-nil, means do not
convert the last event to lower case.  (Normally any upper case event
is converted to lower case if the original event is undefined and the lower
case equivalent is defined.)  A non-nil value is appropriate for reading
a key sequence to be defined.

A C-g typed while in this function is treated like any other character,
and `quit-flag' is not set.

If the key sequence starts with a mouse click, then the sequence is read
using the keymaps of the buffer of the window clicked in, not the buffer
of the selected window as normal.

`read-key-sequence' drops unbound button-down events, since you normally
only care about the click or drag events which follow them.  If a drag
or multi-click event is unbound, but the corresponding click event would
be bound, `read-key-sequence' turns the event into a click event at the
drag's starting position.  This means that you don't have to distinguish
between click and drag, double, or triple events unless you want to.

`read-key-sequence' prefixes mouse events on mode lines, the vertical
lines separating windows, and scroll bars with imaginary keys
`mode-line', `vertical-line', and `vertical-scroll-bar'.

Optional fourth argument CAN-RETURN-SWITCH-FRAME non-nil means that this
function will process a switch-frame event if the user switches frames
before typing anything.  If the user switches frames in the middle of a
key sequence, or at the start of the sequence but CAN-RETURN-SWITCH-FRAME
is nil, then the event will be put off until after the current key sequence.

`read-key-sequence' checks `function-key-map' for function key
sequences, where they wouldn't conflict with ordinary bindings.  See
`function-key-map' for more details.

The optional fifth argument COMMAND-LOOP, if non-nil, means
that this key sequence is being read by something that will
read commands one after another.  It should be nil if the caller
will read just one key sequence.  */)"
                :type "int")
                nil [304894 307313])
            ("Sread_key_sequence" function
               (:arguments 
                  ( ("dont_downcase_last" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("continue_echo" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("command_loop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("can_return_switch_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [304894 308771])
            ("DEFUN_ARGS_" variable (:type ("Sread_key_sequence_vector" type (:type "class") nil nil)) nil [308773 308950])
            ("doc" variable
               (:default-value "DEFUN (\"read-key-sequence-vector\", Fread_key_sequence_vector,
       Sread_key_sequence_vector, 1, 5, 0,
       doc: /* Like `read-key-sequence' but always return a vector.  */)"
                :type "int")
                nil [308773 308950])
            ("Sread_key_sequence_vector" function
               (:arguments 
                  ( ("dont_downcase_last" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("continue_echo" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("command_loop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("can_return_switch_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [308773 310203])
            ("DEFUN_ARGS_" variable (:type ("Scommand_execute" type (:type "class") nil nil)) nil [310206 310847])
            ("doc" variable
               (:default-value "DEFUN (\"command-execute\", Fcommand_execute, Scommand_execute, 1, 4, 0,
       doc: /* Execute CMD as an editor command.
CMD must be a symbol that satisfies the `commandp' predicate.
Optional second arg RECORD-FLAG non-nil
means unconditionally put this command in `command-history'.
Otherwise, that is done only if an arg is read using the minibuffer.
The argument KEYS specifies the value to use instead of (this-command-keys)
when reading the arguments; if it is nil, (this-command-keys) is used.
The argument SPECIAL, if non-nil, means that this command is executing
a special event, so ignore the prefix argument and don't clear it.  */)"
                :type "int")
                nil [310206 310847])
            ("Scommand_execute" function
               (:arguments 
                  ( ("special" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("keys" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("record_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("cmd" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [310206 312802])
            ("DEFUN_ARGS_" variable (:type ("Sexecute_extended_command" type (:type "class") nil nil)) nil [312807 313230])
            ("doc" variable
               (:default-value "DEFUN (\"execute-extended-command\", Fexecute_extended_command, Sexecute_extended_command,
       1, 1, \"P\",
       doc: /* Read function name, then read its arguments and call it.

To pass a numeric argument to the command you are invoking with, specify
the numeric argument to this command.

Noninteractively, the argument PREFIXARG is the prefix argument to
give to the command you invoke, if it asks for an argument.  */)"
                :type "int")
                nil [312807 313230])
            ("Sexecute_extended_command" function
               (:arguments 
                  ( ("prefixarg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [312807 318015])
            ("detect_input_pending" function (:type "int") nil [318071 318192])
            ("detect_input_pending_ignore_squeezables" function (:type "int") nil [318276 318449])
            ("detect_input_pending_run_timers" function
               (:arguments 
                  ( ("do_display" variable (:type "int") nil nil))                  
                :type "int")
                nil [318531 319344])
            ("clear_input_pending" function (:type "void") nil [319546 319598])
            ("requeued_events_pending_p" function (:type "int") nil [319915 320023])
            ("DEFUN_ARGS_" variable (:type ("Sinput_pending_p" type (:type "class") nil nil)) nil [320026 320294])
            ("doc" variable
               (:default-value "DEFUN (\"input-pending-p\", Finput_pending_p, Sinput_pending_p, 0, 0, 0,
       doc: /* Return t if command input is currently available with no wait.
Actually, the value is nil only if we can be sure that no input is available;
if there is a doubt, the value is t.  */)"
                :type "int")
                nil [320026 320294])
            ("Sinput_pending_p" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [320026 320641])
            ("DEFUN_ARGS_" variable (:type ("Srecent_keys" type (:type "class") nil nil)) nil [320643 320796])
            ("doc" variable
               (:default-value "DEFUN (\"recent-keys\", Frecent_keys, Srecent_keys, 0, 0, 0,
       doc: /* Return vector of last 300 events, not counting those from keyboard macros.  */)"
                :type "int")
                nil [320643 320796])
            ("Srecent_keys" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [320643 321316])
            ("DEFUN_ARGS_" variable (:type ("Sthis_command_keys" type (:type "class") nil nil)) nil [321318 321647])
            ("doc" variable
               (:default-value "DEFUN (\"this-command-keys\", Fthis_command_keys, Sthis_command_keys, 0, 0, 0,
       doc: /* Return the key sequence that invoked this command.
However, if the command has called `read-key-sequence', it returns
the last key sequence that has been read.
The value is a string or a vector.

See also `this-command-keys-vector'.  */)"
                :type "int")
                nil [321318 321647])
            ("Sthis_command_keys" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [321318 321756])
            ("DEFUN_ARGS_" variable (:type ("Sthis_command_keys_vector" type (:type "class") nil nil)) nil [321758 322079])
            ("doc" variable
               (:default-value "DEFUN (\"this-command-keys-vector\", Fthis_command_keys_vector, Sthis_command_keys_vector, 0, 0, 0,
       doc: /* Return the key sequence that invoked this command, as a vector.
However, if the command has called `read-key-sequence', it returns
the last key sequence that has been read.

See also `this-command-keys'.  */)"
                :type "int")
                nil [321758 322079])
            ("Sthis_command_keys_vector" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [321758 322177])
            ("DEFUN_ARGS_" variable (:type ("Sthis_single_command_keys" type (:type "class") nil nil)) nil [322179 322578])
            ("doc" variable
               (:default-value "DEFUN (\"this-single-command-keys\", Fthis_single_command_keys,
       Sthis_single_command_keys, 0, 0, 0,
       doc: /* Return the key sequence that invoked this command.
More generally, it returns the last key sequence read, either by
the command loop or by `read-key-sequence'.
Unlike `this-command-keys', this function's value
does not include prefix arguments.
The value is always a vector.  */)"
                :type "int")
                nil [322179 322578])
            ("Sthis_single_command_keys" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [322179 322751])
            ("DEFUN_ARGS_" variable (:type ("Sthis_single_command_raw_keys" type (:type "class") nil nil)) nil [322753 323209])
            ("doc" variable
               (:default-value "DEFUN (\"this-single-command-raw-keys\", Fthis_single_command_raw_keys,
       Sthis_single_command_raw_keys, 0, 0, 0,
       doc: /* Return the raw events that were read for this command.
More generally, it returns the last key sequence read, either by
the command loop or by `read-key-sequence'.
Unlike `this-single-command-keys', this function's value
shows the events before all translations (except for input methods).
The value is always a vector.  */)"
                :type "int")
                nil [322753 323209])
            ("Sthis_single_command_raw_keys" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [322753 323296])
            ("DEFUN_ARGS_" variable (:type ("Sreset_this_command_lengths" type (:type "class") nil nil)) nil [323298 323900])
            ("doc" variable
               (:default-value "DEFUN (\"reset-this-command-lengths\", Freset_this_command_lengths,
       Sreset_this_command_lengths, 0, 0, 0,
       doc: /* Make the unread events replace the last command and echo.
Used in `universal-argument-other-key'.

`universal-argument-other-key' rereads the event just typed.
It then gets translated through `function-key-map'.
The translated event has to replace the real events,
both in the value of (this-command-keys) and in echoing.
To achieve this, `universal-argument-other-key' calls
`reset-this-command-lengths', which discards the record of reading
these events the first time.  */)"
                :type "int")
                nil [323298 323900])
            ("Sreset_this_command_lengths" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [323298 324310])
            ("DEFUN_ARGS_" variable (:type ("Sclear_this_command_keys" type (:type "class") nil nil)) nil [324312 324578])
            ("doc" variable
               (:default-value "DEFUN (\"clear-this-command-keys\", Fclear_this_command_keys,
       Sclear_this_command_keys, 0, 1, 0,
       doc: /* Clear out the vector that `this-command-keys' returns.
Also clear the record of the last 100 events, unless optional arg
KEEP-RECORD is non-nil.  */)"
                :type "int")
                nil [324312 324578])
            ("Sclear_this_command_keys" function
               (:arguments 
                  ( ("keep_record" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [324312 324912])
            ("DEFUN_ARGS_" variable (:type ("Srecursion_depth" type (:type "class") nil nil)) nil [324914 325049])
            ("doc" variable
               (:default-value "DEFUN (\"recursion-depth\", Frecursion_depth, Srecursion_depth, 0, 0, 0,
       doc: /* Return the current depth in recursive edits.  */)"
                :type "int")
                nil [324914 325049])
            ("Srecursion_depth" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [324914 325154])
            ("DEFUN_ARGS_" variable (:type ("Sopen_dribble_file" type (:type "class") nil nil)) nil [325156 325394])
            ("doc" variable
               (:default-value "DEFUN (\"open-dribble-file\", Fopen_dribble_file, Sopen_dribble_file, 1, 1,
       \"FOpen dribble file: \",
       doc: /* Start writing all keyboard characters to a dribble file called FILE.
If FILE is nil, close any open dribble file.  */)"
                :type "int")
                nil [325156 325394])
            ("Sopen_dribble_file" function
               (:arguments 
                  ( ("file" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [325156 325762])
            ("DEFUN_ARGS_" variable (:type ("Sdiscard_input" type (:type "class") nil nil)) nil [325764 325937])
            ("doc" variable
               (:default-value "DEFUN (\"discard-input\", Fdiscard_input, Sdiscard_input, 0, 0, 0,
       doc: /* Discard the contents of the terminal input buffer.
Also end any kbd macro being defined.  */)"
                :type "int")
                nil [325764 325937])
            ("Sdiscard_input" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [325764 326307])
            ("DEFUN_ARGS_" variable (:type ("Ssuspend_emacs" type (:type "class") nil nil)) nil [326310 326952])
            ("doc" variable
               (:default-value "DEFUN (\"suspend-emacs\", Fsuspend_emacs, Ssuspend_emacs, 0, 1, \"\",
       doc: /* Stop Emacs and return to superior process.  You can resume later.
If `cannot-suspend' is non-nil, or if the system doesn't support job
control, run a subshell instead.

If optional arg STUFFSTRING is non-nil, its characters are stuffed
to be read as terminal input by Emacs's parent, after suspension.

Before suspending, run the normal hook `suspend-hook'.
After resumption run the normal hook `suspend-resume-hook'.

Some operating systems cannot stop the Emacs process and resume it later.
On such systems, Emacs starts a subshell instead of suspending.  */)"
                :type "int")
                nil [326310 326952])
            ("Ssuspend_emacs" function
               (:arguments 
                  ( ("stuffstring" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [326310 328392])
            ("stuff_buffered_input" function
               (:arguments 
                  ( ("stuffstring" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type "void")
                nil [328546 329526])
            ("set_waiting_for_input" function
               (:arguments 
                  ( ("time_to_clear" variable
                       (:pointer 1
                        :type ("EMACS_TIME" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [329529 329914])
            ("clear_waiting_for_input" function (:type "void") nil [329916 330073])
            ("interrupt_signal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("signalnum" variable (:type "int") nil nil))                  
                :type "void")
                nil [330269 331520])
            ("handle_interrupt" function
               (:typemodifiers ("static")
                :type "void")
                nil [331952 335766])
            ("quit_throw_to_read_char" function (:type "void") nil [335821 336556])
            ("DEFUN_ARGS_" variable (:type ("Sset_input_interrupt_mode" type (:type "class") nil nil)) nil [336559 336846])
            ("doc" variable
               (:default-value "DEFUN (\"set-input-interrupt-mode\", Fset_input_interrupt_mode, Sset_input_interrupt_mode, 1, 1, 0,
       doc: /* Set interrupt mode of reading keyboard input.
If INTERRUPT is non-nil, Emacs will use input interrupts;
otherwise Emacs uses CBREAK mode.

See also `current-input-mode'.  */)"
                :type "int")
                nil [336559 336846])
            ("Sset_input_interrupt_mode" function
               (:arguments 
                  ( ("interrupt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [336559 337914])
            ("DEFUN_ARGS_" variable (:type ("Sset_output_flow_control" type (:type "class") nil nil)) nil [337916 338345])
            ("doc" variable
               (:default-value "DEFUN (\"set-output-flow-control\", Fset_output_flow_control, Sset_output_flow_control, 1, 2, 0,
       doc: /* Enable or disable ^S/^Q flow control for output to TERMINAL.
If FLOW is non-nil, flow control is enabled and you cannot use C-s or
C-q in key sequences.

This setting only has an effect on tty terminals and only when
Emacs reads input in CBREAK mode; see `set-input-interrupt-mode'.

See also `current-input-mode'.  */)"
                :type "int")
                nil [337916 338345])
            ("Sset_output_flow_control" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("flow" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [337916 338908])
            ("DEFUN_ARGS_" variable (:type ("Sset_input_meta_mode" type (:type "class") nil nil)) nil [338910 339592])
            ("doc" variable
               (:default-value "DEFUN (\"set-input-meta-mode\", Fset_input_meta_mode, Sset_input_meta_mode, 1, 2, 0,
       doc: /* Enable or disable 8-bit input on TERMINAL.
If META is t, Emacs will accept 8-bit input, and interpret the 8th
bit as the Meta modifier.

If META is nil, Emacs will ignore the top bit, on the assumption it is
parity.

Otherwise, Emacs will accept and pass through 8-bit input without
specially interpreting the top bit.

This setting only has an effect on tty terminal devices.

Optional parameter TERMINAL specifies the tty terminal device to use.
It may be a terminal object, a frame, or nil for the terminal used by
the currently selected frame.

See also `current-input-mode'.  */)"
                :type "int")
                nil [338910 339592])
            ("Sset_input_meta_mode" function
               (:arguments 
                  ( ("terminal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("meta" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [338910 340263])
            ("DEFUN_ARGS_" variable (:type ("Sset_quit_char" type (:type "class") nil nil)) nil [340265 340530])
            ("doc" variable
               (:default-value "DEFUN (\"set-quit-char\", Fset_quit_char, Sset_quit_char, 1, 1, 0,
       doc: /* Specify character used for quitting.
QUIT must be an ASCII character.

This function only has an effect on the controlling tty of the Emacs
process.

See also `current-input-mode'.  */)"
                :type "int")
                nil [340265 340530])
            ("Sset_quit_char" function
               (:arguments 
                  ( ("quit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [340265 341208])
            ("DEFUN_ARGS_" variable (:type ("Sset_input_mode" type (:type "class") nil nil)) nil [341210 341832])
            ("doc" variable
               (:default-value "DEFUN (\"set-input-mode\", Fset_input_mode, Sset_input_mode, 3, 4, 0,
       doc: /* Set mode of reading keyboard input.
First arg INTERRUPT non-nil means use input interrupts;
 nil means use CBREAK mode.
Second arg FLOW non-nil means use ^S/^Q flow control for output to terminal
 (no effect except in CBREAK mode).
Third arg META t means accept 8-bit input (for a Meta key).
 META nil means ignore the top bit, on the assumption it is parity.
 Otherwise, accept 8-bit input and don't use the top bit for Meta.
Optional fourth arg QUIT if non-nil specifies character to use for quitting.
See also `current-input-mode'.  */)"
                :type "int")
                nil [341210 341832])
            ("Sset_input_mode" function
               (:arguments 
                  ( ("quit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("meta" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("flow" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("interrupt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [341210 342098])
            ("DEFUN_ARGS_" variable (:type ("Scurrent_input_mode" type (:type "class") nil nil)) nil [342100 342951])
            ("doc" variable
               (:default-value "DEFUN (\"current-input-mode\", Fcurrent_input_mode, Scurrent_input_mode, 0, 0, 0,
       doc: /* Return information about the way Emacs currently reads keyboard input.
The value is a list of the form (INTERRUPT FLOW META QUIT), where
  INTERRUPT is non-nil if Emacs is using interrupt-driven input; if
    nil, Emacs is using CBREAK mode.
  FLOW is non-nil if Emacs uses ^S/^Q flow control for output to the
    terminal; this does not apply if Emacs uses interrupt-driven input.
  META is t if accepting 8-bit input with 8th bit as Meta flag.
    META nil means ignoring the top bit, on the assumption it is parity.
    META is neither t nor nil if accepting 8-bit input and using
    all 8 bits as the character code.
  QUIT is the character Emacs currently uses to quit.
The elements of this list correspond to the arguments of
`set-input-mode'.  */)"
                :type "int")
                nil [342100 342951])
            ("Scurrent_input_mode" function (:type ("Lisp_Object" type (:type "class") nil nil)) nil [342100 343479])
            ("DEFUN_ARGS_" variable (:type ("Sposn_at_x_y" type (:type "class") nil nil)) nil [343481 344056])
            ("doc" variable
               (:default-value "DEFUN (\"posn-at-x-y\", Fposn_at_x_y, Sposn_at_x_y, 2, 4, 0,
       doc: /* Return position information for pixel coordinates X and Y.
By default, X and Y are relative to text area of the selected window.
Optional third arg FRAME-OR-WINDOW non-nil specifies frame or window.
If optional fourth arg WHOLE is non-nil, X is relative to the left
edge of the window.

The return value is similar to a mouse click position:
   (WINDOW AREA-OR-POS (X . Y) TIMESTAMP OBJECT POS (COL . ROW)
    IMAGE (DX . DY) (WIDTH . HEIGHT))
The `posn-' functions access elements of such lists.  */)"
                :type "int")
                nil [343481 344056])
            ("Sposn_at_x_y" function
               (:arguments 
                  ( ("whole" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("frame_or_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("y" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [343481 344745])
            ("DEFUN_ARGS_" variable (:type ("Sposn_at_point" type (:type "class") nil nil)) nil [344747 345337])
            ("doc" variable
               (:default-value "DEFUN (\"posn-at-point\", Fposn_at_point, Sposn_at_point, 0, 2, 0,
       doc: /* Return position information for buffer POS in WINDOW.
POS defaults to point in WINDOW; WINDOW defaults to the selected window.

Return nil if position is not visible in window.  Otherwise,
the return value is similar to that returned by `event-start' for
a mouse click at the upper left corner of the glyph corresponding
to the given buffer position:
   (WINDOW AREA-OR-POS (X . Y) TIMESTAMP OBJECT POS (COL . ROW)
    IMAGE (DX . DY) (WIDTH . HEIGHT))
The `posn-' functions access elements of such lists.  */)"
                :type "int")
                nil [344747 345337])
            ("Sposn_at_point" function
               (:arguments 
                  ( ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil)
                    ("pos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [344747 345766])
            ("init_kboard" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [345839 346734])
            ("wipe_kboard" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [346907 346988])
            ("delete_kboard" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        nil nil))                  
                :type "void")
                nil [347037 347562])
            ("init_keyboard" function (:type "void") nil [347564 349920])
            ("event_head" type
               (:members 
                  ( ("var" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [350066 350083])
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [350086 350097])
                    ("kind" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [350100 350118]))                  
                :type "struct")
                nil [350044 350121])
            ("head_table" variable
               (:dereference 1
                :default-value "{
  {&Qmouse_movement,      \"mouse-movement\",      &Qmouse_movement},
  {&Qscroll_bar_movement, \"scroll-bar-movement\", &Qmouse_movement},
  {&Qswitch_frame,        \"switch-frame\",        &Qswitch_frame},
  {&Qdelete_frame,        \"delete-frame\",        &Qdelete_frame},
  {&Qiconify_frame,       \"iconify-frame\",       &Qiconify_frame},
  {&Qmake_frame_visible,  \"make-frame-visible\",  &Qmake_frame_visible},
  /* `select-window' should be handled just like `switch-frame'
     in read_key_sequence.  */
  {&Qselect_window,       \"select-window\",       &Qswitch_frame}
}"
                :type ("event_head" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [350123 350727])
            ("syms_of_keyboard" function (:type "void") nil [350729 382454])
            ("keys_of_keyboard" function (:type "void") nil [382456 385135])
            ("mark_kboards" function (:type "void") nil [385222 386608]))          
    :file "keyboard.c"
    :pointmax 386695
    :fsize 386694
    :lastmodtime '(19383 49279)
    :unmatched-syntax '((semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 344747 . 345337) (symbol "__attribute__" 344747 . 345337) (symbol "Lisp_Subr" 344747 . 345337) (symbol "Lisp_Object" 344747 . 345337) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 343481 . 344056) (symbol "__attribute__" 343481 . 344056) (symbol "Lisp_Subr" 343481 . 344056) (symbol "Lisp_Object" 343481 . 344056) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 342100 . 342951) (symbol "__attribute__" 342100 . 342951) (symbol "Lisp_Subr" 342100 . 342951) (symbol "Lisp_Object" 342100 . 342951) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 341210 . 341832) (symbol "__attribute__" 341210 . 341832) (symbol "Lisp_Subr" 341210 . 341832) (symbol "Lisp_Object" 341210 . 341832) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 340265 . 340530) (symbol "__attribute__" 340265 . 340530) (symbol "Lisp_Subr" 340265 . 340530) (symbol "Lisp_Object" 340265 . 340530) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 338910 . 339592) (symbol "__attribute__" 338910 . 339592) (symbol "Lisp_Subr" 338910 . 339592) (symbol "Lisp_Object" 338910 . 339592) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 337916 . 338345) (symbol "__attribute__" 337916 . 338345) (symbol "Lisp_Subr" 337916 . 338345) (symbol "Lisp_Object" 337916 . 338345) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 336559 . 336846) (symbol "__attribute__" 336559 . 336846) (symbol "Lisp_Subr" 336559 . 336846) (symbol "Lisp_Object" 336559 . 336846) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 326310 . 326952) (symbol "__attribute__" 326310 . 326952) (symbol "Lisp_Subr" 326310 . 326952) (symbol "Lisp_Object" 326310 . 326952) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 325764 . 325937) (symbol "__attribute__" 325764 . 325937) (symbol "Lisp_Subr" 325764 . 325937) (symbol "Lisp_Object" 325764 . 325937) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 325156 . 325394) (symbol "__attribute__" 325156 . 325394) (symbol "Lisp_Subr" 325156 . 325394) (symbol "Lisp_Object" 325156 . 325394) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 324914 . 325049) (symbol "__attribute__" 324914 . 325049) (symbol "Lisp_Subr" 324914 . 325049) (symbol "Lisp_Object" 324914 . 325049) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 324312 . 324578) (symbol "__attribute__" 324312 . 324578) (symbol "Lisp_Subr" 324312 . 324578) (symbol "Lisp_Object" 324312 . 324578) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 323298 . 323900) (symbol "__attribute__" 323298 . 323900) (symbol "Lisp_Subr" 323298 . 323900) (symbol "Lisp_Object" 323298 . 323900) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 322753 . 323209) (symbol "__attribute__" 322753 . 323209) (symbol "Lisp_Subr" 322753 . 323209) (symbol "Lisp_Object" 322753 . 323209) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 322179 . 322578) (symbol "__attribute__" 322179 . 322578) (symbol "Lisp_Subr" 322179 . 322578) (symbol "Lisp_Object" 322179 . 322578) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 321758 . 322079) (symbol "__attribute__" 321758 . 322079) (symbol "Lisp_Subr" 321758 . 322079) (symbol "Lisp_Object" 321758 . 322079) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 321318 . 321647) (symbol "__attribute__" 321318 . 321647) (symbol "Lisp_Subr" 321318 . 321647) (symbol "Lisp_Object" 321318 . 321647) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 320643 . 320796) (symbol "__attribute__" 320643 . 320796) (symbol "Lisp_Subr" 320643 . 320796) (symbol "Lisp_Object" 320643 . 320796) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 320026 . 320294) (symbol "__attribute__" 320026 . 320294) (symbol "Lisp_Subr" 320026 . 320294) (symbol "Lisp_Object" 320026 . 320294) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 312807 . 313230) (symbol "__attribute__" 312807 . 313230) (symbol "Lisp_Subr" 312807 . 313230) (symbol "Lisp_Object" 312807 . 313230) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 310206 . 310847) (symbol "__attribute__" 310206 . 310847) (symbol "Lisp_Subr" 310206 . 310847) (symbol "Lisp_Object" 310206 . 310847) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 308773 . 308950) (symbol "__attribute__" 308773 . 308950) (symbol "Lisp_Subr" 308773 . 308950) (symbol "Lisp_Object" 308773 . 308950) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 304894 . 307313) (symbol "__attribute__" 304894 . 307313) (symbol "Lisp_Subr" 304894 . 307313) (symbol "Lisp_Object" 304894 . 307313) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 202017 . 202505) (symbol "__attribute__" 202017 . 202505) (symbol "Lisp_Subr" 202017 . 202505) (symbol "Lisp_Object" 202017 . 202505) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 194163 . 194351) (symbol "__attribute__" 194163 . 194351) (symbol "Lisp_Subr" 194163 . 194351) (symbol "Lisp_Object" 194163 . 194351) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 140327 . 140830) (symbol "__attribute__" 140327 . 140830) (symbol "Lisp_Subr" 140327 . 140830) (symbol "Lisp_Object" 140327 . 140830) (symbol "__inline__" 119859 . 119865) (STATIC 119852 . 119858) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 43416 . 43718) (symbol "__attribute__" 43416 . 43718) (symbol "Lisp_Subr" 43416 . 43718) (symbol "Lisp_Object" 43416 . 43718) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 42328 . 42508) (symbol "__attribute__" 42328 . 42508) (symbol "Lisp_Subr" 42328 . 42508) (symbol "Lisp_Object" 42328 . 42508) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 42018 . 42175) (symbol "__attribute__" 42018 . 42175) (symbol "Lisp_Subr" 42018 . 42175) (symbol "Lisp_Object" 42018 . 42175) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 41544 . 41692) (symbol "__attribute__" 41544 . 41692) (symbol "Lisp_Subr" 41544 . 41692) (symbol "Lisp_Object" 41544 . 41692) (punctuation 32048 . 32049) (punctuation 32047 . 32048) (punctuation 32045 . 32046) (symbol 32010 . 32045) (semantic-list #("((__aligned__ (1 << GCTYPEBITS)))" 0 1 (macros (("var" symbol "doc" 19 . 24) ("type" symbol "Lisp_Subr" 8 . 17)))) 30484 . 30865) (symbol "__attribute__" 30484 . 30865) (symbol "Lisp_Subr" 30484 . 30865) (symbol "Lisp_Object" 30484 . 30865) (punctuation 14476 . 14477) (symbol 14464 . 14475) (STRUCT 14457 . 14463) (STATIC 14450 . 14456))
    :lexical-table 
        '(("FUNCTION_KEY_OFFSET" . ((number "0xff00" 154737 . 154743)))
          ("READABLE_EVENTS_IGNORE_SQUEEZABLES" . ((semantic-list "(1 << 2)" 19737 . 19745)))
          ("POLL_FOR_INPUT")
          ("STOP_POLLING" . 
              ((DO "do" 75784 . 75786) (semantic-list "{ if (! polling_stopped_here) stop_polling ();	\\
       polling_stopped_here = 1; }" 75787 . 75870) (WHILE "while" 75871 . 75876) (semantic-list "(0)" 75877 . 75880)))
          ("NUM_MOD_NAMES" . ((semantic-list "(sizeof (modifier_names) / sizeof (modifier_names[0]))" 191943 . 191997)))
          ("KEY_TO_CHAR" (spp-arg-list ("k") 192850 . 192853) . ((semantic-list "(XINT (k) & ((1 << CHARACTERBITS) - 1))" 192854 . 192893)))
          ("NUM_RECENT_KEYS" . ((semantic-list "(300)" 2938 . 2943)))
          ("GROW_RAW_KEYBUF" . 
              ((IF "if" 3959 . 3961) (semantic-list "(raw_keybuf_count == XVECTOR (raw_keybuf)->size)" 3962 . 4010) (symbol "raw_keybuf" 4018 . 4028) (punctuation "=" 4029 . 4030) (symbol "larger_vector" 4031 . 4044) (semantic-list "(raw_keybuf, raw_keybuf_count * 2, Qnil)" 4045 . 4085)))
          ("RESUME_POLLING" . 
              ((DO "do" 75911 . 75913) (semantic-list "{ if (polling_stopped_here) start_polling ();	\\
       polling_stopped_here = 0; }" 75914 . 75996) (WHILE "while" 75997 . 76002) (semantic-list "(0)" 76003 . 76006)))
          ("ISO_FUNCTION_KEY_OFFSET" . ((number "0xfe00" 157405 . 157411)))
          ("READABLE_EVENTS_DO_TIMERS_NOW" . ((semantic-list "(1 << 0)" 19637 . 19645)))
          ("READABLE_EVENTS_FILTER_EVENTS" . ((semantic-list "(1 << 1)" 19685 . 19693)))
          ("KBD_BUFFER_SIZE" . ((number "4096" 2646 . 2650)))
          )

    )
   (semanticdb-table "regex.h"
    :major-mode 'c-mode
    :tags 
        '( ("_REGEX_H" variable (:constant-flag t) nil [1025 1033])
            ("stddef.h" include (:system-flag t) nil [1370 1390])
            ("reg_syntax_t" type
               (:typedef ("unsigned long int")
                :superclasses "unsigned long int"
                :type "typedef")
                nil [1758 1797])
            ("RE_BACKSLASH_ESCAPE_IN_LISTS" variable (:constant-flag t) nil [1942 1970])
            ("RE_BK_PLUS_QM" variable (:constant-flag t) nil [2162 2175])
            ("RE_CHAR_CLASSES" variable (:constant-flag t) nil [2491 2506])
            ("RE_CONTEXT_INDEP_ANCHORS" variable (:constant-flag t) nil [3225 3249])
            ("RE_CONTEXT_INDEP_OPS" variable (:constant-flag t) nil [3651 3671])
            ("RE_CONTEXT_INVALID_OPS" variable (:constant-flag t) nil [3851 3873])
            ("RE_DOT_NEWLINE" variable (:constant-flag t) nil [3994 4008])
            ("RE_DOT_NOT_NULL" variable (:constant-flag t) nil [4130 4145])
            ("RE_HAT_LISTS_NOT_NEWLINE" variable (:constant-flag t) nil [4275 4299])
            ("RE_INTERVALS" variable (:constant-flag t) nil [4485 4497])
            ("RE_LIMITED_OPS" variable (:constant-flag t) nil [4634 4648])
            ("RE_NEWLINE_ALT" variable (:constant-flag t) nil [4776 4790])
            ("RE_NO_BK_BRACES" variable (:constant-flag t) nil [4966 4981])
            ("RE_NO_BK_PARENS" variable (:constant-flag t) nil [5157 5172])
            ("RE_NO_BK_REFS" variable (:constant-flag t) nil [5313 5326])
            ("RE_NO_BK_VBAR" variable (:constant-flag t) nil [5509 5522])
            ("RE_NO_EMPTY_RANGES" variable (:constant-flag t) nil [5803 5821])
            ("RE_UNMATCHED_RIGHT_PAREN_ORD" variable (:constant-flag t) nil [5959 5987])
            ("RE_NO_POSIX_BACKTRACKING" variable (:constant-flag t) nil [6130 6154])
            ("RE_NO_GNU_OPS" variable (:constant-flag t) nil [6326 6339])
            ("RE_FRUGAL" variable (:constant-flag t) nil [6446 6455])
            ("RE_SHY_GROUPS" variable (:constant-flag t) nil [6553 6566])
            ("RE_NO_NEWLINE_ANCHOR" variable (:constant-flag t) nil [6661 6681])
            ("RE_DEBUG" variable (:constant-flag t) nil [7077 7085])
            ("re_syntax_options" variable
               (:typemodifiers ("extern")
                :type ("reg_syntax_t" type (:type "class") nil nil))
                nil [7355 7393])
            ("RE_SYNTAX_EMACS" variable (:constant-flag t) nil [7779 7794])
            ("RE_SYNTAX_AWK" variable (:constant-flag t) nil [7875 7888])
            ("RE_SYNTAX_GNU_AWK" variable (:constant-flag t) nil [8179 8196])
            ("RE_SYNTAX_POSIX_AWK" variable (:constant-flag t) nil [8350 8369])
            ("RE_SYNTAX_GREP" variable (:constant-flag t) nil [8488 8502])
            ("RE_SYNTAX_EGREP" variable (:constant-flag t) nil [8644 8659])
            ("RE_SYNTAX_POSIX_EGREP" variable (:constant-flag t) nil [8860 8881])
            ("RE_SYNTAX_ED" variable (:constant-flag t) nil [9005 9017])
            ("RE_SYNTAX_SED" variable (:constant-flag t) nil [9049 9062])
            ("_RE_SYNTAX_POSIX_COMMON" variable (:constant-flag t) nil [9167 9190])
            ("RE_SYNTAX_POSIX_BASIC" variable (:constant-flag t) nil [9310 9331])
            ("RE_SYNTAX_POSIX_MINIMAL_BASIC" variable (:constant-flag t) nil [9603 9632])
            ("RE_SYNTAX_POSIX_EXTENDED" variable (:constant-flag t) nil [9693 9717])
            ("RE_SYNTAX_POSIX_MINIMAL_EXTENDED" variable (:constant-flag t) nil [10062 10094])
            ("RE_DUP_MAX" variable (:constant-flag t) nil [10635 10645])
            ("REG_EXTENDED" variable (:constant-flag t) nil [10857 10869])
            ("REG_ICASE" variable (:constant-flag t) nil [10981 10990])
            ("REG_NEWLINE" variable (:constant-flag t) nil [11165 11176])
            ("REG_NOSUB" variable (:constant-flag t) nil [11343 11352])
            ("REG_NOTBOL" variable (:constant-flag t) nil [11709 11719])
            ("REG_NOTEOL" variable (:constant-flag t) nil [11783 11793])
            ("reg_errcode_t" type
               (:typedef ("" type
                     (:members 
                        ( ("REG_NOERROR" variable
                             (:constant-flag t
                              :default-value (12044 12045)
                              :type "int")
                              (reparse-symbol enumsubparts) [12030 12045])
                          ("REG_NOMATCH" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12065 12077])
                          ("REG_BADPAT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12212 12223])
                          ("REG_ECOLLATE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12251 12264])
                          ("REG_ECTYPE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12292 12303])
                          ("REG_EESCAPE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12344 12356])
                          ("REG_ESUBREG" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12387 12399])
                          ("REG_EBRACK" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12434 12445])
                          ("REG_EPAREN" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12480 12491])
                          ("REG_EBRACE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12525 12536])
                          ("REG_BADBR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12561 12571])
                          ("REG_ERANGE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12608 12619])
                          ("REG_ESPACE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12649 12660])
                          ("REG_BADRPT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12690 12701])
                          ("REG_EEND" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12782 12791])
                          ("REG_ESIZE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12817 12827])
                          ("REG_ERPAREN" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12879 12891])
                          ("REG_ERANGEX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [12948 12999]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [11910 13014])
            ("re_pattern_buffer" type
               (:members 
                  ( ("buffer" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [13627 13649])
                    ("allocated" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13703 13720])
                    ("used" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13775 13787])
                    ("syntax" variable (:type ("reg_syntax_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13858 13878])
                    ("fastmap" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [14064 14078])
                    ("translate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14330 14358])
                    ("re_nsub" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14418 14433])
                    ("can_be_null" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [14713 14738])
                    ("REGS_UNALLOCATED" variable (:constant-flag t) (reparse-symbol classsubparts) [14984 15000])
                    ("REGS_REALLOCATE" variable (:constant-flag t) (reparse-symbol classsubparts) [15011 15026])
                    ("REGS_FIXED" variable (:constant-flag t) (reparse-symbol classsubparts) [15037 15047])
                    ("regs_allocated" variable
                       (:suffix ":2"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [15052 15080])
                    ("fastmap_accurate" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [15225 15255])
                    ("no_sub" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [15356 15376])
                    ("not_bol" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [15487 15508])
                    ("not_eol" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [15564 15585])
                    ("used_syntax" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [15744 15769]))                  
                :type "struct")
                nil [13402 16183])
            ("regex_t" type
               (:typedef ("re_pattern_buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :superclasses "re_pattern_buffer"
                :type "typedef")
                nil [16185 16226])
            ("regoff_t" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [16299 16320])
            ("re_registers" type
               (:members 
                  ( ("num_regs" variable (:type "unsigned int") (reparse-symbol classsubparts) [16479 16497])
                    ("start" variable
                       (:pointer 1
                        :type ("regoff_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [16500 16516])
                    ("end" variable
                       (:pointer 1
                        :type ("regoff_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [16519 16533]))                  
                :type "struct")
                nil [16455 16536])
            ("RE_NREGS" variable (:constant-flag t) nil [16754 16762])
            ("regmatch_t" type
               (:typedef ("" type
                     (:members 
                        ( ("rm_so" variable (:type ("regoff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16964 16979])
                          ("rm_eo" variable (:type ("regoff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17044 17059]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [16945 17133])
            ("_RE_ARGS" variable (:constant-flag t) nil [17506 17514])
            ("re_set_syntax" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("syntax" variable (:type ("reg_syntax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("reg_syntax_t" type (:type "class") nil nil))
                nil [17782 17849])
            ("re_compile_pattern" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :constant-flag t
                :arguments 
                  ( ("pattern" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [18055 18190])
            ("re_compile_fastmap" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [18346 18422])
            ("re_search" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("string" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("length" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("start" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("range" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [18763 18925])
            ("re_search_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("string1" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("length1" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("string2" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("length2" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("start" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("range" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("stop" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [19057 19281])
            ("re_match" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("string" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("length" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("start" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [19411 19562])
            ("re_match_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("string1" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("length1" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("string2" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("length2" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("start" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("stop" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [19635 19847])
            ("re_set_registers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("num_regs" variable (:type "unsigned int") (reparse-symbol arg-sub-list) nil)
                    ("starts" variable
                       (:pointer 1
                        :type ("regoff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("ends" variable
                       (:pointer 1
                        :type ("regoff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [20401 20571])
            ("re_comp" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "char")
                nil [20662 20709])
            ("re_exec" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [20710 20755])
            ("__restrict" variable (:constant-flag t) nil [21045 21055])
            ("regcomp" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__preg" variable
                       (:pointer 1
                        :type ("regex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("__pattern" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("__cflags" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [21365 21490])
            ("regexec" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__preg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("regex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("__string" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("__nmatch" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("__pmatch" variable
                       (:dereference 1
                        :type ("regmatch_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("__eflags" variable (:type "int") (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [21492 21685])
            ("regerror" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__errcode" variable (:type "int") (reparse-symbol arg-sub-list) nil)
                    ("__preg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("regex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("__errbuf" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("__errbuf_size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [21687 21804])
            ("regfree" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("__preg" variable
                       (:pointer 1
                        :type ("regex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [21806 21855])
            ("wchar.h" include (:system-flag t) nil [22112 22131])
            ("wctype.h" include (:system-flag t) nil [22132 22152])
            ("CHAR_CLASS_MAX_LENGTH" variable (:constant-flag t) nil [22521 22542])
            ("re_wctype_t" type
               (:typedef ("wctype_t" type (:type "class") nil nil)
                :superclasses "wctype_t"
                :type "typedef")
                nil [22555 22584])
            ("re_wchar_t" type
               (:typedef ("wchar_t")
                :superclasses "wchar_t"
                :type "typedef")
                nil [22585 22612])
            ("re_wctype" variable (:constant-flag t) nil [22622 22631])
            ("re_iswctype" variable (:constant-flag t) nil [22648 22659])
            ("re_wctype_to_bit" variable (:constant-flag t) nil [22678 22694]))          
    :file "regex.h"
    :pointmax 23479
    :fsize 23478
    :lastmodtime '(19383 49281)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("RE_CHAR_CLASSES" . ((semantic-list "(RE_BK_PLUS_QM << 1)" 2507 . 2527)))
          ("RE_CONTEXT_INVALID_OPS" . ((semantic-list "(RE_CONTEXT_INDEP_OPS << 1)" 3874 . 3901)))
          ("RE_SHY_GROUPS" . ((semantic-list "(RE_FRUGAL << 1)" 6567 . 6583)))
          ("RE_SYNTAX_POSIX_BASIC" . ((semantic-list "(_RE_SYNTAX_POSIX_COMMON | RE_BK_PLUS_QM)" 9341 . 9382)))
          ("RE_NREGS" . ((number "30" 16763 . 16765)))
          ("RE_INTERVALS" . ((semantic-list "(RE_HAT_LISTS_NOT_NEWLINE << 1)" 4498 . 4529)))
          ("RE_NO_BK_BRACES" . ((semantic-list "(RE_NEWLINE_ALT << 1)" 4982 . 5003)))
          ("RE_FRUGAL" . ((semantic-list "(RE_NO_GNU_OPS << 1)" 6456 . 6476)))
          ("RE_NO_NEWLINE_ANCHOR" . ((semantic-list "(RE_SHY_GROUPS << 1)" 6682 . 6702)))
          ("RE_SYNTAX_AWK" . ((semantic-list "(RE_BACKSLASH_ESCAPE_IN_LISTS   | RE_DOT_NOT_NULL			\\
   | RE_NO_BK_PARENS              | RE_NO_BK_REFS			\\
   | RE_NO_BK_VBAR                | RE_NO_EMPTY_RANGES			\\
   | RE_DOT_NEWLINE		  | RE_CONTEXT_INDEP_ANCHORS		\\
   | RE_UNMATCHED_RIGHT_PAREN_ORD | RE_NO_GNU_OPS)" 7899 . 8169)))
          ("RE_SYNTAX_SED" . ((symbol "RE_SYNTAX_POSIX_BASIC" 9063 . 9084)))
          ("RE_SYNTAX_POSIX_MINIMAL_BASIC" . ((semantic-list "(_RE_SYNTAX_POSIX_COMMON | RE_LIMITED_OPS)" 9641 . 9683)))
          ("RE_SYNTAX_POSIX_MINIMAL_EXTENDED" . ((semantic-list "(_RE_SYNTAX_POSIX_COMMON  | RE_CONTEXT_INDEP_ANCHORS			\\
   | RE_CONTEXT_INVALID_OPS | RE_NO_BK_BRACES				\\
   | RE_NO_BK_PARENS        | RE_NO_BK_REFS				\\
   | RE_NO_BK_VBAR	    | RE_UNMATCHED_RIGHT_PAREN_ORD)" 10102 . 10313)))
          ("REG_NEWLINE" . ((semantic-list "(REG_ICASE << 1)" 11177 . 11193)))
          ("re_wctype" . ((symbol "wctype" 22632 . 22638)))
          ("RE_LIMITED_OPS" . ((semantic-list "(RE_INTERVALS << 1)" 4649 . 4668)))
          ("RE_DEBUG" . ((semantic-list "(RE_NO_NEWLINE_ANCHOR << 1)" 7086 . 7113)))
          ("RE_SYNTAX_EMACS" . ((semantic-list "(RE_CHAR_CLASSES | RE_INTERVALS | RE_SHY_GROUPS | RE_FRUGAL)" 7805 . 7865)))
          ("RE_SYNTAX_POSIX_EGREP" . ((semantic-list "(RE_SYNTAX_EGREP | RE_INTERVALS | RE_NO_BK_BRACES)" 8891 . 8941)))
          ("RE_DUP_MAX" . ((semantic-list "(0x7fff)" 10646 . 10654)))
          ("RE_BK_PLUS_QM" . ((semantic-list "(RE_BACKSLASH_ESCAPE_IN_LISTS << 1)" 2176 . 2211)))
          ("RE_CONTEXT_INDEP_OPS" . ((semantic-list "(RE_CONTEXT_INDEP_ANCHORS << 1)" 3672 . 3703)))
          ("RE_NEWLINE_ALT" . ((semantic-list "(RE_LIMITED_OPS << 1)" 4791 . 4812)))
          ("REGS_UNALLOCATED" . ((number "0" 15001 . 15002)))
          ("RE_BACKSLASH_ESCAPE_IN_LISTS" . ((semantic-list "((unsigned long int) 1)" 1971 . 1994)))
          ("RE_NO_BK_PARENS" . ((semantic-list "(RE_NO_BK_BRACES << 1)" 5173 . 5195)))
          ("RE_NO_BK_VBAR" . ((semantic-list "(RE_NO_BK_REFS << 1)" 5523 . 5543)))
          ("RE_NO_POSIX_BACKTRACKING" . ((semantic-list "(RE_UNMATCHED_RIGHT_PAREN_ORD << 1)" 6155 . 6190)))
          ("REG_NOSUB" . ((semantic-list "(REG_NEWLINE << 1)" 11353 . 11371)))
          ("re_wctype_to_bit" (spp-arg-list ("cc") 22694 . 22698) . ((number "0" 22699 . 22700)))
          ("RE_DOT_NEWLINE" . ((semantic-list "(RE_CONTEXT_INVALID_OPS << 1)" 4009 . 4038)))
          ("RE_DOT_NOT_NULL" . ((semantic-list "(RE_DOT_NEWLINE << 1)" 4146 . 4167)))
          ("RE_SYNTAX_POSIX_AWK" . ((semantic-list "(RE_SYNTAX_POSIX_EXTENDED | RE_BACKSLASH_ESCAPE_IN_LISTS		\\
   | RE_INTERVALS	    | RE_NO_GNU_OPS)" 8380 . 8478)))
          ("RE_SYNTAX_ED" . ((symbol "RE_SYNTAX_POSIX_BASIC" 9018 . 9039)))
          ("_RE_SYNTAX_POSIX_COMMON" . ((semantic-list "(RE_CHAR_CLASSES | RE_DOT_NEWLINE      | RE_DOT_NOT_NULL		\\
   | RE_INTERVALS  | RE_NO_EMPTY_RANGES)" 9200 . 9300)))
          ("re_iswctype" . ((symbol "iswctype" 22660 . 22668)))
          ("RE_CONTEXT_INDEP_ANCHORS" . ((semantic-list "(RE_CHAR_CLASSES << 1)" 3250 . 3272)))
          ("RE_SYNTAX_EGREP" . ((semantic-list "(RE_CHAR_CLASSES        | RE_CONTEXT_INDEP_ANCHORS			\\
   | RE_CONTEXT_INDEP_OPS | RE_HAT_LISTS_NOT_NEWLINE			\\
   | RE_NEWLINE_ALT       | RE_NO_BK_PARENS				\\
   | RE_NO_BK_VBAR)" 8670 . 8850)))
          ("REG_NOTEOL" . ((semantic-list "(1 << 1)" 11794 . 11802)))
          ("__restrict" . ((symbol "restrict" 21056 . 21064)))
          ("RE_NO_BK_REFS" . ((semantic-list "(RE_NO_BK_PARENS << 1)" 5327 . 5349)))
          ("RE_NO_EMPTY_RANGES" . ((semantic-list "(RE_NO_BK_VBAR << 1)" 5822 . 5842)))
          ("REG_EXTENDED" . ((number "1" 10870 . 10871)))
          ("REG_ICASE" . ((semantic-list "(REG_EXTENDED << 1)" 10991 . 11010)))
          ("REGS_REALLOCATE" . ((number "1" 15027 . 15028)))
          ("RE_HAT_LISTS_NOT_NEWLINE" . ((semantic-list "(RE_DOT_NOT_NULL << 1)" 4300 . 4322)))
          ("RE_NO_GNU_OPS" . ((semantic-list "(RE_NO_POSIX_BACKTRACKING << 1)" 6340 . 6371)))
          ("RE_SYNTAX_GNU_AWK" . ((semantic-list "((RE_SYNTAX_POSIX_EXTENDED | RE_BACKSLASH_ESCAPE_IN_LISTS | RE_DEBUG)	\\
   & ~(RE_DOT_NOT_NULL | RE_INTERVALS | RE_CONTEXT_INDEP_OPS))" 8206 . 8340)))
          ("REG_NOTBOL" . ((number "1" 11720 . 11721)))
          ("_RE_ARGS" (spp-arg-list ("args") 17514 . 17520) . ((symbol "args" 17521 . 17525)))
          ("REGS_FIXED" . ((number "2" 15048 . 15049)))
          ("RE_SYNTAX_POSIX_EXTENDED" . ((semantic-list "(_RE_SYNTAX_POSIX_COMMON  | RE_CONTEXT_INDEP_ANCHORS			\\
   | RE_CONTEXT_INDEP_OPS   | RE_NO_BK_BRACES				\\
   | RE_NO_BK_PARENS        | RE_NO_BK_VBAR				\\
   | RE_CONTEXT_INVALID_OPS | RE_UNMATCHED_RIGHT_PAREN_ORD)" 9726 . 9942)))
          ("CHAR_CLASS_MAX_LENGTH" . ((number "256" 22543 . 22546)))
          ("_REGEX_H" . ((number "1" 1034 . 1035)))
          ("RE_UNMATCHED_RIGHT_PAREN_ORD" . ((semantic-list "(RE_NO_EMPTY_RANGES << 1)" 5988 . 6013)))
          ("RE_SYNTAX_GREP" . ((semantic-list "(RE_BK_PLUS_QM              | RE_CHAR_CLASSES				\\
   | RE_HAT_LISTS_NOT_NEWLINE | RE_INTERVALS				\\
   | RE_NEWLINE_ALT)" 8513 . 8634)))
          )

    )
   (semanticdb-table "systime.h"
    :major-mode 'c-mode
    :tags 
        '( ("EMACS_SYSTIME_H" variable (:constant-flag t) nil [873 888])
            ("sys/time.h" include (:system-flag t) nil [916 937])
            ("time.h" include (:system-flag t) nil [938 955])
            ("EMACS_HAS_USECS" variable (:constant-flag t) nil [2681 2696])
            ("EMACS_TIME" variable (:constant-flag t) nil [2706 2716])
            ("EMACS_SECS" variable (:constant-flag t) nil [2740 2750])
            ("EMACS_USECS" variable (:constant-flag t) nil [2791 2802])
            ("EMACS_SET_SECS" variable (:constant-flag t) nil [2843 2857])
            ("EMACS_SET_USECS" variable (:constant-flag t) nil [2914 2929])
            ("EMACS_GET_TIME" variable (:constant-flag t) nil [3236 3250])
            ("EMACS_ADD_TIME" variable (:constant-flag t) nil [3338 3352])
            ("EMACS_SUB_TIME" variable (:constant-flag t) nil [3613 3627])
            ("EMACS_TIME_NEG_P" variable (:constant-flag t) nil [3883 3899])
            ("EMACS_SET_SECS_USECS" variable (:constant-flag t) nil [4527 4547])
            ("set_file_times" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [4635 4706])
            ("set_waiting_for_input" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) nil))                  
                :type "void")
                nil [4736 4791])
            ("make_time" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("time_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [5017 5061])
            ("EMACS_TIME_CMP" variable (:constant-flag t) nil [5347 5361])
            ("EMACS_TIME_EQ" variable (:constant-flag t) nil [5600 5613])
            ("EMACS_TIME_NE" variable (:constant-flag t) nil [5661 5674])
            ("EMACS_TIME_GT" variable (:constant-flag t) nil [5722 5735])
            ("EMACS_TIME_GE" variable (:constant-flag t) nil [5782 5795])
            ("EMACS_TIME_LT" variable (:constant-flag t) nil [5843 5856])
            ("EMACS_TIME_LE" variable (:constant-flag t) nil [5903 5916]))          
    :file "systime.h"
    :pointmax 6072
    :fsize 6071
    :lastmodtime '(19383 49282)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("EMACS_TIME" . ((STRUCT "struct" 2717 . 2723) (symbol "timeval" 2724 . 2731)))
          ("EMACS_ADD_TIME" (spp-arg-list ("dest" "src1" "src2") 3352 . 3370) . 
              ((DO "do" 3376 . 3378) (semantic-list "{							\\
    (dest).tv_sec  = (src1).tv_sec  + (src2).tv_sec;	\\
    (dest).tv_usec = (src1).tv_usec + (src2).tv_usec;	\\
    if ((dest).tv_usec > 1000000)			\\
      (dest).tv_usec -= 1000000, (dest).tv_sec++;	\\
  }" 3379 . 3593) (WHILE "while" 3594 . 3599) (semantic-list "(0)" 3600 . 3603)))
          ("EMACS_TIME_CMP" (spp-arg-list ("T1" "T2") 5361 . 5369) . ((semantic-list "((long)EMACS_SECS (T1) - (long)EMACS_SECS (T2)	\\
   + (EMACS_SECS (T1) == EMACS_SECS (T2)		\\
      ? EMACS_USECS (T1) - EMACS_USECS (T2)		\\
      : 0))" 5377 . 5528)))
          ("EMACS_TIME_EQ" (spp-arg-list ("T1" "T2") 5613 . 5621) . ((semantic-list "(EMACS_TIME_CMP (T1, T2) == 0)" 5622 . 5652)))
          ("EMACS_SYSTIME_H")
          ("EMACS_GET_TIME" (spp-arg-list ("time") 3250 . 3256) . ((symbol "gettimeofday" 3257 . 3269) (semantic-list "(&(time), NULL)" 3270 . 3285)))
          ("EMACS_TIME_GE" (spp-arg-list ("T1" "T2") 5795 . 5803) . ((semantic-list "(EMACS_TIME_CMP (T1, T2) >= 0)" 5804 . 5834)))
          ("EMACS_SUB_TIME" (spp-arg-list ("dest" "src1" "src2") 3627 . 3645) . 
              ((DO "do" 3651 . 3653) (semantic-list "{							\\
    (dest).tv_sec  = (src1).tv_sec  - (src2).tv_sec;	\\
    (dest).tv_usec = (src1).tv_usec - (src2).tv_usec;	\\
    if ((dest).tv_usec < 0)				\\
      (dest).tv_usec += 1000000, (dest).tv_sec--;	\\
  }" 3654 . 3863) (WHILE "while" 3864 . 3869) (semantic-list "(0)" 3870 . 3873)))
          ("EMACS_TIME_LE" (spp-arg-list ("T1" "T2") 5916 . 5924) . ((semantic-list "(EMACS_TIME_CMP (T1, T2) <= 0)" 5925 . 5955)))
          ("EMACS_TIME_GT" (spp-arg-list ("T1" "T2") 5735 . 5743) . ((semantic-list "(EMACS_TIME_CMP (T1, T2) > 0)" 5744 . 5773)))
          ("EMACS_SET_SECS" (spp-arg-list ("time" "seconds") 2857 . 2872) . ((semantic-list "((time).tv_sec  = (seconds))" 2877 . 2905)))
          ("EMACS_TIME_LT" (spp-arg-list ("T1" "T2") 5856 . 5864) . ((semantic-list "(EMACS_TIME_CMP (T1, T2) < 0)" 5865 . 5894)))
          ("EMACS_HAS_USECS")
          ("EMACS_TIME_NE" (spp-arg-list ("T1" "T2") 5674 . 5682) . ((semantic-list "(EMACS_TIME_CMP (T1, T2) != 0)" 5683 . 5713)))
          ("EMACS_USECS" (spp-arg-list ("time") 2802 . 2808) . ((semantic-list "((time).tv_usec + 0)" 2814 . 2834)))
          ("EMACS_SECS" (spp-arg-list ("time") 2750 . 2756) . ((semantic-list "((time).tv_sec  + 0)" 2762 . 2782)))
          ("EMACS_TIME_NEG_P" (spp-arg-list ("time") 3899 . 3905) . ((semantic-list "((long)(time).tv_sec < 0					\\
   || ((time).tv_sec == 0					\\
       && (long)(time).tv_usec < 0))" 3914 . 4013)))
          ("EMACS_SET_SECS_USECS" (spp-arg-list ("time" "secs" "usecs") 4547 . 4566) . ((semantic-list "(EMACS_SET_SECS (time, secs), EMACS_SET_USECS (time, usecs))" 4573 . 4633)))
          ("EMACS_SET_USECS" (spp-arg-list ("time" "microseconds") 2929 . 2949) . ((semantic-list "((time).tv_usec = (microseconds))" 2950 . 2983)))
          )

    )
   (semanticdb-table "syswait.h"
    :major-mode 'c-mode
    :tags 
        '( ("EMACS_SYSWAIT_H" variable (:constant-flag t) nil [1042 1057])
            ("sys/types.h" include (:system-flag t) nil [1059 1081])
            ("sys/wait.h" include (:system-flag t) nil [1158 1179])
            ("WCOREDUMP" variable (:constant-flag t) nil [1255 1264])
            ("WEXITSTATUS" variable (:constant-flag t) nil [1326 1337])
            ("WIFEXITED" variable (:constant-flag t) nil [1407 1416])
            ("WIFSTOPPED" variable (:constant-flag t) nil [1483 1493])
            ("WIFSIGNALED" variable (:constant-flag t) nil [1565 1576])
            ("WSTOPSIG" variable (:constant-flag t) nil [1661 1669])
            ("WTERMSIG" variable (:constant-flag t) nil [1730 1738])
            ("WRETCODE" variable (:constant-flag t) nil [1797 1805]))          
    :file "syswait.h"
    :pointmax 1952
    :fsize 1951
    :lastmodtime '(19383 49282)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("WIFEXITED" (spp-arg-list ("status") 1416 . 1424) . ((semantic-list "(WTERMSIG(status) == 0)" 1425 . 1448)))
          ("WEXITSTATUS" (spp-arg-list ("status") 1337 . 1345) . ((semantic-list "(((status)  & 0xff00) >> 8)" 1346 . 1373)))
          ("WIFSTOPPED" (spp-arg-list ("status") 1493 . 1501) . ((semantic-list "(((status) & 0xff) == 0x7f)" 1502 . 1529)))
          ("WCOREDUMP" (spp-arg-list ("status") 1264 . 1272) . ((semantic-list "((status) & 0x80)" 1273 . 1290)))
          ("WTERMSIG" (spp-arg-list ("status") 1738 . 1746) . ((semantic-list "((status) & 0x7f)" 1747 . 1764)))
          ("EMACS_SYSWAIT_H")
          ("WIFSIGNALED" (spp-arg-list ("status") 1576 . 1584) . ((semantic-list "(!WIFSTOPPED(status) && !WIFEXITED(status))" 1585 . 1628)))
          ("WSTOPSIG" (spp-arg-list ("status") 1669 . 1677) . ((symbol "WEXITSTATUS" 1678 . 1689) (semantic-list "(status)" 1689 . 1697)))
          ("WRETCODE" (spp-arg-list ("status") 1805 . 1813) . ((symbol "WEXITSTATUS" 1814 . 1825) (semantic-list "(status)" 1826 . 1834)))
          )

    )
   )
  :file "!home!xhyang!emacs-23.2!src!semantic.cache"
  :semantic-tag-version "2.0pre7"
  :semanticdb-version "2.0pre7"
  )
